{"tests": [{"data": {"status": "success", "tool_id": "testtoolshed.g2.bx.psu.edu/repos/fubar/htseq_bams_to_count_matrix/htseqsams2mxlocal/0.5", "time_seconds": 26.463726043701172, "inputs": {"feature_type": "exon", "title": "htseqtest", "stranded": false, "gfffile": {"src": "hda", "id": "6bcaf5d7e1a7268c"}, "id_attr": "gene_name", "mapqMin": "0", "model": "union", "samfiles": [{"src": "hda", "id": "15cdc14a7ce8c57e"}, {"src": "hda", "id": "9141d6ea5433b9c0"}]}, "tool_version": "0.5", "job": {"tool_id": "testtoolshed.g2.bx.psu.edu/repos/fubar/htseq_bams_to_count_matrix/htseqsams2mxlocal/0.5", "update_time": "2019-06-25T22:37:24.008569", "inputs": {"samfiles": {"src": "hda", "id": "15cdc14a7ce8c57e", "uuid": "d4b1f17f-f0a3-401c-8647-515c635b21ce"}, "samfiles2": {"src": "hda", "id": "9141d6ea5433b9c0", "uuid": "793ee123-13a2-478f-a077-b2dc21498988"}, "gfffile": {"src": "hda", "id": "6bcaf5d7e1a7268c", "uuid": "9cfd711f-01bc-458f-a662-b8dfd5e94e8b"}, "samfiles1": {"src": "hda", "id": "15cdc14a7ce8c57e", "uuid": "d4b1f17f-f0a3-401c-8647-515c635b21ce"}}, "outputs": {"outfile": {"src": "hda", "id": "b3553ce2efb775ee", "uuid": "971a4d4d-a6cf-4d9a-b65c-15adad54c34b"}}, "history_id": "f840675b8d7f5485", "stdout": "61 GFF lines processed.\n1009 sam lines  processed for rn4chr20test1.bam.\n1488 sam lines  processed for rn4chr20test2.bam.\nwalltime (seconds) = 0 (100.000)\ntotal reads read = 2499 (100.000)\ntotal reads counted = 1779 (71.188)\nnumber of contigs = 4 (100.000)\ntotal empty reads = 720 (28.812)\ntotal ambiguous reads = 0 (0.000)\ntotal low quality reads = 0 (0.000)\ntotal not aligned reads = 0 (0.000)\ntotal not unique mapping reads = 0 (0.000)\nextra filtered reads = 0 (0.000)\nempty contigs = 1 (25.000)\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:37:07.860862", "stderr": "", "model_class": "Job", "params": {"feature_type": "\"exon\"", "title": "\"htseqtest\"", "stranded": "\"false\"", "dbkey": "\"?\"", "id_attr": "\"gene_name\"", "filter_extras": "null", "model": "\"union\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "mapqMin": "\"0\""}, "tool_stdout": "61 GFF lines processed.\n1009 sam lines  processed for rn4chr20test1.bam.\n1488 sam lines  processed for rn4chr20test2.bam.\nwalltime (seconds) = 0 (100.000)\ntotal reads read = 2499 (100.000)\ntotal reads counted = 1779 (71.188)\nnumber of contigs = 4 (100.000)\ntotal empty reads = 720 (28.812)\ntotal ambiguous reads = 0 (0.000)\ntotal low quality reads = 0 (0.000)\ntotal not aligned reads = 0 (0.000)\ntotal not unique mapping reads = 0 (0.000)\nextra filtered reads = 0 (0.000)\nempty contigs = 1 (25.000)\n", "job_messages": [{"stream": "stderr", "code_desc": "chatter from HTSeq:", "error_level": 2, "type": "regex", "match": "", "desc": "Warning: chatter from HTSeq:"}, {"stream": "stdout", "code_desc": "chatter from HTSeq:", "error_level": 2, "type": "regex", "match": "61 GFF lines processed.", "desc": "Warning: chatter from HTSeq:"}], "id": "65301b92fb71ee47", "job_stdout": ""}, "test_index": 0}, "id": "testtoolshed.g2.bx.psu.edu/repos/fubar/htseq_bams_to_count_matrix/htseqsams2mxlocal/0.5-0", "has_data": true}, {"data": {"status": "failure", "tool_id": "testtoolshed.g2.bx.psu.edu/repos/jchung/generate_count_matrix/generate_count_matrix/1.0", "time_seconds": 42.82846713066101, "inputs": {"delimiter": "tab", "gene_col": "1", "count_col": "2", "round": true, "count_files": [{"src": "hda", "id": "2748d813e86beda3"}, {"src": "hda", "id": "a93a89f43479a140"}, {"src": "hda", "id": "dfd442673e83c7e5"}, {"src": "hda", "id": "bbdb294ea8c05279"}, {"src": "hda", "id": "b1cc3f7d07353d8b"}, {"src": "hda", "id": "dbdb586aad827d14"}], "keep": "no"}, "tool_version": "1.0", "output_problems": ["Job in error state.", "Job in error state."], "job": {"tool_id": "testtoolshed.g2.bx.psu.edu/repos/jchung/generate_count_matrix/generate_count_matrix/1.0", "update_time": "2019-06-26T00:50:12.378202", "inputs": {"count_files3": {"src": "hda", "id": "dfd442673e83c7e5", "uuid": "7ca6f3a5-ed98-4161-b81c-4da98d230691"}, "count_files2": {"src": "hda", "id": "a93a89f43479a140", "uuid": "8e9693cb-2f78-46c3-b88e-a86b14cf3f4e"}, "count_files1": {"src": "hda", "id": "2748d813e86beda3", "uuid": "84b01ee1-93dc-4d3e-be5b-aca2a3d0f955"}, "count_files6": {"src": "hda", "id": "dbdb586aad827d14", "uuid": "c73ac05e-8c6d-489c-92f3-2a7f67321d79"}, "count_files5": {"src": "hda", "id": "b1cc3f7d07353d8b", "uuid": "a017fe57-e85a-42f3-ab96-175334674a1b"}, "count_files4": {"src": "hda", "id": "bbdb294ea8c05279", "uuid": "0f1d3c3d-33de-447d-9b5f-57fc3eed7cbe"}, "count_files": {"src": "hda", "id": "2748d813e86beda3", "uuid": "84b01ee1-93dc-4d3e-be5b-aca2a3d0f955"}}, "outputs": {"output": {"src": "hda", "id": "35f87877ad715f68", "uuid": "db62ce2c-993c-4b56-95ad-7e7fb0c70969"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 2, "job_stderr": null, "tool_stderr": "python: can't open file '/mnt/pulsar/files/staging/562099/tool_files/python/generate_count_matrix/generate_count_matrix.py': [Errno 2] No such file or directory\n", "state": "error", "create_time": "2019-06-26T00:49:57.365450", "stderr": "python: can't open file '/mnt/pulsar/files/staging/562099/tool_files/python/generate_count_matrix/generate_count_matrix.py': [Errno 2] No such file or directory\n", "model_class": "Job", "params": {"gene_col": "\"1\"", "count_col": "\"2\"", "dbkey": "\"?\"", "keep": "\"no\"", "headers": "{\"__current_case__\": 2, \"skip\": \"no\"}", "delimiter": "\"tab\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "round": "\"true\""}, "tool_stdout": "", "job_messages": [{"type": "exit_code", "error_level": 3, "code_desc": "", "exit_code": 2, "desc": "Fatal error: Exit code 2 ()"}], "id": "331f2894d1686541", "job_stdout": null}, "test_index": 0}, "id": "testtoolshed.g2.bx.psu.edu/repos/jchung/generate_count_matrix/generate_count_matrix/1.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "time_seconds": 71.18569302558899, "inputs": {"dataset_names": false, "headers": "0", "global_condition|inputs": [{"src": "hda", "id": "993c5519bfe84016"}, {"src": "hda", "id": "3dc0276479fa1994"}], "global_condition|input_type": "singles"}, "tool_version": "1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "update_time": "2019-06-25T23:51:15.945309", "inputs": {"inputs2": {"src": "hda", "id": "3dc0276479fa1994", "uuid": "555eea94-3f4a-4cac-a6a3-fe7b928df1ec"}, "inputs": {"src": "hda", "id": "993c5519bfe84016", "uuid": "49d4b0ae-140a-474c-8483-d1f371b8c4e0"}, "inputs1": {"src": "hda", "id": "993c5519bfe84016", "uuid": "49d4b0ae-140a-474c-8483-d1f371b8c4e0"}}, "outputs": {"out_file1": {"src": "hda", "id": "764b105b922c896b", "uuid": "2dbdd5ee-9ad1-4597-9e0d-3c2938c5ab2d"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:50:36.607903", "stderr": "", "model_class": "Job", "params": {"dataset_names": "\"false\"", "headers": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "global_condition": "{\"__current_case__\": 0, \"input_type\": \"singles\", \"inputs\": {\"values\": [{\"id\": 1068899, \"src\": \"hda\"}, {\"id\": 1068901, \"src\": \"hda\"}]}}"}, "tool_stdout": "", "job_messages": [], "id": "44deff67e53140bc", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "time_seconds": 66.49394702911377, "inputs": {"dataset_names": true, "headers": "0", "global_condition|inputs": [{"src": "hda", "id": "993c5519bfe84016"}, {"src": "hda", "id": "3dc0276479fa1994"}], "global_condition|input_type": "singles"}, "tool_version": "1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "update_time": "2019-06-25T23:51:20.293774", "inputs": {"inputs2": {"src": "hda", "id": "3dc0276479fa1994", "uuid": "555eea94-3f4a-4cac-a6a3-fe7b928df1ec"}, "inputs": {"src": "hda", "id": "993c5519bfe84016", "uuid": "49d4b0ae-140a-474c-8483-d1f371b8c4e0"}, "inputs1": {"src": "hda", "id": "993c5519bfe84016", "uuid": "49d4b0ae-140a-474c-8483-d1f371b8c4e0"}}, "outputs": {"out_file1": {"src": "hda", "id": "7c21080c7246ab14", "uuid": "53a45c22-68f8-46bc-ae25-f7953acf168b"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:50:43.363765", "stderr": "", "model_class": "Job", "params": {"dataset_names": "\"true\"", "headers": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "global_condition": "{\"__current_case__\": 0, \"input_type\": \"singles\", \"inputs\": {\"values\": [{\"id\": 1068899, \"src\": \"hda\"}, {\"id\": 1068901, \"src\": \"hda\"}]}}"}, "tool_stdout": "", "job_messages": [], "id": "7408e4636c0a4338", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "time_seconds": 26.412122011184692, "inputs": {"dataset_names": false, "headers": "1", "global_condition|inputs": [{"src": "hda", "id": "993c5519bfe84016"}, {"src": "hda", "id": "3dc0276479fa1994"}], "global_condition|input_type": "singles"}, "tool_version": "1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "update_time": "2019-06-25T23:51:16.162525", "inputs": {"inputs2": {"src": "hda", "id": "3dc0276479fa1994", "uuid": "555eea94-3f4a-4cac-a6a3-fe7b928df1ec"}, "inputs": {"src": "hda", "id": "993c5519bfe84016", "uuid": "49d4b0ae-140a-474c-8483-d1f371b8c4e0"}, "inputs1": {"src": "hda", "id": "993c5519bfe84016", "uuid": "49d4b0ae-140a-474c-8483-d1f371b8c4e0"}}, "outputs": {"out_file1": {"src": "hda", "id": "64565ce81a5f1814", "uuid": "b561af33-2197-4755-a33e-c8134d998db9"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:51:02.850408", "stderr": "", "model_class": "Job", "params": {"dataset_names": "\"false\"", "headers": "\"1\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "global_condition": "{\"__current_case__\": 0, \"input_type\": \"singles\", \"inputs\": {\"values\": [{\"id\": 1068899, \"src\": \"hda\"}, {\"id\": 1068901, \"src\": \"hda\"}]}}"}, "tool_stdout": "", "job_messages": [], "id": "a79eb590cf688370", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "time_seconds": 26.716016054153442, "inputs": {"dataset_names": false, "headers": "0", "global_condition|inputs": [{"src": "hda", "id": "ed0217c57a28ed17"}, {"src": "hda", "id": "894970de21f45158"}], "global_condition|input_type": "singles"}, "tool_version": "1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "update_time": "2019-06-25T23:51:32.291364", "inputs": {"inputs2": {"src": "hda", "id": "894970de21f45158", "uuid": "60bb0d2a-ef56-4139-90e6-d26087a4aabf"}, "inputs": {"src": "hda", "id": "ed0217c57a28ed17", "uuid": "3eab5ec2-1966-45ff-ad91-8a89563df295"}, "inputs1": {"src": "hda", "id": "ed0217c57a28ed17", "uuid": "3eab5ec2-1966-45ff-ad91-8a89563df295"}}, "outputs": {"out_file1": {"src": "hda", "id": "20f5e22de098cbbf", "uuid": "4500029b-24d2-4131-9fa0-87027d12987d"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:51:17.557635", "stderr": "", "model_class": "Job", "params": {"dataset_names": "\"false\"", "headers": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "global_condition": "{\"__current_case__\": 0, \"input_type\": \"singles\", \"inputs\": {\"values\": [{\"id\": 1068902, \"src\": \"hda\"}, {\"id\": 1068905, \"src\": \"hda\"}]}}"}, "tool_stdout": "", "job_messages": [], "id": "ed4084d186933883", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0-3", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "time_seconds": 26.777907848358154, "inputs": {"dataset_names": true, "headers": "4", "global_condition|inputs": [{"src": "hda", "id": "ed0217c57a28ed17"}, {"src": "hda", "id": "894970de21f45158"}], "global_condition|input_type": "singles"}, "tool_version": "1.0", "output_problems": ["History item  different than expected, difference (using diff):\n( /tmp/tmpqrcApL1_options.fastq.gz v. /tmp/tmpgp1i_01_options.fastq.gz )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-# 1_f.fastq\n+# 1_f.fastq.gz\n @NS500801:189:HWGFJBGX5:1:11101:21956:1118 1:N:0:GCCAAT\n CTTACAACCAACTTGATATCACATTCAGCCTGAGGATTTGTTGCTTCATCTTCAGTTCTGTAACATTAAATGGANT\n +\n@@ -7,7 +7,7 @@\n GGGTAATTGATCATCTGTCATGCCAACAGCAAGCAAGGTCTTCCCAGTGCAGCAACAACGTTCAGAATGGATACNG\n +\n AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEAEE/AEE/EEEEEEAEEEEE#E\n-# 1_r.fastq\n+# 1_r.fastq.gz\n @NS500801:189:HWGFJBGX5:1:11101:21956:1118 2:N:0:GCCAAT\n ATTTAAGATTNTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNAGCTTTGGGAGGATTATTTTNNNNNNNNNNNNNNN\n +\n"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "update_time": "2019-06-25T23:51:45.743886", "inputs": {"inputs2": {"src": "hda", "id": "894970de21f45158", "uuid": "60bb0d2a-ef56-4139-90e6-d26087a4aabf"}, "inputs": {"src": "hda", "id": "ed0217c57a28ed17", "uuid": "3eab5ec2-1966-45ff-ad91-8a89563df295"}, "inputs1": {"src": "hda", "id": "ed0217c57a28ed17", "uuid": "3eab5ec2-1966-45ff-ad91-8a89563df295"}}, "outputs": {"out_file1": {"src": "hda", "id": "5965992928aae7a1", "uuid": "ddc08ba8-192a-4e96-9b8d-fba95e838b33"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:51:26.861091", "stderr": "", "model_class": "Job", "params": {"dataset_names": "\"true\"", "headers": "\"4\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "global_condition": "{\"__current_case__\": 0, \"input_type\": \"singles\", \"inputs\": {\"values\": [{\"id\": 1068902, \"src\": \"hda\"}, {\"id\": 1068905, \"src\": \"hda\"}]}}"}, "tool_stdout": "", "job_messages": [], "id": "fafba6c2e5904c35", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "time_seconds": 122.36720895767212, "inputs": {"dataset_names": false, "headers": "0", "global_condition|inputs": {"src": "hdca", "id": "dd21b0a1caf0c03b"}, "global_condition|paired_cat_type": "by_pair", "global_condition|input_type": "paired_collection"}, "tool_version": "1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "update_time": "2019-06-25T23:52:09.953108", "inputs": {"inputs2": {"src": "hda", "id": "ec4a59e7eb378a1d", "uuid": "b5ae278e-656c-4640-88f5-ee695fc37f70"}, "inputs3": {"src": "hda", "id": "656cd0d945d2f1ce", "uuid": "6eb4ab5d-4242-422f-84c9-cdec069e7e27"}, "inputs1": {"src": "hda", "id": "8e93d281b5e17850", "uuid": "44aa61a7-6ca8-4838-9e44-997e5911b1ac"}, "inputs6": {"src": "hda", "id": "b66ad6c24cf3176c", "uuid": "03e268ea-a679-4718-b8b1-d8f3711f6db9"}, "inputs4": {"src": "hda", "id": "6022169c02e67e5c", "uuid": "2760089b-ad3c-47fc-a843-7c90fd6047ce"}, "inputs5": {"src": "hda", "id": "952f0ad6674a6389", "uuid": "49129af8-90de-4679-978b-a6aaea968d35"}}, "outputs": {"__new_primary_file_list_output|4__": {"src": "hda", "id": "c0eb014e6f946b2d", "uuid": "6e5030a7-8c29-4386-9ddb-d3d9fcaf480b"}, "__new_primary_file_list_output|3__": {"src": "hda", "id": "747edf1bcd2bf45f", "uuid": "822e468b-f869-4712-accd-b532270ef62c"}, "__new_primary_file_list_output|2__": {"src": "hda", "id": "e3d85d7684476d57", "uuid": "228adcaa-82b1-46aa-9c34-2eb1098ac09e"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:51:30.120647", "stderr": "", "model_class": "Job", "params": {"dataset_names": "\"false\"", "headers": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "global_condition": "{\"__current_case__\": 1, \"input_type\": \"paired_collection\", \"inputs\": {\"values\": [{\"id\": 9632, \"src\": \"hdca\"}]}, \"paired_cat_type\": \"by_pair\"}"}, "tool_stdout": "", "job_messages": [], "id": "9d60f509605088fb", "job_stdout": ""}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "time_seconds": 62.791707038879395, "inputs": {"dataset_names": false, "headers": "0", "global_condition|inputs": {"src": "hdca", "id": "bcd7ed6f2c88ef8c"}, "global_condition|paired_cat_type": "by_strand", "global_condition|input_type": "paired_collection"}, "tool_version": "1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0", "update_time": "2019-06-25T23:52:29.747345", "inputs": {"inputs2": {"src": "hda", "id": "ec4a59e7eb378a1d", "uuid": "b5ae278e-656c-4640-88f5-ee695fc37f70"}, "inputs3": {"src": "hda", "id": "656cd0d945d2f1ce", "uuid": "6eb4ab5d-4242-422f-84c9-cdec069e7e27"}, "inputs1": {"src": "hda", "id": "8e93d281b5e17850", "uuid": "44aa61a7-6ca8-4838-9e44-997e5911b1ac"}, "inputs6": {"src": "hda", "id": "b66ad6c24cf3176c", "uuid": "03e268ea-a679-4718-b8b1-d8f3711f6db9"}, "inputs4": {"src": "hda", "id": "6022169c02e67e5c", "uuid": "2760089b-ad3c-47fc-a843-7c90fd6047ce"}, "inputs5": {"src": "hda", "id": "952f0ad6674a6389", "uuid": "49129af8-90de-4679-978b-a6aaea968d35"}}, "outputs": {"paired_output|__part__|reverse": {"src": "hda", "id": "09efde64eb9569eb", "uuid": "a46e7025-136c-4760-abf7-a9846578a4ec"}, "paired_output|__part__|forward": {"src": "hda", "id": "a16b98232f10bac7", "uuid": "8c64330a-4b0b-4a1e-aac0-831e5e6f6d2d"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:52:15.119391", "stderr": "", "model_class": "Job", "params": {"dataset_names": "\"false\"", "headers": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "global_condition": "{\"__current_case__\": 1, \"input_type\": \"paired_collection\", \"inputs\": {\"values\": [{\"id\": 9634, \"src\": \"hdca\"}]}, \"paired_cat_type\": \"by_strand\"}"}, "tool_stdout": "", "job_messages": [], "id": "60d75ea1fbd53b72", "job_stdout": ""}, "test_index": 6}, "id": "toolshed.g2.bx.psu.edu/repos/artbio/concatenate_multiple_datasets/cat_multi_datasets/1.0-6", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2", "time_seconds": 56.26069903373718, "inputs": {"param_input": {"src": "hda", "id": "1543e1a488046f7e"}, "rep_param_columns_0|param_column": "fname", "rep_param_columns_1|param_column": "age"}, "tool_version": "0.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2", "update_time": "2019-06-25T23:52:57.420807", "inputs": {"param_input": {"src": "hda", "id": "1543e1a488046f7e", "uuid": "81c62811-5386-4539-a7c6-89da14461596"}}, "outputs": {"output": {"src": "hda", "id": "272fd2e4e0a51a30", "uuid": "b2b53ceb-919f-47f3-8f28-f0e004e3bb1b"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:52:42.595434", "stderr": "", "model_class": "Job", "params": {"discard_remaining": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "rep_param_columns": "[{\"__index__\": 0, \"param_column\": \"fname\"}, {\"__index__\": 1, \"param_column\": \"age\"}]"}, "tool_stdout": "", "job_messages": [], "id": "07dedfd9dda43a1d", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2", "time_seconds": 40.88177418708801, "inputs": {"param_input": {"src": "hda", "id": "1543e1a488046f7e"}, "rep_param_columns_0|param_column": "fname", "discard_remaining": true}, "tool_version": "0.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2", "update_time": "2019-06-25T23:53:10.892209", "inputs": {"param_input": {"src": "hda", "id": "1543e1a488046f7e", "uuid": "81c62811-5386-4539-a7c6-89da14461596"}}, "outputs": {"output": {"src": "hda", "id": "85d8f994e2ffabfb", "uuid": "8f9291ec-2840-4369-b50d-3c02abdf4456"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:52:59.702340", "stderr": "", "model_class": "Job", "params": {"discard_remaining": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "rep_param_columns": "[{\"__index__\": 0, \"param_column\": \"fname\"}]"}, "tool_stdout": "", "job_messages": [], "id": "a48c48dc7474f39e", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2", "time_seconds": 48.14946889877319, "inputs": {"param_input": {"src": "hda", "id": "6b6b2c2687c02d72"}, "rep_param_columns_0|param_column": "fname", "rep_param_columns_1|param_column": "age", "discard_remaining": true}, "tool_version": "0.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2", "update_time": "2019-06-25T23:54:06.107094", "inputs": {"param_input": {"src": "hda", "id": "6b6b2c2687c02d72", "uuid": "18be6e15-8a28-4f6a-a040-b13bfe891a62"}}, "outputs": {"output": {"src": "hda", "id": "9a729c9f7b73d4b8", "uuid": "b5013978-e054-4164-82a6-832b689224b9"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:53:49.630096", "stderr": "", "model_class": "Job", "params": {"discard_remaining": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "rep_param_columns": "[{\"__index__\": 0, \"param_column\": \"fname\"}, {\"__index__\": 1, \"param_column\": \"age\"}]"}, "tool_stdout": "", "job_messages": [], "id": "73df56235d4fc686", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2", "time_seconds": 47.07207798957825, "inputs": {"param_input": {"src": "hda", "id": "0f7625e4b7888820"}, "rep_param_columns_0|param_column": "first name", "rep_param_columns_1|param_column": "nationality"}, "tool_version": "0.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2", "update_time": "2019-06-25T23:54:01.776396", "inputs": {"param_input": {"src": "hda", "id": "0f7625e4b7888820", "uuid": "2e6e29aa-d4f8-44d8-b9b3-5d8381dc255c"}}, "outputs": {"output": {"src": "hda", "id": "a890c69fcd050910", "uuid": "0886f94c-9fae-4c78-8162-833d78f3f83a"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:53:50.457605", "stderr": "", "model_class": "Job", "params": {"discard_remaining": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "rep_param_columns": "[{\"__index__\": 0, \"param_column\": \"first name\"}, {\"__index__\": 1, \"param_column\": \"nationality\"}]"}, "tool_stdout": "", "job_messages": [], "id": "faab3cc8734e7071", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.2.1.0.0", "time_seconds": 193.97613406181335, "inputs": {"multibam_conditional|bamfiles": {"src": "hda", "id": "3edfa0fb8e3f6cf6"}, "plotTitle": "Test Plot", "histogram": true}, "tool_version": "3.2.1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.2.1.0.0", "update_time": "2019-06-26T02:33:21.399347", "inputs": {"bamfiles": {"src": "hda", "id": "3edfa0fb8e3f6cf6", "uuid": "b981cb8d-8781-4f03-ad18-2c0f4509aa95"}}, "outputs": {"fragLengths": {"src": "hda", "id": "e7ed598e83b6f38c", "uuid": "e2ad2356-2f04-4caf-8619-41939b55ed51"}, "table": {"src": "hda", "id": "fbc53178c33ff4bc", "uuid": "2fd1458d-5ea5-4b18-9756-21acefb7e207"}, "histogram_outfile": {"src": "hda", "id": "570a0fc70b63b284", "uuid": "84d15eb1-b608-4ad2-a988-f40cccbb9129"}, "outfile": {"src": "hda", "id": "e51c778a38e63740", "uuid": "ac5192f3-1670-415f-aacb-94c9ef11c8aa"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-e35baf361d03fae86ecda97e58fac52e77f6697a574d49a7407d382c40333084/lib/python3.7/site-packages/matplotlib/axes/_axes.py:6521: MatplotlibDeprecationWarning:\n\n\nThe 'normed' kwarg was deprecated in Matplotlib 2.1 and will be removed in 3.1. Use 'density' instead.\n\n", "state": "ok", "create_time": "2019-06-26T02:32:17.801342", "stderr": "/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-e35baf361d03fae86ecda97e58fac52e77f6697a574d49a7407d382c40333084/lib/python3.7/site-packages/matplotlib/axes/_axes.py:6521: MatplotlibDeprecationWarning:\n\n\nThe 'normed' kwarg was deprecated in Matplotlib 2.1 and will be removed in 3.1. Use 'density' instead.\n\n", "model_class": "Job", "params": {"plotTitle": "\"Test Plot\"", "outFileFormat": "\"png\"", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "dbkey": "\"?\"", "histogram": "\"true\"", "samplesLabel": "\"\"", "multibam_conditional": "{\"__current_case__\": 0, \"bamfiles\": {\"values\": [{\"id\": 1069719, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "dc3d35d3a903c698", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.2.1.0.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.2.1.0.0", "time_seconds": 207.4683129787445, "inputs": {"multibam_conditional|bamfiles": {"src": "hda", "id": "9ef6b6d7db3d8de7"}, "advancedOpt|table": true, "advancedOpt|outRawFragmentLengths": true, "advancedOpt|showAdvancedOpt": "yes"}, "tool_version": "3.2.1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.2.1.0.0", "update_time": "2019-06-26T02:34:13.538018", "inputs": {"bamfiles": {"src": "hda", "id": "9ef6b6d7db3d8de7", "uuid": "2bbeaedb-63e8-49b2-88c8-b4a9b2400502"}}, "outputs": {"fragLengths": {"src": "hda", "id": "e42272d93e37f1c3", "uuid": "15b8dc77-7549-41a8-b481-6600bcd80745"}, "table": {"src": "hda", "id": "ea1a5b1ffb84ac4f", "uuid": "fddf8aed-0c73-4c75-94ee-6d1a9ea08319"}, "outfile": {"src": "hda", "id": "59ddcab17fc40e7e", "uuid": "2e001eff-3cca-4b51-94d5-9b1d43d1b23f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:32:55.980591", "stderr": "", "model_class": "Job", "params": {"plotTitle": "\"\"", "outFileFormat": "\"png\"", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "dbkey": "\"?\"", "histogram": "\"false\"", "samplesLabel": "\"\"", "multibam_conditional": "{\"__current_case__\": 0, \"bamfiles\": {\"values\": [{\"id\": 1069724, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}", "advancedOpt": "{\"__current_case__\": 1, \"binSize\": \"1000\", \"blackListFileName\": null, \"distanceBetweenBins\": \"1000000\", \"logScale\": \"false\", \"maxFragmentLength\": \"0\", \"outRawFragmentLengths\": \"true\", \"showAdvancedOpt\": \"yes\", \"table\": \"true\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "d49bceec2241456b", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.2.1.0.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_fingerprint/deeptools_plot_fingerprint/3.2.1.0.0", "time_seconds": 112.98516297340393, "inputs": {"multibam_conditional|bamfiles": [{"src": "hda", "id": "67c7c6f43cbf4f12"}, {"src": "hda", "id": "67c7c6f43cbf4f12"}], "advancedOpt|showAdvancedOpt": "no", "output|showOutputSettings": "no"}, "tool_version": "3.2.1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_fingerprint/deeptools_plot_fingerprint/3.2.1.0.0", "update_time": "2019-06-25T23:14:16.169042", "inputs": {"bamfiles2": {"src": "hda", "id": "67c7c6f43cbf4f12", "uuid": "513fcee2-70f6-4159-a445-b4e76fc3aa56"}, "bamfiles": {"src": "hda", "id": "67c7c6f43cbf4f12", "uuid": "513fcee2-70f6-4159-a445-b4e76fc3aa56"}, "bamfiles1": {"src": "hda", "id": "67c7c6f43cbf4f12", "uuid": "513fcee2-70f6-4159-a445-b4e76fc3aa56"}}, "outputs": {"outFileName": {"src": "hda", "id": "4ae2b2cf698d07bc", "uuid": "60c17e74-8eb3-40dc-9f79-dd1175e3833b"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:13:22.763522", "stderr": "", "model_class": "Job", "params": {"custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "region": "\"\"", "dbkey": "\"?\"", "multibam_conditional": "{\"__current_case__\": 0, \"bamfiles\": {\"values\": [{\"id\": 1068647, \"src\": \"hda\"}, {\"id\": 1068647, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}", "output": "{\"__current_case__\": 0, \"showOutputSettings\": \"no\"}", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "51edd03409faa989", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_fingerprint/deeptools_plot_fingerprint/3.2.1.0.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_fingerprint/deeptools_plot_fingerprint/3.2.1.0.0", "time_seconds": 221.8271028995514, "inputs": {"output|saveRawCounts": true, "advancedOpt|plotTitle": "Test Fingerprint Plot", "advancedOpt|showAdvancedOpt": "yes", "multibam_conditional|bamfiles": [{"src": "hda", "id": "a93fb96bb9777a11"}, {"src": "hda", "id": "a93fb96bb9777a11"}], "output|JSDsample": {"src": "hda", "id": "a93fb96bb9777a11"}, "output|saveQualityMetrics": true, "output|showOutputSettings": "yes"}, "tool_version": "3.2.1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_fingerprint/deeptools_plot_fingerprint/3.2.1.0.0", "update_time": "2019-06-25T23:15:41.368836", "inputs": {"JSDsample": {"src": "hda", "id": "a93fb96bb9777a11", "uuid": "d31221c3-1abe-40cf-8eff-a27a49ac55e3"}, "bamfiles2": {"src": "hda", "id": "a93fb96bb9777a11", "uuid": "d31221c3-1abe-40cf-8eff-a27a49ac55e3"}, "bamfiles": {"src": "hda", "id": "a93fb96bb9777a11", "uuid": "d31221c3-1abe-40cf-8eff-a27a49ac55e3"}, "bamfiles1": {"src": "hda", "id": "a93fb96bb9777a11", "uuid": "d31221c3-1abe-40cf-8eff-a27a49ac55e3"}}, "outputs": {"outFileRawCounts": {"src": "hda", "id": "0f3e88711ddff602", "uuid": "6cd5f9b0-0c0d-4497-8a65-215c1f5b2a6a"}, "outFileName": {"src": "hda", "id": "66d2bd4e8050b537", "uuid": "ebc8f21b-7f5b-46a7-8cd6-6fd4152a471e"}, "outFileQualityMetrics": {"src": "hda", "id": "82bf50e3f8225a8c", "uuid": "18757e1f-6bb7-4c2e-93b4-6e2213a4ed97"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:14:18.691837", "stderr": "", "model_class": "Job", "params": {"custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "region": "\"\"", "dbkey": "\"?\"", "multibam_conditional": "{\"__current_case__\": 0, \"bamfiles\": {\"values\": [{\"id\": 1068650, \"src\": \"hda\"}, {\"id\": 1068650, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}", "output": "{\"JSDsample\": {\"values\": [{\"id\": 1068650, \"src\": \"hda\"}]}, \"__current_case__\": 1, \"outFileFormat\": \"png\", \"saveQualityMetrics\": \"true\", \"saveRawCounts\": \"true\", \"showOutputSettings\": \"yes\"}", "advancedOpt": "{\"__current_case__\": 1, \"binSize\": \"500\", \"blackListFileName\": null, \"centerReads\": \"false\", \"doExtendCustom\": {\"__current_case__\": 0, \"doExtend\": \"no\"}, \"ignoreDuplicates\": \"false\", \"maxFragmentLength\": \"0\", \"minFragmentLength\": \"0\", \"minMappingQuality\": \"1\", \"numberOfSamples\": \"100000\", \"plotTitle\": \"Test Fingerprint Plot\", \"samFlagExclude\": \"\", \"samFlagInclude\": \"\", \"showAdvancedOpt\": \"yes\", \"skipZeros\": \"false\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "5b9957b7d2974c93", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_fingerprint/deeptools_plot_fingerprint/3.2.1.0.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1", "time_seconds": 71.6748411655426, "inputs": {"biasCorrect": false, "single_or_paired|single_or_paired_opts": "paired", "single_or_paired|input_mate1": {"src": "hda", "id": "5c64207318785870"}, "single_or_paired|input_mate2": {"src": "hda", "id": "38ac3053225efa12"}, "refTranscriptSource|ownFile": {"src": "hda", "id": "4f124c0cf2bb92b9"}, "refTranscriptSource|TranscriptSource": "history"}, "tool_version": "0.10.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1", "update_time": "2019-06-25T22:01:55.862258", "inputs": {"input_mate2": {"src": "hda", "id": "38ac3053225efa12", "uuid": "14bc3504-d14a-4b4b-8f7c-eb028d19901f"}, "input_mate1": {"src": "hda", "id": "5c64207318785870", "uuid": "32ffbb7c-ddcf-4fcf-bffa-0c26d60f20f8"}, "ownFile": {"src": "hda", "id": "4f124c0cf2bb92b9", "uuid": "3786d566-d0db-4ecb-95e7-f0ad72c77b11"}}, "outputs": {"output_quant": {"src": "hda", "id": "cda0fd3f8e4a0bee", "uuid": "eea3917f-57d9-4f8e-a2d6-d201abeb9ba4"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.000746556s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 1.2704e-05s\nWriting sequence data to file . . . done\nElapsed time: 0.000426663s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 0.00014097s\ndone\nElapsed time: 0.0626476s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00203963s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] => sailfish \n# [ command ] => quant \n# [ index ] => { ./index_dir }\n# [ mates1 ] => { ./mate1.fastq }\n# [ mates2 ] => { ./mate2.fastq }\n# [ libType ] => { IU }\n# [ output ] => { ./results }\n# [ threads ] => { 1 }\n# [ gcSizeSamp ] => { 1 }\n# [ gcSpeedSamp ] => { 1 }\n# [ fldMean ] => { 200 }\n# [ fldSD ] => { 80 }\n# [ maxReadOcc ] => { 200 }\n# [ maxFragLen ] => { 1000 }\n# [ txpAggregationKey ] => { gene_id }\n# [ numBiasSamples ] => { 1000000 }\n# [ numFragSamples ] => { 10000 }\n# [ numGibbsSamples ] => { 0 }\n# [ numBootstraps ] => { 0 }\nLogs will be written to ./results/logs\nthere is 1 lib\n[2019-06-26 08:01:44.364] [jointLog] [info] parsing read library format\nLoading 32-bit quasi indexIndex contained 15 targets\nLoaded targets\n\n\n[2019-06-26 08:01:44.597] [stderrLog] [info] Loading Suffix Array \n[2019-06-26 08:01:44.598] [stderrLog] [info] Loading Position Hash\n[2019-06-26 08:01:44.598] [stderrLog] [info] Loading Transcript Info \n[2019-06-26 08:01:44.599] [stderrLog] [info] Loading Rank-Select Bit Array\n[2019-06-26 08:01:44.599] [stderrLog] [info] There were 15 set bits in the bit array\n[2019-06-26 08:01:44.599] [stderrLog] [info] Computing transcript lengths\n[2019-06-26 08:01:44.599] [stderrLog] [info] Waiting to finish loading hash\n[2019-06-26 08:01:44.600] [stderrLog] [info] Done loading index\n[2019-06-26 08:01:44.596] [jointLog] [info] Loading Quasi index\n[2019-06-26 08:01:44.600] [jointLog] [info] done\n\n[2019-06-26 08:01:44.729] [jointLog] [info] Gathered fragment lengths from all threads\n[2019-06-26 08:01:44.729] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2019-06-26 08:01:44.732] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2019-06-26 08:01:44.769] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2019-06-26 08:01:44.770] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2019-06-26 08:01:44.771] [jointLog] [info] Starting optimizer:\n\n[2019-06-26 08:01:44.771] [jointLog] [info] Optimizing over 21 equivalence classes\n[2019-06-26 08:01:44.771] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2019-06-26 08:01:44.772] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687\n[2019-06-26 08:01:44.772] [jointLog] [info] Finished optimizer\n[2019-06-26 08:01:44.772] [jointLog] [info] writing output \n\n", "state": "ok", "create_time": "2019-06-25T22:01:16.385746", "stderr": "Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.000746556s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 1.2704e-05s\nWriting sequence data to file . . . done\nElapsed time: 0.000426663s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 0.00014097s\ndone\nElapsed time: 0.0626476s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00203963s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] => sailfish \n# [ command ] => quant \n# [ index ] => { ./index_dir }\n# [ mates1 ] => { ./mate1.fastq }\n# [ mates2 ] => { ./mate2.fastq }\n# [ libType ] => { IU }\n# [ output ] => { ./results }\n# [ threads ] => { 1 }\n# [ gcSizeSamp ] => { 1 }\n# [ gcSpeedSamp ] => { 1 }\n# [ fldMean ] => { 200 }\n# [ fldSD ] => { 80 }\n# [ maxReadOcc ] => { 200 }\n# [ maxFragLen ] => { 1000 }\n# [ txpAggregationKey ] => { gene_id }\n# [ numBiasSamples ] => { 1000000 }\n# [ numFragSamples ] => { 10000 }\n# [ numGibbsSamples ] => { 0 }\n# [ numBootstraps ] => { 0 }\nLogs will be written to ./results/logs\nthere is 1 lib\n[2019-06-26 08:01:44.364] [jointLog] [info] parsing read library format\nLoading 32-bit quasi indexIndex contained 15 targets\nLoaded targets\n\n\n[2019-06-26 08:01:44.597] [stderrLog] [info] Loading Suffix Array \n[2019-06-26 08:01:44.598] [stderrLog] [info] Loading Position Hash\n[2019-06-26 08:01:44.598] [stderrLog] [info] Loading Transcript Info \n[2019-06-26 08:01:44.599] [stderrLog] [info] Loading Rank-Select Bit Array\n[2019-06-26 08:01:44.599] [stderrLog] [info] There were 15 set bits in the bit array\n[2019-06-26 08:01:44.599] [stderrLog] [info] Computing transcript lengths\n[2019-06-26 08:01:44.599] [stderrLog] [info] Waiting to finish loading hash\n[2019-06-26 08:01:44.600] [stderrLog] [info] Done loading index\n[2019-06-26 08:01:44.596] [jointLog] [info] Loading Quasi index\n[2019-06-26 08:01:44.600] [jointLog] [info] done\n\n[2019-06-26 08:01:44.729] [jointLog] [info] Gathered fragment lengths from all threads\n[2019-06-26 08:01:44.729] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2019-06-26 08:01:44.732] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2019-06-26 08:01:44.769] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2019-06-26 08:01:44.770] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2019-06-26 08:01:44.771] [jointLog] [info] Starting optimizer:\n\n[2019-06-26 08:01:44.771] [jointLog] [info] Optimizing over 21 equivalence classes\n[2019-06-26 08:01:44.771] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2019-06-26 08:01:44.772] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687\n[2019-06-26 08:01:44.772] [jointLog] [info] Finished optimizer\n[2019-06-26 08:01:44.772] [jointLog] [info] writing output \n\n", "model_class": "Job", "params": {"discardOrphans": "\"false\"", "numBiasSamples": "\"1000000\"", "dbkey": "\"?\"", "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"kmerSize\": \"21\", \"ownFile\": {\"values\": [{\"id\": 1067407, \"src\": \"hda\"}]}}", "geneMap": "null", "gcSpeedSamp": "\"1\"", "enforceLibCompat": "\"false\"", "noEffectiveLengthCorrection": "\"false\"", "allowDovetail": "\"false\"", "strictIntersect": "\"false\"", "fldMean": "\"200\"", "biasCorrect": "\"false\"", "maxReadOcc": "\"200\"", "numBootstraps": "\"0\"", "txpAggregationKey": "\"gene_id\"", "numGibbsSamples": "\"0\"", "useVBOpt": "\"false\"", "gcSizeSamp": "\"1\"", "unsmoothedFLD": "\"false\"", "maxFragLen": "\"1000\"", "gcBiasCorrect": "\"false\"", "single_or_paired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 1067390, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 1067391, \"src\": \"hda\"}]}, \"orientation\": \"I\", \"single_or_paired_opts\": \"paired\", \"strandedness\": \"U\"}", "dumpEq": "\"false\"", "fldSD": "\"80\"", "numFragSamples": "\"10000\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "ignoreLibCompat": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "afdf9936c08ca8af", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1", "time_seconds": 44.98882699012756, "inputs": {"biasCorrect": false, "single_or_paired|single_or_paired_opts": "paired", "single_or_paired|input_mate1": {"src": "hda", "id": "51c52da908a49292"}, "single_or_paired|input_mate2": {"src": "hda", "id": "7a60b6b447bc23b8"}, "refTranscriptSource|ownFile": {"src": "hda", "id": "4f124c0cf2bb92b9"}, "refTranscriptSource|TranscriptSource": "history"}, "tool_version": "0.10.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1", "update_time": "2019-06-25T22:01:55.422874", "inputs": {"input_mate2": {"src": "hda", "id": "7a60b6b447bc23b8", "uuid": "fd7d049b-3e8c-45d3-9616-c5379e884a72"}, "input_mate1": {"src": "hda", "id": "51c52da908a49292", "uuid": "f2547c6d-f1da-4a6b-934b-a64027e49275"}, "ownFile": {"src": "hda", "id": "4f124c0cf2bb92b9", "uuid": "3786d566-d0db-4ecb-95e7-f0ad72c77b11"}}, "outputs": {"output_quant": {"src": "hda", "id": "b1ce461e844a7bd1", "uuid": "cc974b6c-9ab5-4fd7-aeb4-d87c12e0bab8"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.000831094s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 1.3941e-05s\nWriting sequence data to file . . . done\nElapsed time: 0.00130874s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 0.000144139s\ndone\nElapsed time: 0.0557362s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.001842s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] => sailfish \n# [ command ] => quant \n# [ index ] => { ./index_dir }\n# [ mates1 ] => { /dev/fd/63 }\n# [ mates2 ] => { /dev/fd/62 }\n# [ libType ] => { IU }\n# [ output ] => { ./results }\n# [ threads ] => { 1 }\n# [ gcSizeSamp ] => { 1 }\n# [ gcSpeedSamp ] => { 1 }\n# [ fldMean ] => { 200 }\n# [ fldSD ] => { 80 }\n# [ maxReadOcc ] => { 200 }\n# [ maxFragLen ] => { 1000 }\n# [ txpAggregationKey ] => { gene_id }\n# [ numBiasSamples ] => { 1000000 }\n# [ numFragSamples ] => { 10000 }\n# [ numGibbsSamples ] => { 0 }\n# [ numBootstraps ] => { 0 }\nLogs will be written to ./results/logs\nthere is 1 lib\n[2019-06-26 08:01:44.708] [jointLog] [info] parsing read library format\nLoading 32-bit quasi indexIndex contained 15 targets\nLoaded targets\n\n\n[2019-06-26 08:01:44.853] [stderrLog] [info] Loading Suffix Array \n[2019-06-26 08:01:44.853] [stderrLog] [info] Loading Position Hash\n[2019-06-26 08:01:44.854] [stderrLog] [info] Loading Transcript Info \n[2019-06-26 08:01:44.855] [stderrLog] [info] Loading Rank-Select Bit Array\n[2019-06-26 08:01:44.855] [stderrLog] [info] There were 15 set bits in the bit array\n[2019-06-26 08:01:44.855] [stderrLog] [info] Computing transcript lengths\n[2019-06-26 08:01:44.855] [stderrLog] [info] Waiting to finish loading hash\n[2019-06-26 08:01:44.856] [stderrLog] [info] Done loading index\n[2019-06-26 08:01:44.851] [jointLog] [info] Loading Quasi index\n[2019-06-26 08:01:44.856] [jointLog] [info] done\n\n[2019-06-26 08:01:44.999] [jointLog] [info] Gathered fragment lengths from all threads\n[2019-06-26 08:01:44.999] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2019-06-26 08:01:45.002] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2019-06-26 08:01:45.026] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2019-06-26 08:01:45.026] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2019-06-26 08:01:45.027] [jointLog] [info] Starting optimizer:\n\n[2019-06-26 08:01:45.027] [jointLog] [info] Optimizing over 21 equivalence classes\n[2019-06-26 08:01:45.027] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2019-06-26 08:01:45.028] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687\n[2019-06-26 08:01:45.028] [jointLog] [info] Finished optimizer\n[2019-06-26 08:01:45.028] [jointLog] [info] writing output \n\n", "state": "ok", "create_time": "2019-06-25T22:01:26.886240", "stderr": "Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.000831094s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 1.3941e-05s\nWriting sequence data to file . . . done\nElapsed time: 0.00130874s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 0.000144139s\ndone\nElapsed time: 0.0557362s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.001842s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] => sailfish \n# [ command ] => quant \n# [ index ] => { ./index_dir }\n# [ mates1 ] => { /dev/fd/63 }\n# [ mates2 ] => { /dev/fd/62 }\n# [ libType ] => { IU }\n# [ output ] => { ./results }\n# [ threads ] => { 1 }\n# [ gcSizeSamp ] => { 1 }\n# [ gcSpeedSamp ] => { 1 }\n# [ fldMean ] => { 200 }\n# [ fldSD ] => { 80 }\n# [ maxReadOcc ] => { 200 }\n# [ maxFragLen ] => { 1000 }\n# [ txpAggregationKey ] => { gene_id }\n# [ numBiasSamples ] => { 1000000 }\n# [ numFragSamples ] => { 10000 }\n# [ numGibbsSamples ] => { 0 }\n# [ numBootstraps ] => { 0 }\nLogs will be written to ./results/logs\nthere is 1 lib\n[2019-06-26 08:01:44.708] [jointLog] [info] parsing read library format\nLoading 32-bit quasi indexIndex contained 15 targets\nLoaded targets\n\n\n[2019-06-26 08:01:44.853] [stderrLog] [info] Loading Suffix Array \n[2019-06-26 08:01:44.853] [stderrLog] [info] Loading Position Hash\n[2019-06-26 08:01:44.854] [stderrLog] [info] Loading Transcript Info \n[2019-06-26 08:01:44.855] [stderrLog] [info] Loading Rank-Select Bit Array\n[2019-06-26 08:01:44.855] [stderrLog] [info] There were 15 set bits in the bit array\n[2019-06-26 08:01:44.855] [stderrLog] [info] Computing transcript lengths\n[2019-06-26 08:01:44.855] [stderrLog] [info] Waiting to finish loading hash\n[2019-06-26 08:01:44.856] [stderrLog] [info] Done loading index\n[2019-06-26 08:01:44.851] [jointLog] [info] Loading Quasi index\n[2019-06-26 08:01:44.856] [jointLog] [info] done\n\n[2019-06-26 08:01:44.999] [jointLog] [info] Gathered fragment lengths from all threads\n[2019-06-26 08:01:44.999] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2019-06-26 08:01:45.002] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2019-06-26 08:01:45.026] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2019-06-26 08:01:45.026] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2019-06-26 08:01:45.027] [jointLog] [info] Starting optimizer:\n\n[2019-06-26 08:01:45.027] [jointLog] [info] Optimizing over 21 equivalence classes\n[2019-06-26 08:01:45.027] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2019-06-26 08:01:45.028] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687\n[2019-06-26 08:01:45.028] [jointLog] [info] Finished optimizer\n[2019-06-26 08:01:45.028] [jointLog] [info] writing output \n\n", "model_class": "Job", "params": {"discardOrphans": "\"false\"", "numBiasSamples": "\"1000000\"", "dbkey": "\"?\"", "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"kmerSize\": \"21\", \"ownFile\": {\"values\": [{\"id\": 1067407, \"src\": \"hda\"}]}}", "geneMap": "null", "gcSpeedSamp": "\"1\"", "enforceLibCompat": "\"false\"", "noEffectiveLengthCorrection": "\"false\"", "allowDovetail": "\"false\"", "strictIntersect": "\"false\"", "fldMean": "\"200\"", "biasCorrect": "\"false\"", "maxReadOcc": "\"200\"", "numBootstraps": "\"0\"", "txpAggregationKey": "\"gene_id\"", "numGibbsSamples": "\"0\"", "useVBOpt": "\"false\"", "gcSizeSamp": "\"1\"", "unsmoothedFLD": "\"false\"", "maxFragLen": "\"1000\"", "gcBiasCorrect": "\"false\"", "single_or_paired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 1067397, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 1067398, \"src\": \"hda\"}]}, \"orientation\": \"I\", \"single_or_paired_opts\": \"paired\", \"strandedness\": \"U\"}", "dumpEq": "\"false\"", "fldSD": "\"80\"", "numFragSamples": "\"10000\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "ignoreLibCompat": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "f91b429d88d4d011", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1", "time_seconds": 71.65333795547485, "inputs": {"biasCorrect": true, "single_or_paired|single_or_paired_opts": "paired", "single_or_paired|input_mate1": {"src": "hda", "id": "e60585fd7e944bc3"}, "single_or_paired|input_mate2": {"src": "hda", "id": "7c18b24580993d72"}, "refTranscriptSource|ownFile": {"src": "hda", "id": "3e30dc56e6efccc7"}, "refTranscriptSource|TranscriptSource": "history"}, "tool_version": "0.10.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1", "update_time": "2019-06-25T22:02:30.037915", "inputs": {"input_mate2": {"src": "hda", "id": "7c18b24580993d72", "uuid": "886e5d00-f062-4a57-a09a-232fc27e2efe"}, "input_mate1": {"src": "hda", "id": "e60585fd7e944bc3", "uuid": "96a40d86-fdf4-4e5a-b3c3-e0aafa780997"}, "ownFile": {"src": "hda", "id": "3e30dc56e6efccc7", "uuid": "abdd5053-6a70-4221-9e5c-bfe80b81ee50"}}, "outputs": {"output_quant": {"src": "hda", "id": "6bba39577577fe4a", "uuid": "a98117ce-03ab-4515-b01f-026c4974f22f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.00223638s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 4.0705e-05s\nWriting sequence data to file . . . done\nElapsed time: 0.000106303s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 0.000177917s\ndone\nElapsed time: 0.0388507s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00193626s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] => sailfish \n# [ command ] => quant \n# [ index ] => { ./index_dir }\n# [ mates1 ] => { ./mate1.fastq }\n# [ mates2 ] => { ./mate2.fastq }\n# [ libType ] => { IU }\n# [ output ] => { ./results }\n# [ biasCorrect ] => { }\n# [ threads ] => { 1 }\n# [ gcSizeSamp ] => { 1 }\n# [ gcSpeedSamp ] => { 1 }\n# [ fldMean ] => { 200 }\n# [ fldSD ] => { 80 }\n# [ maxReadOcc ] => { 200 }\n# [ maxFragLen ] => { 1000 }\n# [ txpAggregationKey ] => { gene_id }\n# [ numBiasSamples ] => { 1000000 }\n# [ numFragSamples ] => { 10000 }\n# [ numGibbsSamples ] => { 0 }\n# [ numBootstraps ] => { 0 }\nLogs will be written to ./results/logs\n[2019-06-26 08:02:20.175] [jointLog] [info] parsing read library format\nthere is 1 lib\nLoading 32-bit quasi indexIndex contained 15 targets\nLoaded targets\n\n\n[2019-06-26 08:02:20.459] [jointLog] [info] Loading Quasi index\n[2019-06-26 08:02:20.464] [jointLog] [info] done\n[2019-06-26 08:02:20.462] [stderrLog] [info] Loading Suffix Array \n[2019-06-26 08:02:20.462] [stderrLog] [info] Loading Position Hash\n[2019-06-26 08:02:20.463] [stderrLog] [info] Loading Transcript Info \n[2019-06-26 08:02:20.464] [stderrLog] [info] Loading Rank-Select Bit Array\n[2019-06-26 08:02:20.464] [stderrLog] [info] There were 15 set bits in the bit array\n[2019-06-26 08:02:20.464] [stderrLog] [info] Computing transcript lengths\n[2019-06-26 08:02:20.464] [stderrLog] [info] Waiting to finish loading hash\n[2019-06-26 08:02:20.464] [stderrLog] [info] Done loading index\n\nDone Quasi-Mapping \n\n[2019-06-26 08:02:20.595] [jointLog] [info] Gathered fragment lengths from all threads\n[2019-06-26 08:02:20.595] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2019-06-26 08:02:20.597] [jointLog] [info] Estimating effective lengths\n[2019-06-26 08:02:20.624] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2019-06-26 08:02:20.624] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2019-06-26 08:02:20.625] [jointLog] [info] Starting optimizer:\n\n[2019-06-26 08:02:20.626] [jointLog] [info] Optimizing over 21 equivalence classes\n[2019-06-26 08:02:20.626] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2019-06-26 08:02:20.626] [jointLog] [info] iteration 50, recomputing effective lengths\n[2019-06-26 08:02:20.631] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2019-06-26 08:02:20.631] [jointLog] [info] Finished optimizer\n[2019-06-26 08:02:20.631] [jointLog] [info] writing output \n\n", "state": "ok", "create_time": "2019-06-25T22:01:52.337095", "stderr": "Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.00223638s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 4.0705e-05s\nWriting sequence data to file . . . done\nElapsed time: 0.000106303s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 0.000177917s\ndone\nElapsed time: 0.0388507s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00193626s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] => sailfish \n# [ command ] => quant \n# [ index ] => { ./index_dir }\n# [ mates1 ] => { ./mate1.fastq }\n# [ mates2 ] => { ./mate2.fastq }\n# [ libType ] => { IU }\n# [ output ] => { ./results }\n# [ biasCorrect ] => { }\n# [ threads ] => { 1 }\n# [ gcSizeSamp ] => { 1 }\n# [ gcSpeedSamp ] => { 1 }\n# [ fldMean ] => { 200 }\n# [ fldSD ] => { 80 }\n# [ maxReadOcc ] => { 200 }\n# [ maxFragLen ] => { 1000 }\n# [ txpAggregationKey ] => { gene_id }\n# [ numBiasSamples ] => { 1000000 }\n# [ numFragSamples ] => { 10000 }\n# [ numGibbsSamples ] => { 0 }\n# [ numBootstraps ] => { 0 }\nLogs will be written to ./results/logs\n[2019-06-26 08:02:20.175] [jointLog] [info] parsing read library format\nthere is 1 lib\nLoading 32-bit quasi indexIndex contained 15 targets\nLoaded targets\n\n\n[2019-06-26 08:02:20.459] [jointLog] [info] Loading Quasi index\n[2019-06-26 08:02:20.464] [jointLog] [info] done\n[2019-06-26 08:02:20.462] [stderrLog] [info] Loading Suffix Array \n[2019-06-26 08:02:20.462] [stderrLog] [info] Loading Position Hash\n[2019-06-26 08:02:20.463] [stderrLog] [info] Loading Transcript Info \n[2019-06-26 08:02:20.464] [stderrLog] [info] Loading Rank-Select Bit Array\n[2019-06-26 08:02:20.464] [stderrLog] [info] There were 15 set bits in the bit array\n[2019-06-26 08:02:20.464] [stderrLog] [info] Computing transcript lengths\n[2019-06-26 08:02:20.464] [stderrLog] [info] Waiting to finish loading hash\n[2019-06-26 08:02:20.464] [stderrLog] [info] Done loading index\n\nDone Quasi-Mapping \n\n[2019-06-26 08:02:20.595] [jointLog] [info] Gathered fragment lengths from all threads\n[2019-06-26 08:02:20.595] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2019-06-26 08:02:20.597] [jointLog] [info] Estimating effective lengths\n[2019-06-26 08:02:20.624] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2019-06-26 08:02:20.624] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2019-06-26 08:02:20.625] [jointLog] [info] Starting optimizer:\n\n[2019-06-26 08:02:20.626] [jointLog] [info] Optimizing over 21 equivalence classes\n[2019-06-26 08:02:20.626] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2019-06-26 08:02:20.626] [jointLog] [info] iteration 50, recomputing effective lengths\n[2019-06-26 08:02:20.631] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2019-06-26 08:02:20.631] [jointLog] [info] Finished optimizer\n[2019-06-26 08:02:20.631] [jointLog] [info] writing output \n\n", "model_class": "Job", "params": {"discardOrphans": "\"false\"", "numBiasSamples": "\"1000000\"", "dbkey": "\"?\"", "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"kmerSize\": \"21\", \"ownFile\": {\"values\": [{\"id\": 1067412, \"src\": \"hda\"}]}}", "geneMap": "null", "gcSpeedSamp": "\"1\"", "enforceLibCompat": "\"false\"", "noEffectiveLengthCorrection": "\"false\"", "allowDovetail": "\"false\"", "strictIntersect": "\"false\"", "fldMean": "\"200\"", "biasCorrect": "\"true\"", "maxReadOcc": "\"200\"", "numBootstraps": "\"0\"", "txpAggregationKey": "\"gene_id\"", "numGibbsSamples": "\"0\"", "useVBOpt": "\"false\"", "gcSizeSamp": "\"1\"", "unsmoothedFLD": "\"false\"", "maxFragLen": "\"1000\"", "gcBiasCorrect": "\"false\"", "single_or_paired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 1067409, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 1067410, \"src\": \"hda\"}]}, \"orientation\": \"I\", \"single_or_paired_opts\": \"paired\", \"strandedness\": \"U\"}", "dumpEq": "\"false\"", "fldSD": "\"80\"", "numFragSamples": "\"10000\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "ignoreLibCompat": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "25f6ef5af098d997", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1", "time_seconds": 57.01464605331421, "inputs": {"biasCorrect": true, "single_or_paired|single_or_paired_opts": "paired", "geneMap": {"src": "hda", "id": "063ed863081480df"}, "single_or_paired|input_mate1": {"src": "hda", "id": "bb5d9bd6bf0e8270"}, "single_or_paired|input_mate2": {"src": "hda", "id": "76aacb4989e30835"}, "refTranscriptSource|ownFile": {"src": "hda", "id": "3e30dc56e6efccc7"}, "refTranscriptSource|TranscriptSource": "history"}, "tool_version": "0.10.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1", "update_time": "2019-06-25T22:02:47.351276", "inputs": {"geneMap": {"src": "hda", "id": "063ed863081480df", "uuid": "7bb5ca72-b08d-42b5-9728-3b91d3cfe06d"}, "input_mate2": {"src": "hda", "id": "76aacb4989e30835", "uuid": "9978730a-a69a-4394-ac3a-f11c466947ba"}, "input_mate1": {"src": "hda", "id": "bb5d9bd6bf0e8270", "uuid": "ccd48005-3d7c-40af-8023-11575d9e29cb"}, "ownFile": {"src": "hda", "id": "3e30dc56e6efccc7", "uuid": "abdd5053-6a70-4221-9e5c-bfe80b81ee50"}}, "outputs": {"output_gene_quant": {"src": "hda", "id": "ff18ab0ffeff3dbe", "uuid": "d5bb7b9f-850f-48a6-9827-de8c9f11fe9b"}, "output_quant": {"src": "hda", "id": "21fb47b5a87b1fba", "uuid": "fab3a8f2-8505-4025-a873-71bdd4d76192"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.000847524s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 4.4865e-05s\nWriting sequence data to file . . . done\nElapsed time: 0.000315063s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 0.000157298s\ndone\nElapsed time: 0.0454915s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.0025286s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] => sailfish \n# [ command ] => quant \n# [ index ] => { ./index_dir }\n# [ mates1 ] => { ./mate1.fastq }\n# [ mates2 ] => { ./mate2.fastq }\n# [ libType ] => { IU }\n# [ output ] => { ./results }\n# [ biasCorrect ] => { }\n# [ threads ] => { 1 }\n# [ gcSizeSamp ] => { 1 }\n# [ gcSpeedSamp ] => { 1 }\n# [ fldMean ] => { 200 }\n# [ fldSD ] => { 80 }\n# [ maxReadOcc ] => { 200 }\n# [ geneMap ] => { ./geneMap.tabular }\n# [ maxFragLen ] => { 1000 }\n# [ txpAggregationKey ] => { gene_id }\n# [ numBiasSamples ] => { 1000000 }\n# [ numFragSamples ] => { 10000 }\n# [ numGibbsSamples ] => { 0 }\n# [ numBootstraps ] => { 0 }\nLogs will be written to ./results/logs\nthere is 1 lib\n[2019-06-26 08:02:38.727] [jointLog] [info] parsing read library format\nLoading 32-bit quasi indexIndex contained 15 targets\nLoaded targets\n\n\n[2019-06-26 08:02:38.902] [stderrLog] [info] Loading Suffix Array \n[2019-06-26 08:02:38.902] [stderrLog] [info] Loading Position Hash\n[2019-06-26 08:02:38.903] [stderrLog] [info] Loading Transcript Info \n[2019-06-26 08:02:38.903] [stderrLog] [info] Loading Rank-Select Bit Array\n[2019-06-26 08:02:38.904] [stderrLog] [info] There were 15 set bits in the bit array\n[2019-06-26 08:02:38.904] [stderrLog] [info] Computing transcript lengths\n[2019-06-26 08:02:38.904] [stderrLog] [info] Waiting to finish loading hash\n[2019-06-26 08:02:38.906] [stderrLog] [info] Done loading index\n[2019-06-26 08:02:38.898] [jointLog] [info] Loading Quasi index\n[2019-06-26 08:02:38.906] [jointLog] [info] done\n\nDone Quasi-Mapping \n\n[2019-06-26 08:02:39.032] [jointLog] [info] Gathered fragment lengths from all threads\n[2019-06-26 08:02:39.032] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2019-06-26 08:02:39.033] [jointLog] [info] Estimating effective lengths\n[2019-06-26 08:02:39.063] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2019-06-26 08:02:39.063] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2019-06-26 08:02:39.064] [jointLog] [info] Starting optimizer:\n\n[2019-06-26 08:02:39.065] [jointLog] [info] Optimizing over 21 equivalence classes\n[2019-06-26 08:02:39.065] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2019-06-26 08:02:39.065] [jointLog] [info] iteration 50, recomputing effective lengths\n[2019-06-26 08:02:39.069] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2019-06-26 08:02:39.069] [jointLog] [info] Finished optimizer\n[2019-06-26 08:02:39.069] [jointLog] [info] writing output \n\nComputing gene-level abundance estimates\nThere were 3 transcripts mapping to 3 genes\nWARNING: couldn't find transcript named [NR_031764]; returning transcript  as it's own gene\n\ndone\nAggregating expressions to gene level . . . done\n", "state": "ok", "create_time": "2019-06-25T22:02:26.508768", "stderr": "Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.000847524s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 4.4865e-05s\nWriting sequence data to file . . . done\nElapsed time: 0.000315063s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 0.000157298s\ndone\nElapsed time: 0.0454915s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.0025286s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] => sailfish \n# [ command ] => quant \n# [ index ] => { ./index_dir }\n# [ mates1 ] => { ./mate1.fastq }\n# [ mates2 ] => { ./mate2.fastq }\n# [ libType ] => { IU }\n# [ output ] => { ./results }\n# [ biasCorrect ] => { }\n# [ threads ] => { 1 }\n# [ gcSizeSamp ] => { 1 }\n# [ gcSpeedSamp ] => { 1 }\n# [ fldMean ] => { 200 }\n# [ fldSD ] => { 80 }\n# [ maxReadOcc ] => { 200 }\n# [ geneMap ] => { ./geneMap.tabular }\n# [ maxFragLen ] => { 1000 }\n# [ txpAggregationKey ] => { gene_id }\n# [ numBiasSamples ] => { 1000000 }\n# [ numFragSamples ] => { 10000 }\n# [ numGibbsSamples ] => { 0 }\n# [ numBootstraps ] => { 0 }\nLogs will be written to ./results/logs\nthere is 1 lib\n[2019-06-26 08:02:38.727] [jointLog] [info] parsing read library format\nLoading 32-bit quasi indexIndex contained 15 targets\nLoaded targets\n\n\n[2019-06-26 08:02:38.902] [stderrLog] [info] Loading Suffix Array \n[2019-06-26 08:02:38.902] [stderrLog] [info] Loading Position Hash\n[2019-06-26 08:02:38.903] [stderrLog] [info] Loading Transcript Info \n[2019-06-26 08:02:38.903] [stderrLog] [info] Loading Rank-Select Bit Array\n[2019-06-26 08:02:38.904] [stderrLog] [info] There were 15 set bits in the bit array\n[2019-06-26 08:02:38.904] [stderrLog] [info] Computing transcript lengths\n[2019-06-26 08:02:38.904] [stderrLog] [info] Waiting to finish loading hash\n[2019-06-26 08:02:38.906] [stderrLog] [info] Done loading index\n[2019-06-26 08:02:38.898] [jointLog] [info] Loading Quasi index\n[2019-06-26 08:02:38.906] [jointLog] [info] done\n\nDone Quasi-Mapping \n\n[2019-06-26 08:02:39.032] [jointLog] [info] Gathered fragment lengths from all threads\n[2019-06-26 08:02:39.032] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2019-06-26 08:02:39.033] [jointLog] [info] Estimating effective lengths\n[2019-06-26 08:02:39.063] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2019-06-26 08:02:39.063] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2019-06-26 08:02:39.064] [jointLog] [info] Starting optimizer:\n\n[2019-06-26 08:02:39.065] [jointLog] [info] Optimizing over 21 equivalence classes\n[2019-06-26 08:02:39.065] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2019-06-26 08:02:39.065] [jointLog] [info] iteration 50, recomputing effective lengths\n[2019-06-26 08:02:39.069] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2019-06-26 08:02:39.069] [jointLog] [info] Finished optimizer\n[2019-06-26 08:02:39.069] [jointLog] [info] writing output \n\nComputing gene-level abundance estimates\nThere were 3 transcripts mapping to 3 genes\nWARNING: couldn't find transcript named [NR_031764]; returning transcript  as it's own gene\n\ndone\nAggregating expressions to gene level . . . done\n", "model_class": "Job", "params": {"discardOrphans": "\"false\"", "numBiasSamples": "\"1000000\"", "dbkey": "\"?\"", "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"kmerSize\": \"21\", \"ownFile\": {\"values\": [{\"id\": 1067412, \"src\": \"hda\"}]}}", "gcSpeedSamp": "\"1\"", "enforceLibCompat": "\"false\"", "noEffectiveLengthCorrection": "\"false\"", "allowDovetail": "\"false\"", "strictIntersect": "\"false\"", "fldMean": "\"200\"", "biasCorrect": "\"true\"", "maxReadOcc": "\"200\"", "numBootstraps": "\"0\"", "txpAggregationKey": "\"gene_id\"", "numGibbsSamples": "\"0\"", "useVBOpt": "\"false\"", "gcSizeSamp": "\"1\"", "unsmoothedFLD": "\"false\"", "maxFragLen": "\"1000\"", "gcBiasCorrect": "\"false\"", "single_or_paired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 1067415, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 1067416, \"src\": \"hda\"}]}, \"orientation\": \"I\", \"single_or_paired_opts\": \"paired\", \"strandedness\": \"U\"}", "dumpEq": "\"false\"", "fldSD": "\"80\"", "numFragSamples": "\"10000\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "ignoreLibCompat": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "65668726859eb47c", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_awk_tool/1.1.1", "time_seconds": 52.1675341129303, "inputs": {"code": "$2>0.5 { print $2*9\"\\t\"$1 }", "infile": {"src": "hda", "id": "4eea2f795bc06cc9"}}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_awk_tool/1.1.1", "update_time": "2019-06-25T21:54:34.377933", "inputs": {"infile": {"src": "hda", "id": "4eea2f795bc06cc9", "uuid": "088c788f-db9b-4718-89e6-a34dbbb12b6f"}}, "outputs": {"outfile": {"src": "hda", "id": "172c46ea8d7c46a2", "uuid": "fe3a41f2-4d08-4ee7-86fb-028a52f3f58a"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:54:19.166281", "stderr": "", "model_class": "Job", "params": {"code": "\"$2>0.5 { print $2*9\\\"\\\\t\\\"$1 }\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "576b8f9a6d973f22", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_awk_tool/1.1.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_cut_tool/1.1.0", "time_seconds": 52.951709032058716, "inputs": {"input": {"src": "hda", "id": "1ae01ca172d133fa"}, "delimiter": "", "cut_type_options|list": ["1", "3", "4"]}, "tool_version": "1.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_cut_tool/1.1.0", "update_time": "2019-06-25T21:53:00.468276", "inputs": {"input": {"src": "hda", "id": "1ae01ca172d133fa", "uuid": "f48554a0-9d05-4873-b5f4-72a571037835"}}, "outputs": {"output": {"src": "hda", "id": "ca973faef8191657", "uuid": "51a525dd-9011-4c5d-8e11-2c0c66a462ab"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:52:45.961504", "stderr": "", "model_class": "Job", "params": {"cut_type_options": "{\"__current_case__\": 0, \"cut_element\": \"-f\", \"list\": [\"1\", \"3\", \"4\"]}", "complement": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "delimiter": "\"\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "43411d1cc45fdbe6", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_cut_tool/1.1.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_cut_tool/1.1.0", "time_seconds": 53.18169188499451, "inputs": {"input": {"src": "hda", "id": "1ae01ca172d133fa"}, "complement": "--complement", "delimiter": "", "cut_type_options|list": "2"}, "tool_version": "1.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_cut_tool/1.1.0", "update_time": "2019-06-25T21:53:05.855489", "inputs": {"input": {"src": "hda", "id": "1ae01ca172d133fa", "uuid": "f48554a0-9d05-4873-b5f4-72a571037835"}}, "outputs": {"output": {"src": "hda", "id": "d9d7c2b82c55a1bd", "uuid": "790fdbaa-773b-4ab2-92a6-b93c1f5d08e3"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:52:51.940263", "stderr": "", "model_class": "Job", "params": {"cut_type_options": "{\"__current_case__\": 0, \"cut_element\": \"-f\", \"list\": [\"2\"]}", "complement": "\"--complement\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "delimiter": "\"\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "618c5280307907b6", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_cut_tool/1.1.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_cut_tool/1.1.0", "time_seconds": 55.47609186172485, "inputs": {"input": {"src": "hda", "id": "1ae01ca172d133fa"}, "delimiter": "", "cut_type_options|cut_element": "-c", "cut_type_options|list": "-3"}, "tool_version": "1.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_cut_tool/1.1.0", "update_time": "2019-06-25T21:53:08.279341", "inputs": {"input": {"src": "hda", "id": "1ae01ca172d133fa", "uuid": "f48554a0-9d05-4873-b5f4-72a571037835"}}, "outputs": {"output": {"src": "hda", "id": "1ba742f4d0c7fa19", "uuid": "37e65fa9-cb9e-45d4-add6-2763c592520f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:52:54.313286", "stderr": "", "model_class": "Job", "params": {"cut_type_options": "{\"__current_case__\": 1, \"cut_element\": \"-c\", \"list\": \"-3\"}", "complement": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "delimiter": "\"\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "7e29c13cc9bb330a", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_cut_tool/1.1.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_easyjoin_tool/1.1.1", "time_seconds": 52.85767698287964, "inputs": {"jointype": "-a 1 -a 2", "header": true, "infile2": {"src": "hda", "id": "33b9c2f8b93c0339"}, "infile1": {"src": "hda", "id": "e2d6e352dfdba15f"}, "column1": "1", "column2": "1"}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_easyjoin_tool/1.1.1", "update_time": "2019-06-25T21:54:05.610324", "inputs": {"infile2": {"src": "hda", "id": "33b9c2f8b93c0339", "uuid": "a6b0b796-8958-4110-b51b-9629db0ef022"}, "infile1": {"src": "hda", "id": "e2d6e352dfdba15f", "uuid": "9c4903f6-84a4-491b-a7b9-01ce57f076d4"}}, "outputs": {"output": {"src": "hda", "id": "9e70e676a4c9eab7", "uuid": "3bfd4951-4498-4839-8b88-4ec265d67008"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:53:47.426705", "stderr": "", "model_class": "Job", "params": {"ignore_case": "\"false\"", "empty_string_filler": "\"0\"", "dbkey": "\"?\"", "jointype": "\"-a 1 -a 2\"", "header": "\"true\"", "column1": "\"1\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "column2": "\"1\""}, "tool_stdout": "", "job_messages": [], "id": "eb933fb77896e333", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_easyjoin_tool/1.1.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_find_and_replace/1.1.2", "time_seconds": 53.21718788146973, "inputs": {"caseinsensitive": false, "find_pattern": "^chr", "searchwhere|searchwhere_select": "column", "is_regex": true, "searchwhere|column": "3", "replace_pattern": "", "infile": {"src": "hda", "id": "efcc713d72664f53"}, "wholewords": false}, "tool_version": "1.1.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_find_and_replace/1.1.2", "update_time": "2019-06-25T21:51:21.398288", "inputs": {"infile": {"src": "hda", "id": "efcc713d72664f53", "uuid": "bd24063d-cb0b-4321-a13b-1563e9373612"}}, "outputs": {"outfile": {"src": "hda", "id": "0e22295b922e7124", "uuid": "96c26044-92a8-4ce5-b8ce-e18f987ae14a"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:51:05.890240", "stderr": "", "model_class": "Job", "params": {"caseinsensitive": "\"false\"", "searchwhere": "{\"__current_case__\": 1, \"column\": \"3\", \"searchwhere_select\": \"column\"}", "find_pattern": "\"^chr\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "global": "\"false\"", "dbkey": "\"?\"", "is_regex": "\"true\"", "skip_first_line": "\"false\"", "replace_pattern": "\"\"", "wholewords": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "4fb394e263986dee", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_find_and_replace/1.1.2-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_grep_tool/1.1.1", "time_seconds": 53.47557497024536, "inputs": {"lines_before": "0", "regex_type": "-E", "color": "NOCOLOR", "invert": "", "case_sensitive": "", "url_paste": "[^ ]+", "lines_after": "0", "infile": {"src": "hda", "id": "3565d23b079acf90"}}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_grep_tool/1.1.1", "update_time": "2019-06-25T21:54:54.193463", "inputs": {"infile": {"src": "hda", "id": "3565d23b079acf90", "uuid": "b606b346-4a4b-4f75-b5f7-40079341b27d"}}, "outputs": {"output": {"src": "hda", "id": "a7b66380ae498bb6", "uuid": "d1ee721f-7699-4857-bb06-7ee342685cd6"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:54:39.200117", "stderr": "", "model_class": "Job", "params": {"lines_before": "\"0\"", "regex_type": "\"-E\"", "color": "\"NOCOLOR\"", "invert": "\"\"", "dbkey": "\"?\"", "case_sensitive": "\"\"", "url_paste": "\"[^ ]+\"", "lines_after": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "76437c74cad2260c", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_grep_tool/1.1.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_grep_tool/1.1.1", "time_seconds": 53.96023488044739, "inputs": {"lines_before": "0", "regex_type": "-G", "color": "NOCOLOR", "invert": "", "case_sensitive": "", "url_paste": "[^ ]+", "lines_after": "0", "infile": {"src": "hda", "id": "ed1899686148b08f"}}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_grep_tool/1.1.1", "update_time": "2019-06-25T21:55:24.085718", "inputs": {"infile": {"src": "hda", "id": "ed1899686148b08f", "uuid": "02889588-56e6-4b6c-82f7-eebf36eeb83f"}}, "outputs": {"output": {"src": "hda", "id": "62e1189c4fb4938e", "uuid": "fe580c92-67ca-4c03-be54-0dc6cfd5d667"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 1, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:55:06.028008", "stderr": "", "model_class": "Job", "params": {"lines_before": "\"0\"", "regex_type": "\"-G\"", "color": "\"NOCOLOR\"", "invert": "\"\"", "dbkey": "\"?\"", "case_sensitive": "\"\"", "url_paste": "\"[^ ]+\"", "lines_after": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "40f3350546bc2dc8", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_grep_tool/1.1.1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_column/1.1.3", "time_seconds": 54.19516706466675, "inputs": {"replacements_0|find_pattern": ".+_(R.)", "infile": {"src": "hda", "id": "2b21b562b9e70218"}, "replacements_0|column": "4", "replacements_0|replace_pattern": "\\\\1"}, "tool_version": "1.1.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_column/1.1.3", "update_time": "2019-06-25T21:55:27.948323", "inputs": {"infile": {"src": "hda", "id": "2b21b562b9e70218", "uuid": "2fceca9d-bfb7-40ec-9f60-cb8c939df330"}}, "outputs": {"outfile": {"src": "hda", "id": "23c05965c6fb61da", "uuid": "84b2c5e1-239a-46ea-8a79-2f73828d61bd"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:55:13.714118", "stderr": "", "model_class": "Job", "params": {"replacements": "[{\"__index__\": 0, \"column\": \"4\", \"find_pattern\": \".+_(R.)\", \"replace_pattern\": \"\\\\\\\\1\"}]", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "ca826f8c84cbc647", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_column/1.1.3-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_column/1.1.3", "time_seconds": 47.528639793395996, "inputs": {"infile": {"src": "hda", "id": "2b21b562b9e70218"}, "replacements_0|find_pattern": "[a-z]{2}([a-z])", "replacements_1|find_pattern": ".+_(R.)", "replacements_1|replace_pattern": "\\\\1", "replacements_0|column": "1", "replacements_1|column": "4", "replacements_0|replace_pattern": "\\\\1"}, "tool_version": "1.1.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_column/1.1.3", "update_time": "2019-06-25T21:55:33.650128", "inputs": {"infile": {"src": "hda", "id": "2b21b562b9e70218", "uuid": "2fceca9d-bfb7-40ec-9f60-cb8c939df330"}}, "outputs": {"outfile": {"src": "hda", "id": "18923225f0b6892a", "uuid": "974be8b3-9c5a-44d7-adc7-b39cf59e1840"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:55:20.365127", "stderr": "", "model_class": "Job", "params": {"replacements": "[{\"__index__\": 0, \"column\": \"1\", \"find_pattern\": \"[a-z]{2}([a-z])\", \"replace_pattern\": \"\\\\\\\\1\"}, {\"__index__\": 1, \"column\": \"4\", \"find_pattern\": \".+_(R.)\", \"replace_pattern\": \"\\\\\\\\1\"}]", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "cdec42a66fc70390", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_column/1.1.3-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_line/1.1.2", "time_seconds": 46.281243085861206, "inputs": {"replacements_0|find_pattern": "CTC.", "infile": {"src": "hda", "id": "30ee640f6bab6109"}, "replacements_0|replace_pattern": "FOOBAR"}, "tool_version": "1.1.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_line/1.1.2", "update_time": "2019-06-25T21:51:38.461760", "inputs": {"infile": {"src": "hda", "id": "30ee640f6bab6109", "uuid": "6cecdeca-79d6-4eb1-a8f4-5a2446785db5"}}, "outputs": {"outfile": {"src": "hda", "id": "6199d42643fc08db", "uuid": "dda8c11f-78c1-4b35-9348-4c2ef1b017f9"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:51:25.854298", "stderr": "", "model_class": "Job", "params": {"replacements": "[{\"__index__\": 0, \"find_pattern\": \"CTC.\", \"replace_pattern\": \"FOOBAR\"}]", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "f153dde14556d8e4", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_line/1.1.2-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_line/1.1.2", "time_seconds": 53.20824193954468, "inputs": {"replacements_1|find_pattern": "chr", "replacements_1|replace_pattern": "domain", "replacements_0|find_pattern": "CTC.", "infile": {"src": "hda", "id": "30ee640f6bab6109"}, "replacements_0|replace_pattern": "FOOBAR"}, "tool_version": "1.1.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_line/1.1.2", "update_time": "2019-06-25T21:51:39.093662", "inputs": {"infile": {"src": "hda", "id": "30ee640f6bab6109", "uuid": "6cecdeca-79d6-4eb1-a8f4-5a2446785db5"}}, "outputs": {"outfile": {"src": "hda", "id": "3a85357ec0c7089d", "uuid": "3e7c4cec-9ac5-4341-9c8e-b776890338d9"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:51:25.618000", "stderr": "", "model_class": "Job", "params": {"replacements": "[{\"__index__\": 0, \"find_pattern\": \"CTC.\", \"replace_pattern\": \"FOOBAR\"}, {\"__index__\": 1, \"find_pattern\": \"chr\", \"replace_pattern\": \"domain\"}]", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "c7bfd5664d8fda12", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_line/1.1.2-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sed_tool/1.1.1", "time_seconds": 53.194514989852905, "inputs": {"code": "1d ; s/foo/bar/", "infile": {"src": "hda", "id": "4f5ec3cc8af948a6"}}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sed_tool/1.1.1", "update_time": "2019-06-25T21:51:33.176445", "inputs": {"infile": {"src": "hda", "id": "4f5ec3cc8af948a6", "uuid": "b86150d0-b0a0-4eaf-85e4-a30e790d1c6a"}}, "outputs": {"output": {"src": "hda", "id": "3f66ccbb395de19d", "uuid": "3bedf840-a402-471a-9c5d-34641827954d"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:51:18.898629", "stderr": "", "model_class": "Job", "params": {"adv_opts": "{\"__current_case__\": 0, \"adv_opts_selector\": \"basic\"}", "code": "\"1d ; s/foo/bar/\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "55c74102cfad8440", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sed_tool/1.1.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sed_tool/1.1.1", "time_seconds": 46.662776947021484, "inputs": {"adv_opts|silent": "-n", "adv_opts|adv_opts_selector": "advanced", "code": "/foo/ { s/foo/baz/g ; p }", "infile": {"src": "hda", "id": "4f5ec3cc8af948a6"}}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sed_tool/1.1.1", "update_time": "2019-06-25T21:51:32.602146", "inputs": {"infile": {"src": "hda", "id": "4f5ec3cc8af948a6", "uuid": "b86150d0-b0a0-4eaf-85e4-a30e790d1c6a"}}, "outputs": {"output": {"src": "hda", "id": "e022e489b97a86e5", "uuid": "04bf8040-8f05-4a6c-9310-6ae3a082e80e"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:51:19.171488", "stderr": "", "model_class": "Job", "params": {"adv_opts": "{\"__current_case__\": 1, \"adv_opts_selector\": \"advanced\", \"silent\": \"-n\"}", "code": "\"/foo/ { s/foo/baz/g ; p }\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "159ef7dac459c9a9", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sed_tool/1.1.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sort_header_tool/1.1.1", "time_seconds": 52.42157196998596, "inputs": {"sortkeys_0|column": "5", "sortkeys_0|order": "", "infile": {"src": "hda", "id": "e678ca2b0f8d4fa4"}, "sortkeys_0|style": "g"}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sort_header_tool/1.1.1", "update_time": "2019-06-25T21:54:33.282643", "inputs": {"infile": {"src": "hda", "id": "e678ca2b0f8d4fa4", "uuid": "a36c3ef0-61af-483d-ba5e-8a67e04c1319"}}, "outputs": {"outfile": {"src": "hda", "id": "8c6c11ebfacb9454", "uuid": "7dd69be2-3f99-4393-a8b1-06ea0d125017"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:54:18.354328", "stderr": "", "model_class": "Job", "params": {"sortkeys": "[{\"__index__\": 0, \"column\": \"5\", \"order\": \"\", \"style\": \"g\"}]", "ignore_case": "\"false\"", "dbkey": "\"?\"", "header": "\"0\"", "unique": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "ae0b205801a733bd", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sort_header_tool/1.1.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sort_rows/1.1.0", "time_seconds": 46.22261095046997, "inputs": {"infile": {"src": "hda", "id": "dd66dc6a60d711b9"}}, "tool_version": "1.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sort_rows/1.1.0", "update_time": "2019-06-25T21:53:58.922793", "inputs": {"infile": {"src": "hda", "id": "dd66dc6a60d711b9", "uuid": "54b73759-1960-4612-9cf6-f273bff64242"}}, "outputs": {"outfile": {"src": "hda", "id": "2f78fbbab7bcafa2", "uuid": "65fc3a4a-a81c-4de4-80f3-0dfe3fec41bd"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:53:47.426795", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "fb9cec0e418f27d9", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sort_rows/1.1.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/1.1.0", "time_seconds": 53.28161406517029, "inputs": {"token_set_0|line": "freedom"}, "tool_version": "1.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/1.1.0", "update_time": "2019-06-25T21:52:37.907724", "inputs": {}, "outputs": {"outfile": {"src": "hda", "id": "8f3ec0c8b0e18946", "uuid": "e78fbe48-24a4-4b48-88cc-b8cdd4afe40f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:52:23.873504", "stderr": "", "model_class": "Job", "params": {"token_set": "[{\"__index__\": 0, \"line\": \"freedom\", \"repeat_select\": {\"__current_case__\": 0, \"repeat_select_opts\": \"user\", \"times\": \"10\"}}]", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "b83c877383ed07e0", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/1.1.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/1.1.0", "time_seconds": 53.492631912231445, "inputs": {"token_set_1|line": "war is over", "token_set_0|line": "freedom"}, "tool_version": "1.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/1.1.0", "update_time": "2019-06-25T21:52:40.076837", "inputs": {}, "outputs": {"outfile": {"src": "hda", "id": "b99748c811dd93af", "uuid": "01b4c63f-c722-4aa3-a346-f8ecd03066e9"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:52:25.437254", "stderr": "", "model_class": "Job", "params": {"token_set": "[{\"__index__\": 0, \"line\": \"freedom\", \"repeat_select\": {\"__current_case__\": 0, \"repeat_select_opts\": \"user\", \"times\": \"10\"}}, {\"__index__\": 1, \"line\": \"war is over\", \"repeat_select\": {\"__current_case__\": 0, \"repeat_select_opts\": \"user\", \"times\": \"10\"}}]", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "13df6cd0c2bf9a62", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_text_file_with_recurring_lines/1.1.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_unfold_column_tool/1.1.1", "time_seconds": 65.10031914710999, "inputs": {"column": "3", "delimiter": " ", "infile": {"src": "hda", "id": "ceb28a513464171d"}}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_unfold_column_tool/1.1.1", "update_time": "2019-06-25T21:51:27.837957", "inputs": {"infile": {"src": "hda", "id": "ceb28a513464171d", "uuid": "ea445d10-4e1f-4552-8fe1-50964a8508fe"}}, "outputs": {"outfile": {"src": "hda", "id": "8aecb918265535bf", "uuid": "69a49e05-cff6-4910-b90b-6649e5fc8e99"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:51:12.566051", "stderr": "", "model_class": "Job", "params": {"column": "\"3\"", "delimiter": "\" \"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "2ecb93f6729bb36b", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_unfold_column_tool/1.1.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_uniq_tool/1.1.1", "time_seconds": 53.42833590507507, "inputs": {"grouping|count": true, "grouping|grouping_select": "no", "infile": {"src": "hda", "id": "91dd2f9f960821a7"}, "ignorecase": true, "grouping|uniqueonly": true}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_uniq_tool/1.1.1", "update_time": "2019-06-25T21:51:47.302032", "inputs": {"infile": {"src": "hda", "id": "91dd2f9f960821a7", "uuid": "5a3a0355-f3c9-4fab-a214-fc727ec898cc"}}, "outputs": {"outfile": {"src": "hda", "id": "c3ca32ea439cd7ca", "uuid": "da2662d2-931d-4400-a9af-783c716a0934"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:51:31.776197", "stderr": "", "model_class": "Job", "params": {"skipfields": "\"0\"", "ignorecase": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "grouping": "{\"__current_case__\": 0, \"count\": \"true\", \"grouping_select\": \"no\", \"repeated\": \"false\", \"uniqueonly\": \"true\"}"}, "tool_stdout": "", "job_messages": [], "id": "00ca4702ff00cd70", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_uniq_tool/1.1.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_uniq_tool/1.1.1", "time_seconds": 54.96781516075134, "inputs": {"grouping|group": "separate", "grouping|grouping_select": "yes", "infile": {"src": "hda", "id": "4f3d9df92e3a5bbb"}, "ignorecase": true}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_uniq_tool/1.1.1", "update_time": "2019-06-25T21:52:30.367919", "inputs": {"infile": {"src": "hda", "id": "4f3d9df92e3a5bbb", "uuid": "02f051f2-2d8e-4116-88e2-65760c13997c"}}, "outputs": {"outfile": {"src": "hda", "id": "54f334cfa74c5744", "uuid": "499271f8-92a9-4338-b6ca-9cef29ae7468"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:52:12.474707", "stderr": "", "model_class": "Job", "params": {"skipfields": "\"0\"", "ignorecase": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "grouping": "{\"__current_case__\": 1, \"group\": \"separate\", \"grouping_select\": \"yes\"}"}, "tool_stdout": "", "job_messages": [], "id": "2c4fd982e2f22098", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_uniq_tool/1.1.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "time_seconds": 41.6209511756897, "inputs": {"params|report": true, "params|settingsType": "custom", "singlePaired|input_singles": {"src": "hda", "id": "38d76e52fa53d570"}, "singlePaired|sPaired": "single"}, "tool_version": "0.4.3.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "update_time": "2019-06-25T23:45:35.229522", "inputs": {"input_singles": {"src": "hda", "id": "38d76e52fa53d570", "uuid": "22aacb47-e816-4ec9-a6f9-7d86eeefdc74"}}, "outputs": {"report_file": {"src": "hda", "id": "5826968629facade", "uuid": "9b81a148-edbe-43fc-aa3b-c9b28fe8dd95"}, "trimmed_reads_single": {"src": "hda", "id": "ce704ea4f8696dca", "uuid": "0b788392-dd1d-4691-b6ce-005934228ee4"}}, "history_id": "f840675b8d7f5485", "stdout": "1.16\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nIllumina\t0\tAGATCGGAAGAGC\t2\t0.00\nNextera\t0\tCTGTCTCTTATA\t2\t0.00\nsmallRNA\t0\tTGGAATTCTCGG\t2\t0.00\nUnable to auto-detect most prominent adapter from the first specified file (count Illumina: 0, count Nextera: 0)\nDefaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).\n\nWriting report to './input_1.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq\nTrimming mode: single-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length before a sequence gets removed: 20 bp\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (2725 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         1 (50.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:           188 bp\nQuality-trimmed:                      20 bp (10.6%)\nTotal written (filtered):            167 bp (88.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t1\t0.5\t0\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq\n=============================================\n2 sequences processed in total\nSequences removed because they became shorter than the length cutoff of 20 bp:\t0 (0.0%)\n\n", "state": "ok", "create_time": "2019-06-25T23:45:15.641911", "stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nIllumina\t0\tAGATCGGAAGAGC\t2\t0.00\nNextera\t0\tCTGTCTCTTATA\t2\t0.00\nsmallRNA\t0\tTGGAATTCTCGG\t2\t0.00\nUnable to auto-detect most prominent adapter from the first specified file (count Illumina: 0, count Nextera: 0)\nDefaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).\n\nWriting report to './input_1.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq\nTrimming mode: single-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length before a sequence gets removed: 20 bp\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (2725 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         1 (50.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:           188 bp\nQuality-trimmed:                      20 bp (10.6%)\nTotal written (filtered):            167 bp (88.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t1\t0.5\t0\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq\n=============================================\n2 sequences processed in total\nSequences removed because they became shorter than the length cutoff of 20 bp:\t0 (0.0%)\n\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "params": "{\"__current_case__\": 1, \"clip_R1\": \"\", \"clip_R2\": \"\", \"error_rate\": \"0.1\", \"min_length\": \"20\", \"quality\": \"20\", \"report\": \"true\", \"retain_unpaired\": {\"__current_case__\": 0, \"retain_unpaired_select\": \"no_output\"}, \"settingsType\": \"custom\", \"stringency\": \"1\"}", "rrbs": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "dbkey": "\"?\"", "singlePaired": "{\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 1068756, \"src\": \"hda\"}]}, \"sPaired\": \"single\", \"three_prime_clip_R1\": \"\", \"trimming\": {\"__current_case__\": 0, \"trimming_select\": \"\"}}"}, "tool_stdout": "1.16\n", "job_messages": [], "id": "a7ad4784e107e345", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "time_seconds": 40.87476110458374, "inputs": {"params|report": true, "params|settingsType": "custom", "singlePaired|input_singles": {"src": "hda", "id": "a37bbe2617175607"}, "singlePaired|sPaired": "single"}, "tool_version": "0.4.3.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "update_time": "2019-06-25T23:45:48.495706", "inputs": {"input_singles": {"src": "hda", "id": "a37bbe2617175607", "uuid": "5810cdb3-7803-4044-b6c3-0c23cfa523ba"}}, "outputs": {"report_file": {"src": "hda", "id": "10e552aeb4bd3f68", "uuid": "d4e4220d-51b9-48d0-9dd8-8762d809b756"}, "trimmed_reads_single": {"src": "hda", "id": "293da9f2d08032f1", "uuid": "9264a224-07bb-4b2c-82ee-6947a5db9e96"}}, "history_id": "f840675b8d7f5485", "stdout": "1.16\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nNextera\t0\tCTGTCTCTTATA\t2\t0.00\nIllumina\t0\tAGATCGGAAGAGC\t2\t0.00\nsmallRNA\t0\tTGGAATTCTCGG\t2\t0.00\nUnable to auto-detect most prominent adapter from the first specified file (count Nextera: 0, count Illumina: 0)\nDefaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).\n\nWriting report to './input_1.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq.gz\nTrimming mode: single-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length before a sequence gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (2814 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         1 (50.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:           188 bp\nQuality-trimmed:                      20 bp (10.6%)\nTotal written (filtered):            167 bp (88.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t1\t0.5\t0\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq.gz\n=============================================\n2 sequences processed in total\nSequences removed because they became shorter than the length cutoff of 20 bp:\t0 (0.0%)\n\n", "state": "ok", "create_time": "2019-06-25T23:45:29.004298", "stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nNextera\t0\tCTGTCTCTTATA\t2\t0.00\nIllumina\t0\tAGATCGGAAGAGC\t2\t0.00\nsmallRNA\t0\tTGGAATTCTCGG\t2\t0.00\nUnable to auto-detect most prominent adapter from the first specified file (count Nextera: 0, count Illumina: 0)\nDefaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).\n\nWriting report to './input_1.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq.gz\nTrimming mode: single-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length before a sequence gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (2814 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         1 (50.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:           188 bp\nQuality-trimmed:                      20 bp (10.6%)\nTotal written (filtered):            167 bp (88.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t1\t0.5\t0\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq.gz\n=============================================\n2 sequences processed in total\nSequences removed because they became shorter than the length cutoff of 20 bp:\t0 (0.0%)\n\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "params": "{\"__current_case__\": 1, \"clip_R1\": \"\", \"clip_R2\": \"\", \"error_rate\": \"0.1\", \"min_length\": \"20\", \"quality\": \"20\", \"report\": \"true\", \"retain_unpaired\": {\"__current_case__\": 0, \"retain_unpaired_select\": \"no_output\"}, \"settingsType\": \"custom\", \"stringency\": \"1\"}", "rrbs": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "dbkey": "\"?\"", "singlePaired": "{\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 1068760, \"src\": \"hda\"}]}, \"sPaired\": \"single\", \"three_prime_clip_R1\": \"\", \"trimming\": {\"__current_case__\": 0, \"trimming_select\": \"\"}}"}, "tool_stdout": "1.16\n", "job_messages": [], "id": "17b3613e902762a4", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "time_seconds": 46.015005111694336, "inputs": {"singlePaired|trimming|trimming_select": "--illumina", "singlePaired|input_singles": {"src": "hda", "id": "a26294b89e60a007"}, "singlePaired|sPaired": "single"}, "tool_version": "0.4.3.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "update_time": "2019-06-25T23:46:39.613925", "inputs": {"input_singles": {"src": "hda", "id": "a26294b89e60a007", "uuid": "9ff23041-c3ce-410b-bb23-8e3ebce413b0"}}, "outputs": {"trimmed_reads_single": {"src": "hda", "id": "6a7715d57272d24c", "uuid": "288d3272-24f4-44c3-b8ce-a63f0a14d1d3"}}, "history_id": "f840675b8d7f5485", "stdout": "1.16\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\nWriting report to './input_1.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq\nTrimming mode: single-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; user defined)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length before a sequence gets removed: 20 bp\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (4312 us/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         1 (50.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:           188 bp\nQuality-trimmed:                      20 bp (10.6%)\nTotal written (filtered):            167 bp (88.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t1\t0.5\t0\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq\n=============================================\n2 sequences processed in total\nSequences removed because they became shorter than the length cutoff of 20 bp:\t0 (0.0%)\n\n", "state": "ok", "create_time": "2019-06-25T23:46:10.232131", "stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\nWriting report to './input_1.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq\nTrimming mode: single-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; user defined)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length before a sequence gets removed: 20 bp\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (4312 us/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         1 (50.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:           188 bp\nQuality-trimmed:                      20 bp (10.6%)\nTotal written (filtered):            167 bp (88.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t1\t0.5\t0\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq\n=============================================\n2 sequences processed in total\nSequences removed because they became shorter than the length cutoff of 20 bp:\t0 (0.0%)\n\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "params": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "rrbs": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "dbkey": "\"?\"", "singlePaired": "{\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 1068771, \"src\": \"hda\"}]}, \"sPaired\": \"single\", \"three_prime_clip_R1\": \"\", \"trimming\": {\"__current_case__\": 1, \"trimming_select\": \"--illumina\"}}"}, "tool_stdout": "1.16\n", "job_messages": [], "id": "d741bfc475d2fb4a", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "time_seconds": 49.00069808959961, "inputs": {"singlePaired|trimming|trimming_select": "--illumina", "singlePaired|input_singles": {"src": "hda", "id": "b7da385fb4ca9bcb"}, "singlePaired|sPaired": "single"}, "tool_version": "0.4.3.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "update_time": "2019-06-25T23:46:53.491664", "inputs": {"input_singles": {"src": "hda", "id": "b7da385fb4ca9bcb", "uuid": "4787d836-38bd-4571-be5b-dca7f96d56da"}}, "outputs": {"trimmed_reads_single": {"src": "hda", "id": "779f652e36a37deb", "uuid": "7f7fbafc-5a21-4c9c-941a-8d57d00b4f86"}}, "history_id": "f840675b8d7f5485", "stdout": "1.16\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\nWriting report to './input_1.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq.gz\nTrimming mode: single-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; user defined)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length before a sequence gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (3747 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         1 (50.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:           188 bp\nQuality-trimmed:                      20 bp (10.6%)\nTotal written (filtered):            167 bp (88.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t1\t0.5\t0\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq.gz\n=============================================\n2 sequences processed in total\nSequences removed because they became shorter than the length cutoff of 20 bp:\t0 (0.0%)\n\n", "state": "ok", "create_time": "2019-06-25T23:46:22.172578", "stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\nWriting report to './input_1.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq.gz\nTrimming mode: single-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; user defined)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length before a sequence gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (3747 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         1 (50.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:           188 bp\nQuality-trimmed:                      20 bp (10.6%)\nTotal written (filtered):            167 bp (88.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t1\t0.5\t0\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq.gz\n=============================================\n2 sequences processed in total\nSequences removed because they became shorter than the length cutoff of 20 bp:\t0 (0.0%)\n\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "params": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "rrbs": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "dbkey": "\"?\"", "singlePaired": "{\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 1068773, \"src\": \"hda\"}]}, \"sPaired\": \"single\", \"three_prime_clip_R1\": \"\", \"trimming\": {\"__current_case__\": 1, \"trimming_select\": \"--illumina\"}}"}, "tool_stdout": "1.16\n", "job_messages": [], "id": "d801425a283c5b14", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "time_seconds": 32.1012601852417, "inputs": {"singlePaired|input_singles": {"src": "hda", "id": "a26294b89e60a007"}, "singlePaired|sPaired": "single"}, "tool_version": "0.4.3.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "update_time": "2019-06-25T23:46:43.449526", "inputs": {"input_singles": {"src": "hda", "id": "a26294b89e60a007", "uuid": "9ff23041-c3ce-410b-bb23-8e3ebce413b0"}}, "outputs": {"trimmed_reads_single": {"src": "hda", "id": "2f15d00e89adb0d8", "uuid": "f08bab75-d14d-48a9-b311-c4135ddb1c6f"}}, "history_id": "f840675b8d7f5485", "stdout": "1.16\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nsmallRNA\t0\tTGGAATTCTCGG\t2\t0.00\nIllumina\t0\tAGATCGGAAGAGC\t2\t0.00\nNextera\t0\tCTGTCTCTTATA\t2\t0.00\nUnable to auto-detect most prominent adapter from the first specified file (count smallRNA: 0, count Illumina: 0)\nDefaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).\n\nWriting report to './input_1.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq\nTrimming mode: single-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length before a sequence gets removed: 20 bp\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (2875 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         1 (50.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:           188 bp\nQuality-trimmed:                      20 bp (10.6%)\nTotal written (filtered):            167 bp (88.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t1\t0.5\t0\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq\n=============================================\n2 sequences processed in total\nSequences removed because they became shorter than the length cutoff of 20 bp:\t0 (0.0%)\n\n", "state": "ok", "create_time": "2019-06-25T23:46:25.015624", "stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nsmallRNA\t0\tTGGAATTCTCGG\t2\t0.00\nIllumina\t0\tAGATCGGAAGAGC\t2\t0.00\nNextera\t0\tCTGTCTCTTATA\t2\t0.00\nUnable to auto-detect most prominent adapter from the first specified file (count smallRNA: 0, count Illumina: 0)\nDefaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).\n\nWriting report to './input_1.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq\nTrimming mode: single-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length before a sequence gets removed: 20 bp\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (2875 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         1 (50.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:           188 bp\nQuality-trimmed:                      20 bp (10.6%)\nTotal written (filtered):            167 bp (88.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t1\t0.5\t0\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq\n=============================================\n2 sequences processed in total\nSequences removed because they became shorter than the length cutoff of 20 bp:\t0 (0.0%)\n\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "params": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "rrbs": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "dbkey": "\"?\"", "singlePaired": "{\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 1068771, \"src\": \"hda\"}]}, \"sPaired\": \"single\", \"three_prime_clip_R1\": \"\", \"trimming\": {\"__current_case__\": 0, \"trimming_select\": \"\"}}"}, "tool_stdout": "1.16\n", "job_messages": [], "id": "99a995a836fadaae", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "time_seconds": 48.72409009933472, "inputs": {"singlePaired|input_singles": {"src": "hda", "id": "b7da385fb4ca9bcb"}, "singlePaired|sPaired": "single"}, "tool_version": "0.4.3.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "update_time": "2019-06-25T23:46:57.945918", "inputs": {"input_singles": {"src": "hda", "id": "b7da385fb4ca9bcb", "uuid": "4787d836-38bd-4571-be5b-dca7f96d56da"}}, "outputs": {"trimmed_reads_single": {"src": "hda", "id": "9b587fedaa09fe6d", "uuid": "dbb301d7-664d-47e0-bf55-b2e3e58bca18"}}, "history_id": "f840675b8d7f5485", "stdout": "1.16\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nsmallRNA\t0\tTGGAATTCTCGG\t2\t0.00\nIllumina\t0\tAGATCGGAAGAGC\t2\t0.00\nNextera\t0\tCTGTCTCTTATA\t2\t0.00\nUnable to auto-detect most prominent adapter from the first specified file (count smallRNA: 0, count Illumina: 0)\nDefaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).\n\nWriting report to './input_1.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq.gz\nTrimming mode: single-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length before a sequence gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (5133 us/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         1 (50.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:           188 bp\nQuality-trimmed:                      20 bp (10.6%)\nTotal written (filtered):            167 bp (88.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t1\t0.5\t0\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq.gz\n=============================================\n2 sequences processed in total\nSequences removed because they became shorter than the length cutoff of 20 bp:\t0 (0.0%)\n\n", "state": "ok", "create_time": "2019-06-25T23:46:37.113847", "stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nsmallRNA\t0\tTGGAATTCTCGG\t2\t0.00\nIllumina\t0\tAGATCGGAAGAGC\t2\t0.00\nNextera\t0\tCTGTCTCTTATA\t2\t0.00\nUnable to auto-detect most prominent adapter from the first specified file (count smallRNA: 0, count Illumina: 0)\nDefaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).\n\nWriting report to './input_1.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq.gz\nTrimming mode: single-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length before a sequence gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (5133 us/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         1 (50.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:           188 bp\nQuality-trimmed:                      20 bp (10.6%)\nTotal written (filtered):            167 bp (88.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t1\t0.5\t0\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq.gz\n=============================================\n2 sequences processed in total\nSequences removed because they became shorter than the length cutoff of 20 bp:\t0 (0.0%)\n\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "params": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "rrbs": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "dbkey": "\"?\"", "singlePaired": "{\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 1068773, \"src\": \"hda\"}]}, \"sPaired\": \"single\", \"three_prime_clip_R1\": \"\", \"trimming\": {\"__current_case__\": 0, \"trimming_select\": \"\"}}"}, "tool_stdout": "1.16\n", "job_messages": [], "id": "a8e903e1c5f28ce8", "job_stdout": ""}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "time_seconds": 91.49848318099976, "inputs": {"params|report": true, "singlePaired|input_mate1": {"src": "hda", "id": "f6c09c53c7d991c9"}, "singlePaired|sPaired": "paired", "params|settingsType": "custom", "singlePaired|input_mate2": {"src": "hda", "id": "86a177d83c542818"}}, "tool_version": "0.4.3.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "update_time": "2019-06-25T23:47:15.442810", "inputs": {"input_mate2": {"src": "hda", "id": "86a177d83c542818", "uuid": "aaa95cd7-f657-49e3-ad91-e65fa3beaa7a"}, "input_mate1": {"src": "hda", "id": "f6c09c53c7d991c9", "uuid": "ff79c5c6-06bb-417e-8762-44284d8caa02"}}, "outputs": {"report_file": {"src": "hda", "id": "11b7856aa888ced2", "uuid": "278d55c1-ef3c-4022-ab1e-9e374d48be2b"}, "trimmed_reads_pair2": {"src": "hda", "id": "cf491711b0fd1e9c", "uuid": "06540f5e-3a04-4ac2-bfd3-22656b2be551"}, "trimmed_reads_pair1": {"src": "hda", "id": "0d102c8c9f74b82e", "uuid": "f329c4df-4931-41e1-b794-cf6abfae621e"}}, "history_id": "f840675b8d7f5485", "stdout": "1.16\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nNextera\t29\tCTGTCTCTTATA\t99\t29.29\nIllumina\t0\tAGATCGGAAGAGC\t99\t0.00\nsmallRNA\t0\tTGGAATTCTCGG\t99\t0.00\nUsing Nextera adapter for trimming (count: 29). Second best hit was Illumina (count: 0)\n\nWriting report to './input_1.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (115 us/read; 0.52 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                        52 (52.5%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     205 bp (0.8%)\nTotal written (filtered):         23,339 bp (93.9%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 9.6%\n  C: 38.5%\n  G: 23.1%\n  T: 28.8%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t11\t24.8\t0\t11\n2\t5\t6.2\t0\t5\n3\t3\t1.5\t0\t3\n4\t3\t0.4\t0\t3\n12\t1\t0.0\t1\t1\n13\t2\t0.0\t1\t2\n14\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t0 1\n20\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n24\t1\t0.0\t1\t1\n26\t2\t0.0\t1\t2\n31\t1\t0.0\t1\t1\n33\t1\t0.0\t1\t1\n41\t2\t0.0\t1\t2\n49\t1\t0.0\t1\t1\n50\t1\t0.0\t1\t1\n54\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n58\t2\t0.0\t1\t2\n60\t1\t0.0\t1\t1\n67\t2\t0.0\t1\t2\n68\t1\t0.0\t1\t1\n69\t1\t0.0\t1\t1\n73\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n86\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq\n=============================================\n99 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nWriting report to './input_2.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_2.fastq\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\n\nWriting final adapter and quality trimmed output to input_2_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (137 us/read; 0.44 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                     100\nReads with adapters:                        59 (59.0%)\nReads written (passing filters):           100 (100.0%)\n\nTotal basepairs processed:        25,100 bp\nQuality-trimmed:                     746 bp (3.0%)\nTotal written (filtered):         23,276 bp (92.7%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 59 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 11.9%\n  C: 39.0%\n  G: 8.5%\n  T: 40.7%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t16\t25.0\t0\t16\n2\t7\t6.2\t0\t7\n3\t1\t1.6\t0\t1\n4\t2\t0.4\t0\t2\n6\t2\t0.0\t0\t2\n9\t2\t0.0\t0\t2\n10\t1\t0.0\t1\t1\n13\t1\t0.0\t1\t1\n14\t2\t0.0\t1\t2\n15\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t1\n19\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n25\t1\t0.0\t1\t1\n30\t1\t0.0\t1\t1\n32\t2\t0.0\t1\t2\n34\t1\t0.0\t1\t1\n36\t2\t0.0\t1\t2\n38\t1\t0.0\t1\t1\n40\t1\t0.0\t1\t1\n41\t1\t0.0\t1\t1\n42\t1\t0.0\t1\t1\n43\t1\t0.0\t1\t1\n49\t1\t0.0\t1\t1\n51\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n57\t1\t0.0\t1\t1\n60\t1\t0.0\t1\t1\n67\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_2.fastq\n=============================================\n100 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nValidate paired-end files input_1_trimmed.fq and input_2_trimmed.fq\nfile_1: input_1_trimmed.fq, file_2: input_2_trimmed.fq\n\n\n>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq and input_2_trimmed.fq <<<<<\nWriting validated paired-end read 1 reads to input_1_val_1.fq\nWriting validated paired-end read 2 reads to input_2_val_2.fq\n\nTotal number of sequences analysed: 99\n\nNumber of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)\n\nDeleting both intermediate output files input_1_trimmed.fq and input_2_trimmed.fq\n\n====================================================================================================\n\n", "state": "ok", "create_time": "2019-06-25T23:46:38.385016", "stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nNextera\t29\tCTGTCTCTTATA\t99\t29.29\nIllumina\t0\tAGATCGGAAGAGC\t99\t0.00\nsmallRNA\t0\tTGGAATTCTCGG\t99\t0.00\nUsing Nextera adapter for trimming (count: 29). Second best hit was Illumina (count: 0)\n\nWriting report to './input_1.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (115 us/read; 0.52 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                        52 (52.5%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     205 bp (0.8%)\nTotal written (filtered):         23,339 bp (93.9%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 9.6%\n  C: 38.5%\n  G: 23.1%\n  T: 28.8%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t11\t24.8\t0\t11\n2\t5\t6.2\t0\t5\n3\t3\t1.5\t0\t3\n4\t3\t0.4\t0\t3\n12\t1\t0.0\t1\t1\n13\t2\t0.0\t1\t2\n14\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t0 1\n20\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n24\t1\t0.0\t1\t1\n26\t2\t0.0\t1\t2\n31\t1\t0.0\t1\t1\n33\t1\t0.0\t1\t1\n41\t2\t0.0\t1\t2\n49\t1\t0.0\t1\t1\n50\t1\t0.0\t1\t1\n54\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n58\t2\t0.0\t1\t2\n60\t1\t0.0\t1\t1\n67\t2\t0.0\t1\t2\n68\t1\t0.0\t1\t1\n69\t1\t0.0\t1\t1\n73\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n86\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq\n=============================================\n99 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nWriting report to './input_2.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_2.fastq\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\n\nWriting final adapter and quality trimmed output to input_2_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (137 us/read; 0.44 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                     100\nReads with adapters:                        59 (59.0%)\nReads written (passing filters):           100 (100.0%)\n\nTotal basepairs processed:        25,100 bp\nQuality-trimmed:                     746 bp (3.0%)\nTotal written (filtered):         23,276 bp (92.7%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 59 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 11.9%\n  C: 39.0%\n  G: 8.5%\n  T: 40.7%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t16\t25.0\t0\t16\n2\t7\t6.2\t0\t7\n3\t1\t1.6\t0\t1\n4\t2\t0.4\t0\t2\n6\t2\t0.0\t0\t2\n9\t2\t0.0\t0\t2\n10\t1\t0.0\t1\t1\n13\t1\t0.0\t1\t1\n14\t2\t0.0\t1\t2\n15\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t1\n19\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n25\t1\t0.0\t1\t1\n30\t1\t0.0\t1\t1\n32\t2\t0.0\t1\t2\n34\t1\t0.0\t1\t1\n36\t2\t0.0\t1\t2\n38\t1\t0.0\t1\t1\n40\t1\t0.0\t1\t1\n41\t1\t0.0\t1\t1\n42\t1\t0.0\t1\t1\n43\t1\t0.0\t1\t1\n49\t1\t0.0\t1\t1\n51\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n57\t1\t0.0\t1\t1\n60\t1\t0.0\t1\t1\n67\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_2.fastq\n=============================================\n100 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nValidate paired-end files input_1_trimmed.fq and input_2_trimmed.fq\nfile_1: input_1_trimmed.fq, file_2: input_2_trimmed.fq\n\n\n>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq and input_2_trimmed.fq <<<<<\nWriting validated paired-end read 1 reads to input_1_val_1.fq\nWriting validated paired-end read 2 reads to input_2_val_2.fq\n\nTotal number of sequences analysed: 99\n\nNumber of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)\n\nDeleting both intermediate output files input_1_trimmed.fq and input_2_trimmed.fq\n\n====================================================================================================\n\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "params": "{\"__current_case__\": 1, \"clip_R1\": \"\", \"clip_R2\": \"\", \"error_rate\": \"0.1\", \"min_length\": \"20\", \"quality\": \"20\", \"report\": \"true\", \"retain_unpaired\": {\"__current_case__\": 0, \"retain_unpaired_select\": \"no_output\"}, \"settingsType\": \"custom\", \"stringency\": \"1\"}", "rrbs": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "dbkey": "\"?\"", "singlePaired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 1068780, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 1068781, \"src\": \"hda\"}]}, \"sPaired\": \"paired\", \"three_prime_clip_R1\": \"\", \"three_prime_clip_R2\": \"\", \"trim1\": \"false\", \"trimming\": {\"__current_case__\": 0, \"trimming_select\": \"\"}}"}, "tool_stdout": "1.16\n", "job_messages": [], "id": "95f9fe2ccda39aaa", "job_stdout": ""}, "test_index": 6}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1-6", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "time_seconds": 64.98368000984192, "inputs": {"params|report": true, "singlePaired|input_mate1": {"src": "hda", "id": "322f30b6769181f9"}, "singlePaired|sPaired": "paired", "params|settingsType": "custom", "singlePaired|input_mate2": {"src": "hda", "id": "4eb247ccc5e867d8"}}, "tool_version": "0.4.3.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "update_time": "2019-06-25T23:47:17.579722", "inputs": {"input_mate2": {"src": "hda", "id": "4eb247ccc5e867d8", "uuid": "991f3bba-f5ed-433e-a3b0-e15d401e2cc1"}, "input_mate1": {"src": "hda", "id": "322f30b6769181f9", "uuid": "1d4e8da7-aaf7-406d-9eaf-3c2aaba5a365"}}, "outputs": {"report_file": {"src": "hda", "id": "8fc6647b7eb19259", "uuid": "3b1fe6d4-c8f7-44db-9737-5ea0c20c7518"}, "trimmed_reads_pair2": {"src": "hda", "id": "beb8f6db0f9bb985", "uuid": "4987c6bf-27e9-4ba4-bc8b-8f6d3b88fa67"}, "trimmed_reads_pair1": {"src": "hda", "id": "05663f6821b66942", "uuid": "f0245567-25cf-472b-9cdf-72314ca4da63"}}, "history_id": "f840675b8d7f5485", "stdout": "1.16\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nNextera\t29\tCTGTCTCTTATA\t99\t29.29\nsmallRNA\t0\tTGGAATTCTCGG\t99\t0.00\nIllumina\t0\tAGATCGGAAGAGC\t99\t0.00\nUsing Nextera adapter for trimming (count: 29). Second best hit was smallRNA (count: 0)\n\nWriting report to './input_1.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq.gz\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (141 us/read; 0.42 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                        52 (52.5%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     205 bp (0.8%)\nTotal written (filtered):         23,339 bp (93.9%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 9.6%\n  C: 38.5%\n  G: 23.1%\n  T: 28.8%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t11\t24.8\t0\t11\n2\t5\t6.2\t0\t5\n3\t3\t1.5\t0\t3\n4\t3\t0.4\t0\t3\n12\t1\t0.0\t1\t1\n13\t2\t0.0\t1\t2\n14\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t0 1\n20\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n24\t1\t0.0\t1\t1\n26\t2\t0.0\t1\t2\n31\t1\t0.0\t1\t1\n33\t1\t0.0\t1\t1\n41\t2\t0.0\t1\t2\n49\t1\t0.0\t1\t1\n50\t1\t0.0\t1\t1\n54\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n58\t2\t0.0\t1\t2\n60\t1\t0.0\t1\t1\n67\t2\t0.0\t1\t2\n68\t1\t0.0\t1\t1\n69\t1\t0.0\t1\t1\n73\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n86\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq.gz\n=============================================\n99 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nWriting report to './input_2.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_2.fastq.gz\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_2_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.02 s (177 us/read; 0.34 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                     100\nReads with adapters:                        59 (59.0%)\nReads written (passing filters):           100 (100.0%)\n\nTotal basepairs processed:        25,100 bp\nQuality-trimmed:                     746 bp (3.0%)\nTotal written (filtered):         23,276 bp (92.7%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 59 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 11.9%\n  C: 39.0%\n  G: 8.5%\n  T: 40.7%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t16\t25.0\t0\t16\n2\t7\t6.2\t0\t7\n3\t1\t1.6\t0\t1\n4\t2\t0.4\t0\t2\n6\t2\t0.0\t0\t2\n9\t2\t0.0\t0\t2\n10\t1\t0.0\t1\t1\n13\t1\t0.0\t1\t1\n14\t2\t0.0\t1\t2\n15\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t1\n19\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n25\t1\t0.0\t1\t1\n30\t1\t0.0\t1\t1\n32\t2\t0.0\t1\t2\n34\t1\t0.0\t1\t1\n36\t2\t0.0\t1\t2\n38\t1\t0.0\t1\t1\n40\t1\t0.0\t1\t1\n41\t1\t0.0\t1\t1\n42\t1\t0.0\t1\t1\n43\t1\t0.0\t1\t1\n49\t1\t0.0\t1\t1\n51\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n57\t1\t0.0\t1\t1\n60\t1\t0.0\t1\t1\n67\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_2.fastq.gz\n=============================================\n100 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nValidate paired-end files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz\nfile_1: input_1_trimmed.fq.gz, file_2: input_2_trimmed.fq.gz\n\n\n>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq.gz and input_2_trimmed.fq.gz <<<<<\nWriting validated paired-end read 1 reads to input_1_val_1.fq.gz\nWriting validated paired-end read 2 reads to input_2_val_2.fq.gz\n\nTotal number of sequences analysed: 99\n\nNumber of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)\n\nDeleting both intermediate output files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz\n\n====================================================================================================\n\n", "state": "ok", "create_time": "2019-06-25T23:46:48.750590", "stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nNextera\t29\tCTGTCTCTTATA\t99\t29.29\nsmallRNA\t0\tTGGAATTCTCGG\t99\t0.00\nIllumina\t0\tAGATCGGAAGAGC\t99\t0.00\nUsing Nextera adapter for trimming (count: 29). Second best hit was smallRNA (count: 0)\n\nWriting report to './input_1.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq.gz\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (141 us/read; 0.42 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                        52 (52.5%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     205 bp (0.8%)\nTotal written (filtered):         23,339 bp (93.9%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 9.6%\n  C: 38.5%\n  G: 23.1%\n  T: 28.8%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t11\t24.8\t0\t11\n2\t5\t6.2\t0\t5\n3\t3\t1.5\t0\t3\n4\t3\t0.4\t0\t3\n12\t1\t0.0\t1\t1\n13\t2\t0.0\t1\t2\n14\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t0 1\n20\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n24\t1\t0.0\t1\t1\n26\t2\t0.0\t1\t2\n31\t1\t0.0\t1\t1\n33\t1\t0.0\t1\t1\n41\t2\t0.0\t1\t2\n49\t1\t0.0\t1\t1\n50\t1\t0.0\t1\t1\n54\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n58\t2\t0.0\t1\t2\n60\t1\t0.0\t1\t1\n67\t2\t0.0\t1\t2\n68\t1\t0.0\t1\t1\n69\t1\t0.0\t1\t1\n73\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n86\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq.gz\n=============================================\n99 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nWriting report to './input_2.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_2.fastq.gz\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_2_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.02 s (177 us/read; 0.34 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                     100\nReads with adapters:                        59 (59.0%)\nReads written (passing filters):           100 (100.0%)\n\nTotal basepairs processed:        25,100 bp\nQuality-trimmed:                     746 bp (3.0%)\nTotal written (filtered):         23,276 bp (92.7%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 59 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 11.9%\n  C: 39.0%\n  G: 8.5%\n  T: 40.7%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t16\t25.0\t0\t16\n2\t7\t6.2\t0\t7\n3\t1\t1.6\t0\t1\n4\t2\t0.4\t0\t2\n6\t2\t0.0\t0\t2\n9\t2\t0.0\t0\t2\n10\t1\t0.0\t1\t1\n13\t1\t0.0\t1\t1\n14\t2\t0.0\t1\t2\n15\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t1\n19\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n25\t1\t0.0\t1\t1\n30\t1\t0.0\t1\t1\n32\t2\t0.0\t1\t2\n34\t1\t0.0\t1\t1\n36\t2\t0.0\t1\t2\n38\t1\t0.0\t1\t1\n40\t1\t0.0\t1\t1\n41\t1\t0.0\t1\t1\n42\t1\t0.0\t1\t1\n43\t1\t0.0\t1\t1\n49\t1\t0.0\t1\t1\n51\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n57\t1\t0.0\t1\t1\n60\t1\t0.0\t1\t1\n67\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_2.fastq.gz\n=============================================\n100 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nValidate paired-end files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz\nfile_1: input_1_trimmed.fq.gz, file_2: input_2_trimmed.fq.gz\n\n\n>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq.gz and input_2_trimmed.fq.gz <<<<<\nWriting validated paired-end read 1 reads to input_1_val_1.fq.gz\nWriting validated paired-end read 2 reads to input_2_val_2.fq.gz\n\nTotal number of sequences analysed: 99\n\nNumber of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)\n\nDeleting both intermediate output files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz\n\n====================================================================================================\n\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "params": "{\"__current_case__\": 1, \"clip_R1\": \"\", \"clip_R2\": \"\", \"error_rate\": \"0.1\", \"min_length\": \"20\", \"quality\": \"20\", \"report\": \"true\", \"retain_unpaired\": {\"__current_case__\": 0, \"retain_unpaired_select\": \"no_output\"}, \"settingsType\": \"custom\", \"stringency\": \"1\"}", "rrbs": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "dbkey": "\"?\"", "singlePaired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 1068775, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 1068777, \"src\": \"hda\"}]}, \"sPaired\": \"paired\", \"three_prime_clip_R1\": \"\", \"three_prime_clip_R2\": \"\", \"trim1\": \"false\", \"trimming\": {\"__current_case__\": 0, \"trimming_select\": \"\"}}"}, "tool_stdout": "1.16\n", "job_messages": [], "id": "aa4a1b2e4a169172", "job_stdout": ""}, "test_index": 7}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1-7", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "time_seconds": 84.51752185821533, "inputs": {"params|report": true, "params|settingsType": "custom", "params|retain_unpaired|retain_unpaired_select": "retain_unpaired_output", "singlePaired|input_mate_pairs": {"src": "hdca", "id": "df3d036be4f57b31"}, "singlePaired|sPaired": "paired_collection"}, "tool_version": "0.4.3.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "update_time": "2019-06-25T23:47:26.467094", "inputs": {"input_mate_pairs2": {"src": "hda", "id": "86a177d83c542818", "uuid": "aaa95cd7-f657-49e3-ad91-e65fa3beaa7a"}, "input_mate_pairs1": {"src": "hda", "id": "f6c09c53c7d991c9", "uuid": "ff79c5c6-06bb-417e-8762-44284d8caa02"}}, "outputs": {"report_file": {"src": "hda", "id": "83e639ac93109b93", "uuid": "1890e25d-13e6-464a-bcb2-6df808322d07"}, "trimmed_reads_unpaired_collection|__part__|reverse": {"src": "hda", "id": "873c94c8cdb7ea26", "uuid": "29fa019f-1898-48c5-81c3-5f18f9102e3d"}, "trimmed_reads_paired_collection|__part__|reverse": {"src": "hda", "id": "d036286e59ed48d9", "uuid": "92f2f343-826b-4040-8843-71075f3fe7d9"}, "trimmed_reads_paired_collection|__part__|forward": {"src": "hda", "id": "4f641d085803abd0", "uuid": "03ee5354-478d-4802-8b72-ca96f1b471d3"}, "trimmed_reads_unpaired_collection|__part__|forward": {"src": "hda", "id": "a082d5abda282a5d", "uuid": "6924a5ea-10a4-4219-a6b0-a10c859d0f7e"}}, "history_id": "f840675b8d7f5485", "stdout": "1.16\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nNextera\t29\tCTGTCTCTTATA\t99\t29.29\nIllumina\t0\tAGATCGGAAGAGC\t99\t0.00\nsmallRNA\t0\tTGGAATTCTCGG\t99\t0.00\nUsing Nextera adapter for trimming (count: 29). Second best hit was Illumina (count: 0)\n\nWriting report to './input_1.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nLength cut-off for read 1: 35 bp (default)\nLength cut-off for read 2: 35 bb (default)\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (112 us/read; 0.54 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                        52 (52.5%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     205 bp (0.8%)\nTotal written (filtered):         23,339 bp (93.9%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 9.6%\n  C: 38.5%\n  G: 23.1%\n  T: 28.8%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t11\t24.8\t0\t11\n2\t5\t6.2\t0\t5\n3\t3\t1.5\t0\t3\n4\t3\t0.4\t0\t3\n12\t1\t0.0\t1\t1\n13\t2\t0.0\t1\t2\n14\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t0 1\n20\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n24\t1\t0.0\t1\t1\n26\t2\t0.0\t1\t2\n31\t1\t0.0\t1\t1\n33\t1\t0.0\t1\t1\n41\t2\t0.0\t1\t2\n49\t1\t0.0\t1\t1\n50\t1\t0.0\t1\t1\n54\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n58\t2\t0.0\t1\t2\n60\t1\t0.0\t1\t1\n67\t2\t0.0\t1\t2\n68\t1\t0.0\t1\t1\n69\t1\t0.0\t1\t1\n73\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n86\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq\n=============================================\n99 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nWriting report to './input_2.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_2.fastq\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nLength cut-off for read 1: 35 bp (default)\nLength cut-off for read 2: 35 bb (default)\n\nWriting final adapter and quality trimmed output to input_2_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.02 s (151 us/read; 0.40 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                     100\nReads with adapters:                        59 (59.0%)\nReads written (passing filters):           100 (100.0%)\n\nTotal basepairs processed:        25,100 bp\nQuality-trimmed:                     746 bp (3.0%)\nTotal written (filtered):         23,276 bp (92.7%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 59 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 11.9%\n  C: 39.0%\n  G: 8.5%\n  T: 40.7%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t16\t25.0\t0\t16\n2\t7\t6.2\t0\t7\n3\t1\t1.6\t0\t1\n4\t2\t0.4\t0\t2\n6\t2\t0.0\t0\t2\n9\t2\t0.0\t0\t2\n10\t1\t0.0\t1\t1\n13\t1\t0.0\t1\t1\n14\t2\t0.0\t1\t2\n15\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t1\n19\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n25\t1\t0.0\t1\t1\n30\t1\t0.0\t1\t1\n32\t2\t0.0\t1\t2\n34\t1\t0.0\t1\t1\n36\t2\t0.0\t1\t2\n38\t1\t0.0\t1\t1\n40\t1\t0.0\t1\t1\n41\t1\t0.0\t1\t1\n42\t1\t0.0\t1\t1\n43\t1\t0.0\t1\t1\n49\t1\t0.0\t1\t1\n51\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n57\t1\t0.0\t1\t1\n60\t1\t0.0\t1\t1\n67\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_2.fastq\n=============================================\n100 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nValidate paired-end files input_1_trimmed.fq and input_2_trimmed.fq\nfile_1: input_1_trimmed.fq, file_2: input_2_trimmed.fq\n\n\n>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq and input_2_trimmed.fq <<<<<\nWriting validated paired-end read 1 reads to input_1_val_1.fq\nWriting validated paired-end read 2 reads to input_2_val_2.fq\n\nWriting unpaired read 1 reads to input_1_unpaired_1.fq\nWriting unpaired read 2 reads to input_2_unpaired_2.fq\n\nTotal number of sequences analysed: 99\n\nNumber of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)\n\nDeleting both intermediate output files input_1_trimmed.fq and input_2_trimmed.fq\n\n====================================================================================================\n\n", "state": "ok", "create_time": "2019-06-25T23:46:58.815695", "stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nNextera\t29\tCTGTCTCTTATA\t99\t29.29\nIllumina\t0\tAGATCGGAAGAGC\t99\t0.00\nsmallRNA\t0\tTGGAATTCTCGG\t99\t0.00\nUsing Nextera adapter for trimming (count: 29). Second best hit was Illumina (count: 0)\n\nWriting report to './input_1.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nLength cut-off for read 1: 35 bp (default)\nLength cut-off for read 2: 35 bb (default)\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (112 us/read; 0.54 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                        52 (52.5%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     205 bp (0.8%)\nTotal written (filtered):         23,339 bp (93.9%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 9.6%\n  C: 38.5%\n  G: 23.1%\n  T: 28.8%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t11\t24.8\t0\t11\n2\t5\t6.2\t0\t5\n3\t3\t1.5\t0\t3\n4\t3\t0.4\t0\t3\n12\t1\t0.0\t1\t1\n13\t2\t0.0\t1\t2\n14\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t0 1\n20\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n24\t1\t0.0\t1\t1\n26\t2\t0.0\t1\t2\n31\t1\t0.0\t1\t1\n33\t1\t0.0\t1\t1\n41\t2\t0.0\t1\t2\n49\t1\t0.0\t1\t1\n50\t1\t0.0\t1\t1\n54\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n58\t2\t0.0\t1\t2\n60\t1\t0.0\t1\t1\n67\t2\t0.0\t1\t2\n68\t1\t0.0\t1\t1\n69\t1\t0.0\t1\t1\n73\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n86\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq\n=============================================\n99 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nWriting report to './input_2.fastq_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_2.fastq\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nLength cut-off for read 1: 35 bp (default)\nLength cut-off for read 2: 35 bb (default)\n\nWriting final adapter and quality trimmed output to input_2_trimmed.fq\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.02 s (151 us/read; 0.40 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                     100\nReads with adapters:                        59 (59.0%)\nReads written (passing filters):           100 (100.0%)\n\nTotal basepairs processed:        25,100 bp\nQuality-trimmed:                     746 bp (3.0%)\nTotal written (filtered):         23,276 bp (92.7%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 59 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 11.9%\n  C: 39.0%\n  G: 8.5%\n  T: 40.7%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t16\t25.0\t0\t16\n2\t7\t6.2\t0\t7\n3\t1\t1.6\t0\t1\n4\t2\t0.4\t0\t2\n6\t2\t0.0\t0\t2\n9\t2\t0.0\t0\t2\n10\t1\t0.0\t1\t1\n13\t1\t0.0\t1\t1\n14\t2\t0.0\t1\t2\n15\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t1\n19\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n25\t1\t0.0\t1\t1\n30\t1\t0.0\t1\t1\n32\t2\t0.0\t1\t2\n34\t1\t0.0\t1\t1\n36\t2\t0.0\t1\t2\n38\t1\t0.0\t1\t1\n40\t1\t0.0\t1\t1\n41\t1\t0.0\t1\t1\n42\t1\t0.0\t1\t1\n43\t1\t0.0\t1\t1\n49\t1\t0.0\t1\t1\n51\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n57\t1\t0.0\t1\t1\n60\t1\t0.0\t1\t1\n67\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_2.fastq\n=============================================\n100 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nValidate paired-end files input_1_trimmed.fq and input_2_trimmed.fq\nfile_1: input_1_trimmed.fq, file_2: input_2_trimmed.fq\n\n\n>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq and input_2_trimmed.fq <<<<<\nWriting validated paired-end read 1 reads to input_1_val_1.fq\nWriting validated paired-end read 2 reads to input_2_val_2.fq\n\nWriting unpaired read 1 reads to input_1_unpaired_1.fq\nWriting unpaired read 2 reads to input_2_unpaired_2.fq\n\nTotal number of sequences analysed: 99\n\nNumber of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)\n\nDeleting both intermediate output files input_1_trimmed.fq and input_2_trimmed.fq\n\n====================================================================================================\n\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "params": "{\"__current_case__\": 1, \"clip_R1\": \"\", \"clip_R2\": \"\", \"error_rate\": \"0.1\", \"min_length\": \"20\", \"quality\": \"20\", \"report\": \"true\", \"retain_unpaired\": {\"__current_case__\": 1, \"length_1\": \"35\", \"length_2\": \"35\", \"retain_unpaired_select\": \"retain_unpaired_output\"}, \"settingsType\": \"custom\", \"stringency\": \"1\"}", "rrbs": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "dbkey": "\"?\"", "singlePaired": "{\"__current_case__\": 2, \"input_mate_pairs\": {\"values\": [{\"id\": 9621, \"src\": \"hdca\"}]}, \"sPaired\": \"paired_collection\", \"three_prime_clip_R1\": \"\", \"three_prime_clip_R2\": \"\", \"trim1\": \"false\", \"trimming\": {\"__current_case__\": 0, \"trimming_select\": \"\"}}"}, "tool_stdout": "1.16\n", "job_messages": [], "id": "d963eaf89a6e9214", "job_stdout": ""}, "test_index": 8}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1-8", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "time_seconds": 82.93626189231873, "inputs": {"params|report": true, "params|settingsType": "custom", "params|retain_unpaired|retain_unpaired_select": "retain_unpaired_output", "singlePaired|input_mate_pairs": {"src": "hdca", "id": "9642ed6d8bbf4382"}, "singlePaired|sPaired": "paired_collection"}, "tool_version": "0.4.3.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1", "update_time": "2019-06-25T23:48:11.882148", "inputs": {"input_mate_pairs2": {"src": "hda", "id": "eeeb950df5bbe330", "uuid": "6217d0f6-a418-45f9-91c8-34a7d5932ace"}, "input_mate_pairs1": {"src": "hda", "id": "5ba8e526c57047ec", "uuid": "259ebf1d-bf0b-4c09-b54a-cb5d6af56882"}}, "outputs": {"report_file": {"src": "hda", "id": "b366bde37ed418d8", "uuid": "667a443b-2f94-442e-b7d3-95f8d7e8e38f"}, "trimmed_reads_unpaired_collection|__part__|reverse": {"src": "hda", "id": "9b0f48a1a34257c0", "uuid": "19c1dcc3-ec4c-433a-ae04-10ad5ed18d6d"}, "trimmed_reads_paired_collection|__part__|reverse": {"src": "hda", "id": "d3ad353fc237658f", "uuid": "c8cff762-779e-437f-99a4-2bebaacd6e4a"}, "trimmed_reads_paired_collection|__part__|forward": {"src": "hda", "id": "565c18ccb0db42cd", "uuid": "0e0c2af8-026c-4362-ae09-62a083841abf"}, "trimmed_reads_unpaired_collection|__part__|forward": {"src": "hda", "id": "2e9cac1611827e77", "uuid": "2080f8ec-2d4f-435e-9ec0-89fdd1079277"}}, "history_id": "f840675b8d7f5485", "stdout": "1.16\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nNextera\t29\tCTGTCTCTTATA\t99\t29.29\nsmallRNA\t0\tTGGAATTCTCGG\t99\t0.00\nIllumina\t0\tAGATCGGAAGAGC\t99\t0.00\nUsing Nextera adapter for trimming (count: 29). Second best hit was smallRNA (count: 0)\n\nWriting report to './input_1.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq.gz\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nLength cut-off for read 1: 35 bp (default)\nLength cut-off for read 2: 35 bb (default)\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.02 s (179 us/read; 0.34 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                        52 (52.5%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     205 bp (0.8%)\nTotal written (filtered):         23,339 bp (93.9%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 9.6%\n  C: 38.5%\n  G: 23.1%\n  T: 28.8%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t11\t24.8\t0\t11\n2\t5\t6.2\t0\t5\n3\t3\t1.5\t0\t3\n4\t3\t0.4\t0\t3\n12\t1\t0.0\t1\t1\n13\t2\t0.0\t1\t2\n14\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t0 1\n20\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n24\t1\t0.0\t1\t1\n26\t2\t0.0\t1\t2\n31\t1\t0.0\t1\t1\n33\t1\t0.0\t1\t1\n41\t2\t0.0\t1\t2\n49\t1\t0.0\t1\t1\n50\t1\t0.0\t1\t1\n54\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n58\t2\t0.0\t1\t2\n60\t1\t0.0\t1\t1\n67\t2\t0.0\t1\t2\n68\t1\t0.0\t1\t1\n69\t1\t0.0\t1\t1\n73\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n86\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq.gz\n=============================================\n99 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nWriting report to './input_2.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_2.fastq.gz\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nLength cut-off for read 1: 35 bp (default)\nLength cut-off for read 2: 35 bb (default)\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_2_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.02 s (180 us/read; 0.33 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                     100\nReads with adapters:                        59 (59.0%)\nReads written (passing filters):           100 (100.0%)\n\nTotal basepairs processed:        25,100 bp\nQuality-trimmed:                     746 bp (3.0%)\nTotal written (filtered):         23,276 bp (92.7%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 59 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 11.9%\n  C: 39.0%\n  G: 8.5%\n  T: 40.7%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t16\t25.0\t0\t16\n2\t7\t6.2\t0\t7\n3\t1\t1.6\t0\t1\n4\t2\t0.4\t0\t2\n6\t2\t0.0\t0\t2\n9\t2\t0.0\t0\t2\n10\t1\t0.0\t1\t1\n13\t1\t0.0\t1\t1\n14\t2\t0.0\t1\t2\n15\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t1\n19\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n25\t1\t0.0\t1\t1\n30\t1\t0.0\t1\t1\n32\t2\t0.0\t1\t2\n34\t1\t0.0\t1\t1\n36\t2\t0.0\t1\t2\n38\t1\t0.0\t1\t1\n40\t1\t0.0\t1\t1\n41\t1\t0.0\t1\t1\n42\t1\t0.0\t1\t1\n43\t1\t0.0\t1\t1\n49\t1\t0.0\t1\t1\n51\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n57\t1\t0.0\t1\t1\n60\t1\t0.0\t1\t1\n67\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_2.fastq.gz\n=============================================\n100 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nValidate paired-end files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz\nfile_1: input_1_trimmed.fq.gz, file_2: input_2_trimmed.fq.gz\n\n\n>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq.gz and input_2_trimmed.fq.gz <<<<<\nWriting validated paired-end read 1 reads to input_1_val_1.fq.gz\nWriting validated paired-end read 2 reads to input_2_val_2.fq.gz\n\nWriting unpaired read 1 reads to input_1_unpaired_1.fq.gz\nWriting unpaired read 2 reads to input_2_unpaired_2.fq.gz\n\nTotal number of sequences analysed: 99\n\nNumber of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)\n\nDeleting both intermediate output files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz\n\n====================================================================================================\n\n", "state": "ok", "create_time": "2019-06-25T23:47:42.807955", "stderr": "Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nNextera\t29\tCTGTCTCTTATA\t99\t29.29\nsmallRNA\t0\tTGGAATTCTCGG\t99\t0.00\nIllumina\t0\tAGATCGGAAGAGC\t99\t0.00\nUsing Nextera adapter for trimming (count: 29). Second best hit was smallRNA (count: 0)\n\nWriting report to './input_1.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq.gz\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nLength cut-off for read 1: 35 bp (default)\nLength cut-off for read 2: 35 bb (default)\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.02 s (179 us/read; 0.34 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                        52 (52.5%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     205 bp (0.8%)\nTotal written (filtered):         23,339 bp (93.9%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 9.6%\n  C: 38.5%\n  G: 23.1%\n  T: 28.8%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t11\t24.8\t0\t11\n2\t5\t6.2\t0\t5\n3\t3\t1.5\t0\t3\n4\t3\t0.4\t0\t3\n12\t1\t0.0\t1\t1\n13\t2\t0.0\t1\t2\n14\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t0 1\n20\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n24\t1\t0.0\t1\t1\n26\t2\t0.0\t1\t2\n31\t1\t0.0\t1\t1\n33\t1\t0.0\t1\t1\n41\t2\t0.0\t1\t2\n49\t1\t0.0\t1\t1\n50\t1\t0.0\t1\t1\n54\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n58\t2\t0.0\t1\t2\n60\t1\t0.0\t1\t1\n67\t2\t0.0\t1\t2\n68\t1\t0.0\t1\t1\n69\t1\t0.0\t1\t1\n73\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n86\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq.gz\n=============================================\n99 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nWriting report to './input_2.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_2.fastq.gz\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.16\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nLength cut-off for read 1: 35 bp (default)\nLength cut-off for read 2: 35 bb (default)\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_2_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq.gz <<< \nThis is cutadapt 1.16 with Python 3.6.4\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastq.gz\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.02 s (180 us/read; 0.33 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                     100\nReads with adapters:                        59 (59.0%)\nReads written (passing filters):           100 (100.0%)\n\nTotal basepairs processed:        25,100 bp\nQuality-trimmed:                     746 bp (3.0%)\nTotal written (filtered):         23,276 bp (92.7%)\n\n=== Adapter 1 ===\n\nSequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 59 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 11.9%\n  C: 39.0%\n  G: 8.5%\n  T: 40.7%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t16\t25.0\t0\t16\n2\t7\t6.2\t0\t7\n3\t1\t1.6\t0\t1\n4\t2\t0.4\t0\t2\n6\t2\t0.0\t0\t2\n9\t2\t0.0\t0\t2\n10\t1\t0.0\t1\t1\n13\t1\t0.0\t1\t1\n14\t2\t0.0\t1\t2\n15\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t1\n17\t1\t0.0\t1\t1\n19\t2\t0.0\t1\t2\n21\t1\t0.0\t1\t1\n25\t1\t0.0\t1\t1\n30\t1\t0.0\t1\t1\n32\t2\t0.0\t1\t2\n34\t1\t0.0\t1\t1\n36\t2\t0.0\t1\t2\n38\t1\t0.0\t1\t1\n40\t1\t0.0\t1\t1\n41\t1\t0.0\t1\t1\n42\t1\t0.0\t1\t1\n43\t1\t0.0\t1\t1\n49\t1\t0.0\t1\t1\n51\t1\t0.0\t1\t1\n56\t1\t0.0\t1\t1\n57\t1\t0.0\t1\t1\n60\t1\t0.0\t1\t1\n67\t1\t0.0\t1\t1\n80\t1\t0.0\t1\t1\n\n\nRUN STATISTICS FOR INPUT FILE: input_2.fastq.gz\n=============================================\n100 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nValidate paired-end files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz\nfile_1: input_1_trimmed.fq.gz, file_2: input_2_trimmed.fq.gz\n\n\n>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq.gz and input_2_trimmed.fq.gz <<<<<\nWriting validated paired-end read 1 reads to input_1_val_1.fq.gz\nWriting validated paired-end read 2 reads to input_2_val_2.fq.gz\n\nWriting unpaired read 1 reads to input_1_unpaired_1.fq.gz\nWriting unpaired read 2 reads to input_2_unpaired_2.fq.gz\n\nTotal number of sequences analysed: 99\n\nNumber of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)\n\nDeleting both intermediate output files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz\n\n====================================================================================================\n\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "params": "{\"__current_case__\": 1, \"clip_R1\": \"\", \"clip_R2\": \"\", \"error_rate\": \"0.1\", \"min_length\": \"20\", \"quality\": \"20\", \"report\": \"true\", \"retain_unpaired\": {\"__current_case__\": 1, \"length_1\": \"35\", \"length_2\": \"35\", \"retain_unpaired_select\": \"retain_unpaired_output\"}, \"settingsType\": \"custom\", \"stringency\": \"1\"}", "rrbs": "{\"__current_case__\": 0, \"settingsType\": \"default\"}", "dbkey": "\"?\"", "singlePaired": "{\"__current_case__\": 2, \"input_mate_pairs\": {\"values\": [{\"id\": 9624, \"src\": \"hdca\"}]}, \"sPaired\": \"paired_collection\", \"three_prime_clip_R1\": \"\", \"three_prime_clip_R2\": \"\", \"trim1\": \"false\", \"trimming\": {\"__current_case__\": 0, \"trimming_select\": \"\"}}"}, "tool_stdout": "1.16\n", "job_messages": [], "id": "340249acf0f4ffed", "job_stdout": ""}, "test_index": 9}, "id": "toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1-9", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "time_seconds": 73.8102159500122, "inputs": {"library|input_2": {"src": "hda", "id": "9be3e557691077fd"}, "library|input_1": {"src": "hda", "id": "254e90b9adc38804"}, "analysis_type|analysis_type_selector": "simple", "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|source": "history", "reference_genome|own_file": {"src": "hda", "id": "84445ab78b54b881"}, "library|unaligned_file": false}, "tool_version": "2.3.4.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "update_time": "2019-06-25T22:51:32.232580", "inputs": {"own_file": {"src": "hda", "id": "84445ab78b54b881", "uuid": "2f120bf5-9705-461a-9098-9af7b123ec88"}, "input_2": {"src": "hda", "id": "9be3e557691077fd", "uuid": "02adbb2a-90fe-4dab-ba3b-1aed0e84db4d"}, "input_1": {"src": "hda", "id": "254e90b9adc38804", "uuid": "8cd65922-a7e7-454b-a33c-05c4c591256f"}}, "outputs": {"output": {"src": "hda", "id": "b9cdfdfa8b274d59", "uuid": "954e10b9-8b33-428b-97f4-c8232eb18428"}}, "history_id": "f840675b8d7f5485", "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561634/inputs/dataset_925295.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\nGetting block 2 of 15\n  Entering block accumulator loop for bucket 1:\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "state": "ok", "create_time": "2019-06-25T22:50:40.646674", "stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "model_class": "Job", "params": {"sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "dbkey": "\"?\"", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 1068414, \"src\": \"hda\"}]}, \"source\": \"history\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 1068413, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 1068415, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}", "save_mapping_stats": "\"false\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561634/inputs/dataset_925295.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\nGetting block 2 of 15\n  Entering block accumulator loop for bucket 1:\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "id": "f8f26297c2879ac5", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "time_seconds": 75.22076892852783, "inputs": {"library|input_1": {"src": "hdca", "id": "1c809e6da611b85a"}, "library|type": "paired_collection", "reference_genome|own_file": {"src": "hda", "id": "5f4e71fb1f026955"}, "analysis_type|analysis_type_selector": "simple", "reference_genome|source": "history", "library|paired_options|paired_options_selector": "no", "library|unaligned_file": false}, "tool_version": "2.3.4.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "update_time": "2019-06-25T22:51:32.339698", "inputs": {"own_file": {"src": "hda", "id": "5f4e71fb1f026955", "uuid": "9a3cdbee-9c08-4f91-8f10-e62a4c84f2af"}, "input_12": {"src": "hda", "id": "9be3e557691077fd", "uuid": "02adbb2a-90fe-4dab-ba3b-1aed0e84db4d"}, "input_11": {"src": "hda", "id": "254e90b9adc38804", "uuid": "8cd65922-a7e7-454b-a33c-05c4c591256f"}}, "outputs": {"output": {"src": "hda", "id": "090e764d9f234177", "uuid": "dbc8ef22-4605-409e-8242-99fc92cead92"}}, "history_id": "f840675b8d7f5485", "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561636/inputs/dataset_925297.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\nGetting block 4 of 15\n  bucket 3: 60%\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 70%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 80%\n  bucket 4: 10%\n  bucket 3: 90%\n  bucket 4: 20%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  bucket 5: 50%\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 60%\n  bucket 6: 10%\n  bucket 5: 70%\n  bucket 6: 20%\n  bucket 5: 80%\n  bucket 6: 30%\n  bucket 5: 90%\n  bucket 6: 40%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  bucket 6: 50%\n  bucket 6: 60%\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  bucket 7: 60%\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 70%\n  bucket 8: 10%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\nGetting block 2 of 15\n  Entering block accumulator loop for bucket 1:\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 2: 10%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 2: 20%\n  bucket 1: 60%\n  bucket 2: 30%\n  bucket 1: 70%\n  bucket 2: 40%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\nGetting block 4 of 15\n  bucket 3: 80%\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 90%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\nGetting block 6 of 15\n  bucket 5: 80%\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  bucket 5: 90%\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\nGetting block 8 of 15\n  bucket 7: 60%\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  bucket 7: 70%\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 80%\n  bucket 8: 10%\n  bucket 7: 90%\n  bucket 8: 20%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\nGetting block 10 of 15\n  bucket 9: 50%\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 10: 10%\n  bucket 9: 80%\n  bucket 10: 20%\n  bucket 9: 90%\n  bucket 10: 30%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\nGetting block 12 of 15\n  bucket 11: 60%\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  bucket 11: 70%\n  Entering block accumulator loop for bucket 12:\n  bucket 11: 80%\n  bucket 12: 10%\n  bucket 11: 90%\n  bucket 12: 20%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  bucket 13: 60%\n  Entering block accumulator loop for bucket 14:\n  bucket 13: 70%\n  bucket 14: 10%\n  bucket 13: 80%\n  bucket 14: 20%\n  bucket 13: 90%\n  bucket 14: 30%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "state": "ok", "create_time": "2019-06-25T22:50:44.420273", "stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "model_class": "Job", "params": {"sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "dbkey": "\"?\"", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 1068416, \"src\": \"hda\"}]}, \"source\": \"history\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "library": "{\"__current_case__\": 2, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 9620, \"src\": \"hdca\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired_collection\", \"unaligned_file\": \"false\"}", "save_mapping_stats": "\"false\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561636/inputs/dataset_925297.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\nGetting block 4 of 15\n  bucket 3: 60%\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 70%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 80%\n  bucket 4: 10%\n  bucket 3: 90%\n  bucket 4: 20%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  bucket 5: 50%\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 60%\n  bucket 6: 10%\n  bucket 5: 70%\n  bucket 6: 20%\n  bucket 5: 80%\n  bucket 6: 30%\n  bucket 5: 90%\n  bucket 6: 40%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  bucket 6: 50%\n  bucket 6: 60%\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  bucket 7: 60%\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 70%\n  bucket 8: 10%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\nGetting block 2 of 15\n  Entering block accumulator loop for bucket 1:\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 2: 10%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 2: 20%\n  bucket 1: 60%\n  bucket 2: 30%\n  bucket 1: 70%\n  bucket 2: 40%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\nGetting block 4 of 15\n  bucket 3: 80%\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  bucket 3: 90%\n  Entering block accumulator loop for bucket 4:\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\nGetting block 6 of 15\n  bucket 5: 80%\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  bucket 5: 90%\n  Entering block accumulator loop for bucket 6:\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\nGetting block 8 of 15\n  bucket 7: 60%\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  bucket 7: 70%\n  Entering block accumulator loop for bucket 8:\n  bucket 7: 80%\n  bucket 8: 10%\n  bucket 7: 90%\n  bucket 8: 20%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\nGetting block 10 of 15\n  bucket 9: 50%\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 10: 10%\n  bucket 9: 80%\n  bucket 10: 20%\n  bucket 9: 90%\n  bucket 10: 30%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\nGetting block 12 of 15\n  bucket 11: 60%\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  bucket 11: 70%\n  Entering block accumulator loop for bucket 12:\n  bucket 11: 80%\n  bucket 12: 10%\n  bucket 11: 90%\n  bucket 12: 20%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  bucket 13: 60%\n  Entering block accumulator loop for bucket 14:\n  bucket 13: 70%\n  bucket 14: 10%\n  bucket 13: 80%\n  bucket 14: 20%\n  bucket 13: 90%\n  bucket 14: 30%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "id": "5c47da068f209ff2", "job_stdout": null}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "time_seconds": 73.68330979347229, "inputs": {"library|input_2": {"src": "hda", "id": "9be3e557691077fd"}, "library|input_1": {"src": "hda", "id": "254e90b9adc38804"}, "library|type": "paired", "analysis_type|analysis_type_selector": "simple", "rg|read_group_id_conditional|ID": "rg1", "library|paired_options|paired_options_selector": "no", "reference_genome|own_file": {"src": "hda", "id": "0cb33769ca4e3420"}, "reference_genome|source": "history", "rg|rg_selector": "set", "library|unaligned_file": false, "rg|PL": "CAPILLARY"}, "tool_version": "2.3.4.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "update_time": "2019-06-25T22:51:46.267581", "inputs": {"own_file": {"src": "hda", "id": "0cb33769ca4e3420", "uuid": "13a7bfac-5a4a-4596-a02d-466f84dc3073"}, "input_2": {"src": "hda", "id": "9be3e557691077fd", "uuid": "02adbb2a-90fe-4dab-ba3b-1aed0e84db4d"}, "input_1": {"src": "hda", "id": "254e90b9adc38804", "uuid": "8cd65922-a7e7-454b-a33c-05c4c591256f"}}, "outputs": {"output": {"src": "hda", "id": "3d6573698fd1f6b6", "uuid": "7d4518eb-4ba2-43b3-8ed9-0ca602c38c35"}}, "history_id": "f840675b8d7f5485", "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561646/inputs/dataset_925309.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 1: 70%\n  bucket 2: 80%\n  bucket 1: 80%\n  bucket 2: 90%\n  bucket 1: 90%\n  bucket 1: 100%\n  bucket 2: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\nGetting block 8 of 15\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "state": "ok", "create_time": "2019-06-25T22:51:08.804232", "stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "model_class": "Job", "params": {"sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "dbkey": "\"?\"", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 1068428, \"src\": \"hda\"}]}, \"source\": \"history\"}", "rg": "{\"CN\": \"\", \"DS\": \"\", \"DT\": \"\", \"FO\": \"\", \"KS\": \"\", \"PG\": \"\", \"PI\": \"\", \"PL\": \"CAPILLARY\", \"PU\": \"\", \"__current_case__\": 1, \"read_group_id_conditional\": {\"ID\": \"rg1\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_lb_conditional\": {\"LB\": \"\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_sm_conditional\": {\"SM\": \"\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"rg_selector\": \"set\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 1068413, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 1068415, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}", "save_mapping_stats": "\"false\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561646/inputs/dataset_925309.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 1: 70%\n  bucket 2: 80%\n  bucket 1: 80%\n  bucket 2: 90%\n  bucket 1: 90%\n  bucket 1: 100%\n  bucket 2: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\nGetting block 8 of 15\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "id": "629f4e0bb244e047", "job_stdout": null}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "time_seconds": 48.743077993392944, "inputs": {"library|input_2": {"src": "hda", "id": "9be3e557691077fd"}, "library|input_1": {"src": "hda", "id": "254e90b9adc38804"}, "analysis_type|analysis_type_selector": "simple", "library|paired_options|paired_options_selector": "no", "library|type": "paired", "save_mapping_stats": true, "reference_genome|source": "history", "reference_genome|own_file": {"src": "hda", "id": "0cb33769ca4e3420"}, "library|unaligned_file": false}, "tool_version": "2.3.4.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "update_time": "2019-06-25T22:51:48.062488", "inputs": {"own_file": {"src": "hda", "id": "0cb33769ca4e3420", "uuid": "13a7bfac-5a4a-4596-a02d-466f84dc3073"}, "input_2": {"src": "hda", "id": "9be3e557691077fd", "uuid": "02adbb2a-90fe-4dab-ba3b-1aed0e84db4d"}, "input_1": {"src": "hda", "id": "254e90b9adc38804", "uuid": "8cd65922-a7e7-454b-a33c-05c4c591256f"}}, "outputs": {"output": {"src": "hda", "id": "c207003812624f14", "uuid": "3befbd0b-d464-4bdb-bea8-85ab4ff80c4e"}, "mapping_stats": {"src": "hda", "id": "56fd98b86b38bc78", "uuid": "090bceb7-01f1-4775-8c78-d291fadc9101"}}, "history_id": "f840675b8d7f5485", "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561651/inputs/dataset_925309.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "Building a SMALL index\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "state": "ok", "create_time": "2019-06-25T22:51:18.202284", "stderr": "Building a SMALL index\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "model_class": "Job", "params": {"sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "dbkey": "\"?\"", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 1068428, \"src\": \"hda\"}]}, \"source\": \"history\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 1068413, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 1068415, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}", "save_mapping_stats": "\"true\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561651/inputs/dataset_925309.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 1: 90%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 1: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 80%\n  bucket 2: 90%\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "id": "242e44c7d0bfceb7", "job_stdout": null}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "time_seconds": 72.77054691314697, "inputs": {"library|input_1": {"src": "hda", "id": "3631f2b8666e9f05"}, "library|type": "paired_interleaved", "analysis_type|analysis_type_selector": "simple", "rg|read_group_id_conditional|ID": "rg1", "reference_genome|own_file": {"src": "hda", "id": "a7a9db4f2e1e194d"}, "reference_genome|source": "history", "rg|rg_selector": "set", "library|unaligned_file": false, "rg|PL": "CAPILLARY"}, "tool_version": "2.3.4.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "update_time": "2019-06-25T22:51:46.076684", "inputs": {"own_file": {"src": "hda", "id": "a7a9db4f2e1e194d", "uuid": "dc222285-3886-42ae-8e73-6d6bd8bb951e"}, "input_1": {"src": "hda", "id": "3631f2b8666e9f05", "uuid": "b6ecadd2-9643-4f89-bea6-58cd4784c5da"}}, "outputs": {"output": {"src": "hda", "id": "1c383f204fe37e23", "uuid": "68371b78-f37e-4a32-a4c6-6e509aa08d5d"}}, "history_id": "f840675b8d7f5485", "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561641/inputs/dataset_925302.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "Building a SMALL index\n3 reads; of these:\n  3 (100.00%) were paired; of these:\n    2 (66.67%) aligned concordantly 0 times\n    1 (33.33%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    2 pairs aligned concordantly 0 times; of these:\n      0 (0.00%) aligned discordantly 1 time\n    ----\n    2 pairs aligned 0 times concordantly or discordantly; of these:\n      4 mates make up the pairs; of these:\n        3 (75.00%) aligned 0 times\n        1 (25.00%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n50.00% overall alignment rate\n", "state": "ok", "create_time": "2019-06-25T22:50:57.129985", "stderr": "Building a SMALL index\n3 reads; of these:\n  3 (100.00%) were paired; of these:\n    2 (66.67%) aligned concordantly 0 times\n    1 (33.33%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    2 pairs aligned concordantly 0 times; of these:\n      0 (0.00%) aligned discordantly 1 time\n    ----\n    2 pairs aligned 0 times concordantly or discordantly; of these:\n      4 mates make up the pairs; of these:\n        3 (75.00%) aligned 0 times\n        1 (25.00%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n50.00% overall alignment rate\n", "model_class": "Job", "params": {"sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "dbkey": "\"?\"", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 1068421, \"src\": \"hda\"}]}, \"source\": \"history\"}", "rg": "{\"CN\": \"\", \"DS\": \"\", \"DT\": \"\", \"FO\": \"\", \"KS\": \"\", \"PG\": \"\", \"PI\": \"\", \"PL\": \"CAPILLARY\", \"PU\": \"\", \"__current_case__\": 1, \"read_group_id_conditional\": {\"ID\": \"rg1\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_lb_conditional\": {\"LB\": \"\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_sm_conditional\": {\"SM\": \"\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"rg_selector\": \"set\"}", "library": "{\"__current_case__\": 3, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 1068412, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired_interleaved\", \"unaligned_file\": \"false\"}", "save_mapping_stats": "\"false\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561641/inputs/dataset_925302.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:01\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "id": "0a964e47d1851155", "job_stdout": null}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "time_seconds": 46.33751606941223, "inputs": {"library|input_2": {"src": "hda", "id": "9c48a375a275c246"}, "library|input_1": {"src": "hda", "id": "71b25cb6ba34d56a"}, "analysis_type|analysis_type_selector": "simple", "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|source": "history", "reference_genome|own_file": {"src": "hda", "id": "1d34a7acd1970a38"}, "library|unaligned_file": false}, "tool_version": "2.3.4.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "update_time": "2019-06-25T22:52:02.110011", "inputs": {"own_file": {"src": "hda", "id": "1d34a7acd1970a38", "uuid": "a1047bc1-7b26-4c16-932e-3bc95751131b"}, "input_2": {"src": "hda", "id": "9c48a375a275c246", "uuid": "bd73026e-021b-49bc-97c0-1c36a52b7298"}, "input_1": {"src": "hda", "id": "71b25cb6ba34d56a", "uuid": "2c3c4da6-0e5a-4ff4-8b85-73f3fdcd4dfd"}}, "outputs": {"output": {"src": "hda", "id": "df93458911957104", "uuid": "a1f9c130-ed18-4e5f-946f-7fb4e4879adb"}}, "history_id": "f840675b8d7f5485", "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561658/inputs/dataset_925320.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "state": "ok", "create_time": "2019-06-25T22:51:31.154149", "stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "model_class": "Job", "params": {"sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "dbkey": "\"?\"", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 1068439, \"src\": \"hda\"}]}, \"source\": \"history\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 1068418, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 1068420, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}", "save_mapping_stats": "\"false\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561658/inputs/dataset_925320.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "id": "506f4f8c98be0ff6", "job_stdout": null}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "time_seconds": 32.56132793426514, "inputs": {"library|input_2": {"src": "hda", "id": "38da47c953971dab"}, "library|input_1": {"src": "hda", "id": "6f29ea3fc3942433"}, "analysis_type|analysis_type_selector": "simple", "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|source": "history", "reference_genome|own_file": {"src": "hda", "id": "740b36c4887a939c"}, "library|unaligned_file": false}, "tool_version": "2.3.4.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "update_time": "2019-06-25T22:52:16.613759", "inputs": {"own_file": {"src": "hda", "id": "740b36c4887a939c", "uuid": "92557158-d346-47b9-9bad-2d6339f08e4c"}, "input_2": {"src": "hda", "id": "38da47c953971dab", "uuid": "f54c4e49-d418-4917-ba0e-726deedf5576"}, "input_1": {"src": "hda", "id": "6f29ea3fc3942433", "uuid": "b3a0ca6b-6012-4d77-8c06-de49b0eff7e5"}}, "outputs": {"output": {"src": "hda", "id": "58634e2693ed2579", "uuid": "775ceda3-92a9-4d86-a6a7-158a949025da"}}, "history_id": "f840675b8d7f5485", "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561661/inputs/dataset_925322.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "state": "ok", "create_time": "2019-06-25T22:51:59.189201", "stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n23.50% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "model_class": "Job", "params": {"sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "dbkey": "\"?\"", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 1068441, \"src\": \"hda\"}]}, \"source\": \"history\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 1068422, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 1068423, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}", "save_mapping_stats": "\"false\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561661/inputs/dataset_925322.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "id": "fe1ee0e48c92b290", "job_stdout": null}, "test_index": 6}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3-6", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "time_seconds": 73.64291095733643, "inputs": {"library|input_2": {"src": "hda", "id": "7d273af8d71cced5"}, "library|input_1": {"src": "hda", "id": "d928d7034f5a2d98"}, "analysis_type|analysis_type_selector": "simple", "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|source": "history", "reference_genome|own_file": {"src": "hda", "id": "740b36c4887a939c"}, "library|unaligned_file": false}, "tool_version": "2.3.4.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "update_time": "2019-06-25T22:52:24.834223", "inputs": {"own_file": {"src": "hda", "id": "740b36c4887a939c", "uuid": "92557158-d346-47b9-9bad-2d6339f08e4c"}, "input_2": {"src": "hda", "id": "7d273af8d71cced5", "uuid": "b6439a4d-ac02-48a1-91ed-0de31e42374d"}, "input_1": {"src": "hda", "id": "d928d7034f5a2d98", "uuid": "49875c13-2caa-486e-a480-bd307670402e"}}, "outputs": {"output": {"src": "hda", "id": "c612dc5a0a890418", "uuid": "a9bcaac6-493a-4f9d-9407-24b7f8432374"}}, "history_id": "f840675b8d7f5485", "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561659/inputs/dataset_925322.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n22.00% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "state": "ok", "create_time": "2019-06-25T22:51:44.495070", "stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n22.00% overall alignment rate\n[bam_sort_core] merging from 0 files and 2 in-memory blocks...\n", "model_class": "Job", "params": {"sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}", "dbkey": "\"?\"", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 1068441, \"src\": \"hda\"}]}, \"source\": \"history\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 1068438, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 1068440, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}", "save_mapping_stats": "\"false\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561659/inputs/dataset_925322.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 1: 50%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\nGetting block 2 of 15\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 2:\n  bucket 2: 10%\n  bucket 2: 20%\n  bucket 2: 30%\n  bucket 2: 40%\n  bucket 2: 50%\n  bucket 2: 60%\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "id": "f92d1974aef3a461", "job_stdout": null}, "test_index": 7}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3-7", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "time_seconds": 46.24178981781006, "inputs": {"library|input_2": {"src": "hda", "id": "7d273af8d71cced5"}, "library|input_1": {"src": "hda", "id": "d928d7034f5a2d98"}, "analysis_type|analysis_type_selector": "simple", "sam_options|sam_options_selector": "yes", "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|source": "history", "reference_genome|own_file": {"src": "hda", "id": "740b36c4887a939c"}, "sam_options|reorder": true, "library|unaligned_file": false}, "tool_version": "2.3.4.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "update_time": "2019-06-25T22:52:25.899056", "inputs": {"own_file": {"src": "hda", "id": "740b36c4887a939c", "uuid": "92557158-d346-47b9-9bad-2d6339f08e4c"}, "input_2": {"src": "hda", "id": "7d273af8d71cced5", "uuid": "b6439a4d-ac02-48a1-91ed-0de31e42374d"}, "input_1": {"src": "hda", "id": "d928d7034f5a2d98", "uuid": "49875c13-2caa-486e-a480-bd307670402e"}}, "outputs": {"output": {"src": "hda", "id": "2093da9b119d95ec", "uuid": "a814c598-c566-4718-9ae1-362cb18607c4"}}, "history_id": "f840675b8d7f5485", "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561663/inputs/dataset_925322.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n22.00% overall alignment rate\n", "state": "ok", "create_time": "2019-06-25T22:52:03.841087", "stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n22.00% overall alignment rate\n", "model_class": "Job", "params": {"sam_options": "{\"__current_case__\": 0, \"no_unal\": \"false\", \"omit_sec_seq\": \"false\", \"reorder\": \"true\", \"sam_no_qname_trunc\": \"false\", \"sam_opt\": \"false\", \"sam_options_selector\": \"yes\", \"soft_clipped_unmapped_tlen\": \"false\", \"xeq\": \"false\"}", "dbkey": "\"?\"", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 1068441, \"src\": \"hda\"}]}, \"source\": \"history\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 1068438, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 1068440, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}", "save_mapping_stats": "\"false\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561663/inputs/dataset_925322.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 1: 80%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "id": "bbeb6d4f306194f0", "job_stdout": null}, "test_index": 8}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3-8", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "time_seconds": 45.35964488983154, "inputs": {"library|input_2": {"src": "hda", "id": "7d273af8d71cced5"}, "library|input_1": {"src": "hda", "id": "d928d7034f5a2d98"}, "analysis_type|analysis_type_selector": "simple", "sam_options|sam_options_selector": "yes", "library|paired_options|paired_options_selector": "no", "library|type": "paired", "reference_genome|source": "history", "reference_genome|own_file": {"src": "hda", "id": "740b36c4887a939c"}, "library|unaligned_file": false, "sam_options|sam_opt": true}, "tool_version": "2.3.4.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3", "update_time": "2019-06-25T22:52:39.838147", "inputs": {"own_file": {"src": "hda", "id": "740b36c4887a939c", "uuid": "92557158-d346-47b9-9bad-2d6339f08e4c"}, "input_2": {"src": "hda", "id": "7d273af8d71cced5", "uuid": "b6439a4d-ac02-48a1-91ed-0de31e42374d"}, "input_1": {"src": "hda", "id": "d928d7034f5a2d98", "uuid": "49875c13-2caa-486e-a480-bd307670402e"}}, "outputs": {"output": {"src": "hda", "id": "805b4a652f387156", "uuid": "2c2c4ab8-f8ce-425c-b53a-1844c6bec3d9"}}, "history_id": "f840675b8d7f5485", "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561665/inputs/dataset_925322.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 2: 40%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\nGetting block 2 of 15\n  Entering block accumulator loop for bucket 1:\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n22.00% overall alignment rate\n", "state": "ok", "create_time": "2019-06-25T22:52:12.748875", "stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly >1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned >1 times\n22.00% overall alignment rate\n", "model_class": "Job", "params": {"sam_options": "{\"__current_case__\": 0, \"no_unal\": \"false\", \"omit_sec_seq\": \"false\", \"reorder\": \"false\", \"sam_no_qname_trunc\": \"false\", \"sam_opt\": \"true\", \"sam_options_selector\": \"yes\", \"soft_clipped_unmapped_tlen\": \"false\", \"xeq\": \"false\"}", "dbkey": "\"?\"", "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 1068441, \"src\": \"hda\"}]}, \"source\": \"history\"}", "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}", "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 1068438, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 1068440, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}", "save_mapping_stats": "\"false\"", "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 8\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /mnt/pulsar/files/staging/561665/inputs/dataset_925322.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 0; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 2; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\nGetting block 2 of 15\n  Calculating Z arrays for bucket 1\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 1: 70%\n  bucket 2: 40%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 1407 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 849 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1408 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 850 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1052 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1053 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1478 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1479 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 546 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 547 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 1246 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1247 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1386 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1387 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 543 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 544 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1302 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1303 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 681 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 682 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1077 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1078 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 716 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 717 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1488 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1489 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 1255 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1256 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1528 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1529 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 0\nTotal time for call to driver() for forward index: 00:00:00\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\n  Time to reverse reference sequence: 00:00:00\nbmax according to bmaxDivN setting: 2071\nUsing parameters --bmax 1554 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 1554 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 22 sample suffixes\nGenerating random suffixes\nQSorting 22 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 22 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 2, merged 10; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 1, merged 1; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 1103.6 (target: 1553)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 15\n  Reserving size (1554) for bucket 1\n  Calculating Z arrays for bucket 1\nGetting block 2 of 15\n  Entering block accumulator loop for bucket 1:\n  Reserving size (1554) for bucket 2\n  Calculating Z arrays for bucket 2\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 2:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 1: 40%\n  bucket 2: 20%\n  bucket 1: 50%\n  bucket 2: 30%\n  bucket 1: 60%\n  bucket 2: 40%\n  bucket 1: 70%\n  bucket 1: 80%\n  bucket 2: 50%\n  bucket 1: 90%\n  bucket 2: 60%\n  bucket 1: 100%\n  Sorting block of length 389 for bucket 1\n  (Using difference cover)\n  bucket 2: 70%\n  bucket 2: 80%\n  Sorting block time: 00:00:00\nReturning block of 390 for bucket 1\n  bucket 2: 90%\n  bucket 2: 100%\n  Sorting block of length 1283 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1284 for bucket 2\nGetting block 3 of 15\n  Reserving size (1554) for bucket 3\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 3:\n  bucket 3: 10%\n  bucket 3: 20%\n  bucket 3: 30%\n  bucket 3: 40%\n  bucket 3: 50%\n  bucket 3: 60%\n  bucket 3: 70%\n  bucket 3: 80%\n  bucket 3: 90%\n  bucket 3: 100%\n  Sorting block of length 1229 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1230 for bucket 3\nGetting block 4 of 15\n  Reserving size (1554) for bucket 4\n  Calculating Z arrays for bucket 4\n  Entering block accumulator loop for bucket 4:\n  bucket 4: 10%\n  bucket 4: 20%\n  bucket 4: 30%\n  bucket 4: 40%\n  bucket 4: 50%\n  bucket 4: 60%\n  bucket 4: 70%\n  bucket 4: 80%\n  bucket 4: 90%\n  bucket 4: 100%\n  Sorting block of length 1201 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1202 for bucket 4\nGetting block 5 of 15\n  Reserving size (1554) for bucket 5\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 5:\n  bucket 5: 10%\n  bucket 5: 20%\n  bucket 5: 30%\n  bucket 5: 40%\n  bucket 5: 50%\n  bucket 5: 60%\n  bucket 5: 70%\n  bucket 5: 80%\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 1530 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1531 for bucket 5\nGetting block 6 of 15\n  Reserving size (1554) for bucket 6\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 6:\n  bucket 6: 10%\n  bucket 6: 20%\n  bucket 6: 30%\n  bucket 6: 40%\n  bucket 6: 50%\n  bucket 6: 60%\n  bucket 6: 70%\n  bucket 6: 80%\n  bucket 6: 90%\n  bucket 6: 100%\n  Sorting block of length 481 for bucket 6\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 482 for bucket 6\nGetting block 7 of 15\n  Reserving size (1554) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 7:\n  bucket 7: 10%\n  bucket 7: 20%\n  bucket 7: 30%\n  bucket 7: 40%\n  bucket 7: 50%\n  bucket 7: 60%\n  bucket 7: 70%\n  bucket 7: 80%\n  bucket 7: 90%\n  bucket 7: 100%\n  Sorting block of length 1495 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1496 for bucket 7\nGetting block 8 of 15\n  Reserving size (1554) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\n  bucket 8: 10%\n  bucket 8: 20%\n  bucket 8: 30%\n  bucket 8: 40%\n  bucket 8: 50%\n  bucket 8: 60%\n  bucket 8: 70%\n  bucket 8: 80%\n  bucket 8: 90%\n  bucket 8: 100%\n  Sorting block of length 1179 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1180 for bucket 8\nGetting block 9 of 15\n  Reserving size (1554) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 1339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1340 for bucket 9\nGetting block 10 of 15\n  Reserving size (1554) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 10: 10%\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 938 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 939 for bucket 10\nGetting block 11 of 15\n  Reserving size (1554) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\n  bucket 11: 20%\n  bucket 11: 30%\n  bucket 11: 40%\n  bucket 11: 50%\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 1105 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1106 for bucket 11\nGetting block 12 of 15\n  Reserving size (1554) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 12: 20%\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 990 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 991 for bucket 12\nGetting block 13 of 15\n  Reserving size (1554) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 1169 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1170 for bucket 13\nGetting block 14 of 15\n  Reserving size (1554) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 966 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 967 for bucket 14\nGetting block 15 of 15\n  Reserving size (1554) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 1260 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 1261 for bucket 15\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n", "job_messages": [], "id": "69152a46fbc67029", "job_stdout": null}, "test_index": 9}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.3.4.3-9", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/categorize_elements_satisfying_criteria/categorize_elements_satisfying_criteria/1.0.0", "time_seconds": 47.295088052749634, "inputs": {"inputFile1": {"src": "hda", "id": "773312f3fae0f41f"}, "inputFile2": {"src": "hda", "id": "7a3540ce765c137d"}}, "tool_version": "1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/categorize_elements_satisfying_criteria/categorize_elements_satisfying_criteria/1.0.0", "update_time": "2019-06-25T22:58:37.536310", "inputs": {"inputFile1": {"src": "hda", "id": "773312f3fae0f41f", "uuid": "12814a9d-e8c8-4752-a6c3-ced2d0c6bcf4"}, "inputFile2": {"src": "hda", "id": "7a3540ce765c137d", "uuid": "facd8bb5-c14c-4eff-b011-5b4a05691625"}}, "outputs": {"outputFile1": {"src": "hda", "id": "4afe0fcda4f7a2b7", "uuid": "8ee491ed-5495-4cb7-8173-c26ca84423fc"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:58:26.662906", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "befcfa2267265df1", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/categorize_elements_satisfying_criteria/categorize_elements_satisfying_criteria/1.0.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/1.2.0", "time_seconds": 27.759902000427246, "inputs": {"input": {"src": "hda", "id": "3b59aeea4cc93526"}, "cond": "c3-c2", "round": "no"}, "tool_version": "1.2.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/1.2.0", "update_time": "2019-06-25T23:51:58.009465", "inputs": {"input": {"src": "hda", "id": "3b59aeea4cc93526", "uuid": "002e9ba6-5658-46a0-bf90-35d0828b0d20"}}, "outputs": {"out_file1": {"src": "hda", "id": "4cda6d8db1342524", "uuid": "9981ddeb-9050-47d2-98e9-69ed3e2958b5"}}, "history_id": "f840675b8d7f5485", "stdout": "Creating column 7 with expression c3-c2\nkept 100.00% of 65 lines.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:51:38.464387", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "header_lines_conditional": "{\"__current_case__\": 0, \"header_lines_select\": \"no\"}", "cond": "\"c3-c2\"", "round": "\"no\"", "dbkey": "\"?\""}, "tool_stdout": "Creating column 7 with expression c3-c2\nkept 100.00% of 65 lines.\n", "job_messages": [], "id": "a153ccd304f16414", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/1.2.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/1.2.0", "time_seconds": 68.37879800796509, "inputs": {"input": {"src": "hda", "id": "38592d001c3c35a4"}, "cond": "c4*1", "round": "no"}, "tool_version": "1.2.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/1.2.0", "update_time": "2019-06-25T23:52:17.185548", "inputs": {"input": {"src": "hda", "id": "38592d001c3c35a4", "uuid": "77bab713-943b-464c-b6a4-1d699cd32bfe"}}, "outputs": {"out_file1": {"src": "hda", "id": "c0082f7d62cc01a4", "uuid": "899eb73c-804e-43f3-a2ad-b6fb2db5e4ed"}}, "history_id": "f840675b8d7f5485", "stdout": "Creating column 9 with expression c4*1\nkept 100.00% of 5 lines.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:51:53.597738", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "header_lines_conditional": "{\"__current_case__\": 0, \"header_lines_select\": \"no\"}", "cond": "\"c4*1\"", "round": "\"no\"", "dbkey": "\"?\""}, "tool_stdout": "Creating column 9 with expression c4*1\nkept 100.00% of 5 lines.\n", "job_messages": [], "id": "b75f57c6f8041210", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/1.2.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/1.2.0", "time_seconds": 55.63708519935608, "inputs": {"header_lines_conditional|header_lines_select": "yes", "input": {"src": "hda", "id": "bccb49785a0344ff"}, "cond": "c4*1", "header_lines_conditional|header_new_column_name": "value1_again", "round": "no"}, "tool_version": "1.2.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/1.2.0", "update_time": "2019-06-25T23:52:27.728628", "inputs": {"input": {"src": "hda", "id": "bccb49785a0344ff", "uuid": "722d327e-7b14-4a1b-9efb-32c032a9394b"}}, "outputs": {"out_file1": {"src": "hda", "id": "585efaf3922fee05", "uuid": "2f2de4ab-e448-4aee-8d25-8e83c15990e7"}}, "history_id": "f840675b8d7f5485", "stdout": "Creating column 9 with expression c4*1\nkept 100.00% of 5 lines.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:52:09.935957", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "header_lines_conditional": "{\"__current_case__\": 1, \"header_lines_select\": \"yes\", \"header_new_column_name\": \"value1_again\"}", "cond": "\"c4*1\"", "round": "\"no\"", "dbkey": "\"?\""}, "tool_stdout": "Creating column 9 with expression c4*1\nkept 100.00% of 5 lines.\n", "job_messages": [], "id": "6447d030e7e6c373", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/1.2.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/1.2.0", "time_seconds": 55.74862718582153, "inputs": {"input": {"src": "hda", "id": "38592d001c3c35a4"}, "cond": "c4*1", "round": "yes"}, "tool_version": "1.2.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/1.2.0", "update_time": "2019-06-25T23:52:26.617227", "inputs": {"input": {"src": "hda", "id": "38592d001c3c35a4", "uuid": "77bab713-943b-464c-b6a4-1d699cd32bfe"}}, "outputs": {"out_file1": {"src": "hda", "id": "f75eb91d1733b352", "uuid": "07523ec1-8a3a-4def-99a9-90cd6b63fa75"}}, "history_id": "f840675b8d7f5485", "stdout": "Creating column 9 with expression c4*1\nkept 100.00% of 5 lines.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:52:09.723801", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "header_lines_conditional": "{\"__current_case__\": 0, \"header_lines_select\": \"no\"}", "cond": "\"c4*1\"", "round": "\"yes\"", "dbkey": "\"?\""}, "tool_stdout": "Creating column 9 with expression c4*1\nkept 100.00% of 5 lines.\n", "job_messages": [], "id": "e50fcdb01cd61e7f", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/1.2.0-3", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/complement/gops_complement_1/1.0.0", "time_seconds": 38.62124300003052, "inputs": {"allchroms": true, "input1": {"src": "hda", "id": "60c342e9087b9a47"}}, "tool_version": "1.0.0", "output_problems": ["History item  different than expected, difference (using diff):\n( /tmp/tmp5dE_xagops_complement_out.bed v. /tmp/tmpVVMzBTgops_complement_out.bed )\n--- local_file\n+++ history_data\n@@ -1,85 +1,111 @@\n+chr10\t0\t55251623\n+chr10\t55253124\t135413628\n+chr10_random\t0\t113275\n+chr11\t0\t1812377\n+chr11\t1812407\t116124407\n+chr11\t116124501\t116206508\n+chr11\t116206563\t116211733\n+chr11\t116212337\t134452384\n+chr12\t0\t38440094\n+chr12\t38440321\t132449811\n+chr12_random\t0\t466818\n+chr13\t0\t112381694\n+chr13\t112381953\t114142980\n+chr13_random\t0\t186858\n+chr14\t0\t98710240\n+chr14\t98712285\t106368585\n+chr15\t0\t41486872\n+chr15\t41487060\t41673708\n+chr15\t41673857\t41679161\n+chr15\t41679250\t41826029\n+chr15\t41826196\t100338915\n+chr15_random\t0\t784346\n********\n*SNIP *\n********\n-chr15\t0\t41486872\n-chr15\t41487060\t41673708\n-chr15\t41673857\t41679161\n-chr15\t41679250\t41826029\n-chr15\t41826196\t536870912\n-chr14\t0\t98710240\n-chr14\t98712285\t536870912\n-chr20\t0\t33330413\n-chr20\t33330423\t33513606\n-chr20\t33513792\t33579500\n-chr20\t33579527\t33593260\n-chr20\t33593348\t536870912\n-chr19\t0\t59068595\n-chr19\t59069564\t59236026\n-chr19\t59236146\t59297998\n-chr19\t59298008\t59302168\n-chr19\t59302288\t536870912\n-chr18\t0\t23786114\n-chr18\t23786321\t59406881\n-chr18\t59407046\t59455932\n-chr18\t59456337\t59600586\n-chr18\t59600754\t536870912\n+chrX\t152694263\t154824264\n+chrX_random\t0\t1719168\n+chrY\t0\t57701691\n"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/complement/gops_complement_1/1.0.0", "update_time": "2019-06-25T22:03:00.753429", "inputs": {"input1": {"src": "hda", "id": "60c342e9087b9a47", "uuid": "6210a852-1f28-4e64-8a35-95cae30bcc07"}}, "outputs": {"output": {"src": "hda", "id": "c7d4584d40489561", "uuid": "761511fa-c17f-44a5-887c-557cf682df36"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:02:40.284706", "stderr": "", "model_class": "Job", "params": {"allchroms": "\"true\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/hg17.len\"", "dbkey": "\"hg17\""}, "tool_stdout": "", "job_messages": [], "id": "1dbd3e63afa1d9a5", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/complement/gops_complement_1/1.0.0-0", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/complement/gops_complement_1/1.0.0", "time_seconds": 27.071220874786377, "inputs": {"allchroms": true, "input1": {"src": "hda", "id": "1750ef3f765f6286"}}, "tool_version": "1.0.0", "output_problems": ["History item  different than expected, difference (using diff):\n( /tmp/tmpqxeFZkgops_complement_out_diffCols.dat v. /tmp/tmpQSDmC3gops_complement_out_diffCols.dat )\n--- local_file\n+++ history_data\n@@ -1,88 +1,114 @@\n-chr7\t.\t.\t+\t0\t113660517\n-chr7\t.\t.\t+\t113660685\t116512159\n-chr7\t.\t.\t+\t116512389\t116714099\n-chr7\t.\t.\t+\t116714152\t116945541\n-chr7\t.\t.\t+\t116945787\t536870912\n-chr6\t.\t.\t+\t0\t108299600\n-chr6\t.\t.\t+\t108299744\t108594662\n-chr6\t.\t.\t+\t108594687\t108640045\n-chr6\t.\t.\t+\t108640151\t108722976\n-chr6\t.\t.\t+\t108723115\t536870912\n-chr5\t.\t.\t+\t0\t131311206\n-chr5\t.\t.\t+\t131311254\t131424298\n-chr5\t.\t.\t+\t131424460\t131556601\n-chr5\t.\t.\t+\t131556672\t131621326\n-chr5\t.\t.\t+\t131621419\t536870912\n-chrX\t.\t.\t+\t0\t122745047\n-chrX\t.\t.\t+\t122745924\t152648964\n-chrX\t.\t.\t+\t152649196\t152691446\n-chrX\t.\t.\t+\t152691471\t152694029\n-chrX\t.\t.\t+\t152694263\t536870912\n-chr2\t.\t.\t+\t0\t118288583\n-chr2\t.\t.\t+\t118288668\t118390395\n********\n*SNIP *\n********\n+chr6_hla_hap1\t0\t139182\n+chr6_hla_hap2\t0\t150447\n+chr7\t0\t113660517\n+chr7\t113660685\t116512159\n+chr7\t116512389\t116714099\n+chr7\t116714152\t116945541\n+chr7\t116945787\t158628139\n+chr7_random\t0\t778964\n+chr8\t0\t118881131\n+chr8\t118881317\t146274826\n+chr8_random\t0\t943810\n+chr9\t0\t128764156\n+chr9\t128764189\t128787519\n+chr9\t128789136\t128789552\n+chr9\t128789584\t128850516\n+chr9\t128850624\t138429268\n+chr9_random\t0\t1312665\n+chrM\t0\t16571\n+chrX\t0\t122745047\n+chrX\t122745924\t152648964\n+chrX\t152649196\t152691446\n+chrX\t152691471\t152694029\n+chrX\t152694263\t154824264\n+chrX_random\t0\t1719168\n+chrY\t0\t57701691\n"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/complement/gops_complement_1/1.0.0", "update_time": "2019-06-25T22:02:52.727537", "inputs": {"input1": {"src": "hda", "id": "1750ef3f765f6286", "uuid": "21cf4b6f-60b8-415e-a5e3-634042eaca66"}}, "outputs": {"output": {"src": "hda", "id": "c27d8bd9b04c9a5a", "uuid": "4a1a5f40-8e0b-4ef6-8365-c66345480787"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:02:37.212679", "stderr": "", "model_class": "Job", "params": {"allchroms": "\"true\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/hg17.len\"", "dbkey": "\"hg17\""}, "tool_stdout": "", "job_messages": [], "id": "b4d0cc20c7a015a7", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/complement/gops_complement_1/1.0.0-1", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/complement/gops_complement_1/1.0.0", "time_seconds": 26.748486042022705, "inputs": {"allchroms": true, "input1": {"src": "hda", "id": "e97f5600404a727e"}}, "tool_version": "1.0.0", "output_problems": ["History item  different than expected, difference (using diff):\n( /tmp/tmpPl0Rj1gops_complement_out2.bed v. /tmp/tmpzQZ6Kzgops_complement_out2.bed )\n--- local_file\n+++ history_data\n@@ -1,3 +1,45 @@\n+chr10\t0\t135413628\n+chr10_random\t0\t113275\n+chr11\t0\t134452384\n+chr12\t0\t132449811\n+chr12_random\t0\t466818\n+chr13\t0\t114142980\n+chr13_random\t0\t186858\n+chr14\t0\t106368585\n+chr15\t0\t100338915\n+chr15_random\t0\t784346\n+chr16\t0\t88827254\n+chr16_random\t0\t105485\n+chr17\t0\t78774742\n+chr17_random\t0\t2618010\n+chr18\t0\t76117153\n+chr18_random\t0\t4262\n+chr19\t0\t63811651\n+chr19_random\t0\t301858\n+chr1\t0\t245522847\n+chr1_random\t0\t3897131\n+chr20\t0\t62435964\n+chr21\t0\t46944323\n+chr22\t0\t49554710\n+chr22_random\t0\t257318\n+chr2\t0\t243018229\n+chr2_random\t0\t418158\n+chr3\t0\t199505740\n+chr3_random\t0\t970716\n+chr4\t0\t191411218\n+chr4_random\t0\t1030282\n+chr5\t0\t180857866\n+chr5_random\t0\t143687\n+chr6\t0\t170975699\n+chr6_random\t0\t1875562\n+chr6_hla_hap1\t0\t139182\n+chr6_hla_hap2\t0\t150447\n+chr7\t0\t158628139\n"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/complement/gops_complement_1/1.0.0", "update_time": "2019-06-25T22:03:07.525743", "inputs": {"input1": {"src": "hda", "id": "e97f5600404a727e", "uuid": "aff9c501-3823-4e2b-80b0-ffb3862932af"}}, "outputs": {"output": {"src": "hda", "id": "c9f379e6efcc4b86", "uuid": "3dfce281-1bea-4a11-a78d-556009dfeb0a"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:02:51.228165", "stderr": "", "model_class": "Job", "params": {"allchroms": "\"true\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/hg17.len\"", "dbkey": "\"hg17\""}, "tool_stdout": "", "job_messages": [], "id": "0ee97d7ea0c49ca4", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/complement/gops_complement_1/1.0.0-2", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/concat/gops_concat_1/1.0.1", "time_seconds": 1.603363037109375, "inputs": {"input2": {"src": "hda", "id": "0a580455af01cf77"}, "input1": {"src": "hda", "id": "eb3dec7d86df5bd6"}, "sameformat": true}, "tool_version": "1.0.1", "test_index": 0, "execution_problem": "Error creating a job for these tool inputs - The attributes of this dataset are not properly set. Click the pencil icon in the history item to set the chrom, start, end and strand columns."}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/concat/gops_concat_1/1.0.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/concat/gops_concat_1/1.0.1", "time_seconds": 26.330482006072998, "inputs": {"input2": {"src": "hda", "id": "b95affca6dcd33b8"}, "input1": {"src": "hda", "id": "eb3dec7d86df5bd6"}, "sameformat": false}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/concat/gops_concat_1/1.0.1", "update_time": "2019-06-25T22:56:43.257145", "inputs": {"input2": {"src": "hda", "id": "b95affca6dcd33b8", "uuid": "c812c793-636a-4345-b435-ae655e88a29c"}, "input1": {"src": "hda", "id": "eb3dec7d86df5bd6", "uuid": "42d6cf4f-32b9-4487-8104-8f245c6108ff"}}, "outputs": {"output": {"src": "hda", "id": "a316f356bd020c2b", "uuid": "33fccd65-f777-48dc-8d19-6c625a4b1df7"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:56:27.390289", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "sameformat": "\"false\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "706716007c773973", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/concat/gops_concat_1/1.0.1-1", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/correlation/cor2/1.0.0", "time_seconds": 49.002893924713135, "inputs": {"numeric_columns": ["2", "3"], "input1": {"src": "hda", "id": "3ef45cdea082f862"}, "method": "pearson"}, "tool_version": "1.0.0", "output_problems": ["History item  different than expected, difference (using diff):\n( /tmp/tmpRRKjckcor_out.txt v. /tmp/tmpAcgxXpcor_out.txt )\n--- local_file\n+++ history_data\n@@ -1,2 +1,2 @@\n-1.0\t0.730635686279\n-0.730635686279\t1.0\n+1.0\t0.7306356862792351\n+0.7306356862792351\t1.0\n"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/correlation/cor2/1.0.0", "update_time": "2019-06-26T01:48:55.542791", "inputs": {"input1": {"src": "hda", "id": "3ef45cdea082f862", "uuid": "882ad1d4-94eb-4a32-bf21-f51c90b6c5ce"}}, "outputs": {"out_file1": {"src": "hda", "id": "d689dd1f2a83a34b", "uuid": "505de777-e512-4b36-bee6-4d7ae9b9eb17"}}, "history_id": "f840675b8d7f5485", "stdout": "..Skipped 2 lines starting with line #1. Value 'Height' in column 2 is not numeric.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T01:48:41.992120", "stderr": "", "model_class": "Job", "params": {"numeric_columns": "[\"2\", \"3\"]", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "method": "\"pearson\"", "dbkey": "\"?\""}, "tool_stdout": "..Skipped 2 lines starting with line #1. Value 'Height' in column 2 is not numeric.\n", "job_messages": [], "id": "0eaf2b61f43eaa18", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/correlation/cor2/1.0.0-0", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/cufflinks/cufflinks/2.2.1.2", "time_seconds": 50.67136907577515, "inputs": {"min_isoform_fraction": "0.05", "bias_correction|do_bias_correction": "No", "multiread_correct": "No", "pre_mrna_fraction": "0.05", "max_intron_len": "300000", "input": {"src": "hda", "id": "66e55edefc104e68"}, "reference_annotation|use_ref": "No", "advanced_settings|use_advanced_settings": "No", "length_correction": ""}, "tool_version": "2.2.1.2", "output_problems": ["History item  different than expected, difference (using diff):\n( /tmp/tmpFCNpimcufflinks_out4.txt v. /tmp/tmpIyJSvUcufflinks_out4.txt )\n--- local_file\n+++ history_data\n@@ -1,2 +1 @@\n-tracking_id\tclass_code\tnearest_ref_id\tgene_id\tgene_short_name\ttss_id\tlocus\tlength\tcoverage\tFPKM\tFPKM_conf_lo\tFPKM_conf_hi\tFPKM_status\n-CUFF.1.1\t-\t-\tCUFF.1\t-\t-\ttest_chromosome:52-550\t298\t145.77\t1.06791e+07\t8.5427e+06\t1.28156e+07\tOK\n+100.000000\n"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/cufflinks/cufflinks/2.2.1.2", "update_time": "2019-06-25T23:13:10.345771", "inputs": {"input": {"src": "hda", "id": "66e55edefc104e68", "uuid": "c5c43940-40a7-40c2-9767-7bfe11fc0329"}}, "outputs": {"skipped": {"src": "hda", "id": "a4457b99a8b967c5", "uuid": "918fdc45-05c0-4515-ad8d-2a3744704a15"}, "genes_expression": {"src": "hda", "id": "cf9fe2a1033733e4", "uuid": "14b7f945-44c9-42c2-9024-ca4abb31eabf"}, "transcripts_expression": {"src": "hda", "id": "3d888e68b46ea1da", "uuid": "2452edc4-09db-4abc-b465-1bece8f2d71b"}, "assembled_isoforms": {"src": "hda", "id": "3812c8b21b71b100", "uuid": "67bdb777-86ff-4530-bb17-1b6b385b0821"}, "total_map_mass": {"src": "hda", "id": "ea978593a10c4f57", "uuid": "b0eb72f6-8398-4363-8c7e-82f07f4cc4b8"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:12:51.513998", "stderr": "", "model_class": "Job", "params": {"min_isoform_fraction": "\"0.05\"", "multiread_correct": "\"No\"", "dbkey": "\"?\"", "pre_mrna_fraction": "\"0.05\"", "bias_correction": "{\"__current_case__\": 1, \"do_bias_correction\": \"No\"}", "max_intron_len": "\"300000\"", "reference_annotation": "{\"__current_case__\": 0, \"use_ref\": \"No\"}", "global_model": "null", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "length_correction": "\"\"", "advanced_settings": "{\"__current_case__\": 0, \"use_advanced_settings\": \"No\"}"}, "tool_stdout": "", "job_messages": [], "id": "37887c7ddaa9b709", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/cufflinks/cufflinks/2.2.1.2-0", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/dwt_var_perfeature/dwt_var1/1.0.1", "time_seconds": 1675.7582499980927, "inputs": {"alpha": "0.05", "feature": "4", "inputFile": {"src": "hda", "id": "a2b2df2aa3999c48"}}, "tool_version": "1.0.1", "output_problems": ["No JSON object could be decoded"], "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/dwt_var_perfeature/dwt_var1/1.0.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/emboss_5/EMBOSS: backtranseq2/6.6.0", "time_seconds": 65.67532706260681, "inputs": {"cfile": "Ehum.cut", "input1": {"src": "hda", "id": "20e0feb49a22752a"}, "out_format1": "fasta"}, "tool_version": "6.6.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/emboss_5/EMBOSS: backtranseq2/6.6.0", "update_time": "2019-06-26T00:42:22.373528", "inputs": {"input1": {"src": "hda", "id": "20e0feb49a22752a", "uuid": "b97bc525-1722-4a4c-982d-2a455fba0f41"}}, "outputs": {"out_file1": {"src": "hda", "id": "97639c1b63ac997c", "uuid": "fd4badd3-d38c-443d-95e6-dabbf4e4ba22"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:42:06.784359", "stderr": "", "model_class": "Job", "params": {"cfile": "\"Ehum.cut\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "out_format1": "\"fasta\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "6a00df1ce1dd9fbe", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/emboss_5/EMBOSS: backtranseq2/6.6.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/emboss_5/EMBOSS: codcmp12/5.0.0", "time_seconds": 54.258589029312134, "inputs": {"cfile1": "Ehum.cut", "cfile2": "Eacc.cut"}, "tool_version": "5.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/emboss_5/EMBOSS: codcmp12/5.0.0", "update_time": "2019-06-26T00:35:17.693523", "inputs": {}, "outputs": {"out_file1": {"src": "hda", "id": "6180203e53259523", "uuid": "431793f9-1468-4d81-a155-dfa621fdb536"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:35:01.691349", "stderr": "", "model_class": "Job", "params": {"cfile1": "\"Ehum.cut\"", "cfile2": "\"Eacc.cut\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "3d6b97e52e784c0f", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/emboss_5/EMBOSS: codcmp12/5.0.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/emboss_5/EMBOSS: newseq59/5.0.0", "time_seconds": 47.46056890487671, "inputs": {"type": "N", "seqname": "cytoc", "out_format1": "fasta", "description": "fragment_of_cytochrome_c", "sequence": "KKKEERADLIAY"}, "tool_version": "5.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/emboss_5/EMBOSS: newseq59/5.0.0", "update_time": "2019-06-26T00:39:32.397713", "inputs": {}, "outputs": {"out_file1": {"src": "hda", "id": "43efac22e2a729c7", "uuid": "1c634262-c5e0-4680-829e-08c167ba1aff"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:39:19.205245", "stderr": "", "model_class": "Job", "params": {"seqname": "\"cytoc\"", "out_format1": "\"fasta\"", "description": "\"fragment_of_cytochrome_c\"", "sequence": "\"KKKEERADLIAY\"", "type": "\"N\"", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "e0de81b3dc4d2631", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/emboss_5/EMBOSS: newseq59/5.0.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_clipping_histogram/cshl_fasta_clipping_histogram/1.0.1", "time_seconds": 54.73195695877075, "inputs": {"input": {"src": "hda", "id": "1d40be017b3d5246"}}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_clipping_histogram/cshl_fasta_clipping_histogram/1.0.1", "update_time": "2019-06-25T23:52:57.482392", "inputs": {"input": {"src": "hda", "id": "1d40be017b3d5246", "uuid": "57106222-439c-42d8-9d70-c70cd121c3e6"}}, "outputs": {"outfile": {"src": "hda", "id": "e22d1e53065c27b8", "uuid": "f9045d17-e35a-4f2e-8aa7-3be402bac94f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:52:38.600542", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "8cf7d8081ef29c31", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_clipping_histogram/cshl_fasta_clipping_histogram/1.0.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_clipping_histogram/cshl_fasta_clipping_histogram/1.0.1", "time_seconds": 56.55495095252991, "inputs": {"input": {"src": "hda", "id": "a6d5d93cf758cb91"}}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_clipping_histogram/cshl_fasta_clipping_histogram/1.0.1", "update_time": "2019-06-25T23:52:58.805313", "inputs": {"input": {"src": "hda", "id": "a6d5d93cf758cb91", "uuid": "146af8fd-a473-4c48-ad7c-75575af95eac"}}, "outputs": {"outfile": {"src": "hda", "id": "2c9360fd278aadcd", "uuid": "018c4df3-1924-49b1-b88d-ebbfc7655b58"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:52:41.823891", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "4f6d3320280ccc93", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_clipping_histogram/cshl_fasta_clipping_histogram/1.0.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_compute_length/fasta_compute_length/1.0.1", "time_seconds": 20.813653230667114, "inputs": {"keep_first_word": false, "input": {"src": "hda", "id": "b42ebf0081e3c093"}, "keep_first": "0"}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_compute_length/fasta_compute_length/1.0.1", "update_time": "2019-06-25T22:43:22.573629", "inputs": {"input": {"src": "hda", "id": "b42ebf0081e3c093", "uuid": "2eff7573-3b4d-493e-b93c-5a8aaefcb9dd"}}, "outputs": {"output": {"src": "hda", "id": "a468aa58dbe3733b", "uuid": "b1ed688b-0ddd-4591-8c59-bdb438af0229"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:43:11.722851", "stderr": "", "model_class": "Job", "params": {"keep_first_word": "\"false\"", "keep_first": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "7bf6084102625684", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_compute_length/fasta_compute_length/1.0.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_compute_length/fasta_compute_length/1.0.1", "time_seconds": 45.04157590866089, "inputs": {"keep_first_word": false, "input": {"src": "hda", "id": "0371d1f06c83d372"}, "keep_first": "0"}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_compute_length/fasta_compute_length/1.0.1", "update_time": "2019-06-25T22:43:56.869251", "inputs": {"input": {"src": "hda", "id": "0371d1f06c83d372", "uuid": "bc7ea0f2-55ce-4f70-ac11-13a33a36d007"}}, "outputs": {"output": {"src": "hda", "id": "4ecf603196bea175", "uuid": "188e4f7a-e6e0-4378-a102-119198235a94"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:43:45.433181", "stderr": "", "model_class": "Job", "params": {"keep_first_word": "\"false\"", "keep_first": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "e810e4451cf0322b", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_compute_length/fasta_compute_length/1.0.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_compute_length/fasta_compute_length/1.0.1", "time_seconds": 41.099863052368164, "inputs": {"keep_first_word": false, "input": {"src": "hda", "id": "f8164179eb840aff"}, "keep_first": "14"}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_compute_length/fasta_compute_length/1.0.1", "update_time": "2019-06-25T22:43:59.394682", "inputs": {"input": {"src": "hda", "id": "f8164179eb840aff", "uuid": "f554a79a-30a7-4484-9c46-facef51ed0d7"}}, "outputs": {"output": {"src": "hda", "id": "0a16536c5ad01815", "uuid": "1239970f-adb5-4eb3-8832-f22afeaf4dea"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:43:47.660265", "stderr": "", "model_class": "Job", "params": {"keep_first_word": "\"false\"", "keep_first": "\"14\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "b3438d8282c00659", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_compute_length/fasta_compute_length/1.0.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_filter_by_length/fasta_filter_by_length/1.1", "time_seconds": 26.077150106430054, "inputs": {"input": {"src": "hda", "id": "c80541e72e2debb1"}, "max_length": "0", "min_length": "10"}, "tool_version": "1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_filter_by_length/fasta_filter_by_length/1.1", "update_time": "2019-06-25T22:35:11.460015", "inputs": {"input": {"src": "hda", "id": "c80541e72e2debb1", "uuid": "3744a877-6bec-4366-bcab-8644437e6b17"}}, "outputs": {"output": {"src": "hda", "id": "b731e4c508a2591e", "uuid": "4c80e16e-e778-4655-8eed-06a26b9740e4"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:34:54.708631", "stderr": "", "model_class": "Job", "params": {"min_length": "\"10\"", "max_length": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "f10c28e484e3b1e5", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_filter_by_length/fasta_filter_by_length/1.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0", "time_seconds": 39.748255014419556, "inputs": {"input": {"src": "hda", "id": "93d81682ab90e62e"}, "keep_first": "0", "descr_columns": "1"}, "tool_version": "1.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0", "update_time": "2019-06-25T22:41:21.570826", "inputs": {"input": {"src": "hda", "id": "93d81682ab90e62e", "uuid": "9f1a723f-a3fe-4780-bf3a-368dc7118049"}}, "outputs": {"output": {"src": "hda", "id": "2597c0f7380f3346", "uuid": "1f600b69-9199-41aa-9b3e-b57febaca87f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:40:57.598614", "stderr": "", "model_class": "Job", "params": {"keep_first": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "descr_columns": "\"1\""}, "tool_stdout": "", "job_messages": [], "id": "b7c1b28f41dd102d", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0", "time_seconds": 18.574018001556396, "inputs": {"input": {"src": "hda", "id": "a391f4c73f09742c"}, "keep_first": "0", "descr_columns": "1"}, "tool_version": "1.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0", "update_time": "2019-06-25T22:41:09.285909", "inputs": {"input": {"src": "hda", "id": "a391f4c73f09742c", "uuid": "1126537e-c5b7-4bb3-9efc-84fa0666e2e5"}}, "outputs": {"output": {"src": "hda", "id": "50f504765eb1997f", "uuid": "27ec708b-07c5-4c9f-ab82-6fedda515848"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:40:57.763732", "stderr": "", "model_class": "Job", "params": {"keep_first": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "descr_columns": "\"1\""}, "tool_stdout": "", "job_messages": [], "id": "fbe4d7a17e2f92ee", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0", "time_seconds": 17.914993047714233, "inputs": {"input": {"src": "hda", "id": "48170144d0e2def2"}, "keep_first": "14", "descr_columns": "1"}, "tool_version": "1.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0", "update_time": "2019-06-25T22:41:44.473961", "inputs": {"input": {"src": "hda", "id": "48170144d0e2def2", "uuid": "c52d856c-19fb-4435-8897-7253e4fdcde9"}}, "outputs": {"output": {"src": "hda", "id": "58f603df8769b17e", "uuid": "c0f6d303-d98e-427f-ae98-0b527bb41f8e"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:41:32.496079", "stderr": "", "model_class": "Job", "params": {"keep_first": "\"14\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "descr_columns": "\"1\""}, "tool_stdout": "", "job_messages": [], "id": "d1d766ac24fb9c28", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0", "time_seconds": 25.511487007141113, "inputs": {"input": {"src": "hda", "id": "a0dc3b41b24dca26"}, "keep_first": "0", "descr_columns": "2"}, "tool_version": "1.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0", "update_time": "2019-06-25T22:41:33.222481", "inputs": {"input": {"src": "hda", "id": "a0dc3b41b24dca26", "uuid": "723f53c5-20cc-40b8-829b-773e5fcb1eb8"}}, "outputs": {"output": {"src": "hda", "id": "99943e276ffc613e", "uuid": "3eb5b6de-8a5e-463d-8ebe-9a3af54f27c1"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:41:19.233381", "stderr": "", "model_class": "Job", "params": {"keep_first": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "descr_columns": "\"2\""}, "tool_stdout": "", "job_messages": [], "id": "14b02fcd83053650", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0", "time_seconds": 25.50818109512329, "inputs": {"input": {"src": "hda", "id": "1ff0a4de567e013f"}, "keep_first": "0", "descr_columns": "5"}, "tool_version": "1.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0", "update_time": "2019-06-25T22:42:00.108591", "inputs": {"input": {"src": "hda", "id": "1ff0a4de567e013f", "uuid": "66dd40f7-9091-4a9d-87e5-7b4c5ecbf7a0"}}, "outputs": {"output": {"src": "hda", "id": "15e9571b0a911353", "uuid": "124303cc-e9ba-4b33-9b13-b74dc98433ad"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:41:40.199031", "stderr": "", "model_class": "Job", "params": {"keep_first": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "descr_columns": "\"5\""}, "tool_stdout": "", "job_messages": [], "id": "c1ffe17a9cafb42d", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0", "time_seconds": 17.940762996673584, "inputs": {"input": {"src": "hda", "id": "1ff0a4de567e013f"}, "keep_first": "10", "descr_columns": "5"}, "tool_version": "1.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0", "update_time": "2019-06-25T22:42:04.552990", "inputs": {"input": {"src": "hda", "id": "1ff0a4de567e013f", "uuid": "66dd40f7-9091-4a9d-87e5-7b4c5ecbf7a0"}}, "outputs": {"output": {"src": "hda", "id": "658d443edb158992", "uuid": "548d6d62-b999-4a5b-b734-48d57d64d01a"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:41:52.443841", "stderr": "", "model_class": "Job", "params": {"keep_first": "\"10\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "descr_columns": "\"5\""}, "tool_stdout": "", "job_messages": [], "id": "7bad4ae15d5fe3b3", "job_stdout": ""}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1", "time_seconds": 72.45491194725037, "inputs": {"min_size": "0", "max_num_deviants": "0", "paired_end": false, "input_file": {"src": "hda", "id": "a67eec0126713b87"}, "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score": "0", "max_quality": "0", "min_quality": "0", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|score_operation": "min", "fastq_filters_0|offset_type|left_column_offset": "0", "max_size": "0"}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1", "update_time": "2019-06-25T22:44:30.962814", "inputs": {"input_file": {"src": "hda", "id": "a67eec0126713b87", "uuid": "5b1a03ee-e3ea-48c1-befb-4665fa42d45a"}}, "outputs": {"output_file": {"src": "hda", "id": "0fa07b0f9841a915", "uuid": "644d194d-6ab6-4e44-ace9-71df0adb336a"}}, "history_id": "f840675b8d7f5485", "stdout": "Kept 2 of 2 reads (100.00%).\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:44:08.589365", "stderr": "", "model_class": "Job", "params": {"max_num_deviants": "\"0\"", "paired_end": "\"false\"", "dbkey": "\"?\"", "min_size": "\"0\"", "max_quality": "\"0.0\"", "max_size": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "min_quality": "\"0.0\""}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "id": "072913453098effc", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1", "time_seconds": 64.84940099716187, "inputs": {"min_size": "0", "max_num_deviants": "0", "paired_end": false, "input_file": {"src": "hda", "id": "55e414b0be9b9612"}, "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score": "0", "max_quality": "0", "min_quality": "0", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|score_operation": "min", "fastq_filters_0|offset_type|left_column_offset": "0", "max_size": "0"}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1", "update_time": "2019-06-25T22:44:28.207946", "inputs": {"input_file": {"src": "hda", "id": "55e414b0be9b9612", "uuid": "cf4a0b80-0756-4f3e-a8ce-68c3dfc644a5"}}, "outputs": {"output_file": {"src": "hda", "id": "d38bab7b58b89e1f", "uuid": "47dabb1b-3429-40a7-8f96-c53fe86947c2"}}, "history_id": "f840675b8d7f5485", "stdout": "Kept 2 of 2 reads (100.00%).\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:44:13.597237", "stderr": "", "model_class": "Job", "params": {"max_num_deviants": "\"0\"", "paired_end": "\"false\"", "dbkey": "\"?\"", "min_size": "\"0\"", "max_quality": "\"0.0\"", "max_size": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "min_quality": "\"0.0\""}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "id": "c5fe7babff90f71e", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1", "time_seconds": 64.54004192352295, "inputs": {"min_size": "0", "max_num_deviants": "0", "paired_end": false, "input_file": {"src": "hda", "id": "cd7f947faa6e5643"}, "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score": "0", "max_quality": "0", "min_quality": "0", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|score_operation": "min", "fastq_filters_0|offset_type|left_column_offset": "0", "max_size": "0"}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1", "update_time": "2019-06-25T22:44:27.722119", "inputs": {"input_file": {"src": "hda", "id": "cd7f947faa6e5643", "uuid": "05258ba4-7601-440f-8663-3ac0096403c1"}}, "outputs": {"output_file": {"src": "hda", "id": "500cf00961b70711", "uuid": "c606e1c4-4e04-4ae8-b743-7f9e8bb9b7c2"}}, "history_id": "f840675b8d7f5485", "stdout": "Kept 2 of 2 reads (100.00%).\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:44:14.460074", "stderr": "", "model_class": "Job", "params": {"max_num_deviants": "\"0\"", "paired_end": "\"false\"", "dbkey": "\"?\"", "min_size": "\"0\"", "max_quality": "\"0.0\"", "max_size": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "min_quality": "\"0.0\""}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "id": "3cd4e37263ce16fd", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1", "time_seconds": 64.47906994819641, "inputs": {"min_size": "0", "max_num_deviants": "0", "paired_end": false, "input_file": {"src": "hda", "id": "a67eec0126713b87"}, "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score": "0", "max_quality": "0", "min_quality": "1", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|score_operation": "min", "fastq_filters_0|offset_type|left_column_offset": "0", "max_size": "0"}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1", "update_time": "2019-06-25T22:44:35.166921", "inputs": {"input_file": {"src": "hda", "id": "a67eec0126713b87", "uuid": "5b1a03ee-e3ea-48c1-befb-4665fa42d45a"}}, "outputs": {"output_file": {"src": "hda", "id": "ae416e4f5d9fc733", "uuid": "45da573e-d972-4657-bb09-fe13c434d3de"}}, "history_id": "f840675b8d7f5485", "stdout": "Kept 0 of 2 reads (0.00%).\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:44:21.284042", "stderr": "", "model_class": "Job", "params": {"max_num_deviants": "\"0\"", "paired_end": "\"false\"", "dbkey": "\"?\"", "min_size": "\"0\"", "max_quality": "\"0.0\"", "max_size": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "min_quality": "\"1.0\""}, "tool_stdout": "Kept 0 of 2 reads (0.00%).\n", "job_messages": [], "id": "93c71661c74d13ce", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1", "time_seconds": 65.04061484336853, "inputs": {"min_size": "0", "max_num_deviants": "1", "paired_end": false, "input_file": {"src": "hda", "id": "a67eec0126713b87"}, "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score": "0", "max_quality": "0", "min_quality": "1", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|score_operation": "min", "fastq_filters_0|offset_type|left_column_offset": "0", "max_size": "0"}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1", "update_time": "2019-06-25T22:44:37.508129", "inputs": {"input_file": {"src": "hda", "id": "a67eec0126713b87", "uuid": "5b1a03ee-e3ea-48c1-befb-4665fa42d45a"}}, "outputs": {"output_file": {"src": "hda", "id": "2c50c2787b8ee485", "uuid": "c3c7e0fd-6a89-4a91-97ec-8eb2689405d6"}}, "history_id": "f840675b8d7f5485", "stdout": "Kept 2 of 2 reads (100.00%).\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:44:23.989970", "stderr": "", "model_class": "Job", "params": {"max_num_deviants": "\"1\"", "paired_end": "\"false\"", "dbkey": "\"?\"", "min_size": "\"0\"", "max_quality": "\"0.0\"", "max_size": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "min_quality": "\"1.0\""}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "id": "9533175f51be2f6e", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1", "time_seconds": 58.1859610080719, "inputs": {"min_size": "0", "max_num_deviants": "0", "paired_end": false, "input_file": {"src": "hda", "id": "a67eec0126713b87"}, "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score": "1", "max_quality": "0", "min_quality": "0", "fastq_filters_0|offset_type|right_column_offset": "1", "fastq_filters_0|score_operation": "min", "fastq_filters_0|offset_type|left_column_offset": "1", "max_size": "0"}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1", "update_time": "2019-06-25T22:44:44.976568", "inputs": {"input_file": {"src": "hda", "id": "a67eec0126713b87", "uuid": "5b1a03ee-e3ea-48c1-befb-4665fa42d45a"}}, "outputs": {"output_file": {"src": "hda", "id": "3f97c69f8356c424", "uuid": "b3f91780-1329-4751-9774-308ae2869f1b"}}, "history_id": "f840675b8d7f5485", "stdout": "Kept 2 of 2 reads (100.00%).\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:44:32.245134", "stderr": "", "model_class": "Job", "params": {"max_num_deviants": "\"0\"", "paired_end": "\"false\"", "dbkey": "\"?\"", "min_size": "\"0\"", "max_quality": "\"0.0\"", "max_size": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"1\", \"right_column_offset\": \"1\"}, \"score\": \"1.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "min_quality": "\"0.0\""}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "id": "6fae936ee7db6b93", "job_stdout": ""}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.1-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_groomer/fastq_groomer/1.1.1", "time_seconds": 49.554980993270874, "inputs": {"input_type": "sanger", "options_type|options_type_selector": "basic", "input_file": {"src": "hda", "id": "3abc640a83209fc7"}}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_groomer/fastq_groomer/1.1.1", "update_time": "2019-06-26T01:47:59.295123", "inputs": {"input_file": {"src": "hda", "id": "3abc640a83209fc7", "uuid": "e176d9b3-c82f-4fa7-860b-3742301dc3d6"}}, "outputs": {"output_file": {"src": "hda", "id": "184ef879256c7b0f", "uuid": "9880a480-d194-460a-b65e-7163f1854503"}}, "history_id": "f840675b8d7f5485", "stdout": "Groomed 2 sanger.gz reads into sanger reads.\nBased upon quality and sequence, the input data is valid for: sanger, sanger.gz, sanger.bz2\nInput ASCII range: '!'(33) - '~'(126)\nInput decimal range: 0 - 93\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T01:47:45.807254", "stderr": "", "model_class": "Job", "params": {"input_type": "\"sanger\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "options_type": "{\"__current_case__\": 0, \"options_type_selector\": \"basic\"}", "dbkey": "\"?\""}, "tool_stdout": "Groomed 2 sanger.gz reads into sanger reads.\nBased upon quality and sequence, the input data is valid for: sanger, sanger.gz, sanger.bz2\nInput ASCII range: '!'(33) - '~'(126)\nInput decimal range: 0 - 93\n", "job_messages": [], "id": "323a004bdf369f16", "job_stdout": ""}, "test_index": 30}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_groomer/fastq_groomer/1.1.1-30", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_groomer/fastq_groomer/1.1.1", "time_seconds": 58.620516777038574, "inputs": {"input_type": "cssanger", "options_type|options_type_selector": "basic", "input_file": {"src": "hda", "id": "bc0f97db5a8f63de"}}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_groomer/fastq_groomer/1.1.1", "update_time": "2019-06-26T01:48:03.326381", "inputs": {"input_file": {"src": "hda", "id": "bc0f97db5a8f63de", "uuid": "edb16005-8435-4d83-a951-07c503a8ddf9"}}, "outputs": {"output_file": {"src": "hda", "id": "f82e0f42f7e193a4", "uuid": "c0b441d6-a8be-4a09-aab2-adc4a0ff6c1e"}}, "history_id": "f840675b8d7f5485", "stdout": "Groomed 2 cssanger.bz2 reads into cssanger reads.\nBased upon quality and sequence, the input data is valid for: cssanger, cssanger.gz, cssanger.bz2\nInput ASCII range: '!'(33) - '~'(126)\nInput decimal range: 0 - 93\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T01:47:48.886482", "stderr": "", "model_class": "Job", "params": {"input_type": "\"cssanger\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "options_type": "{\"__current_case__\": 0, \"options_type_selector\": \"basic\"}", "dbkey": "\"?\""}, "tool_stdout": "Groomed 2 cssanger.bz2 reads into cssanger reads.\nBased upon quality and sequence, the input data is valid for: cssanger, cssanger.gz, cssanger.bz2\nInput ASCII range: '!'(33) - '~'(126)\nInput decimal range: 0 - 93\n", "job_messages": [], "id": "dc301ceaef72ae9d", "job_stdout": ""}, "test_index": 31}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_groomer/fastq_groomer/1.1.1-31", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.2", "time_seconds": 60.058855056762695, "inputs": {"input_file": {"src": "hda", "id": "03c858640c008651"}}, "tool_version": "1.1.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.2", "update_time": "2019-06-25T22:42:56.870475", "inputs": {"input_file": {"src": "hda", "id": "03c858640c008651", "uuid": "e706e67c-f246-4333-85d5-667c35cfa0a5"}}, "outputs": {"output2_pairs_file": {"src": "hda", "id": "e25263d084612e02", "uuid": "179fa6b4-387d-455c-bc80-330f7ebbdacb"}, "output1_pairs_file": {"src": "hda", "id": "fff7a63698bedc08", "uuid": "3b55475a-897e-447d-a8b1-fc35e6e82f30"}, "output2_singles_file": {"src": "hda", "id": "243e95aa5bf6dc49", "uuid": "682b26fa-91a4-4792-9436-94cabf4d6911"}, "output1_singles_file": {"src": "hda", "id": "6b64c4111a2876bc", "uuid": "30446c2a-7c98-4214-9eab-f1f97f3dd4e8"}}, "history_id": "f840675b8d7f5485", "stdout": "De-interlaced 5.0 pairs of sequences.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:42:43.351710", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "De-interlaced 5.0 pairs of sequences.\n", "job_messages": [], "id": "7980cb94a48919f8", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.2-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.2", "time_seconds": 63.9750759601593, "inputs": {"input_file": {"src": "hda", "id": "79a06efa89146bfa"}}, "tool_version": "1.1.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.2", "update_time": "2019-06-25T22:42:53.206696", "inputs": {"input_file": {"src": "hda", "id": "79a06efa89146bfa", "uuid": "12804274-f011-407b-9f00-0d7f1d6babf8"}}, "outputs": {"output2_pairs_file": {"src": "hda", "id": "87997e5e32e5c401", "uuid": "af8c69d3-030c-4f8e-b427-86bf195e5b2e"}, "output1_pairs_file": {"src": "hda", "id": "b82b9a6ac5188d6f", "uuid": "f6e5943e-0ad7-489d-ab42-054b1931cecb"}, "output2_singles_file": {"src": "hda", "id": "3580b511da1be459", "uuid": "5890e548-9efe-4e56-9c2d-0612c1fc1bed"}, "output1_singles_file": {"src": "hda", "id": "0f3fea44fc48e396", "uuid": "b5f36b5e-8ef8-48ad-8073-3d76c97f590c"}}, "history_id": "f840675b8d7f5485", "stdout": "There were 2 reads with no mate.\nDe-interlaced 4.0 pairs of sequences.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:42:38.398973", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "There were 2 reads with no mate.\nDe-interlaced 4.0 pairs of sequences.\n", "job_messages": [], "id": "ff8e71d95bb570e6", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.2-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.2", "time_seconds": 58.516611099243164, "inputs": {"input_file": {"src": "hda", "id": "d07d808520de435b"}}, "tool_version": "1.1.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.2", "update_time": "2019-06-25T22:43:01.754010", "inputs": {"input_file": {"src": "hda", "id": "d07d808520de435b", "uuid": "a8c3813f-045f-4494-b573-152f41e4a214"}}, "outputs": {"output2_pairs_file": {"src": "hda", "id": "a1b7a542e9c277ed", "uuid": "a5707cce-a678-454e-a09a-96d5fbceecea"}, "output1_pairs_file": {"src": "hda", "id": "bbce7d6827766810", "uuid": "6e36b86a-1a53-4645-ada5-59f7e051e23f"}, "output2_singles_file": {"src": "hda", "id": "4d2a5d4668099d86", "uuid": "33bd1b3c-bce3-4c06-8290-dc87a1d06df5"}, "output1_singles_file": {"src": "hda", "id": "69bd34d726b40d64", "uuid": "076d19c1-eec8-49fd-8cfa-c28aac427d8f"}}, "history_id": "f840675b8d7f5485", "stdout": "There were 2 reads with no mate.\nDe-interlaced 4.0 pairs of sequences.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:42:48.471508", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "There were 2 reads with no mate.\nDe-interlaced 4.0 pairs of sequences.\n", "job_messages": [], "id": "da7c9c6ade832d84", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.2-2", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.2", "time_seconds": 35.2464439868927, "inputs": {"input_file": {"src": "hda", "id": "1d3c3fa8e5bd001d"}}, "tool_version": "1.1.2", "output_problems": ["'bz2.BZ2File' object has no attribute 'readable'", "'bz2.BZ2File' object has no attribute 'readable'", "'bz2.BZ2File' object has no attribute 'readable'", "'bz2.BZ2File' object has no attribute 'readable'"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.2", "update_time": "2019-06-25T22:43:20.998427", "inputs": {"input_file": {"src": "hda", "id": "1d3c3fa8e5bd001d", "uuid": "e21e31fe-a8fe-4c81-866e-82ce652a0695"}}, "outputs": {"output2_pairs_file": {"src": "hda", "id": "e398f0aa6e1067fe", "uuid": "66145f51-6e48-4546-b949-aeeac436d10e"}, "output1_pairs_file": {"src": "hda", "id": "cf111081b8db2982", "uuid": "7ee227c4-a88b-4528-88d2-3f005ab04fb0"}, "output2_singles_file": {"src": "hda", "id": "b7608a0e65a764ad", "uuid": "de89bc78-b8bb-4375-ae82-bc066169715a"}, "output1_singles_file": {"src": "hda", "id": "40582d0f3ff55e2b", "uuid": "41e20d49-bccd-4407-ad05-b8e34a0b332a"}}, "history_id": "f840675b8d7f5485", "stdout": "There were 2 reads with no mate.\nDe-interlaced 4.0 pairs of sequences.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:43:06.987011", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "There were 2 reads with no mate.\nDe-interlaced 4.0 pairs of sequences.\n", "job_messages": [], "id": "a37fda87c5621c23", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.2-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_joiner/fastq_paired_end_joiner/2.0.1.1", "time_seconds": 67.9323058128357, "inputs": {"input2_file": {"src": "hda", "id": "d7a800ccbf7cacb6"}, "input1_file": {"src": "hda", "id": "163306c67d699143"}}, "tool_version": "2.0.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_joiner/fastq_paired_end_joiner/2.0.1.1", "update_time": "2019-06-26T01:28:16.250511", "inputs": {"input2_file": {"src": "hda", "id": "d7a800ccbf7cacb6", "uuid": "e09094ca-853f-40ef-b07f-90fa2dfd0aac"}, "input1_file": {"src": "hda", "id": "163306c67d699143", "uuid": "d955b9c2-eac7-4529-8fa6-be81bffec001"}}, "outputs": {"output_file": {"src": "hda", "id": "c0226803cc89d025", "uuid": "1d2fe8e8-1453-4e0e-acbc-c78c27e52053"}}, "history_id": "f840675b8d7f5485", "stdout": "\nJoined 5 of 5 read pairs (100.00%).\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T01:27:59.944050", "stderr": "", "model_class": "Job", "params": {"style": "\"old\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "paste_sequence": "\"\"", "dbkey": "\"?\""}, "tool_stdout": "\nJoined 5 of 5 read pairs (100.00%).\n", "job_messages": [], "id": "2eb523045c95f7ab", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_joiner/fastq_paired_end_joiner/2.0.1.1-1", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_joiner/fastq_paired_end_joiner/2.0.1.1", "time_seconds": 56.25843596458435, "inputs": {"input2_file": {"src": "hda", "id": "e0f5cdb609ebc8af"}, "input1_file": {"src": "hda", "id": "2c01f5364ba4d0e2"}}, "tool_version": "2.0.1.1", "output_problems": ["'bz2.BZ2File' object has no attribute 'readable'"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_joiner/fastq_paired_end_joiner/2.0.1.1", "update_time": "2019-06-26T01:28:18.287471", "inputs": {"input2_file": {"src": "hda", "id": "e0f5cdb609ebc8af", "uuid": "becc7a41-ce1b-442d-80e6-3f33c4036075"}, "input1_file": {"src": "hda", "id": "2c01f5364ba4d0e2", "uuid": "628fdac5-48d9-405a-8935-43370a2f3b45"}}, "outputs": {"output_file": {"src": "hda", "id": "96de96817adbc1b8", "uuid": "ecb2e7a9-f04a-4f71-8221-cf0e2bc06ff7"}}, "history_id": "f840675b8d7f5485", "stdout": "\nJoined 5 of 5 read pairs (100.00%).\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T01:28:01.866430", "stderr": "", "model_class": "Job", "params": {"style": "\"old\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "paste_sequence": "\"\"", "dbkey": "\"?\""}, "tool_stdout": "\nJoined 5 of 5 read pairs (100.00%).\n", "job_messages": [], "id": "da1b4d6048868751", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_joiner/fastq_paired_end_joiner/2.0.1.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_splitter/fastq_paired_end_splitter/1.1.1", "time_seconds": 98.32738995552063, "inputs": {"input1_file": {"src": "hda", "id": "5ec1356f18088ffc"}}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_splitter/fastq_paired_end_splitter/1.1.1", "update_time": "2019-06-25T22:57:25.083102", "inputs": {"input1_file": {"src": "hda", "id": "5ec1356f18088ffc", "uuid": "2f51d427-fe39-4a65-ad87-b7bc9ce9f2b4"}}, "outputs": {"output1_file": {"src": "hda", "id": "08c98ce17d850fcb", "uuid": "82db7a49-68a7-4628-84c5-b67a2e8914e7"}, "output2_file": {"src": "hda", "id": "7674a395adb83708", "uuid": "5091df8c-bb84-4a38-bced-1bcb1719b4df"}}, "history_id": "f840675b8d7f5485", "stdout": "Split 5 of 5 reads (100.00%).\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:57:10.918924", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "Split 5 of 5 reads (100.00%).\n", "job_messages": [], "id": "e56c06af29f6d145", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_splitter/fastq_paired_end_splitter/1.1.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_stats/fastq_stats/1.1.1", "time_seconds": 24.8115291595459, "inputs": {"input_file": {"src": "hda", "id": "b0b76d5977b06086"}}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_stats/fastq_stats/1.1.1", "update_time": "2019-06-25T22:00:01.604211", "inputs": {"input_file": {"src": "hda", "id": "b0b76d5977b06086", "uuid": "b840c350-395c-46a0-9d9e-4611f46a5196"}}, "outputs": {"output_file": {"src": "hda", "id": "4fa64e1ae8c4bc12", "uuid": "55366bb5-5b49-4702-88b1-23a4e23e6382"}}, "history_id": "f840675b8d7f5485", "stdout": "9 fastq reads were processed.\nBased upon quality values and sequence characters, the input data is valid for: sanger, sanger.gz, sanger.bz2\nInput ASCII range: '&'(38) - 'C'(67)\nInput decimal range: 5 - 34\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:59:44.591584", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "9 fastq reads were processed.\nBased upon quality values and sequence characters, the input data is valid for: sanger, sanger.gz, sanger.bz2\nInput ASCII range: '&'(38) - 'C'(67)\nInput decimal range: 5 - 34\n", "job_messages": [], "id": "45b13b8f08978f92", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_stats/fastq_stats/1.1.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_to_tabular/fastq_to_tabular/1.1.1", "time_seconds": 47.27690100669861, "inputs": {"descr_columns": "1", "input_file": {"src": "hda", "id": "373aa0b884a69ef4"}}, "tool_version": "1.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_to_tabular/fastq_to_tabular/1.1.1", "update_time": "2019-06-26T00:47:05.434298", "inputs": {"input_file": {"src": "hda", "id": "373aa0b884a69ef4", "uuid": "fd62f617-5ae8-4791-a776-5eb47addac27"}}, "outputs": {"output_file": {"src": "hda", "id": "4c68152de41def20", "uuid": "4a8832b1-6646-4708-ad0d-ec63eb922714"}}, "history_id": "f840675b8d7f5485", "stdout": "2 FASTQ reads were converted to Tabular.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:46:51.749638", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "descr_columns": "\"1\""}, "tool_stdout": "2 FASTQ reads were converted to Tabular.\n", "job_messages": [], "id": "3f9f6775cb3a8083", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_to_tabular/fastq_to_tabular/1.1.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_artifacts_filter/cshl_fastx_artifacts_filter/1.0.1", "time_seconds": 34.25685501098633, "inputs": {"input": {"src": "hda", "id": "251897d6f5d1b5d7"}}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_artifacts_filter/cshl_fastx_artifacts_filter/1.0.1", "update_time": "2019-06-25T23:48:05.535814", "inputs": {"input": {"src": "hda", "id": "251897d6f5d1b5d7", "uuid": "d58103cb-907d-4403-83be-dc7a094e46e6"}}, "outputs": {"output": {"src": "hda", "id": "c7a191dafa4b914d", "uuid": "1f13f441-35cf-4435-b6c7-67be8dee297b"}}, "history_id": "f840675b8d7f5485", "stdout": "Input: 12 reads.\nOutput: 7 reads.\ndiscarded 5 (41%) artifact reads.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:47:49.935986", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "Input: 12 reads.\nOutput: 7 reads.\ndiscarded 5 (41%) artifact reads.\n", "job_messages": [], "id": "1abcf7a2122edd75", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_artifacts_filter/cshl_fastx_artifacts_filter/1.0.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_artifacts_filter/cshl_fastx_artifacts_filter/1.0.1", "time_seconds": 32.58510184288025, "inputs": {"input": {"src": "hda", "id": "ec68f5de2fadd0f0"}}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_artifacts_filter/cshl_fastx_artifacts_filter/1.0.1", "update_time": "2019-06-25T23:48:01.413581", "inputs": {"input": {"src": "hda", "id": "ec68f5de2fadd0f0", "uuid": "d18d3dc0-8cf6-4843-994b-a44a3afbf880"}}, "outputs": {"output": {"src": "hda", "id": "2054107e87206bc4", "uuid": "52de8a78-f89c-4f52-8475-74a0884d2737"}}, "history_id": "f840675b8d7f5485", "stdout": "Input: 15 reads.\nOutput: 10 reads.\ndiscarded 5 (33%) artifact reads.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:47:46.530534", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "Input: 15 reads.\nOutput: 10 reads.\ndiscarded 5 (33%) artifact reads.\n", "job_messages": [], "id": "6ee6ca9fa0c5f7d6", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_artifacts_filter/cshl_fastx_artifacts_filter/1.0.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_reverse_complement/cshl_fastx_reverse_complement/1.0.2", "time_seconds": 58.77441191673279, "inputs": {"input": {"src": "hda", "id": "c0ab4c43d09d8e54"}}, "tool_version": "1.0.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_reverse_complement/cshl_fastx_reverse_complement/1.0.2", "update_time": "2019-06-25T23:00:16.341175", "inputs": {"input": {"src": "hda", "id": "c0ab4c43d09d8e54", "uuid": "76ebfa5c-63f7-4246-a03c-f672ee59164c"}}, "outputs": {"output": {"src": "hda", "id": "93a2db32c57450c5", "uuid": "9e9daca3-e30b-4c0c-97a5-792140b058a3"}}, "history_id": "f840675b8d7f5485", "stdout": "Printing Reverse-Complement Sequences.\nInput: 2 reads.\nOutput: 2 reads.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:00:03.377317", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "Printing Reverse-Complement Sequences.\nInput: 2 reads.\nOutput: 2 reads.\n", "job_messages": [], "id": "23d04bda3440637a", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_reverse_complement/cshl_fastx_reverse_complement/1.0.2-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_trimmer/cshl_fastx_trimmer/1.0.2", "time_seconds": 66.07105207443237, "inputs": {"input": {"src": "hda", "id": "9ff4b3e20cbdae91"}, "last": "36", "first": "5"}, "tool_version": "1.0.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_trimmer/cshl_fastx_trimmer/1.0.2", "update_time": "2019-06-25T23:36:02.600171", "inputs": {"input": {"src": "hda", "id": "9ff4b3e20cbdae91", "uuid": "aff3f386-f406-4a6c-ad0c-c2b2dd4337f1"}}, "outputs": {"output": {"src": "hda", "id": "5ef0e2e8a624612c", "uuid": "1be2206f-cca0-492f-bb45-53925ce9a85c"}}, "history_id": "f840675b8d7f5485", "stdout": "Trimming: base 5 to 36\nInput: 2 reads.\nOutput: 2 reads.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:35:44.031342", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "last": "\"36\"", "dbkey": "\"?\"", "first": "\"5\""}, "tool_stdout": "Trimming: base 5 to 36\nInput: 2 reads.\nOutput: 2 reads.\n", "job_messages": [], "id": "051e8ba7a56620b7", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_trimmer/cshl_fastx_trimmer/1.0.2-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_trimmer/cshl_fastx_trimmer/1.0.2", "time_seconds": 58.93794107437134, "inputs": {"input": {"src": "hda", "id": "0003aa312d98ce69"}, "last": "27", "first": "1"}, "tool_version": "1.0.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_trimmer/cshl_fastx_trimmer/1.0.2", "update_time": "2019-06-25T23:36:16.446480", "inputs": {"input": {"src": "hda", "id": "0003aa312d98ce69", "uuid": "4719ceb2-7320-4217-a563-ce6921ed4329"}}, "outputs": {"output": {"src": "hda", "id": "58397903434ddf98", "uuid": "d4bfdb9f-2765-42ae-8d6b-eb2b80072cd0"}}, "history_id": "f840675b8d7f5485", "stdout": "Trimming: base 1 to 27\nInput: 2 reads.\nOutput: 2 reads.\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:36:03.275063", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "last": "\"27\"", "dbkey": "\"?\"", "first": "\"1\""}, "tool_stdout": "Trimming: base 1 to 27\nInput: 2 reads.\nOutput: 2 reads.\n", "job_messages": [], "id": "808957ea571c8488", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/fastx_trimmer/cshl_fastx_trimmer/1.0.2-2", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/kraken_filter/kraken-filter/1.2.3", "time_seconds": 1.2256300449371338, "inputs": {"threshold": "0", "input": {"src": "hda", "id": "b405de6daffdfe05"}, "kraken_database": "test_db"}, "tool_version": "1.2.3", "test_index": 0, "execution_problem": "Error creating a job for these tool inputs - parameter 'kraken_database': an invalid option (u'test_db') was selected (valid options: bacteria,viruses,minikraken,plasmids)"}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/kraken_filter/kraken-filter/1.2.3-0", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/kraken_report/kraken-mpa-report/1.2.4", "time_seconds": 7.185667037963867, "inputs": {"show_zeros": true, "kraken_database": "test_db", "classification": [{"src": "hda", "id": "951fec2a052ec4c6"}, {"src": "hda", "id": "7668135728362c94"}], "header_line": true}, "tool_version": "1.2.4", "test_index": 0, "execution_problem": "Error creating a job for these tool inputs - parameter 'kraken_database': an invalid option (u'test_db') was selected (valid options: bacteria,viruses,minikraken,plasmids)"}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/kraken_report/kraken-mpa-report/1.2.4-0", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/kraken_report/kraken-report/1.2.4", "time_seconds": 6.794424057006836, "inputs": {"kraken_database": "test_db", "kraken_output": {"src": "hda", "id": "63e103251f374234"}}, "tool_version": "1.2.4", "test_index": 0, "execution_problem": "Error creating a job for these tool inputs - parameter 'kraken_database': an invalid option (u'test_db') was selected (valid options: bacteria,viruses,minikraken,plasmids)"}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/kraken_report/kraken-report/1.2.4-0", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/kraken_translate/kraken-translate/1.2.3", "time_seconds": 1.1615869998931885, "inputs": {"input": {"src": "hda", "id": "db0135c7d59168fc"}, "kraken_database": "test_db"}, "tool_version": "1.2.3", "test_index": 0, "execution_problem": "Error creating a job for these tool inputs - parameter 'kraken_database': an invalid option (u'test_db') was selected (valid options: bacteria,viruses,minikraken,plasmids)"}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/kraken_translate/kraken-translate/1.2.3-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/merge/gops_merge_1/1.0.0", "time_seconds": 38.62570095062256, "inputs": {"returntype": true, "input1": {"src": "hda", "id": "26a526d7d5240aa2"}}, "tool_version": "1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/merge/gops_merge_1/1.0.0", "update_time": "2019-06-25T21:59:05.116026", "inputs": {"input1": {"src": "hda", "id": "26a526d7d5240aa2", "uuid": "c2dd5e2b-d182-4ffc-96d8-8ca8fd91af8c"}}, "outputs": {"output": {"src": "hda", "id": "c400aaaed2609051", "uuid": "488ed0af-d194-4aee-b110-143a01ce871d"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:58:43.015070", "stderr": "", "model_class": "Job", "params": {"returntype": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "b70137654361a04e", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/merge/gops_merge_1/1.0.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/merge/gops_merge_1/1.0.0", "time_seconds": 38.93740200996399, "inputs": {"returntype": true, "input1": {"src": "hda", "id": "c7b7f95a28735616"}}, "tool_version": "1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/merge/gops_merge_1/1.0.0", "update_time": "2019-06-25T21:59:18.342289", "inputs": {"input1": {"src": "hda", "id": "c7b7f95a28735616", "uuid": "1690529b-5411-49a5-a158-e10ff18fbac0"}}, "outputs": {"output": {"src": "hda", "id": "83046533f89104df", "uuid": "3d46c2e3-fa7f-4f4b-923b-2dc50649f74f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:58:58.363778", "stderr": "", "model_class": "Job", "params": {"returntype": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "f38b389dcc2a8184", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/merge/gops_merge_1/1.0.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/merge/gops_merge_1/1.0.0", "time_seconds": 24.77087712287903, "inputs": {"returntype": true, "input1": {"src": "hda", "id": "d45e0034b79147ee"}}, "tool_version": "1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/merge/gops_merge_1/1.0.0", "update_time": "2019-06-25T21:59:18.698283", "inputs": {"input1": {"src": "hda", "id": "d45e0034b79147ee", "uuid": "d5e72e66-bd3f-48eb-af78-13f703e2a7aa"}}, "outputs": {"output": {"src": "hda", "id": "1610b2debadab7c0", "uuid": "76212cf0-b24c-4150-8108-dc94a3a0aa15"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:59:00.305889", "stderr": "", "model_class": "Job", "params": {"returntype": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "a2d1c735a4de7e18", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/merge/gops_merge_1/1.0.0-2", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_info/0.3.1", "time_seconds": 35.69276714324951, "inputs": {"db_opts|database": "four_human_proteins", "db_opts|db_type": "prot"}, "tool_version": "0.3.1", "output_problems": ["Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_info/0.3.1", "update_time": "2019-06-26T01:25:53.384485", "inputs": {}, "outputs": {"info": {"src": "hda", "id": "9c2b824c5361fa28", "uuid": "5e609367-122b-402d-846f-1ef5558005af"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 2, "job_stderr": "", "tool_stderr": "BLAST Database error: Database name is required.\n", "state": "error", "create_time": "2019-06-26T01:25:38.739838", "stderr": "BLAST Database error: Database name is required.\n", "model_class": "Job", "params": {"db_opts": "{\"__current_case__\": 1, \"database\": null, \"db_type\": \"prot\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [{"type": "exit_code", "error_level": 3, "code_desc": "", "exit_code": 2, "desc": "Fatal error: Exit code 2 ()"}, {"stream": "stderr", "code_desc": "", "error_level": 3, "type": "regex", "match": "error:", "desc": "Fatal error: "}], "id": "f1a90ccc5c7dd024", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_info/0.3.1-0", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_info/0.3.1", "time_seconds": 6.646496057510376, "inputs": {"db_opts|database": "three_human_mRNA", "db_opts|db_type": "nucl"}, "tool_version": "0.3.1", "test_index": 1, "execution_problem": "Error creating a job for these tool inputs - parameter 'database': an invalid option (u'three_human_mRNA') was selected (valid options: 17apr2014-nt,13apr2014-htgs,/cvmfs/data.galaxyproject.org/byhand/blastdb/phiX/phiX,20apr2014-wgs)"}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_info/0.3.1-1", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_info/0.3.1", "time_seconds": 6.382697105407715, "inputs": {"db_opts|database": "rhodopsin_nucs", "db_opts|db_type": "nucl"}, "tool_version": "0.3.1", "test_index": 2, "execution_problem": "Error creating a job for these tool inputs - parameter 'database': an invalid option (u'rhodopsin_nucs') was selected (valid options: 17apr2014-nt,13apr2014-htgs,/cvmfs/data.galaxyproject.org/byhand/blastdb/phiX/phiX,20apr2014-wgs)"}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_info/0.3.1-2", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_wrapper/0.3.1", "time_seconds": 34.907697916030884, "inputs": {"id_opts|entries": "all", "db_opts|database": "four_human_proteins", "outfmt": "original", "id_opts|id_type": "prompt", "db_opts|db_type": "prot"}, "tool_version": "0.3.1", "output_problems": ["Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_wrapper/0.3.1", "update_time": "2019-06-26T01:25:59.260164", "inputs": {}, "outputs": {"seq": {"src": "hda", "id": "9fb82bba4065121b", "uuid": "7cae4428-8c87-4836-acad-d6853a0c825f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "BLAST Database error: Database name is required.\n", "state": "error", "create_time": "2019-06-26T01:25:46.242492", "stderr": "BLAST Database error: Database name is required.\n", "model_class": "Job", "params": {"db_opts": "{\"__current_case__\": 1, \"database\": null, \"db_type\": \"prot\"}", "outfmt": "\"original\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "id_opts": "{\"__current_case__\": 1, \"entries\": \"all\", \"id_type\": \"prompt\"}"}, "tool_stdout": "", "job_messages": [{"stream": "stderr", "code_desc": "", "error_level": 3, "type": "regex", "match": "error:", "desc": "Fatal error: "}], "id": "cd0cb3375fc9a2b8", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_wrapper/0.3.1-0", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_wrapper/0.3.1", "time_seconds": 7.167565107345581, "inputs": {"id_opts|entries": "all", "db_opts|database": "rhodopsin_nucs", "outfmt": "original", "id_opts|id_type": "prompt", "db_opts|db_type": "nucl"}, "tool_version": "0.3.1", "test_index": 1, "execution_problem": "Error creating a job for these tool inputs - parameter 'database': an invalid option (u'rhodopsin_nucs') was selected (valid options: 17apr2014-nt,13apr2014-htgs,/cvmfs/data.galaxyproject.org/byhand/blastdb/phiX/phiX,20apr2014-wgs)"}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_wrapper/0.3.1-1", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_wrapper/0.3.1", "time_seconds": 7.360028028488159, "inputs": {"id_opts|entries": "U59921.1", "db_opts|database": "rhodopsin_nucs", "outfmt": "original", "id_opts|id_type": "prompt", "db_opts|db_type": "nucl"}, "tool_version": "0.3.1", "test_index": 2, "execution_problem": "Error creating a job for these tool inputs - parameter 'database': an invalid option (u'rhodopsin_nucs') was selected (valid options: 17apr2014-nt,13apr2014-htgs,/cvmfs/data.galaxyproject.org/byhand/blastdb/phiX/phiX,20apr2014-wgs)"}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_wrapper/0.3.1-2", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_wrapper/0.3.1", "time_seconds": 9.5919508934021, "inputs": {"id_opts|entries": "gi|2734705|gb|U59921.1|BBU59921", "db_opts|database": "rhodopsin_nucs", "outfmt": "original", "id_opts|id_type": "prompt", "db_opts|db_type": "nucl"}, "tool_version": "0.3.1", "test_index": 3, "execution_problem": "Error creating a job for these tool inputs - parameter 'database': an invalid option (u'rhodopsin_nucs') was selected (valid options: 17apr2014-nt,13apr2014-htgs,/cvmfs/data.galaxyproject.org/byhand/blastdb/phiX/phiX,20apr2014-wgs)"}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastdbcmd_wrapper/0.3.1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sam2interval/sam2interval/1.0.1", "time_seconds": 59.461190938949585, "inputs": {"print_all": "-p", "input1": {"src": "hda", "id": "cccb76c4d7c7c39f"}}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sam2interval/sam2interval/1.0.1", "update_time": "2019-06-25T23:30:56.362462", "inputs": {"input1": {"src": "hda", "id": "cccb76c4d7c7c39f", "uuid": "da553986-75a9-4648-a30d-6ec30b6e8dd6"}}, "outputs": {"out_file1": {"src": "hda", "id": "2b787c87f476b6be", "uuid": "8ea85900-a83e-45d6-9fca-d9ab2acb71a8"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:30:45.139331", "stderr": "", "model_class": "Job", "params": {"print_all": "\"-p\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "dc026a044db65d3d", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/sam2interval/sam2interval/1.0.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sam2interval/sam2interval/1.0.1", "time_seconds": 59.126041889190674, "inputs": {"print_all": "", "input1": {"src": "hda", "id": "cccb76c4d7c7c39f"}}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sam2interval/sam2interval/1.0.1", "update_time": "2019-06-25T23:31:03.948335", "inputs": {"input1": {"src": "hda", "id": "cccb76c4d7c7c39f", "uuid": "da553986-75a9-4648-a30d-6ec30b6e8dd6"}}, "outputs": {"out_file1": {"src": "hda", "id": "06b3671ef99954ee", "uuid": "d7ca6152-b83b-4e82-8b0d-95ce13b38f22"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:30:53.091262", "stderr": "", "model_class": "Job", "params": {"print_all": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "39e9d7dd49645e2f", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/sam2interval/sam2interval/1.0.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sam_bitwise_flag_filter/sam_bw_filter/1.0.0", "time_seconds": 32.09260582923889, "inputs": {"bits_0|flags": "--0x0002", "input1": {"src": "hda", "id": "309ae027e3bdc4d0"}, "bits_0|states": "1"}, "tool_version": "1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sam_bitwise_flag_filter/sam_bw_filter/1.0.0", "update_time": "2019-06-25T22:54:40.383769", "inputs": {"input1": {"src": "hda", "id": "309ae027e3bdc4d0", "uuid": "c8705215-64ad-4fcd-ae96-e0089353b191"}}, "outputs": {"out_file1": {"src": "hda", "id": "8c36b6468311a2bf", "uuid": "f9c66026-911f-4e22-bda0-68ef69f675e1"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:54:26.636295", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "bits": "[{\"__index__\": 0, \"flags\": \"--0x0002\", \"states\": \"1\"}]", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "232f8504bd437d52", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/sam_bitwise_flag_filter/sam_bw_filter/1.0.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_mpileup/samtools_mpileup/2.1.4", "time_seconds": 35.43704891204834, "inputs": {"reference_source|reference_source_selector": "history", "output_options_cond|output_options_selector": "default", "reference_source|input_bam": {"src": "hda", "id": "33eb17242175a8f8"}, "advanced_options|skip_anomalous_read_pairs": true, "advanced_options|advanced_options_selector": "advanced", "reference_source|ref_file": {"src": "hda", "id": "96c9fe32273cb720"}}, "tool_version": "2.1.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_mpileup/samtools_mpileup/2.1.4", "update_time": "2019-06-25T22:47:53.646846", "inputs": {"ref_file": {"src": "hda", "id": "96c9fe32273cb720", "uuid": "158c052b-176a-4224-b806-9f56ba1a88cf"}, "input_bam": {"src": "hda", "id": "33eb17242175a8f8", "uuid": "9b538e73-b037-4bd5-82d9-0741428be9a6"}}, "outputs": {"output_file_pu": {"src": "hda", "id": "0bcddb8e6253b373", "uuid": "c117e0c3-3452-4a16-a5cd-0768fcea1d22"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "[mpileup] 1 samples in 1 input files\n", "state": "ok", "create_time": "2019-06-25T22:47:39.512243", "stderr": "[mpileup] 1 samples in 1 input files\n", "model_class": "Job", "params": {"reference_source": "{\"__current_case__\": 1, \"input_bam\": {\"values\": [{\"id\": 1068342, \"src\": \"hda\"}]}, \"ref_file\": {\"values\": [{\"id\": 1068345, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "advanced_options": "{\"__current_case__\": 1, \"advanced_options_selector\": \"advanced\", \"coefficient_for_downgrading\": \"0\", \"disable_probabilistic_realignment\": \"false\", \"exclude_read_group\": {\"__current_case__\": 2, \"exclude_read_groups\": \"no_limit\"}, \"extended_BAQ_computation\": \"false\", \"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": \"false\", \"limit_by_region\": {\"__current_case__\": 1, \"limit_by_regions\": \"no_limit\"}, \"max_reads_per_bam\": \"8000\", \"minimum_base_quality\": \"13\", \"minimum_mapping_quality\": \"0\", \"qualities_illumina_onethree\": \"false\", \"skip_anomalous_read_pairs\": \"true\"}", "output_options_cond": "{\"__current_case__\": 0, \"output_options_selector\": \"default\"}", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "be0473d88a7335c3", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_mpileup/samtools_mpileup/2.1.4-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_rmdup/samtools_rmdup/2.0.1", "time_seconds": 32.38559603691101, "inputs": {"bam_paired_end_type|bam_paired_end_type_selector": "PE", "bam_paired_end_type|force_se": false, "input1": {"src": "hda", "id": "c48d60e98204eea4"}}, "tool_version": "2.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_rmdup/samtools_rmdup/2.0.1", "update_time": "2019-06-25T22:54:59.721231", "inputs": {"input1": {"src": "hda", "id": "c48d60e98204eea4", "uuid": "a9fa955f-3add-46e7-b4c8-5132834ec179"}}, "outputs": {"output1": {"src": "hda", "id": "f9167a7a14d74aee", "uuid": "bc82208e-96e2-41b5-b2a3-5653eb7771dd"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "[bam_rmdup_core] processing reference chrM...\n", "state": "ok", "create_time": "2019-06-25T22:54:46.927427", "stderr": "[bam_rmdup_core] processing reference chrM...\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "bam_paired_end_type": "{\"__current_case__\": 0, \"bam_paired_end_type_selector\": \"PE\", \"force_se\": \"false\"}"}, "tool_stdout": "", "job_messages": [], "id": "980bc5678b579aa3", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_rmdup/samtools_rmdup/2.0.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "time_seconds": 31.709682941436768, "inputs": {"input": {"src": "hda", "id": "a8c40d8e1cfdfed9"}, "addref_cond|addref_select": "history", "addref_cond|ref": {"src": "hda", "id": "59c683c00f31f9d7"}}, "tool_version": "2.0.2+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "update_time": "2019-06-25T22:35:33.790462", "inputs": {"input": {"src": "hda", "id": "a8c40d8e1cfdfed9", "uuid": "eb41f02b-299a-406e-829d-9edfab8e79d6"}, "ref": {"src": "hda", "id": "59c683c00f31f9d7", "uuid": "f1d19f53-0698-403a-973d-a05448619b25"}}, "outputs": {"output": {"src": "hda", "id": "465ed2f6e0fc9c5e", "uuid": "2a3cfa73-4b5a-4be0-9468-6babe0bdd362"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:35:15.386013", "stderr": "", "model_class": "Job", "params": {"coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}", "cond_plot": "{\"__current_case__\": 0, \"select_plot\": \"no\"}", "read_length": "\"\"", "cov_threshold": "\"\"", "most_inserts": "\"\"", "cond_region": "{\"__current_case__\": 0, \"select_region\": \"no\"}", "trim_quality": "\"\"", "dbkey": "\"?\"", "gc_depth": "\"\"", "split_output_cond": "{\"__current_case__\": 0, \"split_output_selector\": \"no\"}", "remove_overlaps": "\"false\"", "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}", "sparse": "\"false\"", "addref_cond": "{\"__current_case__\": 2, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 1068045, \"src\": \"hda\"}]}}", "insert_size": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "remove_dups": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "cd79050b2d61ebac", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "time_seconds": 32.65634083747864, "inputs": {"input": {"src": "hda", "id": "bb582c91bab3a370"}, "addref_cond|addref_select": "history", "addref_cond|ref": {"src": "hda", "id": "59c683c00f31f9d7"}}, "tool_version": "2.0.2+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "update_time": "2019-06-25T22:35:32.736863", "inputs": {"input": {"src": "hda", "id": "bb582c91bab3a370", "uuid": "4e9ed08c-5d9c-40eb-87da-0ebeec165188"}, "ref": {"src": "hda", "id": "59c683c00f31f9d7", "uuid": "f1d19f53-0698-403a-973d-a05448619b25"}}, "outputs": {"output": {"src": "hda", "id": "43328c449b4bf399", "uuid": "bd3b4476-b64f-4055-82a0-1f08f3ff3398"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:35:14.882227", "stderr": "", "model_class": "Job", "params": {"coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}", "cond_plot": "{\"__current_case__\": 0, \"select_plot\": \"no\"}", "read_length": "\"\"", "cov_threshold": "\"\"", "most_inserts": "\"\"", "cond_region": "{\"__current_case__\": 0, \"select_region\": \"no\"}", "trim_quality": "\"\"", "dbkey": "\"?\"", "gc_depth": "\"\"", "split_output_cond": "{\"__current_case__\": 0, \"split_output_selector\": \"no\"}", "remove_overlaps": "\"false\"", "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}", "sparse": "\"false\"", "addref_cond": "{\"__current_case__\": 2, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 1068045, \"src\": \"hda\"}]}}", "insert_size": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "remove_dups": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "c8beed7c83368c17", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "time_seconds": 31.865971088409424, "inputs": {"cond_region|targetregions": {"src": "hda", "id": "ff91c33163137966"}, "input": {"src": "hda", "id": "000256448054c3af"}, "remove_overlaps": true, "addref_cond|addref_select": "no", "cond_region|select_region": "tab"}, "tool_version": "2.0.2+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "update_time": "2019-06-25T22:36:34.541219", "inputs": {"input": {"src": "hda", "id": "000256448054c3af", "uuid": "3cb06048-3127-424a-9661-3acec5ab2dd9"}, "targetregions": {"src": "hda", "id": "ff91c33163137966", "uuid": "4c0f444c-22c7-429c-a3f7-cb6610f44930"}}, "outputs": {"output": {"src": "hda", "id": "b7ca9a24e4dbccc8", "uuid": "5950606a-b461-4dd7-85ec-84adaf94e6d9"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:36:15.277837", "stderr": "", "model_class": "Job", "params": {"coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}", "cond_plot": "{\"__current_case__\": 0, \"select_plot\": \"no\"}", "read_length": "\"\"", "cov_threshold": "\"\"", "most_inserts": "\"\"", "cond_region": "{\"__current_case__\": 2, \"select_region\": \"tab\", \"targetregions\": {\"values\": [{\"id\": 1068068, \"src\": \"hda\"}]}}", "trim_quality": "\"\"", "dbkey": "\"?\"", "gc_depth": "\"\"", "split_output_cond": "{\"__current_case__\": 0, \"split_output_selector\": \"no\"}", "remove_overlaps": "\"true\"", "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}", "sparse": "\"false\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "insert_size": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "remove_dups": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "bce4d695b4bec99e", "job_stdout": ""}, "test_index": 10}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1-10", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "time_seconds": 72.96460700035095, "inputs": {"input": {"src": "hda", "id": "74cea91d527b4278"}, "addref_cond|ref": {"src": "hda", "id": "b13c5987e1d7dc0f"}, "cond_plot|select_plot": "yes", "addref_cond|addref_select": "history"}, "tool_version": "2.0.2+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "update_time": "2019-06-25T22:36:54.647094", "inputs": {"input": {"src": "hda", "id": "74cea91d527b4278", "uuid": "b2b74dff-ab3a-4bda-9f1f-718701f9f239"}, "ref": {"src": "hda", "id": "b13c5987e1d7dc0f", "uuid": "1bacd61c-5c95-40f3-ba19-0e6c2a0bffab"}}, "outputs": {"html_file": {"src": "hda", "id": "d112c1cca145d8c3", "uuid": "ddd35f01-fea8-48b5-b927-d07210b97fed"}, "output": {"src": "hda", "id": "f8d248b705d9d007", "uuid": "91cd6bdc-73f4-47ea-bb67-07f96b591317"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Warning: empty y2 range [0:0], adjusting to [-1:1]\n", "state": "ok", "create_time": "2019-06-25T22:36:14.497869", "stderr": "Warning: empty y2 range [0:0], adjusting to [-1:1]\n", "model_class": "Job", "params": {"coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}", "cond_plot": "{\"__current_case__\": 1, \"log\": \"false\", \"select_plot\": \"yes\"}", "read_length": "\"\"", "cov_threshold": "\"\"", "most_inserts": "\"\"", "cond_region": "{\"__current_case__\": 0, \"select_region\": \"no\"}", "trim_quality": "\"\"", "dbkey": "\"?\"", "gc_depth": "\"\"", "split_output_cond": "{\"__current_case__\": 0, \"split_output_selector\": \"no\"}", "remove_overlaps": "\"false\"", "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}", "sparse": "\"false\"", "addref_cond": "{\"__current_case__\": 2, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 1068067, \"src\": \"hda\"}]}}", "insert_size": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "remove_dups": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "4b3c8cd319333d6a", "job_stdout": ""}, "test_index": 11}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1-11", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "time_seconds": 62.24127984046936, "inputs": {"split_output_cond|split_output_selector": "yes", "input": {"src": "hda", "id": "74cea91d527b4278"}, "addref_cond|ref": {"src": "hda", "id": "e3085f1022f3d0d3"}, "addref_cond|addref_select": "history", "split_output_cond|generate_tables": ["SN", "MPC", "GCC"]}, "tool_version": "2.0.2+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "update_time": "2019-06-25T22:37:12.430654", "inputs": {"input": {"src": "hda", "id": "74cea91d527b4278", "uuid": "b2b74dff-ab3a-4bda-9f1f-718701f9f239"}, "ref": {"src": "hda", "id": "e3085f1022f3d0d3", "uuid": "2e94561d-43a5-4646-bdac-8131aac2b8ac"}}, "outputs": {"__new_primary_file_output_collection|ACGT content per cycle__": {"src": "hda", "id": "0482f49e3f4f09e6", "uuid": "a88f2069-128f-49d9-b20a-2a05051467e5"}, "__new_primary_file_output_collection|Summary Numbers__": {"src": "hda", "id": "a8185aa78e09a2bb", "uuid": "18ba2eb2-1ae4-4d3b-b5f7-2a975bc6081d"}, "__new_primary_file_output_collection|Mismatches per cycle and quality__": {"src": "hda", "id": "972bdfbafff8f825", "uuid": "fa083c91-d470-4c7e-a13b-eb020de559d1"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:36:51.086080", "stderr": "", "model_class": "Job", "params": {"coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}", "cond_plot": "{\"__current_case__\": 0, \"select_plot\": \"no\"}", "read_length": "\"\"", "cov_threshold": "\"\"", "most_inserts": "\"\"", "cond_region": "{\"__current_case__\": 0, \"select_region\": \"no\"}", "trim_quality": "\"\"", "dbkey": "\"?\"", "gc_depth": "\"\"", "split_output_cond": "{\"__current_case__\": 1, \"generate_tables\": [\"SN\", \"MPC\", \"GCC\"], \"split_output_selector\": \"yes\"}", "remove_overlaps": "\"false\"", "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}", "sparse": "\"false\"", "addref_cond": "{\"__current_case__\": 2, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 1068081, \"src\": \"hda\"}]}}", "insert_size": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "remove_dups": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "b6b395beeca9007c", "job_stdout": ""}, "test_index": 12}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1-12", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "time_seconds": 45.465171098709106, "inputs": {"input": {"src": "hda", "id": "b034af4398654ccf"}, "addref_cond|addref_select": "history", "insert_size": "0", "addref_cond|ref": {"src": "hda", "id": "59c683c00f31f9d7"}}, "tool_version": "2.0.2+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "update_time": "2019-06-25T22:35:52.545620", "inputs": {"input": {"src": "hda", "id": "b034af4398654ccf", "uuid": "cb9f0bf4-61a6-481b-92e8-00466aaae3eb"}, "ref": {"src": "hda", "id": "59c683c00f31f9d7", "uuid": "f1d19f53-0698-403a-973d-a05448619b25"}}, "outputs": {"output": {"src": "hda", "id": "dfc7ab981039b168", "uuid": "d0ddafcf-efcd-40c3-8ef3-c7221dcc0e6c"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:35:26.840569", "stderr": "", "model_class": "Job", "params": {"coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}", "cond_plot": "{\"__current_case__\": 0, \"select_plot\": \"no\"}", "read_length": "\"\"", "cov_threshold": "\"\"", "most_inserts": "\"\"", "cond_region": "{\"__current_case__\": 0, \"select_region\": \"no\"}", "trim_quality": "\"\"", "dbkey": "\"?\"", "gc_depth": "\"\"", "split_output_cond": "{\"__current_case__\": 0, \"split_output_selector\": \"no\"}", "remove_overlaps": "\"false\"", "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}", "sparse": "\"false\"", "addref_cond": "{\"__current_case__\": 2, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 1068045, \"src\": \"hda\"}]}}", "insert_size": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "remove_dups": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "7bbcb6ce1b2a9054", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "time_seconds": 47.33786606788635, "inputs": {"cond_region|targetregions": {"src": "hda", "id": "03ff1f4b6386ddcc"}, "input": {"src": "hda", "id": "10ee2120d1ba1ecd"}, "addref_cond|addref_select": "no", "cond_region|select_region": "tab"}, "tool_version": "2.0.2+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "update_time": "2019-06-25T22:36:09.293515", "inputs": {"input": {"src": "hda", "id": "10ee2120d1ba1ecd", "uuid": "92371462-a638-437b-92a5-42b92ee91d41"}, "targetregions": {"src": "hda", "id": "03ff1f4b6386ddcc", "uuid": "8bb400b0-647f-4e60-b6a1-f75571086413"}}, "outputs": {"output": {"src": "hda", "id": "c8265c9a2905cd7d", "uuid": "57680b87-659b-4f47-9805-5c5de73c196e"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:35:35.048018", "stderr": "", "model_class": "Job", "params": {"coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}", "cond_plot": "{\"__current_case__\": 0, \"select_plot\": \"no\"}", "read_length": "\"\"", "cov_threshold": "\"\"", "most_inserts": "\"\"", "cond_region": "{\"__current_case__\": 2, \"select_region\": \"tab\", \"targetregions\": {\"values\": [{\"id\": 1068055, \"src\": \"hda\"}]}}", "trim_quality": "\"\"", "dbkey": "\"?\"", "gc_depth": "\"\"", "split_output_cond": "{\"__current_case__\": 0, \"split_output_selector\": \"no\"}", "remove_overlaps": "\"false\"", "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}", "sparse": "\"false\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "insert_size": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "remove_dups": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "1e1acae3fd04d30e", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "time_seconds": 45.2583429813385, "inputs": {"cond_region|regions_repeat_1|region": "ref1:30-46", "cond_region|regions_repeat_0|region": "ref1:10-24", "input": {"src": "hda", "id": "a8eb77a73600cde2"}, "cond_region|regions_repeat_2|region": "ref1:39-56", "cond_region|select_region": "text", "addref_cond|addref_select": "no"}, "tool_version": "2.0.2+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "update_time": "2019-06-25T22:35:54.719158", "inputs": {"input": {"src": "hda", "id": "a8eb77a73600cde2", "uuid": "ea600919-34fe-42e6-8cdc-9eba6c0a9ab1"}}, "outputs": {"output": {"src": "hda", "id": "e2136c20ec28b608", "uuid": "e593862c-b229-41ec-ad7c-f47c159afb97"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:35:24.340718", "stderr": "", "model_class": "Job", "params": {"coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}", "cond_plot": "{\"__current_case__\": 0, \"select_plot\": \"no\"}", "read_length": "\"\"", "cov_threshold": "\"\"", "most_inserts": "\"\"", "cond_region": "{\"__current_case__\": 1, \"regions_repeat\": [{\"__index__\": 0, \"region\": \"ref1:10-24\"}, {\"__index__\": 1, \"region\": \"ref1:30-46\"}, {\"__index__\": 2, \"region\": \"ref1:39-56\"}], \"select_region\": \"text\"}", "trim_quality": "\"\"", "dbkey": "\"?\"", "gc_depth": "\"\"", "split_output_cond": "{\"__current_case__\": 0, \"split_output_selector\": \"no\"}", "remove_overlaps": "\"false\"", "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}", "sparse": "\"false\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "insert_size": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "remove_dups": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "260e71051d566905", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "time_seconds": 46.58852005004883, "inputs": {"cond_region|targetregions": {"src": "hda", "id": "03ff1f4b6386ddcc"}, "input": {"src": "hda", "id": "10ee2120d1ba1ecd"}, "cond_region|select_region": "tab", "addref_cond|addref_select": "no", "cov_threshold": "4"}, "tool_version": "2.0.2+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "update_time": "2019-06-25T22:36:27.083310", "inputs": {"input": {"src": "hda", "id": "10ee2120d1ba1ecd", "uuid": "92371462-a638-437b-92a5-42b92ee91d41"}, "targetregions": {"src": "hda", "id": "03ff1f4b6386ddcc", "uuid": "8bb400b0-647f-4e60-b6a1-f75571086413"}}, "outputs": {"output": {"src": "hda", "id": "520216d3eaa5cc27", "uuid": "96bc6742-5a23-4ced-b9fa-caec81776028"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:35:55.085262", "stderr": "", "model_class": "Job", "params": {"coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}", "cond_plot": "{\"__current_case__\": 0, \"select_plot\": \"no\"}", "read_length": "\"\"", "cov_threshold": "\"4\"", "most_inserts": "\"\"", "cond_region": "{\"__current_case__\": 2, \"select_region\": \"tab\", \"targetregions\": {\"values\": [{\"id\": 1068055, \"src\": \"hda\"}]}}", "trim_quality": "\"\"", "dbkey": "\"?\"", "gc_depth": "\"\"", "split_output_cond": "{\"__current_case__\": 0, \"split_output_selector\": \"no\"}", "remove_overlaps": "\"false\"", "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}", "sparse": "\"false\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "insert_size": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "remove_dups": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "6c1c521ca947de05", "job_stdout": ""}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "time_seconds": 72.1675980091095, "inputs": {"cond_region|select_region": "text", "cond_region|regions_repeat_1|region": "ref1:30-46", "cond_region|regions_repeat_0|region": "ref1:10-24", "input": {"src": "hda", "id": "a8eb77a73600cde2"}, "cond_region|regions_repeat_2|region": "ref1:39-56", "cov_threshold": "4", "addref_cond|addref_select": "no"}, "tool_version": "2.0.2+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "update_time": "2019-06-25T22:36:12.495467", "inputs": {"input": {"src": "hda", "id": "a8eb77a73600cde2", "uuid": "ea600919-34fe-42e6-8cdc-9eba6c0a9ab1"}}, "outputs": {"output": {"src": "hda", "id": "92fd2f7625a66a6a", "uuid": "43ec73ce-399e-48d6-a7ab-1d0262165047"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:35:37.586374", "stderr": "", "model_class": "Job", "params": {"coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}", "cond_plot": "{\"__current_case__\": 0, \"select_plot\": \"no\"}", "read_length": "\"\"", "cov_threshold": "\"4\"", "most_inserts": "\"\"", "cond_region": "{\"__current_case__\": 1, \"regions_repeat\": [{\"__index__\": 0, \"region\": \"ref1:10-24\"}, {\"__index__\": 1, \"region\": \"ref1:30-46\"}, {\"__index__\": 2, \"region\": \"ref1:39-56\"}], \"select_region\": \"text\"}", "trim_quality": "\"\"", "dbkey": "\"?\"", "gc_depth": "\"\"", "split_output_cond": "{\"__current_case__\": 0, \"split_output_selector\": \"no\"}", "remove_overlaps": "\"false\"", "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}", "sparse": "\"false\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "insert_size": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "remove_dups": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "25ad17e4385bc55c", "job_stdout": ""}, "test_index": 6}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1-6", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "time_seconds": 72.94938898086548, "inputs": {"cond_region|targetregions": {"src": "hda", "id": "48a06ac12d380c3a"}, "input": {"src": "hda", "id": "000256448054c3af"}, "addref_cond|addref_select": "no", "cond_region|select_region": "tab"}, "tool_version": "2.0.2+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "update_time": "2019-06-25T22:36:30.690994", "inputs": {"input": {"src": "hda", "id": "000256448054c3af", "uuid": "3cb06048-3127-424a-9661-3acec5ab2dd9"}, "targetregions": {"src": "hda", "id": "48a06ac12d380c3a", "uuid": "a15410a1-e086-40ef-b46f-0aaac0f5e8ba"}}, "outputs": {"output": {"src": "hda", "id": "972e720db9f9a453", "uuid": "b305db5f-6b43-48fc-b1d4-4fc1d3f06962"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:35:54.228468", "stderr": "", "model_class": "Job", "params": {"coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}", "cond_plot": "{\"__current_case__\": 0, \"select_plot\": \"no\"}", "read_length": "\"\"", "cov_threshold": "\"\"", "most_inserts": "\"\"", "cond_region": "{\"__current_case__\": 2, \"select_region\": \"tab\", \"targetregions\": {\"values\": [{\"id\": 1068059, \"src\": \"hda\"}]}}", "trim_quality": "\"\"", "dbkey": "\"?\"", "gc_depth": "\"\"", "split_output_cond": "{\"__current_case__\": 0, \"split_output_selector\": \"no\"}", "remove_overlaps": "\"false\"", "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}", "sparse": "\"false\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "insert_size": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "remove_dups": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "23d37543da772c02", "job_stdout": ""}, "test_index": 7}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1-7", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "time_seconds": 45.78192710876465, "inputs": {"cond_region|targetregions": {"src": "hda", "id": "48a06ac12d380c3a"}, "input": {"src": "hda", "id": "000256448054c3af"}, "remove_overlaps": true, "addref_cond|addref_select": "no", "cond_region|select_region": "tab"}, "tool_version": "2.0.2+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "update_time": "2019-06-25T22:36:29.958594", "inputs": {"input": {"src": "hda", "id": "000256448054c3af", "uuid": "3cb06048-3127-424a-9661-3acec5ab2dd9"}, "targetregions": {"src": "hda", "id": "48a06ac12d380c3a", "uuid": "a15410a1-e086-40ef-b46f-0aaac0f5e8ba"}}, "outputs": {"output": {"src": "hda", "id": "940f16c73cf56d47", "uuid": "c6fd8be6-f93c-469f-9843-aaf4c8a3f576"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:36:02.311707", "stderr": "", "model_class": "Job", "params": {"coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}", "cond_plot": "{\"__current_case__\": 0, \"select_plot\": \"no\"}", "read_length": "\"\"", "cov_threshold": "\"\"", "most_inserts": "\"\"", "cond_region": "{\"__current_case__\": 2, \"select_region\": \"tab\", \"targetregions\": {\"values\": [{\"id\": 1068059, \"src\": \"hda\"}]}}", "trim_quality": "\"\"", "dbkey": "\"?\"", "gc_depth": "\"\"", "split_output_cond": "{\"__current_case__\": 0, \"split_output_selector\": \"no\"}", "remove_overlaps": "\"true\"", "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}", "sparse": "\"false\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "insert_size": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "remove_dups": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "eec72db92449c737", "job_stdout": ""}, "test_index": 8}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1-8", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "time_seconds": 46.21737098693848, "inputs": {"cond_region|targetregions": {"src": "hda", "id": "ff91c33163137966"}, "input": {"src": "hda", "id": "000256448054c3af"}, "addref_cond|addref_select": "no", "cond_region|select_region": "tab"}, "tool_version": "2.0.2+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1", "update_time": "2019-06-25T22:36:30.616305", "inputs": {"input": {"src": "hda", "id": "000256448054c3af", "uuid": "3cb06048-3127-424a-9661-3acec5ab2dd9"}, "targetregions": {"src": "hda", "id": "ff91c33163137966", "uuid": "4c0f444c-22c7-429c-a3f7-cb6610f44930"}}, "outputs": {"output": {"src": "hda", "id": "fb4d6109bc102f5b", "uuid": "4b5e8898-3929-4ab7-b83f-2c49be020c88"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:36:08.003052", "stderr": "", "model_class": "Job", "params": {"coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}", "cond_plot": "{\"__current_case__\": 0, \"select_plot\": \"no\"}", "read_length": "\"\"", "cov_threshold": "\"\"", "most_inserts": "\"\"", "cond_region": "{\"__current_case__\": 2, \"select_region\": \"tab\", \"targetregions\": {\"values\": [{\"id\": 1068068, \"src\": \"hda\"}]}}", "trim_quality": "\"\"", "dbkey": "\"?\"", "gc_depth": "\"\"", "split_output_cond": "{\"__current_case__\": 0, \"split_output_selector\": \"no\"}", "remove_overlaps": "\"false\"", "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}", "sparse": "\"false\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "insert_size": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "remove_dups": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "e6ac1db51be44057", "job_stdout": ""}, "test_index": 9}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy1-9", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sicer/peakcalling_sicer/0.0.2", "time_seconds": 87.92700791358948, "inputs": {"window_size": "200", "effective_genome_fraction": "0.74", "fix_off_by_one_errors": false, "gap_size": "600", "input_control_file": null, "input_bed_file": {"src": "hda", "id": "3f1c6cd29e9ba219"}, "fragment_size": "150", "error_cut_off": "0.01", "redundancy_threshold": "1"}, "tool_version": "0.0.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sicer/peakcalling_sicer/0.0.2", "update_time": "2019-06-25T22:53:10.916437", "inputs": {"input_bed_file": {"src": "hda", "id": "3f1c6cd29e9ba219", "uuid": "c3423fd4-d1d5-404e-b1d5-eb15854d3328"}}, "outputs": {"island_filtered_output_file": {"src": "hda", "id": "da931ea957b5b18c", "uuid": "a786415a-62f2-42cf-97a1-c99c1ba94522"}, "output_log_file": {"src": "hda", "id": "dbce430c8eddaa8c", "uuid": "86c6df60-37be-47fa-8e91-30a617cd020a"}, "redundancy_removed_test_bed_output_file": {"src": "hda", "id": "4424cc8412f2f8b9", "uuid": "7bfee930-4be0-4193-94ed-501cc495a198"}, "score_island_output_file": {"src": "hda", "id": "c19facef3f505e5e", "uuid": "64678b16-0be4-479b-9900-15ad8a36391f"}, "summary_graph_output_file": {"src": "hda", "id": "af6580fbef05be29", "uuid": "04ba4cf3-5d43-488a-b6be-f03fa0998c83"}, "test_normalized_wig_output_file": {"src": "hda", "id": "fea640dba2db865b", "uuid": "97d8b152-3130-4358-a6d9-3510fce2b9bb"}, "island_filtered_normalized_wig_output_file": {"src": "hda", "id": "9804435c176742ef", "uuid": "cc536fa1-d5f9-4194-9619-b671e5ba99a8"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:52:32.876448", "stderr": "", "model_class": "Job", "params": {"window_size": "\"200\"", "fix_off_by_one_errors": "\"false\"", "error_cut_off": "\"0.01\"", "input_control_file": "null", "dbkey": "\"mm8\"", "redundancy_threshold": "\"1\"", "fragment_size": "\"150\"", "effective_genome_fraction": "\"0.74\"", "gap_size": "\"600\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/mm8.len\""}, "tool_stdout": "", "job_messages": [], "id": "cf53707656cb2a98", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/sicer/peakcalling_sicer/0.0.2-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sicer/peakcalling_sicer/0.0.2", "time_seconds": 75.95493698120117, "inputs": {"window_size": "200", "effective_genome_fraction": "0.74", "fix_off_by_one_errors": false, "gap_size": "600", "input_control_file": {"src": "hda", "id": "6ecb8c6affe96bc6"}, "input_bed_file": {"src": "hda", "id": "3f1c6cd29e9ba219"}, "fragment_size": "150", "error_cut_off": "0.01", "redundancy_threshold": "1"}, "tool_version": "0.0.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sicer/peakcalling_sicer/0.0.2", "update_time": "2019-06-25T22:53:22.090086", "inputs": {"input_control_file": {"src": "hda", "id": "6ecb8c6affe96bc6", "uuid": "e754492f-86ef-44b6-909b-461f53615c1f"}, "input_bed_file": {"src": "hda", "id": "3f1c6cd29e9ba219", "uuid": "c3423fd4-d1d5-404e-b1d5-eb15854d3328"}}, "outputs": {"redundancy_removed_control_bed_output_file": {"src": "hda", "id": "7fa71b7a3d83ab2f", "uuid": "04c09c46-c31e-4068-abfb-bcdccb9f6453"}, "island_filtered_output_file": {"src": "hda", "id": "22f2b59d137c787f", "uuid": "e7acc50f-23ac-46c0-9063-f7116efa1609"}, "significant_islands_summary_output_file": {"src": "hda", "id": "c8d41a47af477865", "uuid": "d9f2c5ca-b3e2-4f32-bd5f-510450e4609b"}, "output_log_file": {"src": "hda", "id": "f0413e20cf9890bb", "uuid": "459dd2dd-dede-4216-bd9d-041c01fca547"}, "islands_summary_output_file": {"src": "hda", "id": "f0e997bef057f934", "uuid": "381d4345-9096-4b91-bc58-d428bfc8c964"}, "score_island_output_file": {"src": "hda", "id": "67f6aa529860f34a", "uuid": "43f623a5-98a2-4c06-8376-37290fa6672b"}, "summary_graph_output_file": {"src": "hda", "id": "cb0987e6d5067871", "uuid": "a4d5faa9-9f82-4108-aafa-da40deb85ff7"}, "significant_islands_output_file": {"src": "hda", "id": "272a738c97a5936e", "uuid": "0f24050e-5abe-492e-878d-a676d6ecb1b2"}, "redundancy_removed_test_bed_output_file": {"src": "hda", "id": "02af1c6566110796", "uuid": "acb33e50-3f1a-4763-87ca-f198eaa52ebc"}, "test_normalized_wig_output_file": {"src": "hda", "id": "f6e95b54ed2bdd63", "uuid": "e7924b2d-5193-4008-a57f-8b37c16ed8bd"}, "island_filtered_normalized_wig_output_file": {"src": "hda", "id": "cf51b7ee947a6496", "uuid": "4940434c-14e3-4f08-b8c9-958b634a85b1"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:52:53.035766", "stderr": "", "model_class": "Job", "params": {"window_size": "\"200\"", "fragment_size": "\"150\"", "error_cut_off": "\"0.01\"", "fix_off_by_one_errors": "\"false\"", "dbkey": "\"mm8\"", "redundancy_threshold": "\"1\"", "effective_genome_fraction": "\"0.74\"", "gap_size": "\"600\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/mm8.len\""}, "tool_stdout": "", "job_messages": [], "id": "f907819c0e2bff6b", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/sicer/peakcalling_sicer/0.0.2-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sicer/peakcalling_sicer/0.0.2", "time_seconds": 73.67484998703003, "inputs": {"window_size": "200", "effective_genome_fraction": "0.74", "fix_off_by_one_errors": true, "gap_size": "600", "input_control_file": {"src": "hda", "id": "6ecb8c6affe96bc6"}, "input_bed_file": {"src": "hda", "id": "3f1c6cd29e9ba219"}, "fragment_size": "150", "error_cut_off": "0.01", "redundancy_threshold": "1"}, "tool_version": "0.0.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sicer/peakcalling_sicer/0.0.2", "update_time": "2019-06-25T22:53:50.035434", "inputs": {"input_control_file": {"src": "hda", "id": "6ecb8c6affe96bc6", "uuid": "e754492f-86ef-44b6-909b-461f53615c1f"}, "input_bed_file": {"src": "hda", "id": "3f1c6cd29e9ba219", "uuid": "c3423fd4-d1d5-404e-b1d5-eb15854d3328"}}, "outputs": {"redundancy_removed_control_bed_output_file": {"src": "hda", "id": "85ae5979148a6398", "uuid": "abea3031-dce9-4757-beb1-9d371f885410"}, "island_filtered_output_file": {"src": "hda", "id": "bca5979916c9739e", "uuid": "80b476aa-3011-42de-afd1-2382b4e4a37e"}, "significant_islands_summary_output_file": {"src": "hda", "id": "69a872917c0f29b6", "uuid": "cea71f2b-7c3a-436c-8d13-feac31e029f1"}, "output_log_file": {"src": "hda", "id": "7bdc1344413dd43e", "uuid": "75970a67-7ec2-4fbf-bdcb-588639c20f2b"}, "islands_summary_output_file": {"src": "hda", "id": "f6da9c112181a0e3", "uuid": "93bf52d0-0c01-4524-b321-36ddbaef5c93"}, "score_island_output_file": {"src": "hda", "id": "da2148a078b4afc1", "uuid": "5bc9a53f-97b5-408b-8b6c-d51fbd7bba5a"}, "summary_graph_output_file": {"src": "hda", "id": "0591bf4042b813b9", "uuid": "58621292-cb62-41f7-b6d3-f982aacf5ca2"}, "significant_islands_output_file": {"src": "hda", "id": "b2bd71bc30cb602a", "uuid": "a12f92c5-7acc-4f61-a251-5a160a8917e3"}, "redundancy_removed_test_bed_output_file": {"src": "hda", "id": "f8ba93ebcaee70ab", "uuid": "aa63ceae-6adc-4b91-a5fc-f2df7918597f"}, "test_normalized_wig_output_file": {"src": "hda", "id": "04a07335ce02aa57", "uuid": "b73c2c06-0056-4f62-b01a-e6ebdd8d2d01"}, "island_filtered_normalized_wig_output_file": {"src": "hda", "id": "19e3a28db7632fb2", "uuid": "197c4be5-3412-40cc-a7ae-0d93cbc5f74f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:53:28.064329", "stderr": "", "model_class": "Job", "params": {"window_size": "\"200\"", "fragment_size": "\"150\"", "error_cut_off": "\"0.01\"", "fix_off_by_one_errors": "\"true\"", "dbkey": "\"mm8\"", "redundancy_threshold": "\"1\"", "effective_genome_fraction": "\"0.74\"", "gap_size": "\"600\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/mm8.len\""}, "tool_stdout": "", "job_messages": [], "id": "94a9eb2d73e45494", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/sicer/peakcalling_sicer/0.0.2-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sicer/peakcalling_sicer/0.0.2", "time_seconds": 50.42422389984131, "inputs": {"window_size": "200", "effective_genome_fraction": "0.74", "fix_off_by_one_errors": true, "gap_size": "600", "input_control_file": null, "input_bed_file": {"src": "hda", "id": "3f1c6cd29e9ba219"}, "fragment_size": "150", "error_cut_off": "0.01", "redundancy_threshold": "1"}, "tool_version": "0.0.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/sicer/peakcalling_sicer/0.0.2", "update_time": "2019-06-25T22:53:24.993615", "inputs": {"input_bed_file": {"src": "hda", "id": "3f1c6cd29e9ba219", "uuid": "c3423fd4-d1d5-404e-b1d5-eb15854d3328"}}, "outputs": {"island_filtered_output_file": {"src": "hda", "id": "21697ffc5cde23e1", "uuid": "274f2f11-355c-4927-ba08-bf92ded70dc0"}, "output_log_file": {"src": "hda", "id": "6ea61bfe6f0e37ca", "uuid": "1a460509-c51d-4f84-8c67-0d66a57b30d3"}, "redundancy_removed_test_bed_output_file": {"src": "hda", "id": "9c666b48d2fca347", "uuid": "44eb9012-3761-40c3-a61b-79c4d689156b"}, "score_island_output_file": {"src": "hda", "id": "7b9798cd1c500bcf", "uuid": "f133311d-8597-4d9a-9d33-f663086a9ecf"}, "summary_graph_output_file": {"src": "hda", "id": "6058d6714dce5135", "uuid": "dbd9dc6b-572e-41fc-bfd4-d53d7eb4a41c"}, "test_normalized_wig_output_file": {"src": "hda", "id": "ebb135a256278394", "uuid": "9acec88d-ac99-4964-b277-ff8217ace81c"}, "island_filtered_normalized_wig_output_file": {"src": "hda", "id": "22a904069d15bc16", "uuid": "b6111353-4e98-406d-b426-240a62c45ada"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:53:04.684986", "stderr": "", "model_class": "Job", "params": {"window_size": "\"200\"", "fix_off_by_one_errors": "\"true\"", "error_cut_off": "\"0.01\"", "input_control_file": "null", "dbkey": "\"mm8\"", "redundancy_threshold": "\"1\"", "fragment_size": "\"150\"", "effective_genome_fraction": "\"0.74\"", "gap_size": "\"600\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/mm8.len\""}, "tool_stdout": "", "job_messages": [], "id": "4fe8c93bfabe059c", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/sicer/peakcalling_sicer/0.0.2-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/snpfreq/hgv_snpFreq/1.0.1", "time_seconds": 49.806150913238525, "inputs": {"inTypeCond|group1_3": "6", "inTypeCond|input": {"src": "hda", "id": "96ef4c5efa72517a"}, "inTypeCond|group1_1": "4", "inTypeCond|inType": "tab", "inTypeCond|group1_2": "5", "inTypeCond|group2_1": "7", "inTypeCond|group2_2": "8", "inTypeCond|group2_3": "9"}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/snpfreq/hgv_snpFreq/1.0.1", "update_time": "2019-06-25T22:57:49.301794", "inputs": {"input": {"src": "hda", "id": "96ef4c5efa72517a", "uuid": "6d3c5eed-5f2a-4948-892e-a48f7bd3b98a"}}, "outputs": {"output": {"src": "hda", "id": "bf7a1b79b4c998a8", "uuid": "fe35f2dd-c707-4655-8d4a-c0a933b4c506"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:57:36.721911", "stderr": "", "model_class": "Job", "params": {"inTypeCond": "{\"__current_case__\": 0, \"group1_1\": \"4\", \"group1_2\": \"5\", \"group1_3\": \"6\", \"group2_1\": \"7\", \"group2_2\": \"8\", \"group2_3\": \"9\", \"inType\": \"tab\", \"input\": {\"values\": [{\"id\": 1068583, \"src\": \"hda\"}]}}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/hg18.len\"", "dbkey": "\"hg18\""}, "tool_stdout": "", "job_messages": [], "id": "364971ed50a1da94", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/snpfreq/hgv_snpFreq/1.0.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/subtract_query/subtract_query1/0.1", "time_seconds": 65.24592590332031, "inputs": {"input2": {"src": "hda", "id": "3ab33cb8b07ceeda"}, "input1": {"src": "hda", "id": "fe594c18356736cb"}, "begin_col": "", "end_col": ""}, "tool_version": "0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/subtract_query/subtract_query1/0.1", "update_time": "2019-06-25T22:04:11.368737", "inputs": {"input2": {"src": "hda", "id": "3ab33cb8b07ceeda", "uuid": "52de0221-97f3-4b48-9602-61a71f61b98e"}, "input1": {"src": "hda", "id": "fe594c18356736cb", "uuid": "a43e43da-84fa-42bf-99a9-6d8ba7631173"}}, "outputs": {"output": {"src": "hda", "id": "f5f96aaf53989eb7", "uuid": "1a0fabe2-a3e9-4104-8bdd-8fa5a4e88fc5"}}, "history_id": "f840675b8d7f5485", "stdout": "Subtracted 0 lines. \n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:03:31.203178", "stderr": "", "model_class": "Job", "params": {"end_col": "null", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "begin_col": "null", "dbkey": "\"?\"", "ignore_empty_end_cols": "\"false\""}, "tool_stdout": "Subtracted 0 lines. \n", "job_messages": [], "id": "5a96ea4161c763c8", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/subtract_query/subtract_query1/0.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/subtract_query/subtract_query1/0.1", "time_seconds": 25.11238408088684, "inputs": {"input2": {"src": "hda", "id": "6203b1e20f7fe5c0"}, "input1": {"src": "hda", "id": "fe594c18356736cb"}, "begin_col": "c1", "end_col": "c3"}, "tool_version": "0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/subtract_query/subtract_query1/0.1", "update_time": "2019-06-25T22:04:01.980184", "inputs": {"input2": {"src": "hda", "id": "6203b1e20f7fe5c0", "uuid": "46915eb8-94ea-452a-9ea6-bb96fb2cd100"}, "input1": {"src": "hda", "id": "fe594c18356736cb", "uuid": "a43e43da-84fa-42bf-99a9-6d8ba7631173"}}, "outputs": {"output": {"src": "hda", "id": "2918bd6906b26036", "uuid": "5f3ba2df-076f-4506-a820-eeba8f0c06d7"}}, "history_id": "f840675b8d7f5485", "stdout": "Subtracted 5 lines. Restricted to columns c1 thru c3. \n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:03:45.542518", "stderr": "", "model_class": "Job", "params": {"end_col": "\"3\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "begin_col": "\"1\"", "dbkey": "\"?\"", "ignore_empty_end_cols": "\"false\""}, "tool_stdout": "Subtracted 5 lines. Restricted to columns c1 thru c3. \n", "job_messages": [], "id": "5700ace79727dc54", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/subtract_query/subtract_query1/0.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/subtract_query/subtract_query1/0.1", "time_seconds": 24.86223602294922, "inputs": {"input2": {"src": "hda", "id": "6a6956e877cc2022"}, "input1": {"src": "hda", "id": "fe594c18356736cb"}, "begin_col": "", "end_col": ""}, "tool_version": "0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/subtract_query/subtract_query1/0.1", "update_time": "2019-06-25T22:04:01.281304", "inputs": {"input2": {"src": "hda", "id": "6a6956e877cc2022", "uuid": "ac71ade8-cafd-4ceb-92ff-11be1b92bd69"}, "input1": {"src": "hda", "id": "fe594c18356736cb", "uuid": "a43e43da-84fa-42bf-99a9-6d8ba7631173"}}, "outputs": {"output": {"src": "hda", "id": "a27dc58f01ad4d83", "uuid": "809ffa8e-791c-4c3c-a693-d0b98574889d"}}, "history_id": "f840675b8d7f5485", "stdout": "Subtracted 0 lines. \n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:03:45.227778", "stderr": "", "model_class": "Job", "params": {"end_col": "null", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "begin_col": "null", "dbkey": "\"?\"", "ignore_empty_end_cols": "\"false\""}, "tool_stdout": "Subtracted 0 lines. \n", "job_messages": [], "id": "47cffe4ac852f2a5", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/subtract_query/subtract_query1/0.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/subtract_query/subtract_query1/0.1", "time_seconds": 25.04611611366272, "inputs": {"input2": {"src": "hda", "id": "3ab33cb8b07ceeda"}, "input1": {"src": "hda", "id": "bd9a218ff0dd59b3"}, "begin_col": "", "end_col": "", "ignore_empty_end_cols": true}, "tool_version": "0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/subtract_query/subtract_query1/0.1", "update_time": "2019-06-25T22:04:20.305563", "inputs": {"input2": {"src": "hda", "id": "3ab33cb8b07ceeda", "uuid": "52de0221-97f3-4b48-9602-61a71f61b98e"}, "input1": {"src": "hda", "id": "bd9a218ff0dd59b3", "uuid": "6fbf06d7-46d6-436b-ae97-593c232dd739"}}, "outputs": {"output": {"src": "hda", "id": "29bcf98f46154770", "uuid": "eef598ef-9fa2-48f3-b4b0-88683ac5e62c"}}, "history_id": "f840675b8d7f5485", "stdout": "Subtracted 0 lines. \n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:04:03.455830", "stderr": "", "model_class": "Job", "params": {"end_col": "null", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "begin_col": "null", "dbkey": "\"?\"", "ignore_empty_end_cols": "\"true\""}, "tool_stdout": "Subtracted 0 lines. \n", "job_messages": [], "id": "46dc2edb8041f149", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/subtract_query/subtract_query1/0.1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1", "time_seconds": 38.63519096374512, "inputs": {"inputFile1": {"src": "hda", "id": "695bcea2c50588c6"}, "inputFile2": {"src": "hda", "id": "4cbab0ef8123b2a9"}, "inputTestSidedness3": "two-sided", "inputStandardDeviationEquality4": "equal"}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1", "update_time": "2019-06-25T22:05:02.083305", "inputs": {"inputFile1": {"src": "hda", "id": "695bcea2c50588c6", "uuid": "bf32ab82-6a66-4bfe-968c-ae748f3a15de"}, "inputFile2": {"src": "hda", "id": "4cbab0ef8123b2a9", "uuid": "03c1f5d2-ad95-4e2c-a462-339693aebf9f"}}, "outputs": {"outputFile1": {"src": "hda", "id": "de17d83d721193dd", "uuid": "e19244d9-f3de-40e4-9ed5-9562d70105be"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:04:34.059557", "stderr": "", "model_class": "Job", "params": {"inputTestSidedness3": "\"two-sided\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "inputStandardDeviationEquality4": "\"equal\""}, "tool_stdout": "", "job_messages": [], "id": "4172a34a16923b88", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1", "time_seconds": 38.806472063064575, "inputs": {"inputFile1": {"src": "hda", "id": "daaab333aa220a27"}, "inputFile2": {"src": "hda", "id": "7722aae924ffc9ae"}, "inputTestSidedness3": "two-sided", "inputStandardDeviationEquality4": "unequal"}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1", "update_time": "2019-06-25T22:05:12.320145", "inputs": {"inputFile1": {"src": "hda", "id": "daaab333aa220a27", "uuid": "824ef6a9-7494-48b5-b342-e6639f731b04"}, "inputFile2": {"src": "hda", "id": "7722aae924ffc9ae", "uuid": "546af926-8ed0-415f-965c-224efe5168aa"}}, "outputs": {"outputFile1": {"src": "hda", "id": "5b912112d58d43e8", "uuid": "92ddd4f0-5e7d-423d-8904-d76f808b5f0c"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:04:47.831341", "stderr": "", "model_class": "Job", "params": {"inputTestSidedness3": "\"two-sided\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "inputStandardDeviationEquality4": "\"unequal\""}, "tool_stdout": "", "job_messages": [], "id": "f405d8e8a75182b5", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1", "time_seconds": 40.794426918029785, "inputs": {"inputFile1": {"src": "hda", "id": "daaab333aa220a27"}, "inputFile2": {"src": "hda", "id": "7722aae924ffc9ae"}, "inputTestSidedness3": "one-sided:_m1_less_than_m2", "inputStandardDeviationEquality4": "equal"}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1", "update_time": "2019-06-25T22:05:12.791824", "inputs": {"inputFile1": {"src": "hda", "id": "daaab333aa220a27", "uuid": "824ef6a9-7494-48b5-b342-e6639f731b04"}, "inputFile2": {"src": "hda", "id": "7722aae924ffc9ae", "uuid": "546af926-8ed0-415f-965c-224efe5168aa"}}, "outputs": {"outputFile1": {"src": "hda", "id": "5f1ce4b240b211f1", "uuid": "73e96254-8161-48d5-b130-cd044f031604"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:04:46.012096", "stderr": "", "model_class": "Job", "params": {"inputTestSidedness3": "\"one-sided:_m1_less_than_m2\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "inputStandardDeviationEquality4": "\"equal\""}, "tool_stdout": "", "job_messages": [], "id": "14ee34c6c892a602", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1", "time_seconds": 24.880379915237427, "inputs": {"inputFile1": {"src": "hda", "id": "daaab333aa220a27"}, "inputFile2": {"src": "hda", "id": "7722aae924ffc9ae"}, "inputTestSidedness3": "one-sided:_m1_less_than_m2", "inputStandardDeviationEquality4": "unequal"}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1", "update_time": "2019-06-25T22:05:12.397581", "inputs": {"inputFile1": {"src": "hda", "id": "daaab333aa220a27", "uuid": "824ef6a9-7494-48b5-b342-e6639f731b04"}, "inputFile2": {"src": "hda", "id": "7722aae924ffc9ae", "uuid": "546af926-8ed0-415f-965c-224efe5168aa"}}, "outputs": {"outputFile1": {"src": "hda", "id": "bf05194c0a3eb205", "uuid": "abfabc12-48d0-4700-aeb0-6fd1a2a42516"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:04:54.863890", "stderr": "", "model_class": "Job", "params": {"inputTestSidedness3": "\"one-sided:_m1_less_than_m2\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "inputStandardDeviationEquality4": "\"unequal\""}, "tool_stdout": "", "job_messages": [], "id": "6de6818fc26d9625", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1", "time_seconds": 17.47257089614868, "inputs": {"inputFile1": {"src": "hda", "id": "daaab333aa220a27"}, "inputFile2": {"src": "hda", "id": "7722aae924ffc9ae"}, "inputTestSidedness3": "one-sided:_m1_greater_than_m2", "inputStandardDeviationEquality4": "equal"}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1", "update_time": "2019-06-25T22:05:14.934212", "inputs": {"inputFile1": {"src": "hda", "id": "daaab333aa220a27", "uuid": "824ef6a9-7494-48b5-b342-e6639f731b04"}, "inputFile2": {"src": "hda", "id": "7722aae924ffc9ae", "uuid": "546af926-8ed0-415f-965c-224efe5168aa"}}, "outputs": {"outputFile1": {"src": "hda", "id": "623d7e46d4b183ad", "uuid": "49c0c4b9-f9e2-4689-9a5b-e992a2392f78"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:05:02.690670", "stderr": "", "model_class": "Job", "params": {"inputTestSidedness3": "\"one-sided:_m1_greater_than_m2\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "inputStandardDeviationEquality4": "\"equal\""}, "tool_stdout": "", "job_messages": [], "id": "8fe6aa11acc6386b", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1", "time_seconds": 24.857610940933228, "inputs": {"inputFile1": {"src": "hda", "id": "72a9e2a3e39617ec"}, "inputFile2": {"src": "hda", "id": "332d41cb7b5dbbdb"}, "inputTestSidedness3": "one-sided:_m1_greater_than_m2", "inputStandardDeviationEquality4": "unequal"}, "tool_version": "1.0.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1", "update_time": "2019-06-25T22:05:51.254959", "inputs": {"inputFile1": {"src": "hda", "id": "72a9e2a3e39617ec", "uuid": "e2bf04ec-f4ca-425f-b112-7c839800ceb6"}, "inputFile2": {"src": "hda", "id": "332d41cb7b5dbbdb", "uuid": "682d51f7-6383-48c5-8f4a-dd8952cc6183"}}, "outputs": {"outputFile1": {"src": "hda", "id": "fb6d4cc25a126389", "uuid": "65c114da-48d3-45d4-be52-c7260d90b511"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:05:38.973329", "stderr": "", "model_class": "Job", "params": {"inputTestSidedness3": "\"one-sided:_m1_greater_than_m2\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "inputStandardDeviationEquality4": "\"unequal\""}, "tool_stdout": "", "job_messages": [], "id": "af06f1c01daf0719", "job_stdout": ""}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/t_test_two_samples/t_test_two_samples/1.0.1-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/tabular_to_fasta/tab2fasta/1.1.0", "time_seconds": 18.376165866851807, "inputs": {"title_col": ["1", "2", "3", "4"], "input": {"src": "hda", "id": "401d3f90b1675d4f"}, "seq_col": "5"}, "tool_version": "1.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/tabular_to_fasta/tab2fasta/1.1.0", "update_time": "2019-06-25T22:37:38.586624", "inputs": {"input": {"src": "hda", "id": "401d3f90b1675d4f", "uuid": "44fb04f0-7d6d-485c-a15a-a25988bb39e9"}}, "outputs": {"output": {"src": "hda", "id": "46602bbd0abb1758", "uuid": "5ff98e1f-f1e5-413b-bd20-33ec531341a7"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:37:26.833788", "stderr": "", "model_class": "Job", "params": {"title_col": "[\"1\", \"2\", \"3\", \"4\"]", "seq_col": "\"5\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "a79a693da0af4d38", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/tabular_to_fasta/tab2fasta/1.1.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/varscan_version_2/varscan/2.4.2", "time_seconds": 26.33504891395569, "inputs": {"strand_filter": "no", "min_avg_qual": "15", "cmd": "mpileup2cns", "min_coverage": "8", "sample_names": "", "min_freq_for_hom": "0.75", "min_var_freq": "0.01", "p_value": "0.99", "input": {"src": "hda", "id": "60039547e0324f5a"}, "min_supporting_reads": "2"}, "tool_version": "2.4.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/varscan_version_2/varscan/2.4.2", "update_time": "2019-06-25T22:37:26.129070", "inputs": {"input": {"src": "hda", "id": "60039547e0324f5a", "uuid": "0d22a35a-3701-4508-96fc-2606e17fecad"}}, "outputs": {"output": {"src": "hda", "id": "c11d28e894454cdd", "uuid": "a8a96839-e5da-4af9-9433-7a48964ba8d3"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Only variants will be reported\nMin coverage:\t8\nMin reads2:\t2\nMin var freq:\t0.01\nMin avg qual:\t15\nP-value thresh:\t0.99\nReading input from /mnt/galaxy/files/000/924/dataset_924969.dat\n13 bases in pileup file\n2 variant positions (0 SNP, 2 indel)\n0 were failed by the strand-filter\n2 variant positions reported (0 SNP, 2 indel)\n", "state": "ok", "create_time": "2019-06-25T22:37:12.604475", "stderr": "Only variants will be reported\nMin coverage:\t8\nMin reads2:\t2\nMin var freq:\t0.01\nMin avg qual:\t15\nP-value thresh:\t0.99\nReading input from /mnt/galaxy/files/000/924/dataset_924969.dat\n13 bases in pileup file\n2 variant positions (0 SNP, 2 indel)\n0 were failed by the strand-filter\n2 variant positions reported (0 SNP, 2 indel)\n", "model_class": "Job", "params": {"strand_filter": "\"no\"", "p_value": "\"0.99\"", "sample_names": "\"\"", "min_coverage": "\"8\"", "cmd": "\"mpileup2cns\"", "min_freq_for_hom": "\"0.75\"", "dbkey": "\"?\"", "min_var_freq": "\"0.01\"", "min_avg_qual": "\"15\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "min_supporting_reads": "\"2\""}, "tool_stdout": "", "job_messages": [{"stream": "stderr", "code_desc": "tool progress", "error_level": 1, "type": "regex", "match": "Only variants will be reported", "desc": "Log: tool progress"}, {"stream": "stdout", "code_desc": "tool progress", "error_level": 1, "type": "regex", "match": "", "desc": "Log: tool progress"}], "id": "95a273e0fdcba0ac", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/varscan_version_2/varscan/2.4.2-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfcombine/vcfcombine/1.0.0_rc1+galaxy0", "time_seconds": 66.1414201259613, "inputs": {"input_vcfs": [{"src": "hda", "id": "467c29d6ea7580e5"}, {"src": "hda", "id": "467c29d6ea7580e5"}]}, "tool_version": "1.0.0_rc1+galaxy0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfcombine/vcfcombine/1.0.0_rc1+galaxy0", "update_time": "2019-06-25T22:37:36.983940", "inputs": {"input_vcfs2": {"src": "hda", "id": "467c29d6ea7580e5", "uuid": "624735d6-f9e9-46fe-b7d4-5113bd0d4fe3"}, "input_vcfs": {"src": "hda", "id": "467c29d6ea7580e5", "uuid": "624735d6-f9e9-46fe-b7d4-5113bd0d4fe3"}, "input_vcfs1": {"src": "hda", "id": "467c29d6ea7580e5", "uuid": "624735d6-f9e9-46fe-b7d4-5113bd0d4fe3"}}, "outputs": {"out_file1": {"src": "hda", "id": "a7b4336fc3ddd1b6", "uuid": "3c3080dd-eadd-49ef-bd77-dfdee9f982ee"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:36:59.072011", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "f899586cdc08c823", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfcombine/vcfcombine/1.0.0_rc1+galaxy0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfcommonsamples/vcfcommonsamples/1.0.0_rc1+galaxy0", "time_seconds": 25.72804307937622, "inputs": {"input2": {"src": "hda", "id": "2739d1e25639f020"}, "input1": {"src": "hda", "id": "467c29d6ea7580e5"}}, "tool_version": "1.0.0_rc1+galaxy0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfcommonsamples/vcfcommonsamples/1.0.0_rc1+galaxy0", "update_time": "2019-06-25T22:37:49.838125", "inputs": {"input2": {"src": "hda", "id": "2739d1e25639f020", "uuid": "8deedbfd-806e-41ef-a2bf-215583d915b2"}, "input1": {"src": "hda", "id": "467c29d6ea7580e5", "uuid": "624735d6-f9e9-46fe-b7d4-5113bd0d4fe3"}}, "outputs": {"out_file1": {"src": "hda", "id": "681c2e9d4db82899", "uuid": "c64b7be7-5f76-4ab0-9cd8-1ec59fc66a62"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:37:36.170867", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "6fb5bae64f7973c8", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfcommonsamples/vcfcommonsamples/1.0.0_rc1+galaxy0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcffilter/vcffilter2/1.0.0_rc1+galaxy2", "time_seconds": 38.67813801765442, "inputs": {"input1": {"src": "hda", "id": "c6b6f2dca3f03b96"}, "filter_repeat_0|filter_value": "DP > 10", "filter_repeat_0|filter_type": "-f"}, "tool_version": "1.0.0_rc1+galaxy2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcffilter/vcffilter2/1.0.0_rc1+galaxy2", "update_time": "2019-06-25T22:06:09.338933", "inputs": {"input1": {"src": "hda", "id": "c6b6f2dca3f03b96", "uuid": "c29c3335-bb14-42db-9c1c-7ba6f2f5a674"}}, "outputs": {"out_file1": {"src": "hda", "id": "14bc93d9f3958df8", "uuid": "c64c7c73-80e5-4ae3-92f0-f169b95250f0"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:05:42.492296", "stderr": "", "model_class": "Job", "params": {"append_filter": "\"false\"", "filter_sites": "\"false\"", "allele_tag": "\"false\"", "region": "\"\"", "dbkey": "\"?\"", "or": "\"false\"", "tag_pass": "\"false\"", "invert": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "filter_repeat": "[{\"__index__\": 0, \"filter_type\": \"-f\", \"filter_value\": \"DP > 10\"}]", "tag_fail": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "db0d2e7de06b1823", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/vcffilter/vcffilter2/1.0.0_rc1+galaxy2-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfgeno2haplo/vcfgeno2haplo/1.0.0_rc1+galaxy0", "time_seconds": 54.74151921272278, "inputs": {"reference_source|reference_source_selector": "history", "reference_source|ref_file": {"src": "hda", "id": "3a1d08883d4a8b02"}, "window_size": "5000", "output_option": true, "reference_source|input_vcf": {"src": "hda", "id": "19ff56798a2ac673"}}, "tool_version": "1.0.0_rc1+galaxy0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfgeno2haplo/vcfgeno2haplo/1.0.0_rc1+galaxy0", "update_time": "2019-06-25T22:57:27.445499", "inputs": {"ref_file": {"src": "hda", "id": "3a1d08883d4a8b02", "uuid": "aec08185-56ff-4a32-95fa-466a65882501"}, "input_vcf": {"src": "hda", "id": "19ff56798a2ac673", "uuid": "2e6039b0-a163-4c26-893b-cc76cf25ce76"}}, "outputs": {"out_file1": {"src": "hda", "id": "33ad363fadaa73b3", "uuid": "e570ddb9-999e-46b7-a33e-8a5c6cdbc3ac"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "index file localref.fa.fai not found, generating...\nno alternate alleles remain at phiX174:1015 after haplotype validation\n", "state": "ok", "create_time": "2019-06-25T22:57:12.621375", "stderr": "index file localref.fa.fai not found, generating...\nno alternate alleles remain at phiX174:1015 after haplotype validation\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "window_size": "\"5000\"", "output_option": "\"true\"", "dbkey": "\"?\"", "reference_source": "{\"__current_case__\": 1, \"input_vcf\": {\"values\": [{\"id\": 1068549, \"src\": \"hda\"}]}, \"ref_file\": {\"values\": [{\"id\": 1068548, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "tool_stdout": "", "job_messages": [], "id": "f63a90e1a6b7c9de", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfgeno2haplo/vcfgeno2haplo/1.0.0_rc1+galaxy0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfgenotypes/vcfgenotypes/1.0.0_rc1+galaxy0", "time_seconds": 53.75126099586487, "inputs": {"vcf_input": {"src": "hda", "id": "d5225ae70393bb31"}}, "tool_version": "1.0.0_rc1+galaxy0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfgenotypes/vcfgenotypes/1.0.0_rc1+galaxy0", "update_time": "2019-06-25T23:52:26.339514", "inputs": {"vcf_input": {"src": "hda", "id": "d5225ae70393bb31", "uuid": "da5e8d44-5379-4977-8637-b68cda9c73e6"}}, "outputs": {"out_file1": {"src": "hda", "id": "8b9e0a20e0839bbe", "uuid": "679c42ba-5d31-4f10-a697-6d4ee23efadb"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:52:10.935220", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "eda0285f965ec70d", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfgenotypes/vcfgenotypes/1.0.0_rc1+galaxy0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfselectsamples/vcfselectsamples/1.0.0_rc1+galaxy0", "time_seconds": 25.04013180732727, "inputs": {"vcf_samples": ["NA00001", "NA00003"], "input1": {"src": "hda", "id": "c312533ce5046c00"}}, "tool_version": "1.0.0_rc1+galaxy0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfselectsamples/vcfselectsamples/1.0.0_rc1+galaxy0", "update_time": "2019-06-25T22:02:23.610764", "inputs": {"input1": {"src": "hda", "id": "c312533ce5046c00", "uuid": "e499af55-829b-4929-8a22-ca1268d298a1"}}, "outputs": {"out_file1": {"src": "hda", "id": "7a2dac2ebc0c5d8f", "uuid": "cd3e87ef-382c-46ae-8673-e9b3ae7acdda"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:02:09.562206", "stderr": "", "model_class": "Job", "params": {"vcf_samples": "[\"NA00001\", \"NA00003\"]", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "4d9e2310ecaa92eb", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfselectsamples/vcfselectsamples/1.0.0_rc1+galaxy0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfsort/vcfsort/1.0.0_rc1+galaxy0", "time_seconds": 30.04572892189026, "inputs": {"input1": {"src": "hda", "id": "eb7f3ebee05a102d"}}, "tool_version": "1.0.0_rc1+galaxy0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfsort/vcfsort/1.0.0_rc1+galaxy0", "update_time": "2019-06-26T02:24:52.873123", "inputs": {"input1": {"src": "hda", "id": "eb7f3ebee05a102d", "uuid": "fdf07d4d-d6eb-47da-b032-7bcfa0c80650"}}, "outputs": {"out_file1": {"src": "hda", "id": "afac8d714f5bc8de", "uuid": "94ea6ee2-71a1-499e-bcc2-c0eda216b9d6"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:24:37.657368", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "0afa5fb3c68dc84c", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfsort/vcfsort/1.0.0_rc1+galaxy0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/xy_plot/XY_Plot_1/1.0.2", "time_seconds": 67.27785682678223, "inputs": {"xlab": "Column 1", "series_0|ycol": "2", "series_0|series_type|lwd": "1.0", "series_0|series_type|col": "2", "series_0|series_type|type": "line", "outftype": "pdf", "series_0|series_type|lty": "2", "series_0|input": {"src": "hda", "id": "7fb3557d951bffe6"}, "series_0|xcol": "1", "ylab": "Column 2", "main": "Example XY Plot"}, "tool_version": "1.0.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/xy_plot/XY_Plot_1/1.0.2", "update_time": "2019-06-25T23:24:39.998494", "inputs": {"series_0|input": {"src": "hda", "id": "7fb3557d951bffe6", "uuid": "4a28064c-2bf3-4207-aa78-39d733ef2d55"}}, "outputs": {"out_file_pdf": {"src": "hda", "id": "3ca2373c101d64e9", "uuid": "f20a1547-e1c0-4ec6-8fab-1ee780fab27f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:24:22.546297", "stderr": "", "model_class": "Job", "params": {"xlab": "\"Column 1\"", "series": "[{\"__index__\": 0, \"header\": \"false\", \"input\": {\"values\": [{\"id\": 1068685, \"src\": \"hda\"}]}, \"series_type\": {\"__current_case__\": 0, \"col\": \"2\", \"lty\": \"2\", \"lwd\": \"1.0\", \"type\": \"line\"}, \"xcol\": \"1\", \"ycol\": [\"2\"]}]", "outftype": "\"pdf\"", "dbkey": "\"?\"", "ylab": "\"Column 2\"", "main": "\"Example XY Plot\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "47a0e77d2e5e1c00", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/devteam/xy_plot/XY_Plot_1/1.0.2-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regex1/1.0.0", "time_seconds": 47.391570806503296, "inputs": {"input": {"src": "hda", "id": "70cdbef45eed350a"}, "checks_0|replacement": "\\1 \\1", "checks_0|pattern": "(T\\w+)"}, "tool_version": "1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regex1/1.0.0", "update_time": "2019-06-26T00:04:32.398179", "inputs": {"input": {"src": "hda", "id": "70cdbef45eed350a", "uuid": "94676bdf-c018-4c4f-8b51-0809d2f6b7a2"}}, "outputs": {"out_file1": {"src": "hda", "id": "5a45f8b1ab9ac01e", "uuid": "6c164fb4-ad1a-47df-bcfd-2fac4150ae40"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:04:20.993887", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "checks": "[{\"__index__\": 0, \"pattern\": \"(T\\\\w+)\", \"replacement\": \"\\\\1 \\\\1\"}]", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "b7e42b82f3cdebad", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regex1/1.0.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regex1/1.0.0", "time_seconds": 51.7752640247345, "inputs": {"input": {"src": "hda", "id": "70cdbef45eed350a"}, "checks_0|replacement": "'\"", "checks_0|pattern": "f"}, "tool_version": "1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regex1/1.0.0", "update_time": "2019-06-26T00:04:38.132994", "inputs": {"input": {"src": "hda", "id": "70cdbef45eed350a", "uuid": "94676bdf-c018-4c4f-8b51-0809d2f6b7a2"}}, "outputs": {"out_file1": {"src": "hda", "id": "1365ce64371d56a1", "uuid": "1dd136d0-edb8-457c-9062-e81931218211"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:04:26.652112", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "checks": "[{\"__index__\": 0, \"pattern\": \"f\", \"replacement\": \"'\\\"\"}]", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "233ffa32ff30a22c", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regex1/1.0.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regex1/1.0.0", "time_seconds": 47.062615156173706, "inputs": {"checks_0|replacement": "a file named #{input_name}", "input": {"src": "hda", "id": "6b4a20ce1f6b3772"}, "checks_1|replacement": "see #{input_name}", "checks_0|pattern": "a test file", "checks_2|pattern": "see (find1).txt", "checks_2|replacement": "see \\1", "checks_1|pattern": "see here"}, "tool_version": "1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regex1/1.0.0", "update_time": "2019-06-26T00:05:08.150001", "inputs": {"input": {"src": "hda", "id": "6b4a20ce1f6b3772", "uuid": "3d811195-790e-486e-a85d-227c2ae5ef8f"}}, "outputs": {"out_file1": {"src": "hda", "id": "f371baa804e200fa", "uuid": "48685ca5-82db-4b9f-aa8b-f51441c20b44"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:04:56.652552", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "checks": "[{\"__index__\": 0, \"pattern\": \"a test file\", \"replacement\": \"a file named #{input_name}\"}, {\"__index__\": 1, \"pattern\": \"see here\", \"replacement\": \"see #{input_name}\"}, {\"__index__\": 2, \"pattern\": \"see (find1).txt\", \"replacement\": \"see \\\\1\"}]", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "c22c224a0db9d5b1", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regex1/1.0.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regexColumn1/1.0.0", "time_seconds": 48.83555793762207, "inputs": {"input": {"src": "hda", "id": "1072025837edc458"}, "checks_0|replacement": "cow", "checks_0|pattern": "moo", "field": "2"}, "tool_version": "1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regexColumn1/1.0.0", "update_time": "2019-06-26T00:04:26.594052", "inputs": {"input": {"src": "hda", "id": "1072025837edc458", "uuid": "b2b3a4a4-8638-4c94-93e7-3ff5d5b98c30"}}, "outputs": {"out_file1": {"src": "hda", "id": "d33e9797e5e3a051", "uuid": "e4a9819a-eba4-4421-ba74-4e0ae66cf9eb"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:04:13.289811", "stderr": "", "model_class": "Job", "params": {"field": "\"2\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "checks": "[{\"__index__\": 0, \"pattern\": \"moo\", \"replacement\": \"cow\"}]", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "7134b0134eca9f65", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regexColumn1/1.0.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regexColumn1/1.0.0", "time_seconds": 54.98790907859802, "inputs": {"input": {"src": "hda", "id": "1072025837edc458"}, "checks_0|replacement": "cow", "checks_0|pattern": "moo", "field": "1"}, "tool_version": "1.0.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regexColumn1/1.0.0", "update_time": "2019-06-26T00:04:29.468822", "inputs": {"input": {"src": "hda", "id": "1072025837edc458", "uuid": "b2b3a4a4-8638-4c94-93e7-3ff5d5b98c30"}}, "outputs": {"out_file1": {"src": "hda", "id": "8204320ddbe57a4c", "uuid": "83c973e2-4a6e-4feb-8a3e-1b579a511c60"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:04:15.138998", "stderr": "", "model_class": "Job", "params": {"field": "\"1\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "checks": "[{\"__index__\": 0, \"pattern\": \"moo\", \"replacement\": \"cow\"}]", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "deb270a49f9c62cf", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regexColumn1/1.0.0-1", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8", "time_seconds": 39.362635135650635, "inputs": {"file_input": {"src": "hda", "id": "1befec028136bc0b"}}, "tool_version": "0.8", "output_problems": ["History item  different than expected, difference (using contains):\n( /tmp/tmpM6O7aJoutput_mrsa.txt v. /tmp/tmpp9Iviwoutput_mrsa.txt )\nFailed to find '\tNC_002952.2\t44919\t46928\tmecA_15\t1-2010/2010\t===============\t0/0\t100.00\t100.00\tresfinder\tAB505628\tmecA_15' in history data. (lines_diff=0):\n"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8", "update_time": "2019-06-25T22:34:52.693615", "inputs": {"file_input": {"src": "hda", "id": "1befec028136bc0b", "uuid": "8603569a-2430-4a5d-ae8c-cf9bb9f55e31"}}, "outputs": {"report": {"src": "hda", "id": "75b9ee466ecdb2f8", "uuid": "29801636-d1e5-4ec3-a7ca-760a3f55952a"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Using nucl database resfinder:  3021 sequences -  2018-Oct-20\nProcessing: /mnt/galaxy/files/000/924/dataset_924911.dat\nFound 8 genes in /mnt/galaxy/files/000/924/dataset_924911.dat\n", "state": "ok", "create_time": "2019-06-25T22:34:21.741546", "stderr": "Using nucl database resfinder:  3021 sequences -  2018-Oct-20\nProcessing: /mnt/galaxy/files/000/924/dataset_924911.dat\nFound 8 genes in /mnt/galaxy/files/000/924/dataset_924911.dat\n", "model_class": "Job", "params": {"adv": "{\"db\": \"resfinder\", \"min_dna_id\": \"75.0\", \"no_header\": \"false\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "85fbb0077b4bd3e4", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8-1", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8", "time_seconds": 38.99904203414917, "inputs": {"file_input": {"src": "hda", "id": "cee66e7144a22af6"}, "adv|no_header": true}, "tool_version": "0.8", "output_problems": ["History item  different than expected, difference (using contains):\n( /tmp/tmprZCpiQoutput_noheader.txt v. /tmp/tmpsNSWE8output_noheader.txt )\nFailed to find '\tNC_002952.2\t44919\t46928\tmecA_15\t1-2010/2010\t===============\t0/0\t100.00\t100.00\tresfinder\tAB505628\tmecA_15' in history data. (lines_diff=0):\n"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8", "update_time": "2019-06-25T22:34:59.965031", "inputs": {"file_input": {"src": "hda", "id": "cee66e7144a22af6", "uuid": "2f8d1a23-d30c-475b-8427-8a8a291ff3c8"}}, "outputs": {"report": {"src": "hda", "id": "94bf5464b8f876e4", "uuid": "e0b27f4b-f253-4ed2-9490-289fa4f6ee07"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Using nucl database resfinder:  3021 sequences -  2018-Oct-20\nProcessing: /mnt/galaxy/files/000/924/dataset_924914.dat\nFound 8 genes in /mnt/galaxy/files/000/924/dataset_924914.dat\n", "state": "ok", "create_time": "2019-06-25T22:34:36.830436", "stderr": "Using nucl database resfinder:  3021 sequences -  2018-Oct-20\nProcessing: /mnt/galaxy/files/000/924/dataset_924914.dat\nFound 8 genes in /mnt/galaxy/files/000/924/dataset_924914.dat\n", "model_class": "Job", "params": {"adv": "{\"db\": \"resfinder\", \"min_dna_id\": \"75.0\", \"no_header\": \"true\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "6105f92d999afc94", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8-2", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8", "time_seconds": 39.30546712875366, "inputs": {"file_input": {"src": "hda", "id": "cee66e7144a22af6"}, "adv|db": "card"}, "tool_version": "0.8", "output_problems": ["History item  different than expected, difference (using contains):\n( /tmp/tmp5ysDcioutput_db-card.txt v. /tmp/tmp7auyM6output_db-card.txt )\nFailed to find 'NC_002952.2\t44918\t46925\tmecA\t1-2008/2008\t===============\t0/0\t100.00\t99.90\tcard\tKC243783:1-2008' in history data. (lines_diff=0):\n"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8", "update_time": "2019-06-25T22:34:58.719597", "inputs": {"file_input": {"src": "hda", "id": "cee66e7144a22af6", "uuid": "2f8d1a23-d30c-475b-8427-8a8a291ff3c8"}}, "outputs": {"report": {"src": "hda", "id": "c406fb73338145d4", "uuid": "a8057d87-7784-4d72-86f1-b104b7b34dd2"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Using nucl database card:  2237 sequences -  2018-Oct-20\nProcessing: /mnt/galaxy/files/000/924/dataset_924914.dat\nFound 14 genes in /mnt/galaxy/files/000/924/dataset_924914.dat\n", "state": "ok", "create_time": "2019-06-25T22:34:32.600286", "stderr": "Using nucl database card:  2237 sequences -  2018-Oct-20\nProcessing: /mnt/galaxy/files/000/924/dataset_924914.dat\nFound 14 genes in /mnt/galaxy/files/000/924/dataset_924914.dat\n", "model_class": "Job", "params": {"adv": "{\"db\": \"card\", \"min_dna_id\": \"75.0\", \"no_header\": \"false\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "4ca0b0859554c165", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8-3", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8", "time_seconds": 40.81849789619446, "inputs": {"file_input": {"src": "hda", "id": "cee66e7144a22af6"}, "adv|min_dna_id": "100"}, "tool_version": "0.8", "output_problems": ["History item  different than expected, difference (using contains):\n( /tmp/tmp5yykAsoutput_minid100.txt v. /tmp/tmp_FD_GDoutput_minid100.txt )\nFailed to find 'NC_002952.2\t44919\t46928\tmecA_15\t1-2010/2010\t===============\t0/0\t100.00\t100.00\tresfinder\tAB505628' in history data. (lines_diff=0):\n"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8", "update_time": "2019-06-25T22:35:08.032090", "inputs": {"file_input": {"src": "hda", "id": "cee66e7144a22af6", "uuid": "2f8d1a23-d30c-475b-8427-8a8a291ff3c8"}}, "outputs": {"report": {"src": "hda", "id": "e975952581dc1192", "uuid": "70370991-94ec-4a18-bb3d-de3abb230bc1"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Using nucl database resfinder:  3021 sequences -  2018-Oct-20\nProcessing: /mnt/galaxy/files/000/924/dataset_924914.dat\nFound 5 genes in /mnt/galaxy/files/000/924/dataset_924914.dat\n", "state": "ok", "create_time": "2019-06-25T22:34:45.965259", "stderr": "Using nucl database resfinder:  3021 sequences -  2018-Oct-20\nProcessing: /mnt/galaxy/files/000/924/dataset_924914.dat\nFound 5 genes in /mnt/galaxy/files/000/924/dataset_924914.dat\n", "model_class": "Job", "params": {"adv": "{\"db\": \"resfinder\", \"min_dna_id\": \"100.0\", \"no_header\": \"false\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "d35a3421977dad8c", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8", "time_seconds": 31.358673095703125, "inputs": {"file_input": {"src": "hda", "id": "ef55743f6ffea841"}}, "tool_version": "0.8", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8", "update_time": "2019-06-25T22:34:58.142406", "inputs": {"file_input": {"src": "hda", "id": "ef55743f6ffea841", "uuid": "2296b881-af0f-481c-94f9-fc7f76210721"}}, "outputs": {"report": {"src": "hda", "id": "fe9120bda385cc29", "uuid": "8bd97cb1-a6c4-4452-ab1e-55c9e657772a"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Using nucl database resfinder:  3021 sequences -  2018-Oct-20\nProcessing: /mnt/galaxy/files/000/924/dataset_924912.dat\nFound 0 genes in /mnt/galaxy/files/000/924/dataset_924912.dat\n", "state": "ok", "create_time": "2019-06-25T22:34:42.664113", "stderr": "Using nucl database resfinder:  3021 sequences -  2018-Oct-20\nProcessing: /mnt/galaxy/files/000/924/dataset_924912.dat\nFound 0 genes in /mnt/galaxy/files/000/924/dataset_924912.dat\n", "model_class": "Job", "params": {"adv": "{\"db\": \"resfinder\", \"min_dna_id\": \"75.0\", \"no_header\": \"false\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "466d0f0d2ef4ea02", "job_stdout": ""}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate/0.8-5", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate_list/0.8", "time_seconds": 25.09360098838806, "inputs": {}, "tool_version": "0.8", "output_problems": ["History item  different than expected, difference (using contains):\n( /tmp/tmpupivuXoutput_list.txt v. /tmp/tmpZsSfWhoutput_list.txt )\nFailed to find 'DATABASE\tSEQUENCES\tDATE' in history data. (lines_diff=0):\n"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate_list/0.8", "update_time": "2019-06-25T22:34:43.698998", "inputs": {}, "outputs": {"report": {"src": "hda", "id": "016af5cefcbce6dc", "uuid": "02773133-6619-4cea-a370-3406be98bd3e"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:34:27.503562", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "df4c3756951eacd1", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/abricate/abricate_list/0.8-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/barrnap/barrnap/1.2.1", "time_seconds": 45.58073592185974, "inputs": {"kingdom": "bac", "fasta_file": {"src": "hda", "id": "b31718a1bb62e7ef"}}, "tool_version": "1.2.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/barrnap/barrnap/1.2.1", "update_time": "2019-06-25T22:53:35.179838", "inputs": {"fasta_file": {"src": "hda", "id": "b31718a1bb62e7ef", "uuid": "73a61b62-b38f-40a3-90b1-e089656a1a62"}}, "outputs": {"gff": {"src": "hda", "id": "ab61d51a675947af", "uuid": "833e0561-c572-4e1c-8cdb-31a4ccf7fd00"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:53:14.877290", "stderr": "", "model_class": "Job", "params": {"kingdom": "\"bac\"", "outseq": "\"false\"", "evalue": "\"1e-06\"", "incseq": "\"false\"", "dbkey": "\"?\"", "reject": "\"0.5\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "lencutoff": "\"0.8\""}, "tool_stdout": "", "job_messages": [], "id": "581518e62c8b3f1b", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/barrnap/barrnap/1.2.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/barrnap/barrnap/1.2.1", "time_seconds": 48.59063005447388, "inputs": {"kingdom": "bac", "fasta_file": {"src": "hda", "id": "995dfe8aefb05238"}, "incseq": true}, "tool_version": "1.2.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/barrnap/barrnap/1.2.1", "update_time": "2019-06-25T22:53:52.558023", "inputs": {"fasta_file": {"src": "hda", "id": "995dfe8aefb05238", "uuid": "888c1317-e9cd-4177-b18a-8eed2f93518c"}}, "outputs": {"gff": {"src": "hda", "id": "ac42f206402ad0bc", "uuid": "2ddf1877-dd02-4651-8917-d7c156f66c44"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:53:30.161769", "stderr": "", "model_class": "Job", "params": {"kingdom": "\"bac\"", "outseq": "\"false\"", "evalue": "\"1e-06\"", "incseq": "\"true\"", "dbkey": "\"?\"", "reject": "\"0.5\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "lencutoff": "\"0.8\""}, "tool_stdout": "", "job_messages": [], "id": "bff4cdc3e468d3cd", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/barrnap/barrnap/1.2.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/barrnap/barrnap/1.2.1", "time_seconds": 32.22461295127869, "inputs": {"kingdom": "bac", "fasta_file": {"src": "hda", "id": "995dfe8aefb05238"}, "evalue": "0.00000001"}, "tool_version": "1.2.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/barrnap/barrnap/1.2.1", "update_time": "2019-06-25T22:53:54.763545", "inputs": {"fasta_file": {"src": "hda", "id": "995dfe8aefb05238", "uuid": "888c1317-e9cd-4177-b18a-8eed2f93518c"}}, "outputs": {"gff": {"src": "hda", "id": "f08077b1beaea253", "uuid": "dbb8837b-9419-40e4-95b2-11456500df46"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:53:37.548489", "stderr": "", "model_class": "Job", "params": {"kingdom": "\"bac\"", "outseq": "\"false\"", "evalue": "\"1e-08\"", "incseq": "\"false\"", "dbkey": "\"?\"", "reject": "\"0.5\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "lencutoff": "\"0.8\""}, "tool_stdout": "", "job_messages": [], "id": "605815f8fe230ed1", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/barrnap/barrnap/1.2.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/barrnap/barrnap/1.2.1", "time_seconds": 41.56489586830139, "inputs": {"kingdom": "bac", "fasta_file": {"src": "hda", "id": "995dfe8aefb05238"}, "outseq": true}, "tool_version": "1.2.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/barrnap/barrnap/1.2.1", "update_time": "2019-06-25T22:53:59.788460", "inputs": {"fasta_file": {"src": "hda", "id": "995dfe8aefb05238", "uuid": "888c1317-e9cd-4177-b18a-8eed2f93518c"}}, "outputs": {"gff": {"src": "hda", "id": "d582fbef45828445", "uuid": "104a74cb-0c97-4d98-84d0-b05b60ddcd90"}, "fasta_out": {"src": "hda", "id": "e016b9437a347d86", "uuid": "cf85b6b2-5b26-434a-9c4f-ed95e1282533"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "index file /mnt/galaxy/files/000/925/dataset_925364.dat.fai not found, generating...\n", "state": "ok", "create_time": "2019-06-25T22:53:44.619007", "stderr": "index file /mnt/galaxy/files/000/925/dataset_925364.dat.fai not found, generating...\n", "model_class": "Job", "params": {"kingdom": "\"bac\"", "outseq": "\"true\"", "evalue": "\"1e-06\"", "incseq": "\"false\"", "dbkey": "\"?\"", "reject": "\"0.5\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "lencutoff": "\"0.8\""}, "tool_stdout": "", "job_messages": [], "id": "1249496657fe60fb", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/barrnap/barrnap/1.2.1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_isec/bcftools_isec/1.9", "time_seconds": 28.893013954162598, "inputs": {"output_type": "v", "sec_default|nfiles": "=2", "input_files": [{"src": "hda", "id": "f3f53908bcc0bffc"}, {"src": "hda", "id": "b626fcf91dcfb73f"}]}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_isec/bcftools_isec/1.9", "update_time": "2019-06-25T23:49:12.951811", "inputs": {"input_files1": {"src": "hda", "id": "f3f53908bcc0bffc", "uuid": "ba0ca6d9-be5c-4df5-bb10-d6f876411121"}, "input_files2": {"src": "hda", "id": "b626fcf91dcfb73f", "uuid": "ce76efc4-2c74-4c7d-9a58-d5e28f02fbe8"}, "input_files": {"src": "hda", "id": "f3f53908bcc0bffc", "uuid": "ba0ca6d9-be5c-4df5-bb10-d6f876411121"}}, "outputs": {"output_file": {"src": "hda", "id": "5ccf29aa5c627897", "uuid": "d1c8d33b-1aa8-4c3a-941a-23d1b7f4221f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Note: -w option not given, printing list of sites...\n", "state": "ok", "create_time": "2019-06-25T23:48:53.051855", "stderr": "Note: -w option not given, printing list of sites...\n", "model_class": "Job", "params": {"output_type": "\"v\"", "sec_default": "{\"complement\": \"false\", \"nfiles\": \"=2\", \"prefix\": \"false\", \"write\": \"\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "sec_restrict": "{\"apply_filters\": \"\", \"collapse\": null, \"exclude\": \"\", \"include\": \"\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "tool_stdout": "", "job_messages": [], "id": "d78ec9a2536a901c", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_isec/bcftools_isec/1.9-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9", "time_seconds": 24.093207120895386, "inputs": {"sec_merge|force_samples": true, "output_type": "v", "input_files": [{"src": "hda", "id": "0905fd6e78766548"}, {"src": "hda", "id": "75b6f7f8788eb056"}, {"src": "hda", "id": "7fa9031e9095a961"}]}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9", "update_time": "2019-06-25T22:06:06.248301", "inputs": {"input_files1": {"src": "hda", "id": "0905fd6e78766548", "uuid": "d22696b1-240f-4a98-80fe-2df8e8a16f01"}, "input_files2": {"src": "hda", "id": "75b6f7f8788eb056", "uuid": "650e1124-79e8-4b77-b031-35b1868abc7a"}, "input_files3": {"src": "hda", "id": "7fa9031e9095a961", "uuid": "fbaa8f5d-c964-4cbd-aa72-c195f8357309"}, "input_files": {"src": "hda", "id": "0905fd6e78766548", "uuid": "d22696b1-240f-4a98-80fe-2df8e8a16f01"}}, "outputs": {"output_file": {"src": "hda", "id": "010cba16bcb96045", "uuid": "23444886-503b-4225-874e-5e559f72f085"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:05:49.530072", "stderr": "", "model_class": "Job", "params": {"sec_merge": "{\"force_samples\": \"true\", \"info_rules\": \"\", \"merge\": null}", "sec_restrict": "{\"apply_filters\": \"\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}}", "dbkey": "\"?\"", "sec_header": "{\"print_header\": \"false\", \"use_header\": null}", "output_type": "\"v\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "873898f2a8e4ad5a", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9", "time_seconds": 26.071286916732788, "inputs": {"sec_merge|force_samples": true, "output_type": "v", "sec_merge|merge": "none", "input_files": [{"src": "hda", "id": "d82dd6e13b796045"}, {"src": "hda", "id": "553d93e49b67d3bf"}]}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9", "update_time": "2019-06-25T22:06:21.270941", "inputs": {"input_files1": {"src": "hda", "id": "d82dd6e13b796045", "uuid": "8a3d7038-01b4-4900-b946-3350f05730f3"}, "input_files2": {"src": "hda", "id": "553d93e49b67d3bf", "uuid": "da9e544d-6290-4a42-99a9-b835a18b31cc"}, "input_files": {"src": "hda", "id": "d82dd6e13b796045", "uuid": "8a3d7038-01b4-4900-b946-3350f05730f3"}}, "outputs": {"output_file": {"src": "hda", "id": "4cb38e4231343d82", "uuid": "a3226bab-15e8-43a9-894b-e997620093e8"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:06:05.118028", "stderr": "", "model_class": "Job", "params": {"sec_merge": "{\"force_samples\": \"true\", \"info_rules\": \"\", \"merge\": \"none\"}", "sec_restrict": "{\"apply_filters\": \"\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}}", "dbkey": "\"?\"", "sec_header": "{\"print_header\": \"false\", \"use_header\": null}", "output_type": "\"v\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "088eec62d312485a", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9", "time_seconds": 24.50211191177368, "inputs": {"sec_merge|force_samples": true, "output_type": "v", "sec_merge|merge": "both", "input_files": [{"src": "hda", "id": "d82dd6e13b796045"}, {"src": "hda", "id": "553d93e49b67d3bf"}]}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9", "update_time": "2019-06-25T22:06:24.406319", "inputs": {"input_files1": {"src": "hda", "id": "d82dd6e13b796045", "uuid": "8a3d7038-01b4-4900-b946-3350f05730f3"}, "input_files2": {"src": "hda", "id": "553d93e49b67d3bf", "uuid": "da9e544d-6290-4a42-99a9-b835a18b31cc"}, "input_files": {"src": "hda", "id": "d82dd6e13b796045", "uuid": "8a3d7038-01b4-4900-b946-3350f05730f3"}}, "outputs": {"output_file": {"src": "hda", "id": "e76267ef3dc2c509", "uuid": "c0b77041-4ab6-48d1-ab61-d85814d55294"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:06:06.636059", "stderr": "", "model_class": "Job", "params": {"sec_merge": "{\"force_samples\": \"true\", \"info_rules\": \"\", \"merge\": \"both\"}", "sec_restrict": "{\"apply_filters\": \"\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}}", "dbkey": "\"?\"", "sec_header": "{\"print_header\": \"false\", \"use_header\": null}", "output_type": "\"v\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "371bdd637587e322", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9", "time_seconds": 24.05279803276062, "inputs": {"sec_merge|force_samples": true, "output_type": "v", "sec_merge|merge": "all", "input_files": [{"src": "hda", "id": "61158f34eed61dd0"}, {"src": "hda", "id": "f389507f810fd493"}]}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9", "update_time": "2019-06-25T22:06:41.174709", "inputs": {"input_files1": {"src": "hda", "id": "61158f34eed61dd0", "uuid": "4818c18e-3747-4785-bb5d-8450646f952c"}, "input_files2": {"src": "hda", "id": "f389507f810fd493", "uuid": "543cba64-91f9-49a0-b045-526fb66015d0"}, "input_files": {"src": "hda", "id": "61158f34eed61dd0", "uuid": "4818c18e-3747-4785-bb5d-8450646f952c"}}, "outputs": {"output_file": {"src": "hda", "id": "6fb0cc5e64db85df", "uuid": "10ae1174-a433-475c-9229-19dc14e85170"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:06:25.572267", "stderr": "", "model_class": "Job", "params": {"sec_merge": "{\"force_samples\": \"true\", \"info_rules\": \"\", \"merge\": \"all\"}", "sec_restrict": "{\"apply_filters\": \"\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}}", "dbkey": "\"?\"", "sec_header": "{\"print_header\": \"false\", \"use_header\": null}", "output_type": "\"v\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "77f60b898896eee8", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9", "time_seconds": 24.2384090423584, "inputs": {"sec_merge|force_samples": true, "output_type": "v", "sec_merge|info_rules": "TR:sum,TA:sum,TG:sum", "input_files": [{"src": "hda", "id": "8fc39b3c65f327ec"}, {"src": "hda", "id": "0a3da7564b7b9912"}]}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9", "update_time": "2019-06-25T22:06:55.082509", "inputs": {"input_files1": {"src": "hda", "id": "8fc39b3c65f327ec", "uuid": "763fcbb5-d35a-43a2-aa62-170c93657352"}, "input_files2": {"src": "hda", "id": "0a3da7564b7b9912", "uuid": "c89e51fd-69d1-4470-84e5-0018a3b59659"}, "input_files": {"src": "hda", "id": "8fc39b3c65f327ec", "uuid": "763fcbb5-d35a-43a2-aa62-170c93657352"}}, "outputs": {"output_file": {"src": "hda", "id": "bfb52e38d7362fce", "uuid": "4b5942ab-c471-489c-84c7-8ded2923f4cb"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:06:40.005072", "stderr": "", "model_class": "Job", "params": {"sec_merge": "{\"force_samples\": \"true\", \"info_rules\": \"TR:sum,TA:sum,TG:sum\", \"merge\": null}", "sec_restrict": "{\"apply_filters\": \"\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}}", "dbkey": "\"?\"", "sec_header": "{\"print_header\": \"false\", \"use_header\": null}", "output_type": "\"v\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "c93791acbc96f86c", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9", "time_seconds": 24.10833716392517, "inputs": {"sec_merge|force_samples": true, "output_type": "v", "sec_merge|merge": "id", "input_files": [{"src": "hda", "id": "a351999ed54b1b3e"}, {"src": "hda", "id": "5ac92d2102d30cf4"}]}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9", "update_time": "2019-06-25T22:07:04.776298", "inputs": {"input_files1": {"src": "hda", "id": "a351999ed54b1b3e", "uuid": "1aaaf8a1-7466-4690-ba96-1c32eea924af"}, "input_files2": {"src": "hda", "id": "5ac92d2102d30cf4", "uuid": "fbc5e420-19dc-423b-b979-f12eff7213ea"}, "input_files": {"src": "hda", "id": "a351999ed54b1b3e", "uuid": "1aaaf8a1-7466-4690-ba96-1c32eea924af"}}, "outputs": {"output_file": {"src": "hda", "id": "f0c4de09d62661a0", "uuid": "1ea7012e-7af8-4336-905f-81ca61711a12"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:06:47.946734", "stderr": "", "model_class": "Job", "params": {"sec_merge": "{\"force_samples\": \"true\", \"info_rules\": \"\", \"merge\": \"id\"}", "sec_restrict": "{\"apply_filters\": \"\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}}", "dbkey": "\"?\"", "sec_header": "{\"print_header\": \"false\", \"use_header\": null}", "output_type": "\"v\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "1fb3b61e0919c9b7", "job_stdout": ""}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.9-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9", "time_seconds": 39.93938589096069, "inputs": {"reference_source|reference_source_selector": "history", "output_type": "v", "input|input_bam": {"src": "hda", "id": "60575ddc92ac0a4b"}, "reference_source|ref_file": {"src": "hda", "id": "d2219d9387126b57"}, "input|input_number": "single"}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9", "update_time": "2019-06-25T22:40:07.494339", "inputs": {"ref_file": {"src": "hda", "id": "d2219d9387126b57", "uuid": "5942546d-4acb-4184-9917-ff3bbdd3dca5"}, "input_bam": {"src": "hda", "id": "60575ddc92ac0a4b", "uuid": "33f4fe4c-4695-418c-8bcc-33144e606471"}}, "outputs": {"output_file": {"src": "hda", "id": "ff44c90d4dfcfde5", "uuid": "9f5d6dca-5e9f-4837-b3f0-e8e43925fe9b"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "[mpileup] 1 samples in 1 input files\n", "state": "ok", "create_time": "2019-06-25T22:39:39.905870", "stderr": "[mpileup] 1 samples in 1 input files\n", "model_class": "Job", "params": {"sec_output_options": "{\"gvcf\": \"\", \"output_tags\": null}", "sec_restrict": "{\"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}", "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}", "dbkey": "\"?\"", "sec_subset": "{\"invert_samples\": \"false\", \"invert_samples_file\": \"false\", \"samples\": \"\", \"samples_file\": null}", "input": "{\"__current_case__\": 0, \"input_bam\": {\"values\": [{\"id\": 1068128, \"src\": \"hda\"}]}, \"input_number\": \"single\"}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 1068136, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "output_type": "\"v\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": \"false\", \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": \"false\"}"}, "tool_stdout": "", "job_messages": [], "id": "91506c247e6bb5d3", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9", "time_seconds": 68.4343421459198, "inputs": {"reference_source|reference_source_selector": "history", "output_type": "v", "input|input_bam": {"src": "hda", "id": "cad9ff327b131484"}, "reference_source|ref_file": {"src": "hda", "id": "d2219d9387126b57"}, "input|input_number": "single"}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9", "update_time": "2019-06-25T22:39:29.710644", "inputs": {"ref_file": {"src": "hda", "id": "d2219d9387126b57", "uuid": "5942546d-4acb-4184-9917-ff3bbdd3dca5"}, "input_bam": {"src": "hda", "id": "cad9ff327b131484", "uuid": "8ae80c9d-0725-43d9-ab32-aa40b4b6a4fd"}}, "outputs": {"output_file": {"src": "hda", "id": "cd6b488cf2532d97", "uuid": "5cc79f05-91ec-4d74-a44e-6597547515e2"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "[mpileup] 1 samples in 1 input files\n", "state": "ok", "create_time": "2019-06-25T22:38:29.367912", "stderr": "[mpileup] 1 samples in 1 input files\n", "model_class": "Job", "params": {"sec_output_options": "{\"gvcf\": \"\", \"output_tags\": null}", "sec_restrict": "{\"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}", "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}", "dbkey": "\"?\"", "sec_subset": "{\"invert_samples\": \"false\", \"invert_samples_file\": \"false\", \"samples\": \"\", \"samples_file\": null}", "input": "{\"__current_case__\": 0, \"input_bam\": {\"values\": [{\"id\": 1068120, \"src\": \"hda\"}]}, \"input_number\": \"single\"}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 1068136, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "output_type": "\"v\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": \"false\", \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": \"false\"}"}, "tool_stdout": "", "job_messages": [], "id": "92beca37f8527292", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9", "time_seconds": 38.79890298843384, "inputs": {"input|input_bams": [{"src": "hda", "id": "60575ddc92ac0a4b"}, {"src": "hda", "id": "7a48351fc2d4f9f6"}, {"src": "hda", "id": "8f202b7de50e0b15"}], "sec_output_options|output_tags": ["DP", "INFO/AD", "DV"], "reference_source|reference_source_selector": "history", "sec_restrict|regions|regions_src": "regions", "output_type": "v", "reference_source|ref_file": {"src": "hda", "id": "d2219d9387126b57"}, "sec_restrict|regions|regions": "17:100-110", "input|input_number": "multiple"}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9", "update_time": "2019-06-25T22:39:28.936551", "inputs": {"ref_file": {"src": "hda", "id": "d2219d9387126b57", "uuid": "5942546d-4acb-4184-9917-ff3bbdd3dca5"}, "input_bams1": {"src": "hda", "id": "60575ddc92ac0a4b", "uuid": "33f4fe4c-4695-418c-8bcc-33144e606471"}, "input_bams3": {"src": "hda", "id": "8f202b7de50e0b15", "uuid": "35dfcb32-64a0-4c9e-989b-24d77c2d9dc4"}, "input_bams2": {"src": "hda", "id": "7a48351fc2d4f9f6", "uuid": "0d0a9980-c459-4b7b-a0a2-d0df7595b436"}, "input_bams": {"src": "hda", "id": "60575ddc92ac0a4b", "uuid": "33f4fe4c-4695-418c-8bcc-33144e606471"}}, "outputs": {"output_file": {"src": "hda", "id": "d031d20700446cef", "uuid": "b84d5edd-882c-4788-9535-9708ea36683d"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "[warning] tag DV functional, but deprecated. Please switch to `AD` in future.\n[mpileup] 3 samples in 3 input files\n", "state": "ok", "create_time": "2019-06-25T22:38:56.349777", "stderr": "[warning] tag DV functional, but deprecated. Please switch to `AD` in future.\n[mpileup] 3 samples in 3 input files\n", "model_class": "Job", "params": {"sec_output_options": "{\"gvcf\": \"\", \"output_tags\": [\"DP\", \"INFO/AD\", \"DV\"]}", "sec_restrict": "{\"regions\": {\"__current_case__\": 1, \"regions\": \"17:100-110\", \"regions_src\": \"regions\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}", "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}", "dbkey": "\"?\"", "sec_subset": "{\"invert_samples\": \"false\", \"invert_samples_file\": \"false\", \"samples\": \"\", \"samples_file\": null}", "input": "{\"__current_case__\": 1, \"input_bams\": {\"values\": [{\"id\": 1068128, \"src\": \"hda\"}, {\"id\": 1068131, \"src\": \"hda\"}, {\"id\": 1068133, \"src\": \"hda\"}]}, \"input_number\": \"multiple\"}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 1068136, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "output_type": "\"v\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": \"false\", \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": \"false\"}"}, "tool_stdout": "", "job_messages": [], "id": "17dc323b3703fadc", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9", "time_seconds": 39.02734112739563, "inputs": {"input|input_bams": [{"src": "hda", "id": "60575ddc92ac0a4b"}, {"src": "hda", "id": "7a48351fc2d4f9f6"}, {"src": "hda", "id": "8f202b7de50e0b15"}], "sec_restrict|targets|targets_src": "targets", "reference_source|reference_source_selector": "history", "sec_restrict|regions|regions_src": "regions_file", "sec_restrict|regions|regions_file": {"src": "hda", "id": "a92d3f960d506d21"}, "sec_restrict|targets|targets": "17:100-104", "output_type": "v", "reference_source|ref_file": {"src": "hda", "id": "d2219d9387126b57"}, "input|input_number": "multiple", "sec_output_options|output_tags": ["DP", "INFO/AD", "DV"]}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9", "update_time": "2019-06-25T22:39:42.239717", "inputs": {"input_bams": {"src": "hda", "id": "60575ddc92ac0a4b", "uuid": "33f4fe4c-4695-418c-8bcc-33144e606471"}, "ref_file": {"src": "hda", "id": "d2219d9387126b57", "uuid": "5942546d-4acb-4184-9917-ff3bbdd3dca5"}, "input_bams3": {"src": "hda", "id": "8f202b7de50e0b15", "uuid": "35dfcb32-64a0-4c9e-989b-24d77c2d9dc4"}, "input_bams2": {"src": "hda", "id": "7a48351fc2d4f9f6", "uuid": "0d0a9980-c459-4b7b-a0a2-d0df7595b436"}, "input_bams1": {"src": "hda", "id": "60575ddc92ac0a4b", "uuid": "33f4fe4c-4695-418c-8bcc-33144e606471"}, "sec_restrict|regions_file": {"src": "hda", "id": "a92d3f960d506d21", "uuid": "1642f760-b4ac-4933-a1f0-5a89ca0d312e"}}, "outputs": {"output_file": {"src": "hda", "id": "74ec6c912137f91d", "uuid": "4f96b253-ac9d-4816-aadb-b9faa6edcc25"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "[warning] tag DV functional, but deprecated. Please switch to `AD` in future.\n[mpileup] 3 samples in 3 input files\n", "state": "ok", "create_time": "2019-06-25T22:39:21.290078", "stderr": "[warning] tag DV functional, but deprecated. Please switch to `AD` in future.\n[mpileup] 3 samples in 3 input files\n", "model_class": "Job", "params": {"sec_output_options": "{\"gvcf\": \"\", \"output_tags\": [\"DP\", \"INFO/AD\", \"DV\"]}", "sec_restrict": "{\"regions\": {\"__current_case__\": 2, \"regions_file\": {\"values\": [{\"id\": 1068137, \"src\": \"hda\"}]}, \"regions_src\": \"regions_file\"}, \"targets\": {\"__current_case__\": 1, \"invert_targets_file\": \"false\", \"targets\": \"17:100-104\", \"targets_src\": \"targets\"}}", "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}", "dbkey": "\"?\"", "sec_subset": "{\"invert_samples\": \"false\", \"invert_samples_file\": \"false\", \"samples\": \"\", \"samples_file\": null}", "input": "{\"__current_case__\": 1, \"input_bams\": {\"values\": [{\"id\": 1068128, \"src\": \"hda\"}, {\"id\": 1068131, \"src\": \"hda\"}, {\"id\": 1068133, \"src\": \"hda\"}]}, \"input_number\": \"multiple\"}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 1068136, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "output_type": "\"v\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": \"false\", \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": \"false\"}"}, "tool_stdout": "", "job_messages": [], "id": "420457d08f948731", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9", "time_seconds": 39.8724889755249, "inputs": {"sec_filtering|filter_by_flags|filter_flags": "filter", "sec_filtering|filter_by_flags|exclude_flags": ["4", "16"], "input|input_bams": [{"src": "hda", "id": "60575ddc92ac0a4b"}, {"src": "hda", "id": "7a48351fc2d4f9f6"}, {"src": "hda", "id": "8f202b7de50e0b15"}], "reference_source|reference_source_selector": "history", "sec_restrict|regions|regions_src": "regions", "output_type": "v", "reference_source|ref_file": {"src": "hda", "id": "d2219d9387126b57"}, "sec_restrict|regions|regions": "17:1050-1060", "input|input_number": "multiple"}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9", "update_time": "2019-06-25T22:39:42.692710", "inputs": {"ref_file": {"src": "hda", "id": "d2219d9387126b57", "uuid": "5942546d-4acb-4184-9917-ff3bbdd3dca5"}, "input_bams1": {"src": "hda", "id": "60575ddc92ac0a4b", "uuid": "33f4fe4c-4695-418c-8bcc-33144e606471"}, "input_bams3": {"src": "hda", "id": "8f202b7de50e0b15", "uuid": "35dfcb32-64a0-4c9e-989b-24d77c2d9dc4"}, "input_bams2": {"src": "hda", "id": "7a48351fc2d4f9f6", "uuid": "0d0a9980-c459-4b7b-a0a2-d0df7595b436"}, "input_bams": {"src": "hda", "id": "60575ddc92ac0a4b", "uuid": "33f4fe4c-4695-418c-8bcc-33144e606471"}}, "outputs": {"output_file": {"src": "hda", "id": "0cd22b39c3d12607", "uuid": "7d141abd-b0f4-4201-9075-198b8dcabeae"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "[mpileup] 3 samples in 3 input files\n", "state": "ok", "create_time": "2019-06-25T22:39:16.793450", "stderr": "[mpileup] 3 samples in 3 input files\n", "model_class": "Job", "params": {"sec_output_options": "{\"gvcf\": \"\", \"output_tags\": null}", "sec_restrict": "{\"regions\": {\"__current_case__\": 1, \"regions\": \"17:1050-1060\", \"regions_src\": \"regions\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}", "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}", "dbkey": "\"?\"", "sec_subset": "{\"invert_samples\": \"false\", \"invert_samples_file\": \"false\", \"samples\": \"\", \"samples_file\": null}", "input": "{\"__current_case__\": 1, \"input_bams\": {\"values\": [{\"id\": 1068128, \"src\": \"hda\"}, {\"id\": 1068131, \"src\": \"hda\"}, {\"id\": 1068133, \"src\": \"hda\"}]}, \"input_number\": \"multiple\"}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 1068136, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "output_type": "\"v\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 0, \"exclude_flags\": [\"4\", \"16\"], \"filter_flags\": \"filter\", \"require_flags\": null}, \"ignore_overlaps\": \"false\", \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": \"false\"}"}, "tool_stdout": "", "job_messages": [], "id": "71166a85302ade52", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.9-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_counts/bcftools_plugin_counts/1.9", "time_seconds": 24.387787103652954, "inputs": {"input_file": {"src": "hda", "id": "68cd681cf19a8da0"}}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_counts/bcftools_plugin_counts/1.9", "update_time": "2019-06-25T22:55:14.600161", "inputs": {"input_file": {"src": "hda", "id": "68cd681cf19a8da0", "uuid": "68a39686-e127-436c-9784-7c8c3b76bec4"}}, "outputs": {"output_file": {"src": "hda", "id": "7a3c670c8df38f3c", "uuid": "bc046877-b4ce-44e8-bd5f-cb15a4b865d0"}}, "history_id": "f840675b8d7f5485", "stdout": "Number of samples: 3\nNumber of SNPs:    11\nNumber of INDELs:  3\nNumber of MNPs:    0\nNumber of others:  0\nNumber of sites:   15\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:54:56.749876", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "sec_restrict": "{\"exclude\": \"\", \"include\": \"\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "tool_stdout": "Number of samples: 3\nNumber of SNPs:    11\nNumber of INDELs:  3\nNumber of MNPs:    0\nNumber of others:  0\nNumber of sites:   15\n", "job_messages": [], "id": "36131d8238961922", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_counts/bcftools_plugin_counts/1.9-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_dosage/bcftools_plugin_dosage/1.9", "time_seconds": 28.274315118789673, "inputs": {"input_file": {"src": "hda", "id": "6100ce607a9a08bc"}}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_dosage/bcftools_plugin_dosage/1.9", "update_time": "2019-06-26T02:26:05.300778", "inputs": {"input_file": {"src": "hda", "id": "6100ce607a9a08bc", "uuid": "833094a3-c9b1-4964-9613-4b8b75d470f9"}}, "outputs": {"output_file": {"src": "hda", "id": "5b436a8478903d44", "uuid": "15ada752-355e-40d5-98de-af46ccc36ca7"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:25:45.040503", "stderr": "", "model_class": "Job", "params": {"sec_plugin": "{\"tags\": \"\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "sec_restrict": "{\"exclude\": \"\", \"include\": \"\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "tool_stdout": "", "job_messages": [], "id": "684c83d64dcdc29f", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_dosage/bcftools_plugin_dosage/1.9-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_setgt/bcftools_plugin_setgt/1.9", "time_seconds": 25.461910009384155, "inputs": {"sec_plugin|target_gt": ".", "sec_plugin|new_gt": "0", "input_file": {"src": "hda", "id": "d4171390b383aeb8"}, "output_type": "v"}, "tool_version": "1.9", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_setgt/bcftools_plugin_setgt/1.9", "update_time": "2019-06-25T23:45:54.025508", "inputs": {"input_file": {"src": "hda", "id": "d4171390b383aeb8", "uuid": "424d0e35-8e06-4ff4-829f-d317656a147c"}}, "outputs": {"output_file": {"src": "hda", "id": "cd1e0ced02323ad3", "uuid": "e60b84a5-7845-4b47-89cd-b3e6790ca378"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Filled 44 alleles\n", "state": "ok", "create_time": "2019-06-25T23:45:36.540570", "stderr": "Filled 44 alleles\n", "model_class": "Job", "params": {"sec_plugin": "{\"new_gt\": \"0\", \"target_gt\": \".\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "sec_restrict": "{\"exclude\": \"\", \"include\": \"\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}", "output_type": "\"v\""}, "tool_stdout": "", "job_messages": [], "id": "9b33a45fbf08a9fd", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_setgt/bcftools_plugin_setgt/1.9-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_annotatebed/2.27.1+galaxy1", "time_seconds": 58.41038799285889, "inputs": {"names|names_select": "no", "names|beds": [{"src": "hda", "id": "6dad9f7f320da2e1"}, {"src": "hda", "id": "9ea551a26000f442"}, {"src": "hda", "id": "9a0746d5cb25b146"}], "inputA": {"src": "hda", "id": "c42532d3e97ed6d7"}}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_annotatebed/2.27.1+galaxy1", "update_time": "2019-06-25T22:24:05.373889", "inputs": {"beds1": {"src": "hda", "id": "6dad9f7f320da2e1", "uuid": "8809129e-8ef1-47d3-a6d2-45d662828278"}, "beds": {"src": "hda", "id": "6dad9f7f320da2e1", "uuid": "8809129e-8ef1-47d3-a6d2-45d662828278"}, "beds3": {"src": "hda", "id": "9a0746d5cb25b146", "uuid": "268fd4ec-b375-4427-aefa-20bdc6be3e74"}, "beds2": {"src": "hda", "id": "9ea551a26000f442", "uuid": "19c98263-e203-4463-9fb3-a9fe1e1c91d4"}, "inputA": {"src": "hda", "id": "c42532d3e97ed6d7", "uuid": "f906a6a7-1593-46f0-95b5-57fceea1b864"}}, "outputs": {"output": {"src": "hda", "id": "c69b790d636beb44", "uuid": "cb0f63d7-7a0f-48a1-835e-c2ee2a5cf64f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:23:52.536184", "stderr": "", "model_class": "Job", "params": {"both": "\"false\"", "dbkey": "\"?\"", "names": "{\"__current_case__\": 1, \"beds\": {\"values\": [{\"id\": 1067875, \"src\": \"hda\"}, {\"id\": 1067880, \"src\": \"hda\"}, {\"id\": 1067883, \"src\": \"hda\"}]}, \"names_select\": \"no\"}", "counts": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "7f11241df7c696d6", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_annotatebed/2.27.1+galaxy1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bed12tobed6/2.27.1", "time_seconds": 64.80868697166443, "inputs": {"input": {"src": "hda", "id": "40485f4aa5cee806"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bed12tobed6/2.27.1", "update_time": "2019-06-25T22:21:51.769041", "inputs": {"input": {"src": "hda", "id": "40485f4aa5cee806", "uuid": "84e459b2-ef48-4fb5-976f-fab16729c049"}}, "outputs": {"output": {"src": "hda", "id": "e5c3c11394e29f7e", "uuid": "0d16d488-1dc4-4946-8ea7-6bb62f830f84"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:21:38.187493", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "bbea00733fa0a328", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bed12tobed6/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtobam/2.27.1", "time_seconds": 51.89747595787048, "inputs": {"genome_file_opts|genome_file_opts_selector": "hist", "input": {"src": "hda", "id": "543e6ca6650aa4c3"}, "genome_file_opts|genome": {"src": "hda", "id": "d8fc383dcb5ec414"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtobam/2.27.1", "update_time": "2019-06-25T22:34:17.915467", "inputs": {"input": {"src": "hda", "id": "543e6ca6650aa4c3", "uuid": "ddb829ea-8c6d-4f47-8109-a039fcfb7c64"}, "genome": {"src": "hda", "id": "d8fc383dcb5ec414", "uuid": "c9fc0573-7239-409a-96a5-81909e0cb27b"}}, "outputs": {"output": {"src": "hda", "id": "d1322527f7fb8851", "uuid": "58df28c3-bf2b-47b0-ad97-d28b39b99eed"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:33:57.728189", "stderr": "", "model_class": "Job", "params": {"mapq": "\"255\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1068021, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "dbkey": "\"?\"", "bed12": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "1e8bad6ebcc4998f", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtobam/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtoigv/2.27.1", "time_seconds": 37.688366174697876, "inputs": {"input": {"src": "hda", "id": "f44733d008531224"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtoigv/2.27.1", "update_time": "2019-06-25T22:34:09.586725", "inputs": {"input": {"src": "hda", "id": "f44733d008531224", "uuid": "43b44465-6625-4cc1-aa39-568b2c34a864"}}, "outputs": {"output": {"src": "hda", "id": "aad53537875014f4", "uuid": "e298fc38-685c-4356-8a2c-ab8b291637c7"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:33:55.162719", "stderr": "", "model_class": "Job", "params": {"sort": "\"\"", "slop": "\"0\"", "name": "\"false\"", "img": "\"png\"", "clps": "\"false\"", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "9fd440ab7fa81dac", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtoigv/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1", "time_seconds": 65.1659619808197, "inputs": {"inputA": {"src": "hda", "id": "6628d06b02dde2c8"}, "overlap_with|source": "history", "overlap_with|inputB": {"src": "hda", "id": "7958a1d0a275cf72"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1", "update_time": "2019-06-25T22:20:25.010721", "inputs": {"inputB": {"src": "hda", "id": "7958a1d0a275cf72", "uuid": "26ce8f24-271f-458d-8ac7-be3871fa8e14"}, "inputA": {"src": "hda", "id": "6628d06b02dde2c8", "uuid": "883e05fa-87fb-4fff-b699-f05c36a7fa64"}}, "outputs": {"output": {"src": "hda", "id": "be6909395431a91c", "uuid": "a4315f00-049f-4957-b205-602919e1ed6c"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:20:11.797644", "stderr": "", "model_class": "Job", "params": {"mdb": "\"each\"", "k": "\"1\"", "dbkey": "\"?\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 1067824, \"src\": \"hda\"}]}, \"source\": \"history\"}", "addition": "\"false\"", "io": "\"false\"", "ties": "\"all\"", "addition2": "{\"__current_case__\": 0, \"addition2_select\": \"\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "30e64e082566c9f1", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1", "time_seconds": 64.83883810043335, "inputs": {"addition": true, "inputA": {"src": "hda", "id": "c9e44d68389a92a0"}, "overlap_with|source": "history", "overlap_with|inputB": [{"src": "hda", "id": "5c3bbbe994ef1e92"}, {"src": "hda", "id": "dacf681a3642cff3"}]}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1", "update_time": "2019-06-25T22:20:41.214876", "inputs": {"inputB": {"src": "hda", "id": "5c3bbbe994ef1e92", "uuid": "f6778ab5-da58-4697-b19c-81246669a96c"}, "inputA": {"src": "hda", "id": "c9e44d68389a92a0", "uuid": "b1e5f929-9a34-443b-96de-f021cb3f8b1b"}, "inputB1": {"src": "hda", "id": "5c3bbbe994ef1e92", "uuid": "f6778ab5-da58-4697-b19c-81246669a96c"}, "inputB2": {"src": "hda", "id": "dacf681a3642cff3", "uuid": "4bcea8bd-e88f-410d-8576-4cda2a2af409"}}, "outputs": {"output": {"src": "hda", "id": "bbb52db10312e964", "uuid": "4deb3f9d-0775-4cf4-a4c3-77e2a5c42f06"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:20:26.588769", "stderr": "", "model_class": "Job", "params": {"mdb": "\"each\"", "k": "\"1\"", "dbkey": "\"?\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 1067827, \"src\": \"hda\"}, {\"id\": 1067831, \"src\": \"hda\"}]}, \"source\": \"history\"}", "addition": "\"true\"", "io": "\"false\"", "ties": "\"all\"", "addition2": "{\"__current_case__\": 0, \"addition2_select\": \"\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "0dceb70424a409f8", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1", "time_seconds": 59.15292406082153, "inputs": {"addition": true, "mdb": "all", "inputA": {"src": "hda", "id": "c9e44d68389a92a0"}, "overlap_with|source": "history", "overlap_with|inputB": [{"src": "hda", "id": "5c3bbbe994ef1e92"}, {"src": "hda", "id": "dacf681a3642cff3"}]}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1", "update_time": "2019-06-25T22:20:38.570787", "inputs": {"inputB": {"src": "hda", "id": "5c3bbbe994ef1e92", "uuid": "f6778ab5-da58-4697-b19c-81246669a96c"}, "inputA": {"src": "hda", "id": "c9e44d68389a92a0", "uuid": "b1e5f929-9a34-443b-96de-f021cb3f8b1b"}, "inputB1": {"src": "hda", "id": "5c3bbbe994ef1e92", "uuid": "f6778ab5-da58-4697-b19c-81246669a96c"}, "inputB2": {"src": "hda", "id": "dacf681a3642cff3", "uuid": "4bcea8bd-e88f-410d-8576-4cda2a2af409"}}, "outputs": {"output": {"src": "hda", "id": "7a260c5bafa1c2c3", "uuid": "150e2cc2-4ef7-428b-aa90-04e963d09d8b"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:20:25.631469", "stderr": "", "model_class": "Job", "params": {"mdb": "\"all\"", "k": "\"1\"", "dbkey": "\"?\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 1067827, \"src\": \"hda\"}, {\"id\": 1067831, \"src\": \"hda\"}]}, \"source\": \"history\"}", "addition": "\"true\"", "io": "\"false\"", "ties": "\"all\"", "addition2": "{\"__current_case__\": 0, \"addition2_select\": \"\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "4ae1e636093e639b", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1", "time_seconds": 65.0957179069519, "inputs": {"addition2|addition2_select": "ref", "inputA": {"src": "hda", "id": "52db4b2ab6932177"}, "overlap_with|source": "history", "overlap_with|inputB": {"src": "hda", "id": "b4f0dba1876b0972"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1", "update_time": "2019-06-25T22:21:27.999492", "inputs": {"inputB": {"src": "hda", "id": "b4f0dba1876b0972", "uuid": "5c86a359-12dc-46f8-86ca-cda616908760"}, "inputA": {"src": "hda", "id": "52db4b2ab6932177", "uuid": "c748f993-19ea-4df1-b9e8-0bd47a77d15a"}}, "outputs": {"output": {"src": "hda", "id": "d5faaf14874a8a1d", "uuid": "2f2620f1-5ba9-4a31-a8c4-856ef4518f08"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:21:12.035372", "stderr": "", "model_class": "Job", "params": {"mdb": "\"each\"", "k": "\"1\"", "dbkey": "\"?\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 1067841, \"src\": \"hda\"}]}, \"source\": \"history\"}", "addition": "\"false\"", "io": "\"false\"", "ties": "\"all\"", "addition2": "{\"__current_case__\": 1, \"addition2_select\": \"ref\", \"fd\": \"false\", \"fu\": \"false\", \"id\": \"false\", \"iu\": \"false\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "430a2a6fe867c1af", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1", "time_seconds": 58.272056102752686, "inputs": {"addition2|addition2_select": "a", "inputA": {"src": "hda", "id": "52db4b2ab6932177"}, "overlap_with|source": "history", "overlap_with|inputB": {"src": "hda", "id": "b4f0dba1876b0972"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1", "update_time": "2019-06-25T22:21:37.757339", "inputs": {"inputB": {"src": "hda", "id": "b4f0dba1876b0972", "uuid": "5c86a359-12dc-46f8-86ca-cda616908760"}, "inputA": {"src": "hda", "id": "52db4b2ab6932177", "uuid": "c748f993-19ea-4df1-b9e8-0bd47a77d15a"}}, "outputs": {"output": {"src": "hda", "id": "e539b581b88200ab", "uuid": "015bf59f-21e9-42fc-91d1-89e2a80e2704"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:21:24.639433", "stderr": "", "model_class": "Job", "params": {"mdb": "\"each\"", "k": "\"1\"", "dbkey": "\"?\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 1067841, \"src\": \"hda\"}]}, \"source\": \"history\"}", "addition": "\"false\"", "io": "\"false\"", "ties": "\"all\"", "addition2": "{\"__current_case__\": 2, \"addition2_select\": \"a\", \"fd\": \"false\", \"fu\": \"false\", \"id\": \"false\", \"iu\": \"false\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "357d2f79b72d5ac8", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1", "time_seconds": 57.83416700363159, "inputs": {"k": "3", "inputA": {"src": "hda", "id": "8b7775d0836c6df1"}, "overlap_with|source": "history", "overlap_with|inputB": {"src": "hda", "id": "2ae6cd3bd376fc2a"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1", "update_time": "2019-06-25T22:21:51.111022", "inputs": {"inputB": {"src": "hda", "id": "2ae6cd3bd376fc2a", "uuid": "32ab5afc-470d-4a7b-9be0-e8a6a78cb085"}, "inputA": {"src": "hda", "id": "8b7775d0836c6df1", "uuid": "772e7cee-994c-4986-995b-2a1ba5465389"}}, "outputs": {"output": {"src": "hda", "id": "30ab87cb3cd6b6b1", "uuid": "3ea11d20-90e5-45bb-a544-b12a2751ca70"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:21:38.275888", "stderr": "", "model_class": "Job", "params": {"mdb": "\"each\"", "k": "\"3\"", "dbkey": "\"?\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 1067847, \"src\": \"hda\"}]}, \"source\": \"history\"}", "addition": "\"false\"", "io": "\"false\"", "ties": "\"all\"", "addition2": "{\"__current_case__\": 0, \"addition2_select\": \"\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "f7a72b249e2a28b2", "job_stdout": ""}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.27.1-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_clusterbed/2.27.1", "time_seconds": 65.60706496238708, "inputs": {"inputA": {"src": "hda", "id": "c9bb80bc849bcce7"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_clusterbed/2.27.1", "update_time": "2019-06-25T22:22:06.087885", "inputs": {"inputA": {"src": "hda", "id": "c9bb80bc849bcce7", "uuid": "ff70301f-1dbf-4ea6-a992-0d192473f2bd"}}, "outputs": {"output": {"src": "hda", "id": "b006193ae7b0a87b", "uuid": "8fcebcd8-1b7a-4ab5-8124-d0aa24f7d59f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:21:51.917245", "stderr": "", "model_class": "Job", "params": {"distance": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "strand": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "c9c328cc4d8146e7", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_clusterbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed/2.27.1", "time_seconds": 26.408833026885986, "inputs": {"genome_file_opts|genome_file_opts_selector": "hist", "input": {"src": "hda", "id": "af618f4e2e49ad54"}, "genome_file_opts|genome": {"src": "hda", "id": "d8fc383dcb5ec414"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed/2.27.1", "update_time": "2019-06-25T22:34:23.750861", "inputs": {"input": {"src": "hda", "id": "af618f4e2e49ad54", "uuid": "dd951070-1d28-4b7c-b4a1-f480813d2017"}, "genome": {"src": "hda", "id": "d8fc383dcb5ec414", "uuid": "c9fc0573-7239-409a-96a5-81909e0cb27b"}}, "outputs": {"output": {"src": "hda", "id": "a007ffdc69171118", "uuid": "bfeecf63-e08b-4fcc-8343-e76b095d041d"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:34:10.439687", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1068021, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "5deefa1263b18816", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.27.1+galaxy1", "time_seconds": 65.67865085601807, "inputs": {"inputA": {"src": "hda", "id": "3a9fcfa2413b0d76"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "daf84ca73cf5cd5a"}}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.27.1+galaxy1", "update_time": "2019-06-25T22:25:59.706065", "inputs": {"inputB": {"src": "hda", "id": "daf84ca73cf5cd5a", "uuid": "f2b62f99-bb02-47d4-b23b-0bd38c1cc93d"}, "inputA": {"src": "hda", "id": "3a9fcfa2413b0d76", "uuid": "03a90dbc-91fe-467a-8870-1e492407a5d9"}}, "outputs": {"output": {"src": "hda", "id": "94b5b44873ee3ef2", "uuid": "68bb0988-92e0-4877-aaa4-9a723799b83d"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:25:43.855449", "stderr": "", "model_class": "Job", "params": {"overlap_a": "\"\"", "strandedness": "\"false\"", "a_or_b": "\"false\"", "overlap_b": "\"\"", "dbkey": "\"?\"", "hist": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067908, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "split": "\"false\"", "reciprocal_overlap": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "d": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "befed345f6da5ebc", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.27.1+galaxy1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.27.1+galaxy1", "time_seconds": 65.20926403999329, "inputs": {"inputA": {"src": "hda", "id": "e4e5e8a1ea56faac"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "8e1b8f1e4b4d1a3e"}, "overlap_b": "1"}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.27.1+galaxy1", "update_time": "2019-06-25T22:26:41.318708", "inputs": {"inputB": {"src": "hda", "id": "8e1b8f1e4b4d1a3e", "uuid": "8a2701a8-62dc-45e1-a448-f741b25aadb0"}, "inputA": {"src": "hda", "id": "e4e5e8a1ea56faac", "uuid": "d486ea9f-7b63-4c63-a7d9-01b753838ff0"}}, "outputs": {"output": {"src": "hda", "id": "a74e1541208f0c99", "uuid": "929528f5-ea3e-4b19-8507-ab5dcbdb9465"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:26:23.909800", "stderr": "", "model_class": "Job", "params": {"overlap_a": "\"\"", "strandedness": "\"false\"", "a_or_b": "\"false\"", "overlap_b": "\"1.0\"", "dbkey": "\"?\"", "hist": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067918, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "split": "\"false\"", "reciprocal_overlap": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "d": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "f1439aeb29772b4c", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.27.1+galaxy1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.27.1+galaxy1", "time_seconds": 65.37451815605164, "inputs": {"inputA": {"src": "hda", "id": "e4e5e8a1ea56faac"}, "overlap_a": "1E-5", "reduce_or_iterate|inputB": {"src": "hda", "id": "8e1b8f1e4b4d1a3e"}, "reciprocal_overlap": true}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.27.1+galaxy1", "update_time": "2019-06-25T22:26:54.565510", "inputs": {"inputB": {"src": "hda", "id": "8e1b8f1e4b4d1a3e", "uuid": "8a2701a8-62dc-45e1-a448-f741b25aadb0"}, "inputA": {"src": "hda", "id": "e4e5e8a1ea56faac", "uuid": "d486ea9f-7b63-4c63-a7d9-01b753838ff0"}}, "outputs": {"output": {"src": "hda", "id": "91de467d21db844b", "uuid": "49176473-9e16-4f4c-81af-672b5460140d"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:26:38.680312", "stderr": "", "model_class": "Job", "params": {"overlap_a": "\"1e-05\"", "strandedness": "\"false\"", "a_or_b": "\"false\"", "overlap_b": "\"\"", "dbkey": "\"?\"", "hist": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067918, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "split": "\"false\"", "reciprocal_overlap": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "d": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "317d928d4437b306", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.27.1+galaxy1-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.27.1", "time_seconds": 65.48279309272766, "inputs": {"input": {"src": "hda", "id": "106cbafbf94e68f5"}, "cols": "5"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.27.1", "update_time": "2019-06-25T22:28:51.042452", "inputs": {"input": {"src": "hda", "id": "106cbafbf94e68f5", "uuid": "2e1d0cbd-d34f-4986-97d1-5327292a25ce"}}, "outputs": {"output": {"src": "hda", "id": "a455524c42df4d2e", "uuid": "354f4c06-b0fb-42ef-80c4-11e120d02b1d"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:28:36.659469", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "cols": "\"5\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "1de55c24c0c3b752", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.27.1", "time_seconds": 58.20869588851929, "inputs": {"input": {"src": "hda", "id": "106cbafbf94e68f5"}, "cols": "4,5"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.27.1", "update_time": "2019-06-25T22:29:04.813828", "inputs": {"input": {"src": "hda", "id": "106cbafbf94e68f5", "uuid": "2e1d0cbd-d34f-4986-97d1-5327292a25ce"}}, "outputs": {"output": {"src": "hda", "id": "e0221c3b370cda0d", "uuid": "78ca1595-836c-4dee-abd2-e9ed4e8acec0"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:28:52.111462", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "cols": "\"4,5\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "4855b63664a4d542", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher/2.27.1+galaxy1", "time_seconds": 65.51697111129761, "inputs": {"inputB": {"src": "hda", "id": "4444e648c9cf7c65"}, "genome_file_opts|genome_file_opts_selector": "hist", "inputA": {"src": "hda", "id": "89393f5ca1183243"}, "genome_file_opts|genome": {"src": "hda", "id": "d531b7042bc3e958"}}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher/2.27.1+galaxy1", "update_time": "2019-06-25T22:25:42.177316", "inputs": {"inputB": {"src": "hda", "id": "4444e648c9cf7c65", "uuid": "051ed9c3-3333-45cf-9947-393527161061"}, "inputA": {"src": "hda", "id": "89393f5ca1183243", "uuid": "a26f3620-439b-4b45-bb90-d7bfa2cec606"}, "genome": {"src": "hda", "id": "d531b7042bc3e958", "uuid": "54ff4e1d-b9f7-4730-9d0b-803349094b19"}}, "outputs": {"output": {"src": "hda", "id": "ce488675ebc757d1", "uuid": "54d5f608-a887-4499-8fac-633af19dc8ea"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:25:27.441924", "stderr": "", "model_class": "Job", "params": {"reciprocal": "\"\"", "m": "\"false\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067903, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "dbkey": "\"?\"", "split": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "overlap": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "9a5aa454df4cda26", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher/2.27.1+galaxy1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.27.1", "time_seconds": 65.58655095100403, "inputs": {"genome_file_opts|genome_file_opts_selector": "hist", "input": {"src": "hda", "id": "2ae6cd3bd376fc2a"}, "addition|addition_select": "b", "addition|b": "5", "genome_file_opts|genome": {"src": "hda", "id": "4fa5a3aa7301256c"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.27.1", "update_time": "2019-06-25T22:22:06.504894", "inputs": {"input": {"src": "hda", "id": "2ae6cd3bd376fc2a", "uuid": "32ab5afc-470d-4a7b-9be0-e8a6a78cb085"}, "genome": {"src": "hda", "id": "4fa5a3aa7301256c", "uuid": "7799cf87-31e5-4437-841f-d9f055f969a8"}}, "outputs": {"output": {"src": "hda", "id": "6ac9d330068533e3", "uuid": "08165c91-474b-477e-8946-474b82ca2308"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:21:51.980129", "stderr": "", "model_class": "Job", "params": {"addition": "{\"__current_case__\": 0, \"addition_select\": \"b\", \"b\": \"5\"}", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067854, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "pct": "\"false\"", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "2b3fe28d9d64668c", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.27.1", "time_seconds": 66.32403302192688, "inputs": {"addition|l": "2", "addition|addition_select": "lr", "genome_file_opts|genome": {"src": "hda", "id": "4fa5a3aa7301256c"}, "genome_file_opts|genome_file_opts_selector": "hist", "input": {"src": "hda", "id": "2ae6cd3bd376fc2a"}, "addition|r": "3"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.27.1", "update_time": "2019-06-25T22:22:14.028150", "inputs": {"input": {"src": "hda", "id": "2ae6cd3bd376fc2a", "uuid": "32ab5afc-470d-4a7b-9be0-e8a6a78cb085"}, "genome": {"src": "hda", "id": "4fa5a3aa7301256c", "uuid": "7799cf87-31e5-4437-841f-d9f055f969a8"}}, "outputs": {"output": {"src": "hda", "id": "438ce7f0aca8ca3a", "uuid": "9ce64f78-686d-419f-a43b-1562979b2f37"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:21:57.826339", "stderr": "", "model_class": "Job", "params": {"addition": "{\"__current_case__\": 1, \"addition_select\": \"lr\", \"l\": \"2\", \"r\": \"3\"}", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067854, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "pct": "\"false\"", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "0da6f89062304b57", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_genomecoveragebed/2.27.1", "time_seconds": 65.59639096260071, "inputs": {"report|report_select": "hist", "input_type|input": {"src": "hda", "id": "5b9be082050bfce1"}, "input_type|input_type_select": "bed", "input_type|genome_file_opts|genome_file_opts_selector": "hist", "input_type|genome_file_opts|genome": {"src": "hda", "id": "8c8000a38f6e5163"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_genomecoveragebed/2.27.1", "update_time": "2019-06-25T22:29:12.315729", "inputs": {"input": {"src": "hda", "id": "5b9be082050bfce1", "uuid": "005a355d-77c2-4ad4-92c5-680aa44915ca"}, "input_type|genome": {"src": "hda", "id": "8c8000a38f6e5163", "uuid": "dfedc3cb-8e66-4153-aec9-dd8e7a8c4780"}}, "outputs": {"output": {"src": "hda", "id": "d250378d4e31058d", "uuid": "5da29a12-8c23-4c21-bad7-6c76c18b55bf"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:28:58.121558", "stderr": "", "model_class": "Job", "params": {"d": "\"false\"", "input_type": "{\"__current_case__\": 0, \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067944, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}, \"input\": {\"values\": [{\"id\": 1067939, \"src\": \"hda\"}]}, \"input_type_select\": \"bed\"}", "three": "\"false\"", "dbkey": "\"?\"", "five": "\"false\"", "split": "\"false\"", "report": "{\"__current_case__\": 1, \"max\": \"0\", \"report_select\": \"hist\"}", "dz": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "5910d9ac65ffcd6e", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_genomecoveragebed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.27.1", "time_seconds": 65.0143928527832, "inputs": {"input": {"src": "hda", "id": "cfa72e1da2aa859f"}, "fasta_source|fasta": {"src": "hda", "id": "ced01f41945161cc"}, "split": false, "tab": false}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.27.1", "update_time": "2019-06-25T22:23:43.996465", "inputs": {"input": {"src": "hda", "id": "cfa72e1da2aa859f", "uuid": "f117681a-909e-43f9-a800-28a81925f39f"}, "fasta": {"src": "hda", "id": "ced01f41945161cc", "uuid": "5ad6768a-ca96-436f-bb72-5d56a652c99a"}}, "outputs": {"output": {"src": "hda", "id": "58d1c7513bcd0582", "uuid": "5b675acd-a8e4-4a01-9d07-fb78ccafa3ad"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "index file /mnt/galaxy/files/000/924/dataset_924762.dat.fai not found, generating...\n", "state": "ok", "create_time": "2019-06-25T22:23:30.342446", "stderr": "index file /mnt/galaxy/files/000/924/dataset_924762.dat.fai not found, generating...\n", "model_class": "Job", "params": {"name": "\"false\"", "dbkey": "\"?\"", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 1067881, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}", "tab": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"false\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "f2377bf9826bbfa2", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.27.1", "time_seconds": 64.56882619857788, "inputs": {"input": {"src": "hda", "id": "cfa72e1da2aa859f"}, "fasta_source|fasta": {"src": "hda", "id": "ced01f41945161cc"}, "split": false, "tab": true}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.27.1", "update_time": "2019-06-25T22:23:49.785993", "inputs": {"input": {"src": "hda", "id": "cfa72e1da2aa859f", "uuid": "f117681a-909e-43f9-a800-28a81925f39f"}, "fasta": {"src": "hda", "id": "ced01f41945161cc", "uuid": "5ad6768a-ca96-436f-bb72-5d56a652c99a"}}, "outputs": {"output": {"src": "hda", "id": "031f5721c392d9e0", "uuid": "230cddb7-80b2-4908-996c-19b59f84bd5a"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:23:36.733108", "stderr": "", "model_class": "Job", "params": {"name": "\"false\"", "dbkey": "\"?\"", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 1067881, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}", "tab": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"false\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "868b8c18228caf5d", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 104.77422499656677, "inputs": {"inputA": {"src": "hda", "id": "e51ec4a9a6becab8"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "reduce_or_iterate|inputB": {"src": "hda", "id": "f8ea2afce8d0346c"}}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:15:21.680281", "inputs": {"inputB": {"src": "hda", "id": "f8ea2afce8d0346c", "uuid": "ccb3ecd8-2ba0-42ce-a944-1e3ab9e11088"}, "inputA": {"src": "hda", "id": "e51ec4a9a6becab8", "uuid": "5a70997f-63ee-4163-b137-938a3adae2c4"}}, "outputs": {"output": {"src": "hda", "id": "05b51fd96da8f176", "uuid": "34a0dc53-a34e-463e-9f4e-ae999ae35dfa"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:14:24.289771", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "null", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067741, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "81d21330ee92a38c", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 66.29040694236755, "inputs": {"inputA": {"src": "hda", "id": "cd464be2383fd399"}, "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "reduce_or_iterate|inputB": [{"src": "hda", "id": "6183ad79b2f58aa7"}, {"src": "hda", "id": "4f09892eeb2192e2"}, {"src": "hda", "id": "b46ebedca9364273"}]}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:16:02.813579", "inputs": {"inputB": {"src": "hda", "id": "6183ad79b2f58aa7", "uuid": "af81951d-caab-4704-9372-43d4242d1dfc"}, "inputA": {"src": "hda", "id": "cd464be2383fd399", "uuid": "a1ccb8a5-1133-4b8a-ac59-19c2a2dee54c"}, "inputB1": {"src": "hda", "id": "6183ad79b2f58aa7", "uuid": "af81951d-caab-4704-9372-43d4242d1dfc"}, "inputB3": {"src": "hda", "id": "b46ebedca9364273", "uuid": "2663806b-e9e3-4fad-9898-ea6003c1e432"}, "inputB2": {"src": "hda", "id": "4f09892eeb2192e2", "uuid": "3adf5216-fc7e-478a-a1b4-ac338db42b31"}}, "outputs": {"output": {"src": "hda", "id": "483fbce28b43b6be", "uuid": "dd0c4397-56a8-48e0-ac05-40d2fea066f8"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:15:47.007487", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "null", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 1067754, \"src\": \"hda\"}, {\"id\": 1067761, \"src\": \"hda\"}, {\"id\": 1067769, \"src\": \"hda\"}]}, \"names\": \"false\", \"reduce_or_iterate_selector\": \"reduce\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "cb17a960b9f6c235", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 72.93215417861938, "inputs": {"overlap_mode": "-wo", "inputA": {"src": "hda", "id": "bda9897115a5f129"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "reduce_or_iterate|inputB": {"src": "hda", "id": "0e786e16c7d88897"}}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:17:32.277066", "inputs": {"inputB": {"src": "hda", "id": "0e786e16c7d88897", "uuid": "77d71ca3-398a-4615-882b-a2570ff128a8"}, "inputA": {"src": "hda", "id": "bda9897115a5f129", "uuid": "fb30cb1c-3ed7-4a92-85d1-e136c4035615"}}, "outputs": {"output": {"src": "hda", "id": "fe1c9630e4d31b5f", "uuid": "11b2374f-c732-4d37-8e01-5c42a1554647"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:17:11.209893", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "\"-wo\"", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067780, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "a7feafd5d47eee2c", "job_stdout": ""}, "test_index": 10}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-10", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 65.13988995552063, "inputs": {"overlap_mode": "-wao", "inputA": {"src": "hda", "id": "bda9897115a5f129"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "reduce_or_iterate|inputB": {"src": "hda", "id": "16ec2787d4f074ea"}}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:18:14.475922", "inputs": {"inputB": {"src": "hda", "id": "16ec2787d4f074ea", "uuid": "825fa774-3d6d-48df-b361-a17e9dac10ca"}, "inputA": {"src": "hda", "id": "bda9897115a5f129", "uuid": "fb30cb1c-3ed7-4a92-85d1-e136c4035615"}}, "outputs": {"output": {"src": "hda", "id": "c1b939c99732055d", "uuid": "5a3c3bb5-16e8-42dd-931e-a6aa45f8c12e"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:17:55.944373", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "\"-wao\"", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067793, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "8447ebca1d313af9", "job_stdout": ""}, "test_index": 11}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-11", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 91.21323299407959, "inputs": {"inputA": {"src": "hda", "id": "bda9897115a5f129"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "reduce_or_iterate|inputB": {"src": "hda", "id": "16ec2787d4f074ea"}, "once": true}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:18:11.213105", "inputs": {"inputB": {"src": "hda", "id": "16ec2787d4f074ea", "uuid": "825fa774-3d6d-48df-b361-a17e9dac10ca"}, "inputA": {"src": "hda", "id": "bda9897115a5f129", "uuid": "fb30cb1c-3ed7-4a92-85d1-e136c4035615"}}, "outputs": {"output": {"src": "hda", "id": "b19b46a423d9ea22", "uuid": "2e9bf674-4216-473d-a028-8211a79843d0"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:17:31.200576", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "null", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067793, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "191b8c0ab69bb93e", "job_stdout": ""}, "test_index": 12}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-12", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 80.70203685760498, "inputs": {"count": true, "inputA": {"src": "hda", "id": "bda9897115a5f129"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "reduce_or_iterate|inputB": {"src": "hda", "id": "16ec2787d4f074ea"}}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:18:11.149278", "inputs": {"inputB": {"src": "hda", "id": "16ec2787d4f074ea", "uuid": "825fa774-3d6d-48df-b361-a17e9dac10ca"}, "inputA": {"src": "hda", "id": "bda9897115a5f129", "uuid": "fb30cb1c-3ed7-4a92-85d1-e136c4035615"}}, "outputs": {"output": {"src": "hda", "id": "1ec36daedde9ae36", "uuid": "310afd05-8f10-45f8-afea-817968a62dbb"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:17:36.362869", "stderr": "", "model_class": "Job", "params": {"count": "\"true\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "null", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067793, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "3f0051609984d850", "job_stdout": ""}, "test_index": 13}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-13", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 65.58535599708557, "inputs": {"invert": true, "inputA": {"src": "hda", "id": "bda9897115a5f129"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "reduce_or_iterate|inputB": {"src": "hda", "id": "16ec2787d4f074ea"}}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:18:19.958499", "inputs": {"inputB": {"src": "hda", "id": "16ec2787d4f074ea", "uuid": "825fa774-3d6d-48df-b361-a17e9dac10ca"}, "inputA": {"src": "hda", "id": "bda9897115a5f129", "uuid": "fb30cb1c-3ed7-4a92-85d1-e136c4035615"}}, "outputs": {"output": {"src": "hda", "id": "f1e1755f6adc3b0b", "uuid": "16fe7134-077e-4220-96c7-88ee1ba0bd08"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:18:03.660123", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "null", "invert": "\"true\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067793, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "bb500692ac094577", "job_stdout": ""}, "test_index": 14}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-14", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 65.64558911323547, "inputs": {"inputA": {"src": "hda", "id": "46070cb7ecd38066"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "80a0b0666eaf70d0"}, "fraction_cond|fraction_select": "specify", "overlap_mode": ["-wa", "-wb"], "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "fraction_cond|overlap": "0.5"}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:18:05.173737", "inputs": {"inputB": {"src": "hda", "id": "80a0b0666eaf70d0", "uuid": "3f31956a-47dc-4496-baa5-c096cf4f5e4a"}, "inputA": {"src": "hda", "id": "46070cb7ecd38066", "uuid": "39428cea-4b54-4153-bdb4-bc1451122181"}}, "outputs": {"output": {"src": "hda", "id": "88cb9d435b025393", "uuid": "0bfa9d63-6875-4e14-9639-5ed7e02d2a05"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:17:50.137124", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": \"false\", \"overlapB\": \"\", \"reciprocal\": \"\"}}", "overlap_mode": "[\"-wa\", \"-wb\"]", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067798, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "1b7c548c1c07db29", "job_stdout": ""}, "test_index": 15}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-15", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 65.89344215393066, "inputs": {"inputA": {"src": "hda", "id": "46070cb7ecd38066"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "80a0b0666eaf70d0"}, "overlap_mode": ["-wa", "-wb"], "fraction_cond|fraction_select": "specify", "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "fraction_cond|overlap": "0.5", "fraction_cond|reciprocal_cond|reciprocal": "-r"}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:18:08.242623", "inputs": {"inputB": {"src": "hda", "id": "80a0b0666eaf70d0", "uuid": "3f31956a-47dc-4496-baa5-c096cf4f5e4a"}, "inputA": {"src": "hda", "id": "46070cb7ecd38066", "uuid": "39428cea-4b54-4153-bdb4-bc1451122181"}}, "outputs": {"output": {"src": "hda", "id": "164fdf57f5961c86", "uuid": "7d001a6d-e94c-41b6-b28e-8fd929a4ec7a"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:17:52.420846", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 0, \"reciprocal\": \"-r\"}}", "overlap_mode": "[\"-wa\", \"-wb\"]", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067798, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "f65bdcd5a74380ff", "job_stdout": ""}, "test_index": 16}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-16", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 65.50478601455688, "inputs": {"fraction_cond|reciprocal_cond|overlapB": "0.5", "inputA": {"src": "hda", "id": "46070cb7ecd38066"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "80a0b0666eaf70d0"}, "fraction_cond|fraction_select": "specify", "overlap_mode": ["-wa", "-wb"], "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "fraction_cond|overlap": "0.5"}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:18:25.976923", "inputs": {"inputB": {"src": "hda", "id": "80a0b0666eaf70d0", "uuid": "3f31956a-47dc-4496-baa5-c096cf4f5e4a"}, "inputA": {"src": "hda", "id": "46070cb7ecd38066", "uuid": "39428cea-4b54-4153-bdb4-bc1451122181"}}, "outputs": {"output": {"src": "hda", "id": "2546b748933442ec", "uuid": "958749c8-a2c7-4cdc-8fc8-632da7a03348"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:18:09.566257", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": \"false\", \"overlapB\": \"0.5\", \"reciprocal\": \"\"}}", "overlap_mode": "[\"-wa\", \"-wb\"]", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067798, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "98936ad38aba682b", "job_stdout": ""}, "test_index": 17}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-17", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 65.84057188034058, "inputs": {"reduce_or_iterate|inputB": {"src": "hda", "id": "80a0b0666eaf70d0"}, "fraction_cond|reciprocal_cond|disjoint": true, "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|reciprocal_cond|overlapB": "0.5", "inputA": {"src": "hda", "id": "46070cb7ecd38066"}, "fraction_cond|fraction_select": "specify", "reduce_or_iterate|reduce_or_iterate_selector": "iterate"}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:18:18.851841", "inputs": {"inputB": {"src": "hda", "id": "80a0b0666eaf70d0", "uuid": "3f31956a-47dc-4496-baa5-c096cf4f5e4a"}, "inputA": {"src": "hda", "id": "46070cb7ecd38066", "uuid": "39428cea-4b54-4153-bdb4-bc1451122181"}}, "outputs": {"output": {"src": "hda", "id": "1fd0ed9cbc8e0717", "uuid": "39398c17-a8f9-4f67-bf86-acaf5eb795c8"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:18:03.211908", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": \"true\", \"overlapB\": \"0.5\", \"reciprocal\": \"\"}}", "overlap_mode": "[\"-wa\", \"-wb\"]", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067798, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "f909c906bcedff5c", "job_stdout": ""}, "test_index": 18}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-18", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 66.39941692352295, "inputs": {"overlap_mode": "-wa", "inputA": {"src": "hda", "id": "9978f93c6b8a8509"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "a95a1b37556c5566"}, "split": false}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:19:26.509588", "inputs": {"inputB": {"src": "hda", "id": "a95a1b37556c5566", "uuid": "d54d221a-6178-4993-963b-d46938bd9db0"}, "inputA": {"src": "hda", "id": "9978f93c6b8a8509", "uuid": "81c94766-b81b-4607-a6a5-7bb6520bbb42"}}, "outputs": {"output": {"src": "hda", "id": "5aebd95624c2bc62", "uuid": "1abeca6d-9e67-4e09-b433-b0f9000e71d3"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:19:10.772232", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "\"-wa\"", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067810, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "2b6e6ed2ec1e981f", "job_stdout": ""}, "test_index": 19}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-19", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 66.88067317008972, "inputs": {"overlap_mode": ["-wa", "-wb"], "inputA": {"src": "hda", "id": "cd464be2383fd399"}, "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "reduce_or_iterate|inputB": [{"src": "hda", "id": "6183ad79b2f58aa7"}, {"src": "hda", "id": "4f09892eeb2192e2"}, {"src": "hda", "id": "b46ebedca9364273"}], "sorted": true}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:15:53.587983", "inputs": {"inputB": {"src": "hda", "id": "6183ad79b2f58aa7", "uuid": "af81951d-caab-4704-9372-43d4242d1dfc"}, "inputA": {"src": "hda", "id": "cd464be2383fd399", "uuid": "a1ccb8a5-1133-4b8a-ac59-19c2a2dee54c"}, "inputB1": {"src": "hda", "id": "6183ad79b2f58aa7", "uuid": "af81951d-caab-4704-9372-43d4242d1dfc"}, "inputB3": {"src": "hda", "id": "b46ebedca9364273", "uuid": "2663806b-e9e3-4fad-9898-ea6003c1e432"}, "inputB2": {"src": "hda", "id": "4f09892eeb2192e2", "uuid": "3adf5216-fc7e-478a-a1b4-ac338db42b31"}}, "outputs": {"output": {"src": "hda", "id": "3a2727e01f3732ff", "uuid": "90747a6f-c072-4e19-ac2c-49c7d80e06f5"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:15:36.679186", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "[\"-wa\", \"-wb\"]", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 1067754, \"src\": \"hda\"}, {\"id\": 1067761, \"src\": \"hda\"}, {\"id\": 1067769, \"src\": \"hda\"}]}, \"names\": \"false\", \"reduce_or_iterate_selector\": \"reduce\"}", "bed": "\"false\"", "sorted": "\"true\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "892dae9ef4246e0b", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 73.87288403511047, "inputs": {"overlap_mode": ["-wa", "-wb"], "inputA": {"src": "hda", "id": "bd54fc96510d47ab"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "a95a1b37556c5566"}, "split": false}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:19:42.354654", "inputs": {"inputB": {"src": "hda", "id": "a95a1b37556c5566", "uuid": "d54d221a-6178-4993-963b-d46938bd9db0"}, "inputA": {"src": "hda", "id": "bd54fc96510d47ab", "uuid": "db699c81-23d9-4ec3-8cec-e15d0eb50262"}}, "outputs": {"output": {"src": "hda", "id": "bab57af70fd6563e", "uuid": "67b4b579-449e-423f-bc35-99dd3a307685"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:19:18.534336", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "[\"-wa\", \"-wb\"]", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067810, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "6ffcc6d5dfe95b2b", "job_stdout": ""}, "test_index": 20}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-20", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 66.01396203041077, "inputs": {"invert": true, "inputA": {"src": "hda", "id": "bd54fc96510d47ab"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "bd17bba9b12a0671"}, "split": false}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:20:10.228687", "inputs": {"inputB": {"src": "hda", "id": "bd17bba9b12a0671", "uuid": "72f666f7-59f7-4caa-bb4b-48004cf5e8b2"}, "inputA": {"src": "hda", "id": "bd54fc96510d47ab", "uuid": "db699c81-23d9-4ec3-8cec-e15d0eb50262"}}, "outputs": {"output": {"src": "hda", "id": "9aa09bc9fa29a866", "uuid": "c6a2e506-a51a-4342-b9e9-1cdcf4a4fffd"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:19:52.151437", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "null", "invert": "\"true\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067822, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "781f994fc4fba577", "job_stdout": ""}, "test_index": 21}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-21", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 66.06359696388245, "inputs": {"inputA": {"src": "hda", "id": "cd464be2383fd399"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "6183ad79b2f58aa7"}, {"src": "hda", "id": "4f09892eeb2192e2"}, {"src": "hda", "id": "b46ebedca9364273"}], "reduce_or_iterate|names": true, "sorted": true, "overlap_mode": ["-wa", "-wb"], "reduce_or_iterate|reduce_or_iterate_selector": "reduce"}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:16:09.125987", "inputs": {"inputB": {"src": "hda", "id": "6183ad79b2f58aa7", "uuid": "af81951d-caab-4704-9372-43d4242d1dfc"}, "inputA": {"src": "hda", "id": "cd464be2383fd399", "uuid": "a1ccb8a5-1133-4b8a-ac59-19c2a2dee54c"}, "inputB1": {"src": "hda", "id": "6183ad79b2f58aa7", "uuid": "af81951d-caab-4704-9372-43d4242d1dfc"}, "inputB3": {"src": "hda", "id": "b46ebedca9364273", "uuid": "2663806b-e9e3-4fad-9898-ea6003c1e432"}, "inputB2": {"src": "hda", "id": "4f09892eeb2192e2", "uuid": "3adf5216-fc7e-478a-a1b4-ac338db42b31"}}, "outputs": {"output": {"src": "hda", "id": "e58c32180d0c3fd1", "uuid": "11f15421-4ae2-4fae-b683-7e13fa15454e"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:15:54.688282", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "[\"-wa\", \"-wb\"]", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 1067754, \"src\": \"hda\"}, {\"id\": 1067761, \"src\": \"hda\"}, {\"id\": 1067769, \"src\": \"hda\"}]}, \"names\": \"true\", \"reduce_or_iterate_selector\": \"reduce\"}", "bed": "\"false\"", "sorted": "\"true\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "b4981580b8a4d40b", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 65.7348690032959, "inputs": {"sorted": true, "invert": true, "inputA": {"src": "hda", "id": "cd464be2383fd399"}, "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "reduce_or_iterate|inputB": [{"src": "hda", "id": "6183ad79b2f58aa7"}, {"src": "hda", "id": "4f09892eeb2192e2"}, {"src": "hda", "id": "b46ebedca9364273"}]}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:16:12.958519", "inputs": {"inputB": {"src": "hda", "id": "6183ad79b2f58aa7", "uuid": "af81951d-caab-4704-9372-43d4242d1dfc"}, "inputA": {"src": "hda", "id": "cd464be2383fd399", "uuid": "a1ccb8a5-1133-4b8a-ac59-19c2a2dee54c"}, "inputB1": {"src": "hda", "id": "6183ad79b2f58aa7", "uuid": "af81951d-caab-4704-9372-43d4242d1dfc"}, "inputB3": {"src": "hda", "id": "b46ebedca9364273", "uuid": "2663806b-e9e3-4fad-9898-ea6003c1e432"}, "inputB2": {"src": "hda", "id": "4f09892eeb2192e2", "uuid": "3adf5216-fc7e-478a-a1b4-ac338db42b31"}}, "outputs": {"output": {"src": "hda", "id": "677cdda4f81e665b", "uuid": "224b137a-2a90-4eb2-a38a-0b06f07134cf"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:15:56.728800", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "null", "invert": "\"true\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 1067754, \"src\": \"hda\"}, {\"id\": 1067761, \"src\": \"hda\"}, {\"id\": 1067769, \"src\": \"hda\"}]}, \"names\": \"false\", \"reduce_or_iterate_selector\": \"reduce\"}", "bed": "\"false\"", "sorted": "\"true\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "ddf2b9d2ee54d11b", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 66.0535979270935, "inputs": {"inputA": {"src": "hda", "id": "cd464be2383fd399"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "6183ad79b2f58aa7"}, {"src": "hda", "id": "4f09892eeb2192e2"}, {"src": "hda", "id": "b46ebedca9364273"}], "sorted": true, "fraction_cond|fraction_select": "specify", "overlap_mode": ["-wa", "-wb"], "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "fraction_cond|overlap": "1.0"}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:15:58.588427", "inputs": {"inputB": {"src": "hda", "id": "6183ad79b2f58aa7", "uuid": "af81951d-caab-4704-9372-43d4242d1dfc"}, "inputA": {"src": "hda", "id": "cd464be2383fd399", "uuid": "a1ccb8a5-1133-4b8a-ac59-19c2a2dee54c"}, "inputB1": {"src": "hda", "id": "6183ad79b2f58aa7", "uuid": "af81951d-caab-4704-9372-43d4242d1dfc"}, "inputB3": {"src": "hda", "id": "b46ebedca9364273", "uuid": "2663806b-e9e3-4fad-9898-ea6003c1e432"}, "inputB2": {"src": "hda", "id": "4f09892eeb2192e2", "uuid": "3adf5216-fc7e-478a-a1b4-ac338db42b31"}}, "outputs": {"output": {"src": "hda", "id": "92a730f297fd31ba", "uuid": "218eb4e6-0d7a-4dcf-a6b1-32d781834431"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:15:41.624470", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"1.0\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": \"false\", \"overlapB\": \"\", \"reciprocal\": \"\"}}", "overlap_mode": "[\"-wa\", \"-wb\"]", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 1067754, \"src\": \"hda\"}, {\"id\": 1067761, \"src\": \"hda\"}, {\"id\": 1067769, \"src\": \"hda\"}]}, \"names\": \"false\", \"reduce_or_iterate_selector\": \"reduce\"}", "bed": "\"false\"", "sorted": "\"true\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "7cdde6a82ec5ba6f", "job_stdout": ""}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 104.93990516662598, "inputs": {"overlap_mode": "-wa", "inputA": {"src": "hda", "id": "2f2913f71d0a338e"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "reduce_or_iterate|inputB": {"src": "hda", "id": "5aa4614bc71fdc7a"}}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:15:50.353467", "inputs": {"inputB": {"src": "hda", "id": "5aa4614bc71fdc7a", "uuid": "b0cd1985-6236-4d1b-ad43-bfbfe61e2b27"}, "inputA": {"src": "hda", "id": "2f2913f71d0a338e", "uuid": "be8b8791-cf7d-4dad-983d-94f732f3afb1"}}, "outputs": {"output": {"src": "hda", "id": "93b713cf26764200", "uuid": "915d6bc6-900e-47e2-a982-03e4df80c0a0"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:14:53.169123", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "\"-wa\"", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067763, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "d67565dccaab9def", "job_stdout": ""}, "test_index": 6}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-6", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 66.72135901451111, "inputs": {"overlap_mode": "-wb", "inputA": {"src": "hda", "id": "2f2913f71d0a338e"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "reduce_or_iterate|inputB": {"src": "hda", "id": "5aa4614bc71fdc7a"}}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:15:51.078594", "inputs": {"inputB": {"src": "hda", "id": "5aa4614bc71fdc7a", "uuid": "b0cd1985-6236-4d1b-ad43-bfbfe61e2b27"}, "inputA": {"src": "hda", "id": "2f2913f71d0a338e", "uuid": "be8b8791-cf7d-4dad-983d-94f732f3afb1"}}, "outputs": {"output": {"src": "hda", "id": "a26d90c7dcc14318", "uuid": "2efa62dd-699e-4403-9da6-95a28b9598b2"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:15:31.874506", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "\"-wb\"", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067763, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "9431a8c1afacc0e1", "job_stdout": ""}, "test_index": 7}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-7", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 66.79895496368408, "inputs": {"overlap_mode": ["-wa", "-wb"], "inputA": {"src": "hda", "id": "2f2913f71d0a338e"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "reduce_or_iterate|inputB": {"src": "hda", "id": "5aa4614bc71fdc7a"}}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:15:58.555820", "inputs": {"inputB": {"src": "hda", "id": "5aa4614bc71fdc7a", "uuid": "b0cd1985-6236-4d1b-ad43-bfbfe61e2b27"}, "inputA": {"src": "hda", "id": "2f2913f71d0a338e", "uuid": "be8b8791-cf7d-4dad-983d-94f732f3afb1"}}, "outputs": {"output": {"src": "hda", "id": "955fb277ff0b1593", "uuid": "1b257949-e425-44a2-a0b7-0a14e2e10231"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:15:43.286197", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "[\"-wa\", \"-wb\"]", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067763, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "0ef30beb53a0c97f", "job_stdout": ""}, "test_index": 8}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-8", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "time_seconds": 72.2284369468689, "inputs": {"overlap_mode": "-loj", "inputA": {"src": "hda", "id": "06bd40fcbdf06c6e"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "reduce_or_iterate|inputB": {"src": "hda", "id": "0e786e16c7d88897"}}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:17:28.030455", "inputs": {"inputB": {"src": "hda", "id": "0e786e16c7d88897", "uuid": "77d71ca3-398a-4615-882b-a2570ff128a8"}, "inputA": {"src": "hda", "id": "06bd40fcbdf06c6e", "uuid": "0270f7f7-6b70-4b9f-a27b-4f735274f632"}}, "outputs": {"output": {"src": "hda", "id": "86c3787ac96234ec", "uuid": "a639b595-c6a4-48cd-b2d9-deb0a1df8ea7"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:17:03.558214", "stderr": "", "model_class": "Job", "params": {"count": "\"false\"", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "overlap_mode": "\"-loj\"", "invert": "\"false\"", "dbkey": "\"?\"", "header": "\"false\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 1067780, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}", "bed": "\"false\"", "sorted": "\"false\"", "once": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "split": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "f73d78cc06968c6a", "job_stdout": ""}, "test_index": 9}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.27.1+galaxy1-9", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.27.1+galaxy1", "time_seconds": 58.41679000854492, "inputs": {"inputB": {"src": "hda", "id": "1372fd50fdf69784"}, "inputA": {"src": "hda", "id": "6a874e55f782ca24"}}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.27.1+galaxy1", "update_time": "2019-06-25T22:20:17.629812", "inputs": {"inputB": {"src": "hda", "id": "1372fd50fdf69784", "uuid": "4daa6e4a-35a8-40fb-b9dd-1536d52f23f9"}, "inputA": {"src": "hda", "id": "6a874e55f782ca24", "uuid": "769bc6bb-79c6-4da6-97d2-e6b2a8be528d"}}, "outputs": {"output": {"src": "hda", "id": "876084b648aa5282", "uuid": "69c3b263-8353-4991-994c-e5ec2032ace5"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:20:04.756997", "stderr": "", "model_class": "Job", "params": {"reciprocal": "\"\"", "dbkey": "\"?\"", "overlapB": "\"\"", "split": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "overlap": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "f048fb525aa7fb47", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.27.1+galaxy1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.27.1+galaxy1", "time_seconds": 65.25948596000671, "inputs": {"inputB": {"src": "hda", "id": "1372fd50fdf69784"}, "inputA": {"src": "hda", "id": "6a874e55f782ca24"}, "overlap": "0.1"}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.27.1+galaxy1", "update_time": "2019-06-25T22:20:21.888996", "inputs": {"inputB": {"src": "hda", "id": "1372fd50fdf69784", "uuid": "4daa6e4a-35a8-40fb-b9dd-1536d52f23f9"}, "inputA": {"src": "hda", "id": "6a874e55f782ca24", "uuid": "769bc6bb-79c6-4da6-97d2-e6b2a8be528d"}}, "outputs": {"output": {"src": "hda", "id": "cb235d31356a971b", "uuid": "9dc7c562-19e2-44f2-b18e-0e842ab3ea67"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:20:06.118912", "stderr": "", "model_class": "Job", "params": {"reciprocal": "\"\"", "dbkey": "\"?\"", "overlapB": "\"\"", "split": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"\"", "overlap": "\"0.1\""}, "tool_stdout": "", "job_messages": [], "id": "bd0a1bcb120edefa", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.27.1+galaxy1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.27.1", "time_seconds": 60.149632930755615, "inputs": {"input": {"src": "hda", "id": "b6ee48b15213f538"}, "basename": "http://genome.ucsc.edu", "db": "", "org": ""}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.27.1", "update_time": "2019-06-25T22:19:57.577698", "inputs": {"input": {"src": "hda", "id": "b6ee48b15213f538", "uuid": "2437f594-8444-442c-a301-811735724712"}}, "outputs": {"output": {"src": "hda", "id": "7954812d23a62413", "uuid": "a928f366-4fde-49b5-9537-8ff2d60978b8"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:19:44.687295", "stderr": "", "model_class": "Job", "params": {"org": "\"\"", "basename": "\"http://genome.ucsc.edu\"", "db": "\"\"", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "2f2499a9cd6e2ca6", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.27.1", "time_seconds": 65.42730903625488, "inputs": {"input": {"src": "hda", "id": "b6ee48b15213f538"}, "basename": "http://genome.ucsc.edu", "db": "mm9", "org": "mouse"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.27.1", "update_time": "2019-06-25T22:20:09.832639", "inputs": {"input": {"src": "hda", "id": "b6ee48b15213f538", "uuid": "2437f594-8444-442c-a301-811735724712"}}, "outputs": {"output": {"src": "hda", "id": "f0367ca119108838", "uuid": "dfbb6f95-40fa-4957-bdb3-d8261f3922bf"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:19:51.664089", "stderr": "", "model_class": "Job", "params": {"org": "\"mouse\"", "basename": "\"http://genome.ucsc.edu\"", "db": "\"mm9\"", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "747da3374d18b967", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.27.1", "time_seconds": 67.08514618873596, "inputs": {"type|genome_file_opts|genome": {"src": "hda", "id": "657f3bdbac8219c5"}, "type|genome_file_opts|genome_file_opts_selector": "hist", "type|type_select": "genome", "action|windowsize": "1000000", "action|action_select": "windowsize"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.27.1", "update_time": "2019-06-25T22:30:12.328538", "inputs": {"type|genome": {"src": "hda", "id": "657f3bdbac8219c5", "uuid": "c7791e9b-5725-40ab-b058-5cd7bc7dcab9"}}, "outputs": {"output": {"src": "hda", "id": "6b0f1f9b91cc9470", "uuid": "78f51128-d2a0-4800-9cad-b3e8526d56c3"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:29:52.131835", "stderr": "", "model_class": "Job", "params": {"sourcename": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "type": "{\"__current_case__\": 1, \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067959, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}, \"type_select\": \"genome\"}", "action": "{\"__current_case__\": 0, \"action_select\": \"windowsize\", \"step_size\": {\"__current_case__\": 1, \"step_size_select\": \"no\"}, \"windowsize\": \"1000000\"}", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "8812c9487bba5108", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.27.1", "time_seconds": 61.98594880104065, "inputs": {"type|genome_file_opts|genome": {"src": "hda", "id": "f9552ad668b999ab"}, "action|step_size|step_size_select": "yes", "type|type_select": "genome", "action|windowsize": "1000000", "type|genome_file_opts|genome_file_opts_selector": "hist", "action|step_size|step_size": "50000", "action|action_select": "windowsize"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.27.1", "update_time": "2019-06-25T22:30:22.402879", "inputs": {"type|genome": {"src": "hda", "id": "f9552ad668b999ab", "uuid": "a44d3215-bc15-41ad-8dc4-082634dca547"}}, "outputs": {"output": {"src": "hda", "id": "bbac5fc6af29ed43", "uuid": "3488ea49-f964-43f4-a6c0-78c8a468edf3"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:30:09.382183", "stderr": "", "model_class": "Job", "params": {"sourcename": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "type": "{\"__current_case__\": 1, \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067961, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}, \"type_select\": \"genome\"}", "action": "{\"__current_case__\": 0, \"action_select\": \"windowsize\", \"step_size\": {\"__current_case__\": 0, \"step_size\": \"50000\", \"step_size_select\": \"yes\"}, \"windowsize\": \"1000000\"}", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "e884c040a33e6aef", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.27.1", "time_seconds": 60.485053062438965, "inputs": {"type|genome_file_opts|genome": {"src": "hda", "id": "f9552ad668b999ab"}, "type|genome_file_opts|genome_file_opts_selector": "hist", "type|type_select": "genome", "action|number": "100", "action|step_size": "10000", "action|action_select": "number"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.27.1", "update_time": "2019-06-25T22:30:35.034411", "inputs": {"type|genome": {"src": "hda", "id": "f9552ad668b999ab", "uuid": "a44d3215-bc15-41ad-8dc4-082634dca547"}}, "outputs": {"output": {"src": "hda", "id": "b7348911f3873503", "uuid": "bd82dd5d-7f89-486b-8deb-77c727eaa11f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:30:22.262412", "stderr": "", "model_class": "Job", "params": {"sourcename": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "type": "{\"__current_case__\": 1, \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067961, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}, \"type_select\": \"genome\"}", "action": "{\"__current_case__\": 1, \"action_select\": \"number\", \"number\": \"100\", \"step_size\": \"10000\"}", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "17121e13c1f4ecda", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.27.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.27.1", "time_seconds": 66.57456278800964, "inputs": {"action|number": "15", "type|input": {"src": "hda", "id": "43b533bdb1cb8c6a"}, "type|type_select": "bed", "action|step_size": "100", "action|action_select": "number"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.27.1", "update_time": "2019-06-25T22:30:39.459989", "inputs": {"input": {"src": "hda", "id": "43b533bdb1cb8c6a", "uuid": "ca50125c-6a31-4d22-888f-7337030c0548"}}, "outputs": {"output": {"src": "hda", "id": "0d34f36cf36aa354", "uuid": "5bb7d62f-903a-46ac-bc3d-12060d64cc5c"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:30:25.394415", "stderr": "", "model_class": "Job", "params": {"sourcename": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "type": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 1067962, \"src\": \"hda\"}]}, \"type_select\": \"bed\"}", "action": "{\"__current_case__\": 1, \"action_select\": \"number\", \"number\": \"15\", \"step_size\": \"100\"}", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "f21660d17e0f73ec", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.27.1-3", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.27.1.2", "time_seconds": 6.9605491161346436, "inputs": {"inputB": {"src": "hda", "id": "088bfbab3a4e200a"}, "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "mean", "inputA": {"src": "hda", "id": "129b948c1ed25994"}}, "tool_version": "2.27.1.2", "test_index": 0, "execution_problem": "Error creating a job for these tool inputs - parameter 'col': an invalid option (u'5') was selected (valid options: 1,3,2)"}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.27.1.2-0", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.27.1.2", "time_seconds": 7.079025030136108, "inputs": {"inputB": {"src": "hda", "id": "afe9dff44657a034"}, "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse", "inputA": {"src": "hda", "id": "129b948c1ed25994"}}, "tool_version": "2.27.1.2", "test_index": 1, "execution_problem": "Error creating a job for these tool inputs - parameter 'col': an invalid option (u'5') was selected (valid options: 1,3,2)"}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.27.1.2-1", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.27.1.2", "time_seconds": 27.39064311981201, "inputs": {"inputB": {"src": "hda", "id": "afe9dff44657a034"}, "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse", "inputA": {"src": "hda", "id": "129b948c1ed25994"}, "strand": "-S"}, "tool_version": "2.27.1.2", "output_problems": ["Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.27.1.2", "update_time": "2019-06-25T22:31:02.949439", "inputs": {"inputB": {"src": "hda", "id": "afe9dff44657a034", "uuid": "a83fd1f4-41ac-4c5f-8f5a-9bb6b77352e2"}, "inputA": {"src": "hda", "id": "129b948c1ed25994", "uuid": "94131e62-293e-4cec-8ed1-d7bea47bbb10"}}, "outputs": {"output": {"src": "hda", "id": "54ac6b24910530bb", "uuid": "0f677b84-cc3d-4eaa-aba1-f8f4ac474c3f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": null, "job_stderr": null, "tool_stderr": "", "state": "error", "create_time": "2019-06-25T22:31:01.113989", "stderr": "", "model_class": "Job", "params": {"reciprocal": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "header": "\"false\"", "split": "\"false\"", "genome": "{\"__current_case__\": 1, \"genome_choose\": \"\"}", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"collapse\"}]", "strand": "\"-S\"", "overlap": "\"1e-09\""}, "tool_stdout": "", "job_messages": null, "id": "e7ecc33730a5fc2c", "job_stdout": null}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.27.1.2-2", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.27.1.2", "time_seconds": 33.05193209648132, "inputs": {"inputB": {"src": "hda", "id": "afe9dff44657a034"}, "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse", "inputA": {"src": "hda", "id": "129b948c1ed25994"}, "strand": "-s"}, "tool_version": "2.27.1.2", "output_problems": ["Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.27.1.2", "update_time": "2019-06-25T22:31:09.404167", "inputs": {"inputB": {"src": "hda", "id": "afe9dff44657a034", "uuid": "a83fd1f4-41ac-4c5f-8f5a-9bb6b77352e2"}, "inputA": {"src": "hda", "id": "129b948c1ed25994", "uuid": "94131e62-293e-4cec-8ed1-d7bea47bbb10"}}, "outputs": {"output": {"src": "hda", "id": "627169c17e0aade0", "uuid": "60e88ea2-c17e-46fd-95df-9cefe8692e68"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": null, "job_stderr": null, "tool_stderr": "", "state": "error", "create_time": "2019-06-25T22:31:07.600798", "stderr": "", "model_class": "Job", "params": {"reciprocal": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "header": "\"false\"", "split": "\"false\"", "genome": "{\"__current_case__\": 1, \"genome_choose\": \"\"}", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"collapse\"}]", "strand": "\"-s\"", "overlap": "\"1e-09\""}, "tool_stdout": "", "job_messages": null, "id": "e5c2caf7bfb072c6", "job_stdout": null}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.27.1.2-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.27.1", "time_seconds": 59.55265498161316, "inputs": {"input": {"src": "hda", "id": "4585d5b699d2221a"}, "fasta": {"src": "hda", "id": "62af209b055d2b0c"}, "soft": false}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.27.1", "update_time": "2019-06-25T22:32:36.168744", "inputs": {"input": {"src": "hda", "id": "4585d5b699d2221a", "uuid": "c8cb7acb-9220-413e-9c02-217ea7efbbd9"}, "fasta": {"src": "hda", "id": "62af209b055d2b0c", "uuid": "c283fb99-b940-41d6-bf34-68160d8f3bc1"}}, "outputs": {"output": {"src": "hda", "id": "4ce5a2fe2da4defe", "uuid": "5a08868e-c0f9-43ef-a79a-08e42d420547"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:32:22.737691", "stderr": "", "model_class": "Job", "params": {"soft": "\"false\"", "fullheader": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "mc": "\"N\""}, "tool_stdout": "", "job_messages": [], "id": "96a36eb253a419d5", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.27.1", "time_seconds": 66.79024386405945, "inputs": {"input": {"src": "hda", "id": "4585d5b699d2221a"}, "fasta": {"src": "hda", "id": "62af209b055d2b0c"}, "soft": true}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.27.1", "update_time": "2019-06-25T22:32:40.184974", "inputs": {"input": {"src": "hda", "id": "4585d5b699d2221a", "uuid": "c8cb7acb-9220-413e-9c02-217ea7efbbd9"}, "fasta": {"src": "hda", "id": "62af209b055d2b0c", "uuid": "c283fb99-b940-41d6-bf34-68160d8f3bc1"}}, "outputs": {"output": {"src": "hda", "id": "8a72d63ce47f8a72", "uuid": "385289aa-a4d7-4a4f-9285-7574c6aa41d4"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:32:26.058390", "stderr": "", "model_class": "Job", "params": {"soft": "\"true\"", "fullheader": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "mc": "\"N\""}, "tool_stdout": "", "job_messages": [], "id": "25589aedfad2131f", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.27.1", "time_seconds": 68.25821304321289, "inputs": {"input": {"src": "hda", "id": "4585d5b699d2221a"}, "fasta": {"src": "hda", "id": "62af209b055d2b0c"}, "soft": true, "fullheader": true}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.27.1", "update_time": "2019-06-25T22:32:50.008955", "inputs": {"input": {"src": "hda", "id": "4585d5b699d2221a", "uuid": "c8cb7acb-9220-413e-9c02-217ea7efbbd9"}, "fasta": {"src": "hda", "id": "62af209b055d2b0c", "uuid": "c283fb99-b940-41d6-bf34-68160d8f3bc1"}}, "outputs": {"output": {"src": "hda", "id": "5a49c7e7cd001067", "uuid": "2bbee742-ffc5-48a1-89e2-0b1cb50dcec6"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:32:36.153844", "stderr": "", "model_class": "Job", "params": {"soft": "\"true\"", "fullheader": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "mc": "\"N\""}, "tool_stdout": "", "job_messages": [], "id": "18a8a9120b1de5fe", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.27.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1", "time_seconds": 58.40232515335083, "inputs": {"input": {"src": "hda", "id": "bd3f29c2a838818c"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1", "update_time": "2019-06-25T22:24:23.435598", "inputs": {"input": {"src": "hda", "id": "bd3f29c2a838818c", "uuid": "cc8c693d-a633-409a-a524-68a7e93b934c"}}, "outputs": {"output": {"src": "hda", "id": "57e7e9fe5a929a61", "uuid": "4fb8b483-a032-43a9-8fd7-a87ff5ba6517"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:24:10.287170", "stderr": "", "model_class": "Job", "params": {"distance": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "header": "\"false\"", "c_and_o_argument_repeat": "[]", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "a068afddd14911df", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1", "time_seconds": 65.38174700737, "inputs": {"input": {"src": "hda", "id": "e9ec983fcfcedc12"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1", "update_time": "2019-06-25T22:24:30.898319", "inputs": {"input": {"src": "hda", "id": "e9ec983fcfcedc12", "uuid": "9238726c-ddc1-4aab-840c-995782d06cac"}}, "outputs": {"output": {"src": "hda", "id": "21496b00936c3c60", "uuid": "74e2f31f-a1a4-412b-87dd-c306ec48df42"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:24:17.262677", "stderr": "", "model_class": "Job", "params": {"distance": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "header": "\"false\"", "c_and_o_argument_repeat": "[]", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "8ca32d74d39c92ed", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1", "time_seconds": 65.16942715644836, "inputs": {"input": {"src": "hda", "id": "fb7f2207e07cd5ed"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1", "update_time": "2019-06-25T22:24:39.181391", "inputs": {"input": {"src": "hda", "id": "fb7f2207e07cd5ed", "uuid": "ca025929-7928-4689-88ed-3d1845ad1f36"}}, "outputs": {"output": {"src": "hda", "id": "9474be8599596fb0", "uuid": "2b860f3e-1968-42de-a1f3-af96caa7f636"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:24:25.328363", "stderr": "", "model_class": "Job", "params": {"distance": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "header": "\"false\"", "c_and_o_argument_repeat": "[]", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "09764237e34a83be", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1", "time_seconds": 60.74913287162781, "inputs": {"input": {"src": "hda", "id": "6f8db1d509dcae62"}, "distance": "1000"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1", "update_time": "2019-06-25T22:24:58.488268", "inputs": {"input": {"src": "hda", "id": "6f8db1d509dcae62", "uuid": "cfc54816-52c4-4095-81c5-afc9ceab3bad"}}, "outputs": {"output": {"src": "hda", "id": "71a145428ddca891", "uuid": "7bda7e6b-2565-40fa-a8c2-b43f7aa02137"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:24:45.862534", "stderr": "", "model_class": "Job", "params": {"distance": "\"1000\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "header": "\"false\"", "c_and_o_argument_repeat": "[]", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "43cad42248d7148a", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1", "time_seconds": 65.35288906097412, "inputs": {"input": {"src": "hda", "id": "6f8db1d509dcae62"}, "c_and_o_argument_repeat_0|operation": "count", "distance": "1000", "c_and_o_argument_repeat_0|col": "1"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1", "update_time": "2019-06-25T22:25:07.958346", "inputs": {"input": {"src": "hda", "id": "6f8db1d509dcae62", "uuid": "cfc54816-52c4-4095-81c5-afc9ceab3bad"}}, "outputs": {"output": {"src": "hda", "id": "ae129ba325d35dc2", "uuid": "243ddd25-4250-4ddb-9493-fac3554f9d39"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:24:52.667723", "stderr": "", "model_class": "Job", "params": {"distance": "\"1000\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "header": "\"false\"", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"1\", \"operation\": \"count\"}]", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "59477a11a5cc336b", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.27.1-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.27.1+galaxy1", "time_seconds": 65.50642800331116, "inputs": {"tag|inputs": [{"src": "hda", "id": "a41324a1da035be7"}, {"src": "hda", "id": "a0f97f5cf7b3368a"}, {"src": "hda", "id": "ffdc0e30e520da67"}], "empty|empty_selector": "", "tag|tag_select": "tag"}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:22:41.278010", "inputs": {"inputs2": {"src": "hda", "id": "a0f97f5cf7b3368a", "uuid": "401f6674-a8bc-48da-8425-eefdd0c0ab7a"}, "inputs3": {"src": "hda", "id": "ffdc0e30e520da67", "uuid": "f41b5837-d6e7-423c-811f-62264aa9925d"}, "inputs1": {"src": "hda", "id": "a41324a1da035be7", "uuid": "3200d1e6-286e-483f-ad94-992f95b2bca0"}, "inputs": {"src": "hda", "id": "a41324a1da035be7", "uuid": "3200d1e6-286e-483f-ad94-992f95b2bca0"}}, "outputs": {"output": {"src": "hda", "id": "33fbcf7630372f49", "uuid": "8e7b2376-5baa-4e8e-98a3-749363e89708"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:22:24.984141", "stderr": "", "model_class": "Job", "params": {"header": "\"false\"", "filler": "\"N/A\"", "dbkey": "\"?\"", "cluster": "\"false\"", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 1067859, \"src\": \"hda\"}, {\"id\": 1067865, \"src\": \"hda\"}, {\"id\": 1067868, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "empty": "{\"__current_case__\": 1, \"empty_selector\": \"\"}"}, "tool_stdout": "", "job_messages": [], "id": "eb0f41a731f69ccd", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.27.1+galaxy1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.27.1+galaxy1", "time_seconds": 65.61888098716736, "inputs": {"tag|inputs": [{"src": "hda", "id": "a41324a1da035be7"}, {"src": "hda", "id": "a0f97f5cf7b3368a"}, {"src": "hda", "id": "ffdc0e30e520da67"}], "empty|empty_selector": "", "tag|tag_select": "tag", "header": true}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:22:44.428618", "inputs": {"inputs2": {"src": "hda", "id": "a0f97f5cf7b3368a", "uuid": "401f6674-a8bc-48da-8425-eefdd0c0ab7a"}, "inputs3": {"src": "hda", "id": "ffdc0e30e520da67", "uuid": "f41b5837-d6e7-423c-811f-62264aa9925d"}, "inputs1": {"src": "hda", "id": "a41324a1da035be7", "uuid": "3200d1e6-286e-483f-ad94-992f95b2bca0"}, "inputs": {"src": "hda", "id": "a41324a1da035be7", "uuid": "3200d1e6-286e-483f-ad94-992f95b2bca0"}}, "outputs": {"output": {"src": "hda", "id": "455b34cc057ef92f", "uuid": "e1b77526-980d-498b-931a-7ab11c1cc1a7"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:22:30.754978", "stderr": "", "model_class": "Job", "params": {"header": "\"true\"", "filler": "\"N/A\"", "dbkey": "\"?\"", "cluster": "\"false\"", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 1067859, \"src\": \"hda\"}, {\"id\": 1067865, \"src\": \"hda\"}, {\"id\": 1067868, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "empty": "{\"__current_case__\": 1, \"empty_selector\": \"\"}"}, "tool_stdout": "", "job_messages": [], "id": "b33cf64fcbee0919", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.27.1+galaxy1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.27.1+galaxy1", "time_seconds": 65.03546094894409, "inputs": {"tag|inputs": [{"src": "hda", "id": "a41324a1da035be7"}, {"src": "hda", "id": "a0f97f5cf7b3368a"}, {"src": "hda", "id": "ffdc0e30e520da67"}], "empty|genome_file_opts|genome": {"src": "hda", "id": "c6333d27177f37c4"}, "empty|genome_file_opts|genome_file_opts_selector": "hist", "empty|empty_selector": "-empty", "tag|tag_select": "tag"}, "tool_version": "2.27.1+galaxy1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.27.1+galaxy1", "update_time": "2019-06-25T22:23:11.624717", "inputs": {"inputs2": {"src": "hda", "id": "a0f97f5cf7b3368a", "uuid": "401f6674-a8bc-48da-8425-eefdd0c0ab7a"}, "inputs3": {"src": "hda", "id": "ffdc0e30e520da67", "uuid": "f41b5837-d6e7-423c-811f-62264aa9925d"}, "empty|genome": {"src": "hda", "id": "c6333d27177f37c4", "uuid": "89444228-1e2c-41aa-84e8-5c9d6bdba98b"}, "inputs1": {"src": "hda", "id": "a41324a1da035be7", "uuid": "3200d1e6-286e-483f-ad94-992f95b2bca0"}, "inputs": {"src": "hda", "id": "a41324a1da035be7", "uuid": "3200d1e6-286e-483f-ad94-992f95b2bca0"}}, "outputs": {"output": {"src": "hda", "id": "b543498597d4018a", "uuid": "35ba661d-d533-473f-99f4-8f07df447d27"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:22:57.465862", "stderr": "", "model_class": "Job", "params": {"header": "\"false\"", "filler": "\"N/A\"", "dbkey": "\"?\"", "cluster": "\"false\"", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 1067859, \"src\": \"hda\"}, {\"id\": 1067865, \"src\": \"hda\"}, {\"id\": 1067868, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "empty": "{\"__current_case__\": 0, \"empty_selector\": \"-empty\", \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067869, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}}"}, "tool_stdout": "", "job_messages": [], "id": "97253629c8bf6c16", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.27.1+galaxy1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.27.1", "time_seconds": 66.53279709815979, "inputs": {"input": {"src": "hda", "id": "a78a8142eff42d94"}, "fasta": {"src": "hda", "id": "7c4b042b0184a242"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.27.1", "update_time": "2019-06-25T22:32:13.916188", "inputs": {"input": {"src": "hda", "id": "a78a8142eff42d94", "uuid": "158a8067-6f4b-4c43-be03-96a6c3cbf49e"}, "fasta": {"src": "hda", "id": "7c4b042b0184a242", "uuid": "06e7eb33-2ef6-4e3c-bead-52e9c262de7b"}}, "outputs": {"output": {"src": "hda", "id": "8cf9460a6a7782e6", "uuid": "3355d7a7-7820-4112-86e6-bc1952e75cb4"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "index file /mnt/galaxy/files/000/924/dataset_924867.dat.fai not found, generating...\n", "state": "ok", "create_time": "2019-06-25T22:31:54.176562", "stderr": "index file /mnt/galaxy/files/000/924/dataset_924867.dat.fai not found, generating...\n", "model_class": "Job", "params": {"C": "\"false\"", "seq": "\"false\"", "pattern": "\"\"", "dbkey": "\"?\"", "s": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "55256bdc0a0bb6b5", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.27.1", "time_seconds": 66.99178194999695, "inputs": {"input": {"src": "hda", "id": "4585d5b699d2221a"}, "fasta": {"src": "hda", "id": "7842f55a84bd596a"}, "seq": true}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.27.1", "update_time": "2019-06-25T22:32:25.625938", "inputs": {"input": {"src": "hda", "id": "4585d5b699d2221a", "uuid": "c8cb7acb-9220-413e-9c02-217ea7efbbd9"}, "fasta": {"src": "hda", "id": "7842f55a84bd596a", "uuid": "89fb2414-a4cd-425e-ab9c-c43058a4e045"}}, "outputs": {"output": {"src": "hda", "id": "9d27007282d37356", "uuid": "c9e3f0e6-c599-428b-addb-15a702a8c0e3"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "index file /mnt/galaxy/files/000/924/dataset_924873.dat.fai not found, generating...\n", "state": "ok", "create_time": "2019-06-25T22:32:05.881387", "stderr": "index file /mnt/galaxy/files/000/924/dataset_924873.dat.fai not found, generating...\n", "model_class": "Job", "params": {"C": "\"false\"", "seq": "\"true\"", "pattern": "\"\"", "dbkey": "\"?\"", "s": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "496d3df62d8dd1f5", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.27.1", "time_seconds": 66.64244508743286, "inputs": {"input": {"src": "hda", "id": "4585d5b699d2221a"}, "fasta": {"src": "hda", "id": "62af209b055d2b0c"}, "seq": true, "pattern": "TAC"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.27.1", "update_time": "2019-06-25T22:32:36.193647", "inputs": {"input": {"src": "hda", "id": "4585d5b699d2221a", "uuid": "c8cb7acb-9220-413e-9c02-217ea7efbbd9"}, "fasta": {"src": "hda", "id": "62af209b055d2b0c", "uuid": "c283fb99-b940-41d6-bf34-68160d8f3bc1"}}, "outputs": {"output": {"src": "hda", "id": "8f94cd0224f86a60", "uuid": "6ca17916-9f5d-4c49-94fb-65f55009c76a"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "index file /mnt/galaxy/files/000/924/dataset_924876.dat.fai not found, generating...\n", "state": "ok", "create_time": "2019-06-25T22:32:17.508360", "stderr": "index file /mnt/galaxy/files/000/924/dataset_924876.dat.fai not found, generating...\n", "model_class": "Job", "params": {"C": "\"false\"", "seq": "\"true\"", "pattern": "\"TAC\"", "dbkey": "\"?\"", "s": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "186941250c584fd8", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.27.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_overlapbed/2.27.1", "time_seconds": 31.768161058425903, "inputs": {"input": {"src": "hda", "id": "64cfb7db95800b1e"}, "cols": ["2", "3", "5", "6"]}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_overlapbed/2.27.1", "update_time": "2019-06-25T22:34:11.991199", "inputs": {"input": {"src": "hda", "id": "64cfb7db95800b1e", "uuid": "dc31975a-3e42-4485-964a-71fa38657fca"}}, "outputs": {"output": {"src": "hda", "id": "6620f3b3e3c41cea", "uuid": "3164854c-a2cd-4554-8357-bb79f434313a"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:33:59.185699", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "cols": "[\"2\", \"3\", \"5\", \"6\"]", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "f88759be515aacf1", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_overlapbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed/2.27.1", "time_seconds": 46.397186040878296, "inputs": {"genome_file_opts|genome_file_opts_selector": "hist", "length": "5", "intervals": "3", "seed|seed_choose": "False", "genome_file_opts|genome": {"src": "hda", "id": "e29807a05162e316"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed/2.27.1", "update_time": "2019-06-25T22:23:11.861758", "inputs": {"genome": {"src": "hda", "id": "e29807a05162e316", "uuid": "56587a74-4630-4fe2-8461-2eae86c864c2"}}, "outputs": {"output": {"src": "hda", "id": "71c49573a3e298cb", "uuid": "fd131995-eeb4-4c00-ae00-e903bdccbeff"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:22:57.890871", "stderr": "", "model_class": "Job", "params": {"genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067871, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "dbkey": "\"?\"", "intervals": "\"3\"", "length": "\"5\"", "seed": "{\"__current_case__\": 1, \"seed_choose\": \"False\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "4eafa63e2f0312f8", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_reldistbed/2.27.1", "time_seconds": 58.22112488746643, "inputs": {"inputB": {"src": "hda", "id": "94231bba41f2be07"}, "inputA": {"src": "hda", "id": "94231bba41f2be07"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_reldistbed/2.27.1", "update_time": "2019-06-25T22:25:27.166451", "inputs": {"inputB": {"src": "hda", "id": "94231bba41f2be07", "uuid": "f08a0477-628a-4177-846a-239c27ebfc4e"}, "inputA": {"src": "hda", "id": "94231bba41f2be07", "uuid": "f08a0477-628a-4177-846a-239c27ebfc4e"}}, "outputs": {"output": {"src": "hda", "id": "85403726255a7fdf", "uuid": "15d6fdcd-029f-493a-afa1-2bea70691c8d"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:25:15.038500", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "detail": "\"false\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "472cfad7955eaead", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_reldistbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.27.1", "time_seconds": 66.41231918334961, "inputs": {"inputA": {"src": "hda", "id": "e3df0f06a852afbf"}, "genome_file_opts|genome": {"src": "hda", "id": "4053f32299030e3c"}, "genome_file_opts|genome_file_opts_selector": "hist", "seed|seed_choose": "True", "seed|seed": "1", "chrom": false}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.27.1", "update_time": "2019-06-25T22:28:24.252425", "inputs": {"inputA": {"src": "hda", "id": "e3df0f06a852afbf", "uuid": "491898fa-b36b-402a-bae0-27b23a441d42"}, "genome": {"src": "hda", "id": "4053f32299030e3c", "uuid": "c5e24c30-53f0-466b-96cf-b784fd84d21c"}}, "outputs": {"output": {"src": "hda", "id": "755ca704779ee8e7", "uuid": "34b7403d-9434-48ec-b397-cc59240b8405"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:28:04.865116", "stderr": "", "model_class": "Job", "params": {"allow_beyond": "\"false\"", "bedpe": "\"false\"", "add_bed": "{\"__current_case__\": 0, \"add_bed_select\": \"no\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067933, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "dbkey": "\"?\"", "chromfirst": "\"false\"", "no_overlap": "\"false\"", "maxtries": "\"1000\"", "chrom": "\"false\"", "seed": "{\"__current_case__\": 0, \"seed\": \"1\", \"seed_choose\": \"True\"}"}, "tool_stdout": "", "job_messages": [], "id": "781320472061710e", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.27.1", "time_seconds": 65.44058609008789, "inputs": {"inputA": {"src": "hda", "id": "66c1e7e36544ffea"}, "genome_file_opts|genome": {"src": "hda", "id": "986dbfd48cc706a5"}, "genome_file_opts|genome_file_opts_selector": "hist", "seed|seed_choose": "True", "seed|seed": "1", "chrom": true}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.27.1", "update_time": "2019-06-25T22:28:39.826364", "inputs": {"inputA": {"src": "hda", "id": "66c1e7e36544ffea", "uuid": "52fed673-7cfb-4632-965a-b7fdef16cbc1"}, "genome": {"src": "hda", "id": "986dbfd48cc706a5", "uuid": "fdff9539-19bf-4526-b27c-7f84b5995cce"}}, "outputs": {"output": {"src": "hda", "id": "933010db26959b42", "uuid": "11d9e120-8c0e-45a8-8c0c-c2a49cbc760c"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:28:23.237225", "stderr": "", "model_class": "Job", "params": {"allow_beyond": "\"false\"", "bedpe": "\"false\"", "add_bed": "{\"__current_case__\": 0, \"add_bed_select\": \"no\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067938, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "dbkey": "\"?\"", "chromfirst": "\"false\"", "no_overlap": "\"false\"", "maxtries": "\"1000\"", "chrom": "\"true\"", "seed": "{\"__current_case__\": 0, \"seed\": \"1\", \"seed_choose\": \"True\"}"}, "tool_stdout": "", "job_messages": [], "id": "acfb8e74ecb5444c", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.27.1", "time_seconds": 65.84245610237122, "inputs": {"genome_file_opts|genome_file_opts_selector": "hist", "genome_file_opts|genome": {"src": "hda", "id": "5e33d1f66fbfa2d0"}, "seed|seed_choose": "True", "seed|seed": "1", "inputA": {"src": "hda", "id": "66c1e7e36544ffea"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.27.1", "update_time": "2019-06-25T22:28:53.514454", "inputs": {"inputA": {"src": "hda", "id": "66c1e7e36544ffea", "uuid": "52fed673-7cfb-4632-965a-b7fdef16cbc1"}, "genome": {"src": "hda", "id": "5e33d1f66fbfa2d0", "uuid": "0e4ba7b3-33d2-4c26-b07d-9a2041ca033f"}}, "outputs": {"output": {"src": "hda", "id": "f7f078feb63cbed0", "uuid": "da71bf1b-1bba-4f91-b154-1d564763f225"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:28:38.885244", "stderr": "", "model_class": "Job", "params": {"allow_beyond": "\"false\"", "bedpe": "\"false\"", "add_bed": "{\"__current_case__\": 0, \"add_bed_select\": \"no\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067941, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "dbkey": "\"?\"", "chromfirst": "\"false\"", "no_overlap": "\"false\"", "maxtries": "\"1000\"", "chrom": "\"false\"", "seed": "{\"__current_case__\": 0, \"seed\": \"1\", \"seed_choose\": \"True\"}"}, "tool_stdout": "", "job_messages": [], "id": "ae3f1f131ca9aa4a", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.27.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.27.1", "time_seconds": 65.60834813117981, "inputs": {"allow_beyond": true, "genome_file_opts|genome": {"src": "hda", "id": "5e33d1f66fbfa2d0"}, "genome_file_opts|genome_file_opts_selector": "hist", "seed|seed_choose": "True", "seed|seed": "1", "inputA": {"src": "hda", "id": "66c1e7e36544ffea"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.27.1", "update_time": "2019-06-25T22:29:01.165683", "inputs": {"inputA": {"src": "hda", "id": "66c1e7e36544ffea", "uuid": "52fed673-7cfb-4632-965a-b7fdef16cbc1"}, "genome": {"src": "hda", "id": "5e33d1f66fbfa2d0", "uuid": "0e4ba7b3-33d2-4c26-b07d-9a2041ca033f"}}, "outputs": {"output": {"src": "hda", "id": "620b2765f34c3b18", "uuid": "11697c77-285f-4525-b991-731c0df5e1f0"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:28:46.801709", "stderr": "", "model_class": "Job", "params": {"allow_beyond": "\"true\"", "bedpe": "\"false\"", "add_bed": "{\"__current_case__\": 0, \"add_bed_select\": \"no\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067941, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "dbkey": "\"?\"", "chromfirst": "\"false\"", "no_overlap": "\"false\"", "maxtries": "\"1000\"", "chrom": "\"false\"", "seed": "{\"__current_case__\": 0, \"seed\": \"1\", \"seed_choose\": \"True\"}"}, "tool_stdout": "", "job_messages": [], "id": "e12d8921626e4b0c", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.27.1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.27.1", "time_seconds": 65.29749703407288, "inputs": {"genome_file_opts|genome_file_opts_selector": "hist", "inputA": {"src": "hda", "id": "94231bba41f2be07"}, "addition|b": "5", "addition|addition_select": "b", "genome_file_opts|genome": {"src": "hda", "id": "a61144df2377b3a7"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.27.1", "update_time": "2019-06-25T22:25:48.014931", "inputs": {"inputA": {"src": "hda", "id": "94231bba41f2be07", "uuid": "f08a0477-628a-4177-846a-239c27ebfc4e"}, "genome": {"src": "hda", "id": "a61144df2377b3a7", "uuid": "0ebf691a-e408-4097-96b1-ed23f3bd0848"}}, "outputs": {"output": {"src": "hda", "id": "b733a487cda64972", "uuid": "e9ce3be1-7a50-462f-8875-cef4d4676fd2"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:25:34.001389", "stderr": "", "model_class": "Job", "params": {"addition": "{\"__current_case__\": 0, \"addition_select\": \"b\", \"b\": \"5\"}", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067906, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "pct": "\"false\"", "header": "\"false\"", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "01e2fd70a47e0191", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.27.1", "time_seconds": 65.54857301712036, "inputs": {"addition|l": "2", "addition|addition_select": "lr", "genome_file_opts|genome": {"src": "hda", "id": "a61144df2377b3a7"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|r": "3", "inputA": {"src": "hda", "id": "94231bba41f2be07"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.27.1", "update_time": "2019-06-25T22:25:51.122736", "inputs": {"inputA": {"src": "hda", "id": "94231bba41f2be07", "uuid": "f08a0477-628a-4177-846a-239c27ebfc4e"}, "genome": {"src": "hda", "id": "a61144df2377b3a7", "uuid": "0ebf691a-e408-4097-96b1-ed23f3bd0848"}}, "outputs": {"output": {"src": "hda", "id": "715746984ad1e6de", "uuid": "2ce0975a-ea5a-4e82-bfe0-2b8eecaf2a67"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:25:36.941345", "stderr": "", "model_class": "Job", "params": {"addition": "{\"__current_case__\": 1, \"addition_select\": \"lr\", \"l\": \"2\", \"r\": \"3\"}", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1067906, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "pct": "\"false\"", "header": "\"false\"", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "strand": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "5b3d8e2fa023f4aa", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.27.1", "time_seconds": 65.81098508834839, "inputs": {"input": {"src": "hda", "id": "ed13fdca046f8966"}, "option": ""}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.27.1", "update_time": "2019-06-25T22:23:52.227209", "inputs": {"input": {"src": "hda", "id": "ed13fdca046f8966", "uuid": "f442866e-1f00-4dfc-9845-81f7657dd009"}}, "outputs": {"output": {"src": "hda", "id": "e239775c086b8539", "uuid": "5222b852-7350-49eb-b051-28256e00a0a7"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:23:37.818587", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "option": "\"\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "984b8065a0b6da2e", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_spacingbed/2.27.1", "time_seconds": 59.62192106246948, "inputs": {"input": {"src": "hda", "id": "a88191d24413a23d"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_spacingbed/2.27.1", "update_time": "2019-06-25T22:31:29.400032", "inputs": {"input": {"src": "hda", "id": "a88191d24413a23d", "uuid": "3ac52bb5-6fc5-4ab7-a65a-9ef82f866e82"}}, "outputs": {"output": {"src": "hda", "id": "bec54ac2813bc08f", "uuid": "a213c468-0df5-44d2-8426-9b821caacaba"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:31:17.444655", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "5b061f74aebe5853", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_spacingbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.27.1", "time_seconds": 64.81809496879578, "inputs": {"inputB": {"src": "hda", "id": "0bcccf25157dd9a0"}, "inputA": {"src": "hda", "id": "19d55af71f402f56"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.27.1", "update_time": "2019-06-25T22:27:21.634661", "inputs": {"inputB": {"src": "hda", "id": "0bcccf25157dd9a0", "uuid": "b93a7d55-f828-4b66-b9e0-c04088333e0d"}, "inputA": {"src": "hda", "id": "19d55af71f402f56", "uuid": "2425c5c5-c7e7-45a4-b8c9-c3577f7559e5"}}, "outputs": {"output": {"src": "hda", "id": "ddf525432af135e7", "uuid": "ff414ab2-2d64-49e3-a424-be673073fa53"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:27:07.670060", "stderr": "", "model_class": "Job", "params": {"removeIfOverlap": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "overlap": "\"1e-09\"", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "d6ef75eb42a8d2e6", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.27.1", "time_seconds": 57.94401216506958, "inputs": {"inputB": {"src": "hda", "id": "cccbf16b7b402940"}, "inputA": {"src": "hda", "id": "19d55af71f402f56"}, "overlap": "0.80"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.27.1", "update_time": "2019-06-25T22:27:39.967227", "inputs": {"inputB": {"src": "hda", "id": "cccbf16b7b402940", "uuid": "e8024456-d642-42b0-8581-cd2a70d92914"}, "inputA": {"src": "hda", "id": "19d55af71f402f56", "uuid": "2425c5c5-c7e7-45a4-b8c9-c3577f7559e5"}}, "outputs": {"output": {"src": "hda", "id": "b9df0c1f9db15d4e", "uuid": "fef3fbac-606e-471d-b0b5-cdeafeede9da"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:27:27.386394", "stderr": "", "model_class": "Job", "params": {"removeIfOverlap": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "overlap": "\"0.8\"", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "b8f752a784d17869", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.27.1", "time_seconds": 64.7937080860138, "inputs": {"inputB": {"src": "hda", "id": "cccbf16b7b402940"}, "removeIfOverlap": "-A", "inputA": {"src": "hda", "id": "19d55af71f402f56"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.27.1", "update_time": "2019-06-25T22:27:42.588392", "inputs": {"inputB": {"src": "hda", "id": "cccbf16b7b402940", "uuid": "e8024456-d642-42b0-8581-cd2a70d92914"}, "inputA": {"src": "hda", "id": "19d55af71f402f56", "uuid": "2425c5c5-c7e7-45a4-b8c9-c3577f7559e5"}}, "outputs": {"output": {"src": "hda", "id": "e8da409b1f633fbe", "uuid": "eea000bb-2d93-4c90-9307-774a496d327d"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:27:28.438166", "stderr": "", "model_class": "Job", "params": {"removeIfOverlap": "\"-A\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "overlap": "\"1e-09\"", "strand": "\"\""}, "tool_stdout": "", "job_messages": [], "id": "441163b9208479a1", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.27.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.27.1", "time_seconds": 59.546748876571655, "inputs": {"tag|inputs": [{"src": "hda", "id": "2054d919f9948eb9"}, {"src": "hda", "id": "a050b86728c8ec9d"}, {"src": "hda", "id": "a93ace0483244202"}], "empty|empty_selector": "", "tag|tag_select": "tag"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.27.1", "update_time": "2019-06-25T22:33:32.555754", "inputs": {"inputs2": {"src": "hda", "id": "a050b86728c8ec9d", "uuid": "b69bde49-1420-4e55-bc8b-74f2bbdbabfc"}, "inputs3": {"src": "hda", "id": "a93ace0483244202", "uuid": "f443727e-2bec-4bbd-a8ca-95543ce1caa3"}, "inputs1": {"src": "hda", "id": "2054d919f9948eb9", "uuid": "48f10f1b-5bfc-4ec2-8571-f6a691675b11"}, "inputs": {"src": "hda", "id": "2054d919f9948eb9", "uuid": "48f10f1b-5bfc-4ec2-8571-f6a691675b11"}}, "outputs": {"output": {"src": "hda", "id": "07e3431b7bf796d9", "uuid": "006f789f-8af5-4494-a09b-6abf04bd7554"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:33:10.804512", "stderr": "", "model_class": "Job", "params": {"filler": "\"N/A\"", "dbkey": "\"?\"", "header": "\"false\"", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 1068004, \"src\": \"hda\"}, {\"id\": 1068008, \"src\": \"hda\"}, {\"id\": 1068010, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "empty": "{\"__current_case__\": 1, \"empty_selector\": \"\"}"}, "tool_stdout": "", "job_messages": [], "id": "dce28ece6b27b458", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.27.1", "time_seconds": 44.92466187477112, "inputs": {"tag|inputs": [{"src": "hda", "id": "2054d919f9948eb9"}, {"src": "hda", "id": "a050b86728c8ec9d"}, {"src": "hda", "id": "5c0790238626dd4b"}], "empty|empty_selector": "", "tag|tag_select": "tag", "header": true}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.27.1", "update_time": "2019-06-25T22:33:39.266955", "inputs": {"inputs2": {"src": "hda", "id": "a050b86728c8ec9d", "uuid": "b69bde49-1420-4e55-bc8b-74f2bbdbabfc"}, "inputs3": {"src": "hda", "id": "5c0790238626dd4b", "uuid": "15b01997-1061-4d91-bede-edefada83c0c"}, "inputs1": {"src": "hda", "id": "2054d919f9948eb9", "uuid": "48f10f1b-5bfc-4ec2-8571-f6a691675b11"}, "inputs": {"src": "hda", "id": "2054d919f9948eb9", "uuid": "48f10f1b-5bfc-4ec2-8571-f6a691675b11"}}, "outputs": {"output": {"src": "hda", "id": "b9db5c0e3a219abd", "uuid": "6a143722-b932-4f4b-9a73-14ce5a23d5cd"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:33:25.707942", "stderr": "", "model_class": "Job", "params": {"filler": "\"N/A\"", "dbkey": "\"?\"", "header": "\"true\"", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 1068004, \"src\": \"hda\"}, {\"id\": 1068008, \"src\": \"hda\"}, {\"id\": 1068011, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "empty": "{\"__current_case__\": 1, \"empty_selector\": \"\"}"}, "tool_stdout": "", "job_messages": [], "id": "9bc9be2558e940ea", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.27.1", "time_seconds": 33.39104413986206, "inputs": {"tag|inputs": [{"src": "hda", "id": "2054d919f9948eb9"}, {"src": "hda", "id": "a050b86728c8ec9d"}, {"src": "hda", "id": "5c0790238626dd4b"}], "empty|genome_file_opts|genome": {"src": "hda", "id": "ab30654e37f22435"}, "empty|genome_file_opts|genome_file_opts_selector": "hist", "empty|empty_selector": "-empty", "tag|tag_select": "tag"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.27.1", "update_time": "2019-06-25T22:34:05.766946", "inputs": {"inputs2": {"src": "hda", "id": "a050b86728c8ec9d", "uuid": "b69bde49-1420-4e55-bc8b-74f2bbdbabfc"}, "inputs3": {"src": "hda", "id": "5c0790238626dd4b", "uuid": "15b01997-1061-4d91-bede-edefada83c0c"}, "empty|genome": {"src": "hda", "id": "ab30654e37f22435", "uuid": "f5e00bdf-d97f-4df5-a819-c73ac191ebfc"}, "inputs1": {"src": "hda", "id": "2054d919f9948eb9", "uuid": "48f10f1b-5bfc-4ec2-8571-f6a691675b11"}, "inputs": {"src": "hda", "id": "2054d919f9948eb9", "uuid": "48f10f1b-5bfc-4ec2-8571-f6a691675b11"}}, "outputs": {"output": {"src": "hda", "id": "5466391dbbd129e4", "uuid": "34c5e994-51a2-457b-851a-d766960e99a0"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:33:51.631948", "stderr": "", "model_class": "Job", "params": {"filler": "\"N/A\"", "dbkey": "\"?\"", "header": "\"false\"", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 1068004, \"src\": \"hda\"}, {\"id\": 1068008, \"src\": \"hda\"}, {\"id\": 1068011, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "empty": "{\"__current_case__\": 0, \"empty_selector\": \"-empty\", \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1068015, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}}"}, "tool_stdout": "", "job_messages": [], "id": "8fe58328fad0b409", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.27.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.27.1", "time_seconds": 33.212164878845215, "inputs": {"tag|bedgraphs_2|custom_name": "third", "tag|bedgraphs_2|input": {"src": "hda", "id": "5c0790238626dd4b"}, "empty|genome_file_opts|genome": {"src": "hda", "id": "ab30654e37f22435"}, "tag|bedgraphs_1|custom_name": "second", "tag|bedgraphs_0|input": {"src": "hda", "id": "2054d919f9948eb9"}, "empty|genome_file_opts|genome_file_opts_selector": "hist", "empty|empty_selector": "-empty", "tag|bedgraphs_0|custom_name": "first", "tag|bedgraphs_1|input": {"src": "hda", "id": "a050b86728c8ec9d"}, "tag|tag_select": "custom"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.27.1", "update_time": "2019-06-25T22:34:06.463855", "inputs": {"empty|genome": {"src": "hda", "id": "ab30654e37f22435", "uuid": "f5e00bdf-d97f-4df5-a819-c73ac191ebfc"}, "tag|bedgraphs_1|input": {"src": "hda", "id": "a050b86728c8ec9d", "uuid": "b69bde49-1420-4e55-bc8b-74f2bbdbabfc"}, "tag|bedgraphs_2|input": {"src": "hda", "id": "5c0790238626dd4b", "uuid": "15b01997-1061-4d91-bede-edefada83c0c"}, "tag|bedgraphs_0|input": {"src": "hda", "id": "2054d919f9948eb9", "uuid": "48f10f1b-5bfc-4ec2-8571-f6a691675b11"}}, "outputs": {"output": {"src": "hda", "id": "b70817fce3120cb4", "uuid": "e7bfd570-aef1-4f04-b43d-96049245e2e3"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:33:52.034281", "stderr": "", "model_class": "Job", "params": {"filler": "\"N/A\"", "dbkey": "\"?\"", "header": "\"false\"", "tag": "{\"__current_case__\": 1, \"bedgraphs\": [{\"__index__\": 0, \"custom_name\": \"first\", \"input\": {\"values\": [{\"id\": 1068004, \"src\": \"hda\"}]}}, {\"__index__\": 1, \"custom_name\": \"second\", \"input\": {\"values\": [{\"id\": 1068008, \"src\": \"hda\"}]}}, {\"__index__\": 2, \"custom_name\": \"third\", \"input\": {\"values\": [{\"id\": 1068011, \"src\": \"hda\"}]}}], \"tag_select\": \"custom\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "empty": "{\"__current_case__\": 0, \"empty_selector\": \"-empty\", \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 1068015, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}}"}, "tool_stdout": "", "job_messages": [], "id": "8d34c4df90797f6a", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.27.1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.27.1", "time_seconds": 65.82929515838623, "inputs": {"inputB": {"src": "hda", "id": "17b74d2a80ba1493"}, "inputA": {"src": "hda", "id": "d21fcf0631c44a06"}}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.27.1", "update_time": "2019-06-25T22:29:20.327523", "inputs": {"inputB": {"src": "hda", "id": "17b74d2a80ba1493", "uuid": "22e0307c-1d4f-4434-a299-d2f749cb6f47"}, "inputA": {"src": "hda", "id": "d21fcf0631c44a06", "uuid": "24806de9-96a0-44e9-81b4-e12be9f4a1cc"}}, "outputs": {"output": {"src": "hda", "id": "98119a67e2ca9e6d", "uuid": "9adeaf21-e353-4c8e-aa37-ea46242d62fc"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:29:06.497523", "stderr": "", "model_class": "Job", "params": {"addition": "{\"__current_case__\": 0, \"addition_select\": \"window\", \"w\": \"1000\"}", "strandB": "\"\"", "dbkey": "\"?\"", "number": "\"false\"", "header": "\"false\"", "nooverlaps": "\"false\"", "bed": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "original": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "039b2930b9ce84b9", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.27.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.27.1", "time_seconds": 58.9625289440155, "inputs": {"inputB": {"src": "hda", "id": "925e60572038494a"}, "addition|w": "5000", "inputA": {"src": "hda", "id": "d21fcf0631c44a06"}, "addition|addition_select": "window"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.27.1", "update_time": "2019-06-25T22:29:32.675948", "inputs": {"inputB": {"src": "hda", "id": "925e60572038494a", "uuid": "22ee3c37-1802-42c7-9149-ae74216e80be"}, "inputA": {"src": "hda", "id": "d21fcf0631c44a06", "uuid": "24806de9-96a0-44e9-81b4-e12be9f4a1cc"}}, "outputs": {"output": {"src": "hda", "id": "48db491f93c98070", "uuid": "103627ca-89a7-40c7-9337-bcd5ecd26ed2"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:29:19.861076", "stderr": "", "model_class": "Job", "params": {"addition": "{\"__current_case__\": 0, \"addition_select\": \"window\", \"w\": \"5000\"}", "strandB": "\"\"", "dbkey": "\"?\"", "number": "\"false\"", "header": "\"false\"", "nooverlaps": "\"false\"", "bed": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "original": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "41058c374aa144bd", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.27.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.27.1", "time_seconds": 66.03064298629761, "inputs": {"inputB": {"src": "hda", "id": "925e60572038494a"}, "addition|l": "200", "inputA": {"src": "hda", "id": "d21fcf0631c44a06"}, "addition|r": "20000", "addition|addition_select": "lr"}, "tool_version": "2.27.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.27.1", "update_time": "2019-06-25T22:29:41.431148", "inputs": {"inputB": {"src": "hda", "id": "925e60572038494a", "uuid": "22ee3c37-1802-42c7-9149-ae74216e80be"}, "inputA": {"src": "hda", "id": "d21fcf0631c44a06", "uuid": "24806de9-96a0-44e9-81b4-e12be9f4a1cc"}}, "outputs": {"output": {"src": "hda", "id": "e3afb406bf63bfd0", "uuid": "d26d90df-68cf-4c80-8e70-fbf980a1c642"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:29:27.742057", "stderr": "", "model_class": "Job", "params": {"addition": "{\"__current_case__\": 1, \"addition_select\": \"lr\", \"l\": \"200\", \"r\": \"20000\"}", "strandB": "\"\"", "dbkey": "\"?\"", "number": "\"false\"", "header": "\"false\"", "nooverlaps": "\"false\"", "bed": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "original": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "31a1524b7d7b3f48", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.27.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/biom_convert/biom_convert/2.1.5.0", "time_seconds": 76.90066504478455, "inputs": {"input_type|input_type_selector": "tsv", "output_type|observation_metadata_fp": null, "output_type|sample_metadata_fp": null, "output_type|biom_type|biom_type_selector": "json", "input_type|input_table": {"src": "hda", "id": "b4a8bd8fe342b888"}, "input_type|process_obs_metadata": "", "output_type|table_type": "OTU table", "output_type|output_type_selector": "biom"}, "tool_version": "2.1.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/biom_convert/biom_convert/2.1.5.0", "update_time": "2019-06-26T00:33:12.425686", "inputs": {"input_table": {"src": "hda", "id": "b4a8bd8fe342b888", "uuid": "4ec0b0e5-ff18-44eb-82b5-b420615369f2"}}, "outputs": {"output_table": {"src": "hda", "id": "81dfe8f97fd7c9ca", "uuid": "06052b36-acfc-4dcc-b961-34731346021f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:32:51.102235", "stderr": "", "model_class": "Job", "params": {"output_type": "{\"__current_case__\": 1, \"biom_type\": {\"__current_case__\": 0, \"biom_type_selector\": \"json\"}, \"observation_metadata_fp\": null, \"output_type_selector\": \"biom\", \"sample_metadata_fp\": null, \"table_type\": \"OTU table\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "input_type": "{\"__current_case__\": 0, \"input_table\": {\"values\": [{\"id\": 1069273, \"src\": \"hda\"}]}, \"input_type_selector\": \"tsv\", \"process_obs_metadata\": \"\"}"}, "tool_stdout": "", "job_messages": [], "id": "21d1ac4a8a674c7b", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/biom_convert/biom_convert/2.1.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/describe_samples/describe_samples/2.8.4", "time_seconds": 25.082235097885132, "inputs": {"samples_0|condition": "ConditionA", "samples_2|name": "CondB_replicate1", "samples_2|condition": "ConditionB", "samples_3|condition": "ConditionB", "samples_0|name": "CondA_replicate1", "samples_1|name": "CondA_replicate2", "samples_1|condition": "ConditionA", "samples_3|name": "CondB_replicate2"}, "tool_version": "2.8.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/describe_samples/describe_samples/2.8.4", "update_time": "2019-06-25T21:58:09.293730", "inputs": {}, "outputs": {"output": {"src": "hda", "id": "f546f4b86a1ed3a2", "uuid": "e4682d7a-e594-423b-a197-4dbe952649ac"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:57:54.882852", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "samples": "[{\"__index__\": 0, \"condition\": \"ConditionA\", \"name\": \"CondA_replicate1\"}, {\"__index__\": 1, \"condition\": \"ConditionA\", \"name\": \"CondA_replicate2\"}, {\"__index__\": 2, \"condition\": \"ConditionB\", \"name\": \"CondB_replicate1\"}, {\"__index__\": 3, \"condition\": \"ConditionB\", \"name\": \"CondB_replicate2\"}]"}, "tool_stdout": "", "job_messages": [], "id": "06a1cce587245042", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/describe_samples/describe_samples/2.8.4-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/fasttree/fasttree/2.1.10", "time_seconds": 292.0445728302002, "inputs": {"save_logfile": true, "model_selector|format": "-nt", "input_selector|input": {"src": "hda", "id": "95ff538a5df38273"}, "model_selector|model": "", "input_selector|select_format": "fasta"}, "tool_version": "2.1.10", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/fasttree/fasttree/2.1.10", "update_time": "2019-06-25T22:06:44.792309", "inputs": {"input": {"src": "hda", "id": "95ff538a5df38273", "uuid": "058a576f-9bd7-4022-8141-59744cd170ab"}}, "outputs": {"output": {"src": "hda", "id": "9cab6aede4c4916c", "uuid": "45b6985e-8941-40eb-8847-df7a9ee27c9c"}, "log": {"src": "hda", "id": "e0dc8f3a97c7f6e4", "uuid": "ff098ca8-ca0d-48ee-95ca-4a613356bdb6"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:04:06.585120", "stderr": "", "model_class": "Job", "params": {"save_logfile": "\"true\"", "advanced_selector": "{\"__current_case__\": 0, \"maximize\": \"min\"}", "dbkey": "\"?\"", "model_selector": "{\"__current_case__\": 0, \"format\": \"-nt\", \"model\": \"\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "input_selector": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 1067445, \"src\": \"hda\"}]}, \"intree_selector\": {\"__current_case__\": 0, \"intree_format\": \"none\"}, \"quote\": \"false\", \"select_format\": \"fasta\"}"}, "tool_stdout": "", "job_messages": [], "id": "c94aeb23d55d828a", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/fasttree/fasttree/2.1.10-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/gemini_recessive_and_dominant/gemini_recessive_and_dominant/0.18.1.1", "time_seconds": 65.50181794166565, "inputs": {"lenient": true, "rec_or_dom": "dominant", "infile": {"src": "hda", "id": "cee72edd7a98f200"}, "report|report_selector": "column_filter", "report|columns": ["gene", "chrom", "impact"]}, "tool_version": "0.18.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/gemini_recessive_and_dominant/gemini_recessive_and_dominant/0.18.1.1", "update_time": "2019-06-25T23:47:50.928622", "inputs": {"infile": {"src": "hda", "id": "cee72edd7a98f200", "uuid": "d031c1c7-1bf2-4599-becb-6b81b8af8e60"}}, "outputs": {"outfile": {"src": "hda", "id": "d88744417a4d4786", "uuid": "cb98b52d-635c-4e3d-b88e-a4facee43924"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:47:08.546953", "stderr": "", "model_class": "Job", "params": {"gt_pl_max": "\"-1\"", "families": "\"\"", "d": "\"0\"", "allow_unaffected": "\"false\"", "min_gq": "\"0\"", "dbkey": "\"?\"", "filter": "{\"__current_case__\": 0, \"filter_selector\": \"no\"}", "min_kindreds": "\"1\"", "rec_or_dom": "\"dominant\"", "report": "{\"__current_case__\": 1, \"columns\": [\"gene\", \"chrom\", \"impact\"], \"extra_cols\": \"\", \"report_selector\": \"column_filter\"}", "lenient": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "367880cb9ad9846c", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/gemini_recessive_and_dominant/gemini_recessive_and_dominant/0.18.1.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/gemini_recessive_and_dominant/gemini_recessive_and_dominant/0.18.1.1", "time_seconds": 65.91185688972473, "inputs": {"lenient": true, "rec_or_dom": "recessive", "infile": {"src": "hda", "id": "19b3910b1db89db9"}, "report|report_selector": "column_filter", "report|columns": ["gene", "chrom", "impact"]}, "tool_version": "0.18.1.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/gemini_recessive_and_dominant/gemini_recessive_and_dominant/0.18.1.1", "update_time": "2019-06-25T23:47:50.824006", "inputs": {"infile": {"src": "hda", "id": "19b3910b1db89db9", "uuid": "e1655f54-7876-44fd-ab2b-85ec67ae3320"}}, "outputs": {"outfile": {"src": "hda", "id": "697dad901e610af3", "uuid": "1f99a770-3798-4595-b75e-a74db39f1db5"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:47:13.076327", "stderr": "", "model_class": "Job", "params": {"gt_pl_max": "\"-1\"", "families": "\"\"", "d": "\"0\"", "allow_unaffected": "\"false\"", "min_gq": "\"0\"", "dbkey": "\"?\"", "filter": "{\"__current_case__\": 0, \"filter_selector\": \"no\"}", "min_kindreds": "\"1\"", "rec_or_dom": "\"recessive\"", "report": "{\"__current_case__\": 1, \"columns\": [\"gene\", \"chrom\", \"impact\"], \"extra_cols\": \"\", \"report_selector\": \"column_filter\"}", "lenient": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "a6a215ecbc2d88b8", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/gemini_recessive_and_dominant/gemini_recessive_and_dominant/0.18.1.1-1", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/iqtree/iqtree/1.5.5.1", "time_seconds": 1674.3700449466705, "inputs": {"modelling_parameters|automatic_model|madd": "LG4M,LG4X", "general_options|seed": "1257", "modelling_parameters|automatic_model|merit": "AICc", "modelling_parameters|automatic_model|msub": "nuclear", "modelling_parameters|automatic_model|cond_model|m": "TESTNEW", "general_options|s": {"src": "hda", "id": "2e3ee2d4bbc35d03"}, "general_options|st": "AA", "bootstrap_parameters|ultrafast_bootstrap|bb": "1000"}, "tool_version": "1.5.5.1", "output_problems": ["No JSON object could be decoded"], "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/iqtree/iqtree/1.5.5.1-0", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/iqtree/iqtree/1.5.5.1", "time_seconds": 1673.7477860450745, "inputs": {"bootstrap_parameters|ultrafast_bootstrap|nstep": "100", "bootstrap_parameters|nonparametric_bootstrap|b": "2", "general_options|seed": "1257", "modelling_parameters|automatic_model|merit": "AICc", "tree_parameters|tree_search|nbest": "5", "bootstrap_parameters|ultrafast_bootstrap|beps": "0.5", "tree_parameters|tree_search|pers": "0.5", "modelling_parameters|automatic_model|msub": "nuclear", "tree_parameters|tree_search|sprrad": "6", "modelling_parameters|automatic_model|cmin": "2", "general_options|s": {"src": "hda", "id": "2e3ee2d4bbc35d03"}, "tree_parameters|tree_search|ntop": "20", "modelling_parameters|automatic_model|madd": "LG4M,LG4X", "bootstrap_parameters|ultrafast_bootstrap|bcor": "0.99", "bootstrap_parameters|ultrafast_bootstrap|nm": "1000", "tree_parameters|tree_search|ninit": "100", "modelling_parameters|automatic_model|cmax": "10", "tree_parameters|tree_search|nstop": "100", "tree_parameters|constructing_consensus|minsup": "0.0", "general_options|st": "AA"}, "tool_version": "1.5.5.1", "output_problems": ["No JSON object could be decoded"], "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/iqtree/iqtree/1.5.5.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/iqtree/iqtree/1.5.5.1", "time_seconds": 431.141902923584, "inputs": {"bootstrap_parameters|ultrafast_bootstrap|nstep": "100", "general_options|seed": "1257", "modelling_parameters|automatic_model|merit": "AICc", "tree_parameters|tree_search|nbest": "5", "bootstrap_parameters|ultrafast_bootstrap|beps": "0.5", "tree_parameters|tree_search|pers": "0.5", "modelling_parameters|automatic_model|msub": "nuclear", "tree_parameters|tree_search|sprrad": "6", "modelling_parameters|automatic_model|cmin": "2", "general_options|s": {"src": "hda", "id": "2e3ee2d4bbc35d03"}, "tree_parameters|tree_search|ntop": "20", "modelling_parameters|automatic_model|madd": "LG4M,LG4X", "bootstrap_parameters|ultrafast_bootstrap|bcor": "0.99", "bootstrap_parameters|ultrafast_bootstrap|nm": "1000", "modelling_parameters|automatic_model|cond_model|m": "TESTONLY", "modelling_parameters|automatic_model|cmax": "10", "tree_parameters|tree_search|nstop": "100", "tree_parameters|constructing_consensus|minsup": "0.0", "general_options|st": "AA", "tree_parameters|tree_search|ninit": "100"}, "tool_version": "1.5.5.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/iqtree/iqtree/1.5.5.1", "update_time": "2019-06-26T02:32:05.683248", "inputs": {"s": {"src": "hda", "id": "2e3ee2d4bbc35d03", "uuid": "1e362930-868f-4491-b4d4-a947c864dca7"}}, "outputs": {"iqtree": {"src": "hda", "id": "9f2c425498225039", "uuid": "ef89ed38-d718-432a-a9bb-3674c5d35078"}, "splits.nex": {"src": "hda", "id": "49cc098b35da7b25", "uuid": "8c87aecb-43ff-4d69-bfc5-9de2c0c09c84"}, "mldist": {"src": "hda", "id": "a6ab725015e1fe8d", "uuid": "8b9ef7d2-0267-45d8-a054-834cc4ff5379"}, "treefile": {"src": "hda", "id": "60296d6f439b4093", "uuid": "57303f40-8776-4e61-82fb-a19fde11b089"}, "bionj": {"src": "hda", "id": "b6c9728e5d3444e4", "uuid": "56e376bc-cbcc-41be-a7fb-de9f012f1125"}, "contree": {"src": "hda", "id": "388247f115860e99", "uuid": "c63f5438-aafa-4a81-91cd-98fa6dfc9022"}}, "history_id": "f840675b8d7f5485", "stdout": "IQ-TREE multicore version 1.5.5 for Linux 64-bit built Jul  8 2018\nCopyright (c) 2011-2017 by Bui Quang Minh, Nguyen Lam Tung,\nOlga Chernomor, Heiko Schmidt, and Arndt von Haeseler.\n\nHost:    galaxy-aust-w3 (AVX, FMA3, 62 GB RAM)\nCommand: iqtree -pre PREF -nt 1 -redo -s /mnt/galaxy/files/000/926/dataset_926451.dat -st AA -seed 1257 -m TESTONLY -msub nuclear -cmin 2 -cmax 10 -merit AICc -madd LG4M,LG4X -ninit 100 -ntop 20 -nbest 5 -nstop 100 -sprrad 6 -pers 0.5 -minsup 0.0 -nm 1000 -bcor 0.99 -nstep 100 -beps 0.5\nSeed:    1257 (Using SPRNG - Scalable Parallel Random Number Generator)\nTime:    Wed Jun 26 12:25:55 2019\nKernel:  AVX+FMA - 1 threads (16 CPU cores detected)\n\nReading alignment file /mnt/galaxy/files/000/926/dataset_926451.dat ... Phylip format detected\nAlignment most likely contains DNA/RNA sequences\nWARNING: Your specified sequence type is different from the detected one\nAlignment has 17 sequences with 1998 columns and 1152 patterns (1009 informative sites, 686 constant sites)\n           Gap/Ambiguity  Composition  p-value\n   1  LngfishAu    0.15%    passed     94.43%\n   2  LngfishSA    0.00%    passed     69.40%\n   3  LngfishAf    0.05%    passed     83.88%\n   4  Frog         0.05%    passed     99.95%\n   5  Turtle       0.15%    passed     99.74%\n   6  Sphenodon    0.10%    passed     99.92%\n   7  Lizard       0.90%    passed     99.71%\n   8  Crocodile    0.35%    passed     86.47%\n   9  Bird         0.00%    failed      2.07%\n  10  Human        0.00%    passed     74.60%\n  11  Seal         0.00%    passed     99.95%\n  12  Cow          0.00%    passed     99.91%\n  13  Whale        0.00%    passed    100.00%\n  14  Mouse        0.05%    passed     77.89%\n  15  Rat          0.00%    passed     99.67%\n  16  Platypus     0.00%    passed     88.99%\n  17  Opossum      0.00%    passed     13.17%\n****  TOTAL        0.11%  1 sequences failed composition chi2 test (p-value<5%; df=19)\nWARNING: R, N, D, Q, E, H, I, L, K, M, F, P, S, W, Y, V are not present in alignment that may cause numerical problems\nWARNING: 16 states (see above) are not present that may cause numerical problems\n\n\nCreate initial parsimony tree by phylogenetic likelihood library (PLL)... 0.006 seconds\n\nNOTE: ModelFinder requires 12 MB RAM!\nModelFinder will test 74 protein models (sample size: 1998) ...\n No. Model         -LnL         df  AIC          AICc         BIC\n  1  Dayhoff       35916.829    31  71895.659    71896.668    72069.256\n  2  Dayhoff+I     34790.620    32  69645.239    69646.314    69824.436\n  3  Dayhoff+G4    34228.230    32  68520.461    68521.536    68699.658\n  4  Dayhoff+I+G4  34194.309    33  68454.618    68455.761    68639.415\n  5  Dayhoff+F     26379.912    50  52859.824    52862.444    53139.819\n  6  Dayhoff+F+I   25025.322    51  50152.644    50155.370    50438.239\n  7  Dayhoff+F+G4  23641.722    51  47385.443    47388.169    47671.038\n  8  Dayhoff+F+I+G4 23642.948    52  47389.896    47392.730    47681.091\n  9  JTT           35950.359    31  71962.718    71963.727    72136.315\n 10  JTT+I         34960.848    32  69985.696    69986.771    70164.893\n 11  JTT+G4        34637.911    32  69339.822    69340.897    69519.019\n 12  JTT+I+G4      34613.734    33  69293.468    69294.610    69478.264\n 13  JTT+F         25394.887    50  50889.773    50892.392    51169.768\n 14  JTT+F+I       24158.185    51  48418.370    48421.096    48703.965\n 15  JTT+F+G4      23244.084    51  46590.167    46592.893    46875.762\n 16  JTT+F+I+G4    23243.998    52  46591.996    46594.830    46883.191\n 17  WAG           35036.373    31  70134.746    70135.755    70308.343\n 18  WAG+I         34089.332    32  68242.664    68243.739    68421.861\n 19  WAG+G4        33778.774    32  67621.548    67622.622    67800.745\n 20  WAG+I+G4      33754.040    33  67574.080    67575.223    67758.877\n 21  WAG+F         23894.811    50  47889.621    47892.241    48169.616\n 22  WAG+F+I       22777.266    51  45656.532    45659.257    45942.127\n 23  WAG+F+G4      22302.539    51  44707.078    44709.804    44992.673\n 24  WAG+F+I+G4    22292.471    52  44688.941    44691.775    44980.136\n 25  VT            35519.904    31  71101.809    71102.818    71275.406\n 26  VT+I          34609.013    32  69282.026    69283.101    69461.223\n 27  VT+G4         34372.926    32  68809.853    68810.927    68989.049\n 28  VT+I+G4       34350.927    33  68767.853    68768.996    68952.650\n 29  VT+F          23670.254    50  47440.509    47443.128    47720.504\n 30  VT+F+I        22583.289    51  45268.578    45271.303    45554.173\n 31  VT+F+G4       22155.555    51  44413.109    44415.835    44698.704\n 32  VT+F+I+G4     22144.749    52  44393.498    44396.332    44684.693\n 33  LG            34860.070    31  69782.140    69783.149    69955.737\n 34  LG+I          33905.923    32  67875.847    67876.921    68055.044\n 35  LG+G4         33640.245    32  67344.490    67345.565    67523.687\n 36  LG+I+G4       33621.202    33  67308.403    67309.546    67493.200\n 37  LG+F          23500.813    50  47101.626    47104.246    47381.622\n 38  LG+F+I        22400.266    51  44902.531    44905.257    45188.126\n 39  LG+F+G4       21983.550    51  44069.100    44071.825    44354.695\n 40  LG+F+I+G4     21972.688    52  44049.377    44052.211    44340.572\n 41  DCMut         35894.487    31  71850.975    71851.984    72024.572\n 42  DCMut+I       34772.133    32  69608.266    69609.341    69787.463\n 43  DCMut+G4      34214.760    32  68493.520    68494.594    68672.716\n 44  DCMut+I+G4    34180.884    33  68427.768    68428.911    68612.565\n 45  DCMut+F       26353.539    50  52807.079    52809.698    53087.074\n 46  DCMut+F+I     25002.298    51  50106.597    50109.322    50392.192\n 47  DCMut+F+G4    23630.361    51  47362.722    47365.448    47648.317\n 48  DCMut+F+I+G4  23631.789    52  47367.578    47370.412    47658.773\n 49  PMB           34655.166    31  69372.332    69373.341    69545.929\n 50  PMB+I         33749.563    32  67563.126    67564.200    67742.322\n 51  PMB+G4        33500.575    32  67065.150    67066.225    67244.347\n 52  PMB+I+G4      33476.389    33  67018.778    67019.921    67203.575\n 53  PMB+F         23425.951    50  46951.901    46954.521    47231.897\n 54  PMB+F+I       22343.026    51  44788.052    44790.777    45073.647\n 55  PMB+F+G4      21953.999    51  44009.998    44012.724    44295.593\n 56  PMB+F+I+G4    21941.525    52  43987.049    43989.883    44278.244\n 57  JTTDCMut      35747.714    31  71557.427    71558.436    71731.024\n 58  JTTDCMut+I    34770.590    32  69605.180    69606.255    69784.377\n 59  JTTDCMut+G4   34450.326    32  68964.651    68965.726    69143.848\n 60  JTTDCMut+I+G4 34425.928    33  68917.855    68918.998    69102.652\n 61  JTTDCMut+F    25202.733    50  50505.466    50508.085    50785.461\n 62  JTTDCMut+F+I  23984.178    51  48070.356    48073.081    48355.951\n 63  JTTDCMut+F+G4 23124.266    51  46350.532    46353.258    46636.127\n 64  JTTDCMut+F+I+G4 23123.760    52  46351.519    46354.353    46642.714\n 65  Blosum62      34632.620    31  69327.241    69328.250    69500.838\n 66  Blosum62+I    33739.146    32  67542.292    67543.367    67721.489\n 67  Blosum62+G4   33506.859    32  67077.717    67078.792    67256.914\n 68  Blosum62+I+G4 33483.609    33  67033.218    67034.361    67218.015\n 69  Blosum62+F    23294.641    50  46689.282    46691.902    46969.278\n 70  Blosum62+F+I  22211.639    51  44525.279    44528.004    44810.874\n 71  Blosum62+F+G4 21843.004    51  43788.008    43790.734    44073.603\n 72  Blosum62+F+I+G4 21830.583    52  43765.166    43767.999    44056.360\nModel LG4M is alias for MIX{LG4M1,LG4M2,LG4M3,LG4M4}*G4\n 73  LG4M          31205.836    32  62475.673    62476.747    62654.869\nModel LG4X is alias for MIX{LG4X1,LG4X2,LG4X3,LG4X4}*R4\n 74  LG4X          30602.730    37  61279.460    61280.895    61486.656\nAkaike Information Criterion:           Blosum62+F+I+G4\nCorrected Akaike Information Criterion: Blosum62+F+I+G4\nBayesian Information Criterion:         Blosum62+F+I+G4\nBest-fit model: Blosum62+F+I+G4 chosen according to AICc\n\nAll model information printed to PREF.model\nCPU time for ModelFinder: 268.906 seconds (0h:4m:28s)\nWall-clock time for ModelFinder: 270.892 seconds (0h:4m:30s)\n\nNOTE: 12 MB RAM (0 GB) is required!\nEstimate model parameters (epsilon = 0.010)\nThoroughly optimizing +I+G parameters from 10 start values...\nInit pinv, alpha: 0.000, 1.000 / Estimate: 0.000, 0.536 / LogL: -21843.004\nInit pinv, alpha: 0.038, 1.000 / Estimate: 0.193, 0.936 / LogL: -21830.590\nInit pinv, alpha: 0.076, 1.000 / Estimate: 0.193, 0.936 / LogL: -21830.591\nInit pinv, alpha: 0.114, 1.000 / Estimate: 0.193, 0.935 / LogL: -21830.592\nInit pinv, alpha: 0.153, 1.000 / Estimate: 0.193, 0.934 / LogL: -21830.595\nInit pinv, alpha: 0.191, 1.000 / Estimate: 0.194, 0.939 / LogL: -21830.583\nInit pinv, alpha: 0.229, 1.000 / Estimate: 0.206, 0.986 / LogL: -21830.582\nInit pinv, alpha: 0.267, 1.000 / Estimate: 0.206, 0.985 / LogL: -21830.581\nInit pinv, alpha: 0.305, 1.000 / Estimate: 0.206, 0.984 / LogL: -21830.577\nInit pinv, alpha: 0.343, 1.000 / Estimate: 0.206, 0.985 / LogL: -21830.580\nOptimal pinv,alpha: 0.206, 0.984 / LogL: -21830.577\n\nParameters optimization took 90.095 sec\n\nWARNING: Estimated model parameters are at boundary that can cause numerical instability!\n\nBEST SCORE FOUND : -21830.577\nTotal tree length: 3.563\n\nTotal number of iterations: 0\nCPU time used for tree search: 0.000 sec (0h:0m:0s)\nWall-clock time used for tree search: 0.000 sec (0h:0m:0s)\nTotal CPU time used: 358.902 sec (0h:5m:58s)\nTotal wall-clock time used: 360.997 sec (0h:6m:0s)\n\nAnalysis results written to: \n  IQ-TREE report:                PREF.iqtree\n  Tree used for ModelFinder:     PREF.treefile\n  Screen log file:               PREF.log\n\nDate and Time: Wed Jun 26 12:31:56 2019\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:25:48.856537", "stderr": "", "model_class": "Job", "params": {"general_options": "{\"keep_ident\": \"false\", \"s\": {\"values\": [{\"id\": 1069652, \"src\": \"hda\"}]}, \"safe\": \"false\", \"seed\": \"1257\", \"st\": \"AA\", \"t\": null, \"te\": null}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "modelling_parameters": "{\"automatic_model\": {\"cmax\": \"10\", \"cmin\": \"2\", \"cond_model\": {\"__current_case__\": 1, \"m\": \"TESTONLY\", \"opt_custommodel\": \"false\"}, \"madd\": \"LG4M,LG4X\", \"mdef\": null, \"merit\": \"AICc\", \"mfreq\": \"\", \"mrate\": \"\", \"mset\": \"\", \"msub\": \"nuclear\", \"mtree\": \"false\", \"rcluster\": \"\"}, \"partition_model\": {\"q\": null, \"sp\": null, \"spp\": \"false\"}, \"rate_heterogeneity\": {\"a\": \"\", \"gmedian\": \"false\", \"i\": \"\", \"opt_gamma_inv\": \"false\", \"wsr\": \"false\"}, \"site_specific_frequency\": {\"fmax\": \"false\", \"fs\": \"\", \"ft\": null}, \"specifying_substitution\": {\"mwopt\": \"false\"}}", "dbkey": "\"?\"", "miscellaneous_options": "{\"fconst\": \"\"}", "likelihood_mapping": "{\"lmap\": \"\", \"lmclust\": null, \"wql\": \"false\"}", "tree_parameters": "{\"computing_robinson_foulds\": {\"rf\": null, \"rf_adj\": \"false\", \"rf_all\": \"false\"}, \"constructing_consensus\": {\"bi\": \"\", \"con\": \"false\", \"minsup\": \"0.0\", \"net\": \"false\", \"sup\": null, \"suptag\": \"\"}, \"generating_random\": {\"r\": \"\", \"rbal\": \"false\", \"rcat\": \"false\", \"rcsg\": \"false\", \"rlen\": \"\", \"ru\": \"false\"}, \"single_branch\": {\"abayes\": \"false\", \"alrt\": \"\", \"lbp\": \"\"}, \"tree_search\": {\"allnni\": \"false\", \"djc\": \"false\", \"g\": null, \"n\": \"\", \"nbest\": \"5\", \"ninit\": \"100\", \"nstop\": \"100\", \"ntop\": \"20\", \"pers\": \"0.5\", \"sprrad\": \"6\"}, \"tree_topology\": {\"au\": \"false\", \"z\": null, \"zb\": \"\", \"zw\": \"false\"}}", "bootstrap_parameters": "{\"nonparametric_bootstrap\": {\"b\": \"\", \"bc\": \"false\", \"bo\": \"false\"}, \"ultrafast_bootstrap\": {\"bb\": \"\", \"bcor\": \"0.99\", \"beps\": \"0.5\", \"bnni\": \"false\", \"bspec\": \"\", \"nm\": \"1000\", \"nstep\": \"100\", \"wbt\": \"false\", \"wbtl\": \"false\"}}"}, "tool_stdout": "IQ-TREE multicore version 1.5.5 for Linux 64-bit built Jul  8 2018\nCopyright (c) 2011-2017 by Bui Quang Minh, Nguyen Lam Tung,\nOlga Chernomor, Heiko Schmidt, and Arndt von Haeseler.\n\nHost:    galaxy-aust-w3 (AVX, FMA3, 62 GB RAM)\nCommand: iqtree -pre PREF -nt 1 -redo -s /mnt/galaxy/files/000/926/dataset_926451.dat -st AA -seed 1257 -m TESTONLY -msub nuclear -cmin 2 -cmax 10 -merit AICc -madd LG4M,LG4X -ninit 100 -ntop 20 -nbest 5 -nstop 100 -sprrad 6 -pers 0.5 -minsup 0.0 -nm 1000 -bcor 0.99 -nstep 100 -beps 0.5\nSeed:    1257 (Using SPRNG - Scalable Parallel Random Number Generator)\nTime:    Wed Jun 26 12:25:55 2019\nKernel:  AVX+FMA - 1 threads (16 CPU cores detected)\n\nReading alignment file /mnt/galaxy/files/000/926/dataset_926451.dat ... Phylip format detected\nAlignment most likely contains DNA/RNA sequences\nWARNING: Your specified sequence type is different from the detected one\nAlignment has 17 sequences with 1998 columns and 1152 patterns (1009 informative sites, 686 constant sites)\n           Gap/Ambiguity  Composition  p-value\n   1  LngfishAu    0.15%    passed     94.43%\n   2  LngfishSA    0.00%    passed     69.40%\n   3  LngfishAf    0.05%    passed     83.88%\n   4  Frog         0.05%    passed     99.95%\n   5  Turtle       0.15%    passed     99.74%\n   6  Sphenodon    0.10%    passed     99.92%\n   7  Lizard       0.90%    passed     99.71%\n   8  Crocodile    0.35%    passed     86.47%\n   9  Bird         0.00%    failed      2.07%\n  10  Human        0.00%    passed     74.60%\n  11  Seal         0.00%    passed     99.95%\n  12  Cow          0.00%    passed     99.91%\n  13  Whale        0.00%    passed    100.00%\n  14  Mouse        0.05%    passed     77.89%\n  15  Rat          0.00%    passed     99.67%\n  16  Platypus     0.00%    passed     88.99%\n  17  Opossum      0.00%    passed     13.17%\n****  TOTAL        0.11%  1 sequences failed composition chi2 test (p-value<5%; df=19)\nWARNING: R, N, D, Q, E, H, I, L, K, M, F, P, S, W, Y, V are not present in alignment that may cause numerical problems\nWARNING: 16 states (see above) are not present that may cause numerical problems\n\n\nCreate initial parsimony tree by phylogenetic likelihood library (PLL)... 0.006 seconds\n\nNOTE: ModelFinder requires 12 MB RAM!\nModelFinder will test 74 protein models (sample size: 1998) ...\n No. Model         -LnL         df  AIC          AICc         BIC\n  1  Dayhoff       35916.829    31  71895.659    71896.668    72069.256\n  2  Dayhoff+I     34790.620    32  69645.239    69646.314    69824.436\n  3  Dayhoff+G4    34228.230    32  68520.461    68521.536    68699.658\n  4  Dayhoff+I+G4  34194.309    33  68454.618    68455.761    68639.415\n  5  Dayhoff+F     26379.912    50  52859.824    52862.444    53139.819\n  6  Dayhoff+F+I   25025.322    51  50152.644    50155.370    50438.239\n  7  Dayhoff+F+G4  23641.722    51  47385.443    47388.169    47671.038\n  8  Dayhoff+F+I+G4 23642.948    52  47389.896    47392.730    47681.091\n  9  JTT           35950.359    31  71962.718    71963.727    72136.315\n 10  JTT+I         34960.848    32  69985.696    69986.771    70164.893\n 11  JTT+G4        34637.911    32  69339.822    69340.897    69519.019\n 12  JTT+I+G4      34613.734    33  69293.468    69294.610    69478.264\n 13  JTT+F         25394.887    50  50889.773    50892.392    51169.768\n 14  JTT+F+I       24158.185    51  48418.370    48421.096    48703.965\n 15  JTT+F+G4      23244.084    51  46590.167    46592.893    46875.762\n 16  JTT+F+I+G4    23243.998    52  46591.996    46594.830    46883.191\n 17  WAG           35036.373    31  70134.746    70135.755    70308.343\n 18  WAG+I         34089.332    32  68242.664    68243.739    68421.861\n 19  WAG+G4        33778.774    32  67621.548    67622.622    67800.745\n 20  WAG+I+G4      33754.040    33  67574.080    67575.223    67758.877\n 21  WAG+F         23894.811    50  47889.621    47892.241    48169.616\n 22  WAG+F+I       22777.266    51  45656.532    45659.257    45942.127\n 23  WAG+F+G4      22302.539    51  44707.078    44709.804    44992.673\n 24  WAG+F+I+G4    22292.471    52  44688.941    44691.775    44980.136\n 25  VT            35519.904    31  71101.809    71102.818    71275.406\n 26  VT+I          34609.013    32  69282.026    69283.101    69461.223\n 27  VT+G4         34372.926    32  68809.853    68810.927    68989.049\n 28  VT+I+G4       34350.927    33  68767.853    68768.996    68952.650\n 29  VT+F          23670.254    50  47440.509    47443.128    47720.504\n 30  VT+F+I        22583.289    51  45268.578    45271.303    45554.173\n 31  VT+F+G4       22155.555    51  44413.109    44415.835    44698.704\n 32  VT+F+I+G4     22144.749    52  44393.498    44396.332    44684.693\n 33  LG            34860.070    31  69782.140    69783.149    69955.737\n 34  LG+I          33905.923    32  67875.847    67876.921    68055.044\n 35  LG+G4         33640.245    32  67344.490    67345.565    67523.687\n 36  LG+I+G4       33621.202    33  67308.403    67309.546    67493.200\n 37  LG+F          23500.813    50  47101.626    47104.246    47381.622\n 38  LG+F+I        22400.266    51  44902.531    44905.257    45188.126\n 39  LG+F+G4       21983.550    51  44069.100    44071.825    44354.695\n 40  LG+F+I+G4     21972.688    52  44049.377    44052.211    44340.572\n 41  DCMut         35894.487    31  71850.975    71851.984    72024.572\n 42  DCMut+I       34772.133    32  69608.266    69609.341    69787.463\n 43  DCMut+G4      34214.760    32  68493.520    68494.594    68672.716\n 44  DCMut+I+G4    34180.884    33  68427.768    68428.911    68612.565\n 45  DCMut+F       26353.539    50  52807.079    52809.698    53087.074\n 46  DCMut+F+I     25002.298    51  50106.597    50109.322    50392.192\n 47  DCMut+F+G4    23630.361    51  47362.722    47365.448    47648.317\n 48  DCMut+F+I+G4  23631.789    52  47367.578    47370.412    47658.773\n 49  PMB           34655.166    31  69372.332    69373.341    69545.929\n 50  PMB+I         33749.563    32  67563.126    67564.200    67742.322\n 51  PMB+G4        33500.575    32  67065.150    67066.225    67244.347\n 52  PMB+I+G4      33476.389    33  67018.778    67019.921    67203.575\n 53  PMB+F         23425.951    50  46951.901    46954.521    47231.897\n 54  PMB+F+I       22343.026    51  44788.052    44790.777    45073.647\n 55  PMB+F+G4      21953.999    51  44009.998    44012.724    44295.593\n 56  PMB+F+I+G4    21941.525    52  43987.049    43989.883    44278.244\n 57  JTTDCMut      35747.714    31  71557.427    71558.436    71731.024\n 58  JTTDCMut+I    34770.590    32  69605.180    69606.255    69784.377\n 59  JTTDCMut+G4   34450.326    32  68964.651    68965.726    69143.848\n 60  JTTDCMut+I+G4 34425.928    33  68917.855    68918.998    69102.652\n 61  JTTDCMut+F    25202.733    50  50505.466    50508.085    50785.461\n 62  JTTDCMut+F+I  23984.178    51  48070.356    48073.081    48355.951\n 63  JTTDCMut+F+G4 23124.266    51  46350.532    46353.258    46636.127\n 64  JTTDCMut+F+I+G4 23123.760    52  46351.519    46354.353    46642.714\n 65  Blosum62      34632.620    31  69327.241    69328.250    69500.838\n 66  Blosum62+I    33739.146    32  67542.292    67543.367    67721.489\n 67  Blosum62+G4   33506.859    32  67077.717    67078.792    67256.914\n 68  Blosum62+I+G4 33483.609    33  67033.218    67034.361    67218.015\n 69  Blosum62+F    23294.641    50  46689.282    46691.902    46969.278\n 70  Blosum62+F+I  22211.639    51  44525.279    44528.004    44810.874\n 71  Blosum62+F+G4 21843.004    51  43788.008    43790.734    44073.603\n 72  Blosum62+F+I+G4 21830.583    52  43765.166    43767.999    44056.360\nModel LG4M is alias for MIX{LG4M1,LG4M2,LG4M3,LG4M4}*G4\n 73  LG4M          31205.836    32  62475.673    62476.747    62654.869\nModel LG4X is alias for MIX{LG4X1,LG4X2,LG4X3,LG4X4}*R4\n 74  LG4X          30602.730    37  61279.460    61280.895    61486.656\nAkaike Information Criterion:           Blosum62+F+I+G4\nCorrected Akaike Information Criterion: Blosum62+F+I+G4\nBayesian Information Criterion:         Blosum62+F+I+G4\nBest-fit model: Blosum62+F+I+G4 chosen according to AICc\n\nAll model information printed to PREF.model\nCPU time for ModelFinder: 268.906 seconds (0h:4m:28s)\nWall-clock time for ModelFinder: 270.892 seconds (0h:4m:30s)\n\nNOTE: 12 MB RAM (0 GB) is required!\nEstimate model parameters (epsilon = 0.010)\nThoroughly optimizing +I+G parameters from 10 start values...\nInit pinv, alpha: 0.000, 1.000 / Estimate: 0.000, 0.536 / LogL: -21843.004\nInit pinv, alpha: 0.038, 1.000 / Estimate: 0.193, 0.936 / LogL: -21830.590\nInit pinv, alpha: 0.076, 1.000 / Estimate: 0.193, 0.936 / LogL: -21830.591\nInit pinv, alpha: 0.114, 1.000 / Estimate: 0.193, 0.935 / LogL: -21830.592\nInit pinv, alpha: 0.153, 1.000 / Estimate: 0.193, 0.934 / LogL: -21830.595\nInit pinv, alpha: 0.191, 1.000 / Estimate: 0.194, 0.939 / LogL: -21830.583\nInit pinv, alpha: 0.229, 1.000 / Estimate: 0.206, 0.986 / LogL: -21830.582\nInit pinv, alpha: 0.267, 1.000 / Estimate: 0.206, 0.985 / LogL: -21830.581\nInit pinv, alpha: 0.305, 1.000 / Estimate: 0.206, 0.984 / LogL: -21830.577\nInit pinv, alpha: 0.343, 1.000 / Estimate: 0.206, 0.985 / LogL: -21830.580\nOptimal pinv,alpha: 0.206, 0.984 / LogL: -21830.577\n\nParameters optimization took 90.095 sec\n\nWARNING: Estimated model parameters are at boundary that can cause numerical instability!\n\nBEST SCORE FOUND : -21830.577\nTotal tree length: 3.563\n\nTotal number of iterations: 0\nCPU time used for tree search: 0.000 sec (0h:0m:0s)\nWall-clock time used for tree search: 0.000 sec (0h:0m:0s)\nTotal CPU time used: 358.902 sec (0h:5m:58s)\nTotal wall-clock time used: 360.997 sec (0h:6m:0s)\n\nAnalysis results written to: \n  IQ-TREE report:                PREF.iqtree\n  Tree used for ModelFinder:     PREF.treefile\n  Screen log file:               PREF.log\n\nDate and Time: Wed Jun 26 12:31:56 2019\n", "job_messages": [], "id": "cc67c4a04dc4a9e0", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/iqtree/iqtree/1.5.5.1-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/iqtree/iqtree/1.5.5.1", "time_seconds": 466.126708984375, "inputs": {"general_options|s": {"src": "hda", "id": "d2cd4937ae741cca"}}, "tool_version": "1.5.5.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/iqtree/iqtree/1.5.5.1", "update_time": "2019-06-26T02:30:21.268654", "inputs": {"s": {"src": "hda", "id": "d2cd4937ae741cca", "uuid": "16fbf687-355b-4986-8fc2-61840f1246d8"}}, "outputs": {"iqtree": {"src": "hda", "id": "2de93c443a0c8092", "uuid": "e49cecbf-5cbb-48de-a037-612617a11036"}, "splits.nex": {"src": "hda", "id": "cc798cc8e482c6ac", "uuid": "56332892-9fa9-4348-b4ff-d520f01f525d"}, "mldist": {"src": "hda", "id": "ccad4238530210e5", "uuid": "89944959-28b2-4c59-b383-080bab41c545"}, "treefile": {"src": "hda", "id": "991303b4a9089d21", "uuid": "6f6de059-8c46-4f39-9c8b-8704010a69c2"}, "bionj": {"src": "hda", "id": "2534211f4eaf41e7", "uuid": "9c17aeea-73ef-4694-8786-916200ca6cb5"}, "contree": {"src": "hda", "id": "997ce8cede43fe0b", "uuid": "38d68b5f-dedd-4eed-b051-83862d476aa7"}}, "history_id": "f840675b8d7f5485", "stdout": "IQ-TREE multicore version 1.5.5 for Linux 64-bit built Jul  8 2018\nCopyright (c) 2011-2017 by Bui Quang Minh, Nguyen Lam Tung,\nOlga Chernomor, Heiko Schmidt, and Arndt von Haeseler.\n\nHost:    galaxy-aust-w3 (AVX, FMA3, 62 GB RAM)\nCommand: iqtree -pre PREF -nt 1 -redo -s /mnt/galaxy/files/000/926/dataset_926478.dat -st DNA -msub nuclear -cmin 2 -cmax 10 -merit AIC -ninit 100 -ntop 20 -nbest 5 -nstop 100 -sprrad 6 -pers 0.5 -minsup 0.0 -nm 1000 -bcor 0.99 -nstep 100 -beps 0.5\nSeed:    473405 (Using SPRNG - Scalable Parallel Random Number Generator)\nTime:    Wed Jun 26 12:26:52 2019\nKernel:  AVX+FMA - 1 threads (16 CPU cores detected)\n\nReading alignment file /mnt/galaxy/files/000/926/dataset_926478.dat ... Phylip format detected\nAlignment most likely contains DNA/RNA sequences\nAlignment has 17 sequences with 1998 columns and 1152 patterns (1009 informative sites, 686 constant sites)\n           Gap/Ambiguity  Composition  p-value\n   1  LngfishAu    0.15%    passed      6.20%\n   2  LngfishSA    0.00%    failed      0.62%\n   3  LngfishAf    0.05%    failed      1.60%\n   4  Frog         0.05%    passed     58.01%\n   5  Turtle       0.15%    passed     44.25%\n   6  Sphenodon    0.10%    passed     59.78%\n   7  Lizard       0.90%    passed     38.67%\n   8  Crocodile    0.35%    failed      2.51%\n   9  Bird         0.00%    failed      0.00%\n  10  Human        0.00%    failed      0.85%\n  11  Seal         0.00%    passed     68.93%\n  12  Cow          0.00%    passed     59.11%\n  13  Whale        0.00%    passed     97.83%\n  14  Mouse        0.05%    failed      1.43%\n  15  Rat          0.00%    passed     39.69%\n  16  Platypus     0.00%    failed      3.46%\n  17  Opossum      0.00%    failed      0.01%\n****  TOTAL        0.11%  8 sequences failed composition chi2 test (p-value<5%; df=3)\n\nCreate initial parsimony tree by phylogenetic likelihood library (PLL)... 0.003 seconds\n\nNOTE: ModelFinder requires 6 MB RAM!\nModelFinder will test 286 DNA models (sample size: 1998) ...\n No. Model         -LnL         df  AIC          AICc         BIC\n  1  JC            23650.090    31  47362.180    47363.189    47535.777\n  2  JC+I          22582.945    32  45229.889    45230.964    45409.086\n  3  JC+G4         22261.254    32  44586.508    44587.583    44765.705\n  4  JC+I+G4       22247.376    33  44560.751    44561.894    44745.548\n  5  JC+R2         22284.445    33  44634.889    44636.032    44819.686\n  6  JC+R3         22236.846    35  44543.691    44544.976    44739.688\n  7  JC+R4         22236.897    37  44547.793    44549.228    44754.990\n  8  JC+R5         Skipped \n  9  JC+R6         Skipped \n 10  JC+R7         Skipped \n 11  JC+R8         Skipped \n 12  JC+R9         Skipped \n 13  JC+R10        Skipped \n 14  F81           23444.425    34  46956.851    46958.063    47147.247\n 15  F81+I         22325.057    35  44720.114    44721.399    44916.111\n 16  F81+G4        21946.316    35  43962.632    43963.916    44158.629\n 17  F81+I+G4      21932.262    36  43936.525    43937.883    44138.121\n 18  F81+R2        21990.940    36  44053.881    44055.239    44255.477\n 19  F81+R3        21923.806    38  43923.611    43925.124    44136.407\n 20  F81+R4        21923.884    40  43927.768    43929.444    44151.764\n 21  F81+R5        Skipped \n 22  F81+R6        Skipped \n 23  F81+R7        Skipped \n 24  F81+R8        Skipped \n 25  F81+R9        Skipped \n 26  F81+R10       Skipped \n 27  K2P           23306.054    32  46676.107    46677.182    46855.304\n 28  K2P+I         22218.508    33  44503.017    44504.159    44687.813\n 29  K2P+G4        21852.727    33  43771.455    43772.597    43956.252\n 30  K2P+I+G4      21837.944    34  43743.889    43745.101    43934.286\n 31  K2P+R2        21897.033    34  43862.066    43863.278    44052.462\n 32  K2P+R3        21827.405    36  43726.810    43728.168    43928.406\n 33  K2P+R4        21827.474    38  43730.949    43732.462    43943.745\n 34  K2P+R5        Skipped \n 35  K2P+R6        Skipped \n 36  K2P+R7        Skipped \n 37  K2P+R8        Skipped \n 38  K2P+R9        Skipped \n 39  K2P+R10       Skipped \n 40  HKY           23018.118    35  46106.237    46107.521    46302.233\n 41  HKY+I         21840.178    36  43752.357    43753.715    43953.953\n 42  HKY+G4        21310.582    36  42693.165    42694.523    42894.761\n 43  HKY+I+G4      21295.282    37  42664.563    42665.998    42871.760\n 44  HKY+R2        21433.534    37  42941.068    42942.503    43148.265\n 45  HKY+R3        21283.315    39  42644.629    42646.223    42863.026\n 46  HKY+R4        21270.262    41  42622.524    42624.285    42852.120\n 47  HKY+R5        21270.288    43  42626.576    42628.513    42867.372\n 48  HKY+R6        Skipped \n 49  HKY+R7        Skipped \n 50  HKY+R8        Skipped \n 51  HKY+R9        Skipped \n 52  HKY+R10       Skipped \n 53  TNe           23212.915    33  46491.830    46492.973    46676.627\n 54  TNe+I         22133.507    34  44335.014    44336.226    44525.411\n 55  TNe+G4        21727.297    34  43522.594    43523.807    43712.991\n 56  TNe+I+G4      21717.349    35  43504.698    43505.983    43700.695\n 57  TNe+R2        21782.575    35  43635.149    43636.434    43831.146\n 58  TNe+R3        21712.182    37  43498.363    43499.798    43705.559\n 59  TNe+R4        21711.649    39  43501.299    43502.892    43719.695\n 60  TNe+R5        Skipped \n 61  TNe+R6        Skipped \n 62  TNe+R7        Skipped \n 63  TNe+R8        Skipped \n 64  TNe+R9        Skipped \n 65  TNe+R10       Skipped \n 66  TN            22972.552    36  46017.103    46018.462    46218.700\n 67  TN+I          21814.008    37  43702.017    43703.452    43909.213\n 68  TN+G4         21283.505    37  42641.011    42642.446    42848.207\n 69  TN+I+G4       21272.130    38  42620.259    42621.772    42833.056\n 70  TN+R2         21396.704    38  42869.409    42870.922    43082.205\n 71  TN+R3         21265.609    40  42611.219    42612.895    42835.215\n 72  TN+R4         21252.633    42  42589.266    42591.113    42824.462\n 73  TN+R5         21252.262    44  42592.524    42594.551    42838.920\n 74  TN+R6         Skipped \n 75  TN+R7         Skipped \n 76  TN+R8         Skipped \n 77  TN+R9         Skipped \n 78  TN+R10        Skipped \n 79  K3P           23305.562    33  46677.123    46678.266    46861.920\n 80  K3P+I         22218.120    34  44504.241    44505.453    44694.637\n 81  K3P+G4        21852.520    34  43773.039    43774.252    43963.436\n 82  K3P+I+G4      21837.799    35  43745.598    43746.883    43941.595\n 83  K3P+R2        21896.658    35  43863.317    43864.601    44059.313\n 84  K3P+R3        21827.258    37  43728.516    43729.950    43935.712\n 85  K3P+R4        21822.329    39  43722.659    43724.252    43941.055\n 86  K3P+R5        21822.317    41  43726.634    43728.395    43956.230\n 87  K3P+R6        Skipped \n 88  K3P+R7        Skipped \n 89  K3P+R8        Skipped \n 90  K3P+R9        Skipped \n 91  K3P+R10       Skipped \n 92  K3Pu          23017.844    36  46107.688    46109.046    46309.284\n 93  K3Pu+I        21839.406    37  43752.811    43754.246    43960.007\n 94  K3Pu+G4       21309.554    37  42693.107    42694.542    42900.304\n 95  K3Pu+I+G4     21294.696    38  42665.392    42666.905    42878.189\n 96  K3Pu+R2       21431.471    38  42938.941    42940.454    43151.737\n 97  K3Pu+R3       21282.616    40  42645.233    42646.909    42869.229\n 98  K3Pu+R4       21269.676    42  42623.352    42625.199    42858.547\n 99  K3Pu+R5       21269.582    44  42627.164    42629.191    42873.559\n100  K3Pu+R6       Skipped \n101  K3Pu+R7       Skipped \n102  K3Pu+R8       Skipped \n103  K3Pu+R9       Skipped \n104  K3Pu+R10      Skipped \n105  TPM2          22733.663    36  45539.327    45540.685    45740.923\n106  TPM2+I        21648.032    37  43370.063    43371.498    43577.260\n107  TPM2+G4       21239.649    37  42553.299    42554.733    42760.495\n108  TPM2+I+G4     21226.036    38  42528.072    42529.585    42740.868\n109  TPM2+R2       21301.736    38  42679.473    42680.986    42892.269\n110  TPM2+R3       21216.523    40  42513.047    42514.723    42737.043\n111  TPM2+R4       21212.102    42  42508.205    42510.052    42743.401\n112  TPM2+R5       21212.216    44  42512.432    42514.460    42758.828\n113  TPM2+R6       Skipped \n114  TPM2+R7       Skipped \n115  TPM2+R8       Skipped \n116  TPM2+R9       Skipped \n117  TPM2+R10      Skipped \n118  TPM2u         22733.406    36  45538.812    45540.171    45740.409\n119  TPM2u+I       21648.089    37  43370.179    43371.614    43577.375\n120  TPM2u+G4      21239.403    37  42552.806    42554.241    42760.002\n121  TPM2u+I+G4    21225.956    38  42527.912    42529.425    42740.709\n122  TPM2u+R2      21301.698    38  42679.396    42680.909    42892.193\n123  TPM2u+R3      21216.577    40  42513.154    42514.830    42737.150\n124  TPM2u+R4      21212.064    42  42508.128    42509.975    42743.324\n125  TPM2u+R5      21212.006    44  42512.013    42514.041    42758.409\n126  TPM2u+R6      Skipped \n127  TPM2u+R7      Skipped \n128  TPM2u+R8      Skipped \n129  TPM2u+R9      Skipped \n130  TPM2u+R10     Skipped \n131  TPM3          23014.275    36  46100.549    46101.908    46302.146\n132  TPM3+I        21839.318    37  43752.635    43754.070    43959.832\n133  TPM3+G4       21309.335    37  42692.670    42694.104    42899.866\n134  TPM3+I+G4     21294.285    38  42664.570    42666.083    42877.366\n135  TPM3+R2       21433.651    38  42943.301    42944.814    43156.098\n136  TPM3+R3       21282.614    40  42645.229    42646.905    42869.225\n137  TPM3+R4       21268.818    42  42621.636    42623.484    42856.832\n138  TPM3+R5       21268.765    44  42625.530    42627.558    42871.926\n139  TPM3+R6       Skipped \n140  TPM3+R7       Skipped \n141  TPM3+R8       Skipped \n142  TPM3+R9       Skipped \n143  TPM3+R10      Skipped \n144  TPM3u         23014.180    36  46100.359    46101.718    46301.956\n145  TPM3u+I       21839.311    37  43752.623    43754.057    43959.819\n146  TPM3u+G4      21309.383    37  42692.766    42694.201    42899.962\n147  TPM3u+I+G4    21293.976    38  42663.951    42665.464    42876.747\n148  TPM3u+R2      21433.469    38  42942.937    42944.450    43155.734\n149  TPM3u+R3      21282.700    40  42645.400    42647.076    42869.396\n150  TPM3u+R4      21268.703    42  42621.406    42623.253    42856.602\n151  TPM3u+R5      21268.774    44  42625.547    42627.575    42871.943\n152  TPM3u+R6      Skipped \n153  TPM3u+R7      Skipped \n154  TPM3u+R8      Skipped \n155  TPM3u+R9      Skipped \n156  TPM3u+R10     Skipped \n157  TIMe          23212.497    34  46492.994    46494.207    46683.391\n158  TIMe+I        22133.052    35  44336.104    44337.388    44532.100\n159  TIMe+G4       21727.187    35  43524.374    43525.659    43720.371\n160  TIMe+I+G4     21717.273    36  43506.547    43507.905    43708.143\n161  TIMe+R2       21782.293    36  43636.586    43637.944    43838.182\n162  TIMe+R3       21712.127    38  43500.254    43501.767    43713.050\n163  TIMe+R4       21711.535    40  43503.070    43504.746    43727.066\n164  TIMe+R5       Skipped \n165  TIMe+R6       Skipped \n166  TIMe+R7       Skipped \n167  TIMe+R8       Skipped \n168  TIMe+R9       Skipped \n169  TIMe+R10      Skipped \n170  TIM           22972.241    37  46018.482    46019.916    46225.678\n171  TIM+I         21813.137    38  43702.274    43703.787    43915.070\n172  TIM+G4        21282.576    38  42641.152    42642.665    42853.948\n173  TIM+I+G4      21270.947    39  42619.894    42621.487    42838.290\n174  TIM+R2        21394.611    39  42867.222    42868.815    43085.618\n175  TIM+R3        21264.397    41  42610.794    42612.555    42840.390\n176  TIM+R4        21251.448    43  42588.896    42590.832    42829.692\n177  TIM+R5        21251.477    45  42592.954    42595.074    42844.949\n178  TIM+R6        Skipped \n179  TIM+R7        Skipped \n180  TIM+R8        Skipped \n181  TIM+R9        Skipped \n182  TIM+R10       Skipped \n183  TIM2e         22744.793    34  45557.586    45558.799    45747.983\n184  TIM2e+I       21720.548    35  43511.095    43512.379    43707.092\n185  TIM2e+G4      21331.116    35  42732.232    42733.516    42928.228\n186  TIM2e+I+G4    21318.226    36  42708.453    42709.811    42910.049\n187  TIM2e+R2      21385.673    36  42843.346    42844.704    43044.942\n188  TIM2e+R3      21312.184    38  42700.368    42701.881    42913.164\n189  TIM2e+R4      21309.513    40  42699.026    42700.702    42923.022\n190  TIM2e+R5      21309.312    42  42702.623    42704.471    42937.819\n191  TIM2e+R6      Skipped \n192  TIM2e+R7      Skipped \n193  TIM2e+R8      Skipped \n194  TIM2e+R9      Skipped \n195  TIM2e+R10     Skipped \n196  TIM2          22689.992    37  45453.985    45455.419    45661.181\n197  TIM2+I        21619.230    38  43314.461    43315.974    43527.257\n198  TIM2+G4       21168.318    38  42412.636    42414.149    42625.433\n199  TIM2+I+G4     21160.156    39  42398.313    42399.906    42616.709\n200  TIM2+R2       21248.620    39  42575.239    42576.833    42793.635\n201  TIM2+R3       21157.843    41  42397.687    42399.447    42627.283\n202  TIM2+R4       21156.416    43  42398.831    42400.768    42639.627\n203  TIM2+R5       Skipped \n204  TIM2+R6       Skipped \n205  TIM2+R7       Skipped \n206  TIM2+R8       Skipped \n207  TIM2+R9       Skipped \n208  TIM2+R10      Skipped \n209  TIM3e         23211.540    34  46491.080    46492.293    46681.477\n210  TIM3e+I       22132.950    35  44335.900    44337.185    44531.897\n211  TIM3e+G4      21726.639    35  43523.278    43524.563    43719.275\n212  TIM3e+I+G4    21716.701    36  43505.402    43506.760    43706.998\n213  TIM3e+R2      21782.541    36  43637.082    43638.441    43838.679\n214  TIM3e+R3      21711.743    38  43499.486    43500.999    43712.282\n215  TIM3e+R4      21711.114    40  43502.229    43503.905    43726.225\n216  TIM3e+R5      Skipped \n217  TIM3e+R6      Skipped \n218  TIM3e+R7      Skipped \n219  TIM3e+R8      Skipped \n220  TIM3e+R9      Skipped \n221  TIM3e+R10     Skipped \n222  TIM3          22968.886    37  46011.772    46013.206    46218.968\n223  TIM3+I        21813.331    38  43702.663    43704.176    43915.459\n224  TIM3+G4       21282.240    38  42640.480    42641.993    42853.276\n225  TIM3+I+G4     21271.300    39  42620.600    42622.194    42838.997\n226  TIM3+R2       21396.400    39  42870.799    42872.393    43089.195\n227  TIM3+R3       21265.034    41  42612.069    42613.829    42841.665\n228  TIM3+R4       21251.169    43  42588.337    42590.274    42829.133\n229  TIM3+R5       21251.878    45  42593.756    42595.876    42845.751\n230  TIM3+R6       Skipped \n231  TIM3+R7       Skipped \n232  TIM3+R8       Skipped \n233  TIM3+R9       Skipped \n234  TIM3+R10      Skipped \n235  TVMe          22875.546    35  45821.093    45822.377    46017.089\n236  TVMe+I        21829.758    36  43731.517    43732.875    43933.113\n237  TVMe+G4       21438.083    36  42948.165    42949.524    43149.762\n238  TVMe+I+G4     21421.786    37  42917.572    42919.006    43124.768\n239  TVMe+R2       21496.835    37  43067.670    43069.105    43274.867\n240  TVMe+R3       21415.190    39  42908.381    42909.974    43126.777\n241  TVMe+R4       21412.215    41  42906.430    42908.191    43136.026\n242  TVMe+R5       21412.162    43  42910.325    42912.261    43151.120\n243  TVMe+R6       Skipped \n244  TVMe+R7       Skipped \n245  TVMe+R8       Skipped \n246  TVMe+R9       Skipped \n247  TVMe+R10      Skipped \n248  TVM           22798.294    38  45672.587    45674.100    45885.383\n249  TVM+I         21689.612    39  43457.224    43458.818    43675.620\n250  TVM+G4        21271.648    39  42621.296    42622.890    42839.693\n251  TVM+I+G4      21257.368    40  42594.736    42596.412    42818.732\n252  TVM+R2        21337.993    40  42755.986    42757.662    42979.982\n253  TVM+R3        21249.490    42  42582.981    42584.828    42818.176\n254  TVM+R4        21247.204    44  42582.409    42584.436    42828.804\n255  TVM+R5        21246.981    46  42585.961    42588.178    42843.557\n256  TVM+R6        Skipped \n257  TVM+R7        Skipped \n258  TVM+R8        Skipped \n259  TVM+R9        Skipped \n260  TVM+R10       Skipped \n261  SYM           22739.359    36  45550.717    45552.076    45752.314\n262  SYM+I         21715.774    37  43505.547    43506.982    43712.743\n263  SYM+G4        21327.796    37  42729.592    42731.027    42936.789\n264  SYM+I+G4      21315.026    38  42706.053    42707.566    42918.849\n265  SYM+R2        21382.535    38  42841.071    42842.584    43053.867\n266  SYM+R3        21308.975    40  42697.950    42699.626    42921.946\n267  SYM+R4        21307.048    42  42698.096    42699.944    42933.292\n268  SYM+R5        Skipped \n269  SYM+R6        Skipped \n270  SYM+R7        Skipped \n271  SYM+R8        Skipped \n272  SYM+R9        Skipped \n273  SYM+R10       Skipped \n274  GTR           22681.748    39  45441.496    45443.090    45659.893\n275  GTR+I         21613.686    40  43307.372    43309.048    43531.368\n276  GTR+G4        21164.299    40  42408.597    42410.273    42632.593\n277  GTR+I+G4      21155.962    41  42393.924    42395.684    42623.520\n278  GTR+R2        21244.496    41  42570.993    42572.754    42800.589\n279  GTR+R3        21153.637    43  42393.273    42395.210    42634.069\n280  GTR+R4        21152.640    45  42395.280    42397.401    42647.276\n281  GTR+R5        Skipped \n282  GTR+R6        Skipped \n283  GTR+R7        Skipped \n284  GTR+R8        Skipped \n285  GTR+R9        Skipped \n286  GTR+R10       Skipped \nAkaike Information Criterion:           GTR+R3\nCorrected Akaike Information Criterion: GTR+R3\nBayesian Information Criterion:         TIM2+I+G4\nBest-fit model: GTR+R3 chosen according to AIC\n\nAll model information printed to PREF.model\nCPU time for ModelFinder: 174.946 seconds (0h:2m:54s)\nWall-clock time for ModelFinder: 175.499 seconds (0h:2m:55s)\n\nNOTE: 1 MB RAM (0 GB) is required!\nEstimate model parameters (epsilon = 0.100)\n1. Initial log-likelihood: -22209.451\n2. Current log-likelihood: -21189.808\n3. Current log-likelihood: -21166.779\n4. Current log-likelihood: -21162.225\n5. Current log-likelihood: -21160.182\n6. Current log-likelihood: -21159.101\n7. Current log-likelihood: -21158.508\n8. Current log-likelihood: -21158.186\n9. Current log-likelihood: -21157.982\n10. Current log-likelihood: -21157.853\nOptimal log-likelihood: -21157.756\nRate parameters:  A-C: 4.099  A-G: 5.690  A-T: 4.140  C-G: 0.454  C-T: 16.195  G-T: 1.000\nBase frequencies:   A: 0.355  C: 0.228  G: 0.192  T: 0.225\nSite proportion and rates:  (0.438,0.073) (0.329,0.856) (0.233,2.948)\nParameters optimization took 10 rounds (1.427 sec)\nComputing ML distances based on estimated model parameters... 0.007 sec\nComputing BIONJ tree...\n0.892 seconds\nLog-likelihood of BIONJ tree: -21151.349\n--------------------------------------------------------------------\n|             INITIALIZING CANDIDATE TREE SET                      |\n--------------------------------------------------------------------\nGenerating 98 parsimony trees... 0.378 second\nComputing log-likelihood of 98 initial trees ... 1.882 seconds\nCurrent best score: -21151.349\n\nDo NNI search on 20 best initial trees\nEstimate model parameters (epsilon = 0.100)\nBETTER TREE FOUND at iteration 1: -21151.299\nEstimate model parameters (epsilon = 0.100)\nBETTER TREE FOUND at iteration 2: -21147.009\nIteration 10 / LogL: -21151.609 / Time: 0h:3m:2s\nIteration 20 / LogL: -21147.048 / Time: 0h:3m:4s\nFinish initializing candidate tree set (2)\nCurrent best tree score: -21147.009 / CPU time: 4.597\nNumber of iterations: 20\n--------------------------------------------------------------------\n|               OPTIMIZING CANDIDATE TREE SET                      |\n--------------------------------------------------------------------\nIteration 30 / LogL: -21147.025 / Time: 0h:3m:5s (0h:0m:24s left)\nIteration 40 / LogL: -21151.341 / Time: 0h:3m:6s (0h:0m:17s left)\nIteration 50 / LogL: -21151.309 / Time: 0h:3m:8s (0h:0m:13s left)\nUPDATE BEST LOG-LIKELIHOOD: -21147.009\nIteration 60 / LogL: -21147.048 / Time: 0h:3m:9s (0h:0m:9s left)\nIteration 70 / LogL: -21147.192 / Time: 0h:3m:10s (0h:0m:7s left)\nIteration 80 / LogL: -21147.082 / Time: 0h:3m:12s (0h:0m:4s left)\nIteration 90 / LogL: -21147.201 / Time: 0h:3m:13s (0h:0m:2s left)\nIteration 100 / LogL: -21147.945 / Time: 0h:3m:15s (0h:0m:0s left)\nTREE SEARCH COMPLETED AFTER 103 ITERATIONS / Time: 0h:3m:15s\n\n--------------------------------------------------------------------\n|                    FINALIZING TREE SEARCH                        |\n--------------------------------------------------------------------\nPerforms final model parameters optimization\nEstimate model parameters (epsilon = 0.010)\n1. Initial log-likelihood: -21147.009\nOptimal log-likelihood: -21147.007\nRate parameters:  A-C: 4.073  A-G: 5.665  A-T: 4.139  C-G: 0.467  C-T: 16.215  G-T: 1.000\nBase frequencies:   A: 0.355  C: 0.228  G: 0.192  T: 0.225\nSite proportion and rates:  (0.442,0.075) (0.327,0.864) (0.231,2.961)\nParameters optimization took 1 rounds (0.080 sec)\nBEST SCORE FOUND : -21147.007\nTotal tree length: 4.143\n\nTotal number of iterations: 103\nCPU time used for tree search: 16.141 sec (0h:0m:16s)\nWall-clock time used for tree search: 16.327 sec (0h:0m:16s)\nTotal CPU time used: 192.652 sec (0h:3m:12s)\nTotal wall-clock time used: 195.872 sec (0h:3m:15s)\n\nAnalysis results written to: \n  IQ-TREE report:                PREF.iqtree\n  Maximum-likelihood tree:       PREF.treefile\n  Likelihood distances:          PREF.mldist\n  Screen log file:               PREF.log\n\nDate and Time: Wed Jun 26 12:30:08 2019\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:26:39.097761", "stderr": "", "model_class": "Job", "params": {"general_options": "{\"keep_ident\": \"false\", \"s\": {\"values\": [{\"id\": 1069679, \"src\": \"hda\"}]}, \"safe\": \"false\", \"seed\": \"\", \"st\": \"DNA\", \"t\": null, \"te\": null}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "modelling_parameters": "{\"automatic_model\": {\"cmax\": \"10\", \"cmin\": \"2\", \"cond_model\": {\"__current_case__\": 1, \"m\": \"\", \"opt_custommodel\": \"false\"}, \"madd\": \"\", \"mdef\": null, \"merit\": \"AIC\", \"mfreq\": \"\", \"mrate\": \"\", \"mset\": \"\", \"msub\": \"nuclear\", \"mtree\": \"false\", \"rcluster\": \"\"}, \"partition_model\": {\"q\": null, \"sp\": null, \"spp\": \"false\"}, \"rate_heterogeneity\": {\"a\": \"\", \"gmedian\": \"false\", \"i\": \"\", \"opt_gamma_inv\": \"false\", \"wsr\": \"false\"}, \"site_specific_frequency\": {\"fmax\": \"false\", \"fs\": \"\", \"ft\": null}, \"specifying_substitution\": {\"mwopt\": \"false\"}}", "dbkey": "\"?\"", "miscellaneous_options": "{\"fconst\": \"\"}", "likelihood_mapping": "{\"lmap\": \"\", \"lmclust\": null, \"wql\": \"false\"}", "tree_parameters": "{\"computing_robinson_foulds\": {\"rf\": null, \"rf_adj\": \"false\", \"rf_all\": \"false\"}, \"constructing_consensus\": {\"bi\": \"\", \"con\": \"false\", \"minsup\": \"0.0\", \"net\": \"false\", \"sup\": null, \"suptag\": \"\"}, \"generating_random\": {\"r\": \"\", \"rbal\": \"false\", \"rcat\": \"false\", \"rcsg\": \"false\", \"rlen\": \"\", \"ru\": \"false\"}, \"single_branch\": {\"abayes\": \"false\", \"alrt\": \"\", \"lbp\": \"\"}, \"tree_search\": {\"allnni\": \"false\", \"djc\": \"false\", \"g\": null, \"n\": \"\", \"nbest\": \"5\", \"ninit\": \"100\", \"nstop\": \"100\", \"ntop\": \"20\", \"pers\": \"0.5\", \"sprrad\": \"6\"}, \"tree_topology\": {\"au\": \"false\", \"z\": null, \"zb\": \"\", \"zw\": \"false\"}}", "bootstrap_parameters": "{\"nonparametric_bootstrap\": {\"b\": \"\", \"bc\": \"false\", \"bo\": \"false\"}, \"ultrafast_bootstrap\": {\"bb\": \"\", \"bcor\": \"0.99\", \"beps\": \"0.5\", \"bnni\": \"false\", \"bspec\": \"\", \"nm\": \"1000\", \"nstep\": \"100\", \"wbt\": \"false\", \"wbtl\": \"false\"}}"}, "tool_stdout": "IQ-TREE multicore version 1.5.5 for Linux 64-bit built Jul  8 2018\nCopyright (c) 2011-2017 by Bui Quang Minh, Nguyen Lam Tung,\nOlga Chernomor, Heiko Schmidt, and Arndt von Haeseler.\n\nHost:    galaxy-aust-w3 (AVX, FMA3, 62 GB RAM)\nCommand: iqtree -pre PREF -nt 1 -redo -s /mnt/galaxy/files/000/926/dataset_926478.dat -st DNA -msub nuclear -cmin 2 -cmax 10 -merit AIC -ninit 100 -ntop 20 -nbest 5 -nstop 100 -sprrad 6 -pers 0.5 -minsup 0.0 -nm 1000 -bcor 0.99 -nstep 100 -beps 0.5\nSeed:    473405 (Using SPRNG - Scalable Parallel Random Number Generator)\nTime:    Wed Jun 26 12:26:52 2019\nKernel:  AVX+FMA - 1 threads (16 CPU cores detected)\n\nReading alignment file /mnt/galaxy/files/000/926/dataset_926478.dat ... Phylip format detected\nAlignment most likely contains DNA/RNA sequences\nAlignment has 17 sequences with 1998 columns and 1152 patterns (1009 informative sites, 686 constant sites)\n           Gap/Ambiguity  Composition  p-value\n   1  LngfishAu    0.15%    passed      6.20%\n   2  LngfishSA    0.00%    failed      0.62%\n   3  LngfishAf    0.05%    failed      1.60%\n   4  Frog         0.05%    passed     58.01%\n   5  Turtle       0.15%    passed     44.25%\n   6  Sphenodon    0.10%    passed     59.78%\n   7  Lizard       0.90%    passed     38.67%\n   8  Crocodile    0.35%    failed      2.51%\n   9  Bird         0.00%    failed      0.00%\n  10  Human        0.00%    failed      0.85%\n  11  Seal         0.00%    passed     68.93%\n  12  Cow          0.00%    passed     59.11%\n  13  Whale        0.00%    passed     97.83%\n  14  Mouse        0.05%    failed      1.43%\n  15  Rat          0.00%    passed     39.69%\n  16  Platypus     0.00%    failed      3.46%\n  17  Opossum      0.00%    failed      0.01%\n****  TOTAL        0.11%  8 sequences failed composition chi2 test (p-value<5%; df=3)\n\nCreate initial parsimony tree by phylogenetic likelihood library (PLL)... 0.003 seconds\n\nNOTE: ModelFinder requires 6 MB RAM!\nModelFinder will test 286 DNA models (sample size: 1998) ...\n No. Model         -LnL         df  AIC          AICc         BIC\n  1  JC            23650.090    31  47362.180    47363.189    47535.777\n  2  JC+I          22582.945    32  45229.889    45230.964    45409.086\n  3  JC+G4         22261.254    32  44586.508    44587.583    44765.705\n  4  JC+I+G4       22247.376    33  44560.751    44561.894    44745.548\n  5  JC+R2         22284.445    33  44634.889    44636.032    44819.686\n  6  JC+R3         22236.846    35  44543.691    44544.976    44739.688\n  7  JC+R4         22236.897    37  44547.793    44549.228    44754.990\n  8  JC+R5         Skipped \n  9  JC+R6         Skipped \n 10  JC+R7         Skipped \n 11  JC+R8         Skipped \n 12  JC+R9         Skipped \n 13  JC+R10        Skipped \n 14  F81           23444.425    34  46956.851    46958.063    47147.247\n 15  F81+I         22325.057    35  44720.114    44721.399    44916.111\n 16  F81+G4        21946.316    35  43962.632    43963.916    44158.629\n 17  F81+I+G4      21932.262    36  43936.525    43937.883    44138.121\n 18  F81+R2        21990.940    36  44053.881    44055.239    44255.477\n 19  F81+R3        21923.806    38  43923.611    43925.124    44136.407\n 20  F81+R4        21923.884    40  43927.768    43929.444    44151.764\n 21  F81+R5        Skipped \n 22  F81+R6        Skipped \n 23  F81+R7        Skipped \n 24  F81+R8        Skipped \n 25  F81+R9        Skipped \n 26  F81+R10       Skipped \n 27  K2P           23306.054    32  46676.107    46677.182    46855.304\n 28  K2P+I         22218.508    33  44503.017    44504.159    44687.813\n 29  K2P+G4        21852.727    33  43771.455    43772.597    43956.252\n 30  K2P+I+G4      21837.944    34  43743.889    43745.101    43934.286\n 31  K2P+R2        21897.033    34  43862.066    43863.278    44052.462\n 32  K2P+R3        21827.405    36  43726.810    43728.168    43928.406\n 33  K2P+R4        21827.474    38  43730.949    43732.462    43943.745\n 34  K2P+R5        Skipped \n 35  K2P+R6        Skipped \n 36  K2P+R7        Skipped \n 37  K2P+R8        Skipped \n 38  K2P+R9        Skipped \n 39  K2P+R10       Skipped \n 40  HKY           23018.118    35  46106.237    46107.521    46302.233\n 41  HKY+I         21840.178    36  43752.357    43753.715    43953.953\n 42  HKY+G4        21310.582    36  42693.165    42694.523    42894.761\n 43  HKY+I+G4      21295.282    37  42664.563    42665.998    42871.760\n 44  HKY+R2        21433.534    37  42941.068    42942.503    43148.265\n 45  HKY+R3        21283.315    39  42644.629    42646.223    42863.026\n 46  HKY+R4        21270.262    41  42622.524    42624.285    42852.120\n 47  HKY+R5        21270.288    43  42626.576    42628.513    42867.372\n 48  HKY+R6        Skipped \n 49  HKY+R7        Skipped \n 50  HKY+R8        Skipped \n 51  HKY+R9        Skipped \n 52  HKY+R10       Skipped \n 53  TNe           23212.915    33  46491.830    46492.973    46676.627\n 54  TNe+I         22133.507    34  44335.014    44336.226    44525.411\n 55  TNe+G4        21727.297    34  43522.594    43523.807    43712.991\n 56  TNe+I+G4      21717.349    35  43504.698    43505.983    43700.695\n 57  TNe+R2        21782.575    35  43635.149    43636.434    43831.146\n 58  TNe+R3        21712.182    37  43498.363    43499.798    43705.559\n 59  TNe+R4        21711.649    39  43501.299    43502.892    43719.695\n 60  TNe+R5        Skipped \n 61  TNe+R6        Skipped \n 62  TNe+R7        Skipped \n 63  TNe+R8        Skipped \n 64  TNe+R9        Skipped \n 65  TNe+R10       Skipped \n 66  TN            22972.552    36  46017.103    46018.462    46218.700\n 67  TN+I          21814.008    37  43702.017    43703.452    43909.213\n 68  TN+G4         21283.505    37  42641.011    42642.446    42848.207\n 69  TN+I+G4       21272.130    38  42620.259    42621.772    42833.056\n 70  TN+R2         21396.704    38  42869.409    42870.922    43082.205\n 71  TN+R3         21265.609    40  42611.219    42612.895    42835.215\n 72  TN+R4         21252.633    42  42589.266    42591.113    42824.462\n 73  TN+R5         21252.262    44  42592.524    42594.551    42838.920\n 74  TN+R6         Skipped \n 75  TN+R7         Skipped \n 76  TN+R8         Skipped \n 77  TN+R9         Skipped \n 78  TN+R10        Skipped \n 79  K3P           23305.562    33  46677.123    46678.266    46861.920\n 80  K3P+I         22218.120    34  44504.241    44505.453    44694.637\n 81  K3P+G4        21852.520    34  43773.039    43774.252    43963.436\n 82  K3P+I+G4      21837.799    35  43745.598    43746.883    43941.595\n 83  K3P+R2        21896.658    35  43863.317    43864.601    44059.313\n 84  K3P+R3        21827.258    37  43728.516    43729.950    43935.712\n 85  K3P+R4        21822.329    39  43722.659    43724.252    43941.055\n 86  K3P+R5        21822.317    41  43726.634    43728.395    43956.230\n 87  K3P+R6        Skipped \n 88  K3P+R7        Skipped \n 89  K3P+R8        Skipped \n 90  K3P+R9        Skipped \n 91  K3P+R10       Skipped \n 92  K3Pu          23017.844    36  46107.688    46109.046    46309.284\n 93  K3Pu+I        21839.406    37  43752.811    43754.246    43960.007\n 94  K3Pu+G4       21309.554    37  42693.107    42694.542    42900.304\n 95  K3Pu+I+G4     21294.696    38  42665.392    42666.905    42878.189\n 96  K3Pu+R2       21431.471    38  42938.941    42940.454    43151.737\n 97  K3Pu+R3       21282.616    40  42645.233    42646.909    42869.229\n 98  K3Pu+R4       21269.676    42  42623.352    42625.199    42858.547\n 99  K3Pu+R5       21269.582    44  42627.164    42629.191    42873.559\n100  K3Pu+R6       Skipped \n101  K3Pu+R7       Skipped \n102  K3Pu+R8       Skipped \n103  K3Pu+R9       Skipped \n104  K3Pu+R10      Skipped \n105  TPM2          22733.663    36  45539.327    45540.685    45740.923\n106  TPM2+I        21648.032    37  43370.063    43371.498    43577.260\n107  TPM2+G4       21239.649    37  42553.299    42554.733    42760.495\n108  TPM2+I+G4     21226.036    38  42528.072    42529.585    42740.868\n109  TPM2+R2       21301.736    38  42679.473    42680.986    42892.269\n110  TPM2+R3       21216.523    40  42513.047    42514.723    42737.043\n111  TPM2+R4       21212.102    42  42508.205    42510.052    42743.401\n112  TPM2+R5       21212.216    44  42512.432    42514.460    42758.828\n113  TPM2+R6       Skipped \n114  TPM2+R7       Skipped \n115  TPM2+R8       Skipped \n116  TPM2+R9       Skipped \n117  TPM2+R10      Skipped \n118  TPM2u         22733.406    36  45538.812    45540.171    45740.409\n119  TPM2u+I       21648.089    37  43370.179    43371.614    43577.375\n120  TPM2u+G4      21239.403    37  42552.806    42554.241    42760.002\n121  TPM2u+I+G4    21225.956    38  42527.912    42529.425    42740.709\n122  TPM2u+R2      21301.698    38  42679.396    42680.909    42892.193\n123  TPM2u+R3      21216.577    40  42513.154    42514.830    42737.150\n124  TPM2u+R4      21212.064    42  42508.128    42509.975    42743.324\n125  TPM2u+R5      21212.006    44  42512.013    42514.041    42758.409\n126  TPM2u+R6      Skipped \n127  TPM2u+R7      Skipped \n128  TPM2u+R8      Skipped \n129  TPM2u+R9      Skipped \n130  TPM2u+R10     Skipped \n131  TPM3          23014.275    36  46100.549    46101.908    46302.146\n132  TPM3+I        21839.318    37  43752.635    43754.070    43959.832\n133  TPM3+G4       21309.335    37  42692.670    42694.104    42899.866\n134  TPM3+I+G4     21294.285    38  42664.570    42666.083    42877.366\n135  TPM3+R2       21433.651    38  42943.301    42944.814    43156.098\n136  TPM3+R3       21282.614    40  42645.229    42646.905    42869.225\n137  TPM3+R4       21268.818    42  42621.636    42623.484    42856.832\n138  TPM3+R5       21268.765    44  42625.530    42627.558    42871.926\n139  TPM3+R6       Skipped \n140  TPM3+R7       Skipped \n141  TPM3+R8       Skipped \n142  TPM3+R9       Skipped \n143  TPM3+R10      Skipped \n144  TPM3u         23014.180    36  46100.359    46101.718    46301.956\n145  TPM3u+I       21839.311    37  43752.623    43754.057    43959.819\n146  TPM3u+G4      21309.383    37  42692.766    42694.201    42899.962\n147  TPM3u+I+G4    21293.976    38  42663.951    42665.464    42876.747\n148  TPM3u+R2      21433.469    38  42942.937    42944.450    43155.734\n149  TPM3u+R3      21282.700    40  42645.400    42647.076    42869.396\n150  TPM3u+R4      21268.703    42  42621.406    42623.253    42856.602\n151  TPM3u+R5      21268.774    44  42625.547    42627.575    42871.943\n152  TPM3u+R6      Skipped \n153  TPM3u+R7      Skipped \n154  TPM3u+R8      Skipped \n155  TPM3u+R9      Skipped \n156  TPM3u+R10     Skipped \n157  TIMe          23212.497    34  46492.994    46494.207    46683.391\n158  TIMe+I        22133.052    35  44336.104    44337.388    44532.100\n159  TIMe+G4       21727.187    35  43524.374    43525.659    43720.371\n160  TIMe+I+G4     21717.273    36  43506.547    43507.905    43708.143\n161  TIMe+R2       21782.293    36  43636.586    43637.944    43838.182\n162  TIMe+R3       21712.127    38  43500.254    43501.767    43713.050\n163  TIMe+R4       21711.535    40  43503.070    43504.746    43727.066\n164  TIMe+R5       Skipped \n165  TIMe+R6       Skipped \n166  TIMe+R7       Skipped \n167  TIMe+R8       Skipped \n168  TIMe+R9       Skipped \n169  TIMe+R10      Skipped \n170  TIM           22972.241    37  46018.482    46019.916    46225.678\n171  TIM+I         21813.137    38  43702.274    43703.787    43915.070\n172  TIM+G4        21282.576    38  42641.152    42642.665    42853.948\n173  TIM+I+G4      21270.947    39  42619.894    42621.487    42838.290\n174  TIM+R2        21394.611    39  42867.222    42868.815    43085.618\n175  TIM+R3        21264.397    41  42610.794    42612.555    42840.390\n176  TIM+R4        21251.448    43  42588.896    42590.832    42829.692\n177  TIM+R5        21251.477    45  42592.954    42595.074    42844.949\n178  TIM+R6        Skipped \n179  TIM+R7        Skipped \n180  TIM+R8        Skipped \n181  TIM+R9        Skipped \n182  TIM+R10       Skipped \n183  TIM2e         22744.793    34  45557.586    45558.799    45747.983\n184  TIM2e+I       21720.548    35  43511.095    43512.379    43707.092\n185  TIM2e+G4      21331.116    35  42732.232    42733.516    42928.228\n186  TIM2e+I+G4    21318.226    36  42708.453    42709.811    42910.049\n187  TIM2e+R2      21385.673    36  42843.346    42844.704    43044.942\n188  TIM2e+R3      21312.184    38  42700.368    42701.881    42913.164\n189  TIM2e+R4      21309.513    40  42699.026    42700.702    42923.022\n190  TIM2e+R5      21309.312    42  42702.623    42704.471    42937.819\n191  TIM2e+R6      Skipped \n192  TIM2e+R7      Skipped \n193  TIM2e+R8      Skipped \n194  TIM2e+R9      Skipped \n195  TIM2e+R10     Skipped \n196  TIM2          22689.992    37  45453.985    45455.419    45661.181\n197  TIM2+I        21619.230    38  43314.461    43315.974    43527.257\n198  TIM2+G4       21168.318    38  42412.636    42414.149    42625.433\n199  TIM2+I+G4     21160.156    39  42398.313    42399.906    42616.709\n200  TIM2+R2       21248.620    39  42575.239    42576.833    42793.635\n201  TIM2+R3       21157.843    41  42397.687    42399.447    42627.283\n202  TIM2+R4       21156.416    43  42398.831    42400.768    42639.627\n203  TIM2+R5       Skipped \n204  TIM2+R6       Skipped \n205  TIM2+R7       Skipped \n206  TIM2+R8       Skipped \n207  TIM2+R9       Skipped \n208  TIM2+R10      Skipped \n209  TIM3e         23211.540    34  46491.080    46492.293    46681.477\n210  TIM3e+I       22132.950    35  44335.900    44337.185    44531.897\n211  TIM3e+G4      21726.639    35  43523.278    43524.563    43719.275\n212  TIM3e+I+G4    21716.701    36  43505.402    43506.760    43706.998\n213  TIM3e+R2      21782.541    36  43637.082    43638.441    43838.679\n214  TIM3e+R3      21711.743    38  43499.486    43500.999    43712.282\n215  TIM3e+R4      21711.114    40  43502.229    43503.905    43726.225\n216  TIM3e+R5      Skipped \n217  TIM3e+R6      Skipped \n218  TIM3e+R7      Skipped \n219  TIM3e+R8      Skipped \n220  TIM3e+R9      Skipped \n221  TIM3e+R10     Skipped \n222  TIM3          22968.886    37  46011.772    46013.206    46218.968\n223  TIM3+I        21813.331    38  43702.663    43704.176    43915.459\n224  TIM3+G4       21282.240    38  42640.480    42641.993    42853.276\n225  TIM3+I+G4     21271.300    39  42620.600    42622.194    42838.997\n226  TIM3+R2       21396.400    39  42870.799    42872.393    43089.195\n227  TIM3+R3       21265.034    41  42612.069    42613.829    42841.665\n228  TIM3+R4       21251.169    43  42588.337    42590.274    42829.133\n229  TIM3+R5       21251.878    45  42593.756    42595.876    42845.751\n230  TIM3+R6       Skipped \n231  TIM3+R7       Skipped \n232  TIM3+R8       Skipped \n233  TIM3+R9       Skipped \n234  TIM3+R10      Skipped \n235  TVMe          22875.546    35  45821.093    45822.377    46017.089\n236  TVMe+I        21829.758    36  43731.517    43732.875    43933.113\n237  TVMe+G4       21438.083    36  42948.165    42949.524    43149.762\n238  TVMe+I+G4     21421.786    37  42917.572    42919.006    43124.768\n239  TVMe+R2       21496.835    37  43067.670    43069.105    43274.867\n240  TVMe+R3       21415.190    39  42908.381    42909.974    43126.777\n241  TVMe+R4       21412.215    41  42906.430    42908.191    43136.026\n242  TVMe+R5       21412.162    43  42910.325    42912.261    43151.120\n243  TVMe+R6       Skipped \n244  TVMe+R7       Skipped \n245  TVMe+R8       Skipped \n246  TVMe+R9       Skipped \n247  TVMe+R10      Skipped \n248  TVM           22798.294    38  45672.587    45674.100    45885.383\n249  TVM+I         21689.612    39  43457.224    43458.818    43675.620\n250  TVM+G4        21271.648    39  42621.296    42622.890    42839.693\n251  TVM+I+G4      21257.368    40  42594.736    42596.412    42818.732\n252  TVM+R2        21337.993    40  42755.986    42757.662    42979.982\n253  TVM+R3        21249.490    42  42582.981    42584.828    42818.176\n254  TVM+R4        21247.204    44  42582.409    42584.436    42828.804\n255  TVM+R5        21246.981    46  42585.961    42588.178    42843.557\n256  TVM+R6        Skipped \n257  TVM+R7        Skipped \n258  TVM+R8        Skipped \n259  TVM+R9        Skipped \n260  TVM+R10       Skipped \n261  SYM           22739.359    36  45550.717    45552.076    45752.314\n262  SYM+I         21715.774    37  43505.547    43506.982    43712.743\n263  SYM+G4        21327.796    37  42729.592    42731.027    42936.789\n264  SYM+I+G4      21315.026    38  42706.053    42707.566    42918.849\n265  SYM+R2        21382.535    38  42841.071    42842.584    43053.867\n266  SYM+R3        21308.975    40  42697.950    42699.626    42921.946\n267  SYM+R4        21307.048    42  42698.096    42699.944    42933.292\n268  SYM+R5        Skipped \n269  SYM+R6        Skipped \n270  SYM+R7        Skipped \n271  SYM+R8        Skipped \n272  SYM+R9        Skipped \n273  SYM+R10       Skipped \n274  GTR           22681.748    39  45441.496    45443.090    45659.893\n275  GTR+I         21613.686    40  43307.372    43309.048    43531.368\n276  GTR+G4        21164.299    40  42408.597    42410.273    42632.593\n277  GTR+I+G4      21155.962    41  42393.924    42395.684    42623.520\n278  GTR+R2        21244.496    41  42570.993    42572.754    42800.589\n279  GTR+R3        21153.637    43  42393.273    42395.210    42634.069\n280  GTR+R4        21152.640    45  42395.280    42397.401    42647.276\n281  GTR+R5        Skipped \n282  GTR+R6        Skipped \n283  GTR+R7        Skipped \n284  GTR+R8        Skipped \n285  GTR+R9        Skipped \n286  GTR+R10       Skipped \nAkaike Information Criterion:           GTR+R3\nCorrected Akaike Information Criterion: GTR+R3\nBayesian Information Criterion:         TIM2+I+G4\nBest-fit model: GTR+R3 chosen according to AIC\n\nAll model information printed to PREF.model\nCPU time for ModelFinder: 174.946 seconds (0h:2m:54s)\nWall-clock time for ModelFinder: 175.499 seconds (0h:2m:55s)\n\nNOTE: 1 MB RAM (0 GB) is required!\nEstimate model parameters (epsilon = 0.100)\n1. Initial log-likelihood: -22209.451\n2. Current log-likelihood: -21189.808\n3. Current log-likelihood: -21166.779\n4. Current log-likelihood: -21162.225\n5. Current log-likelihood: -21160.182\n6. Current log-likelihood: -21159.101\n7. Current log-likelihood: -21158.508\n8. Current log-likelihood: -21158.186\n9. Current log-likelihood: -21157.982\n10. Current log-likelihood: -21157.853\nOptimal log-likelihood: -21157.756\nRate parameters:  A-C: 4.099  A-G: 5.690  A-T: 4.140  C-G: 0.454  C-T: 16.195  G-T: 1.000\nBase frequencies:   A: 0.355  C: 0.228  G: 0.192  T: 0.225\nSite proportion and rates:  (0.438,0.073) (0.329,0.856) (0.233,2.948)\nParameters optimization took 10 rounds (1.427 sec)\nComputing ML distances based on estimated model parameters... 0.007 sec\nComputing BIONJ tree...\n0.892 seconds\nLog-likelihood of BIONJ tree: -21151.349\n--------------------------------------------------------------------\n|             INITIALIZING CANDIDATE TREE SET                      |\n--------------------------------------------------------------------\nGenerating 98 parsimony trees... 0.378 second\nComputing log-likelihood of 98 initial trees ... 1.882 seconds\nCurrent best score: -21151.349\n\nDo NNI search on 20 best initial trees\nEstimate model parameters (epsilon = 0.100)\nBETTER TREE FOUND at iteration 1: -21151.299\nEstimate model parameters (epsilon = 0.100)\nBETTER TREE FOUND at iteration 2: -21147.009\nIteration 10 / LogL: -21151.609 / Time: 0h:3m:2s\nIteration 20 / LogL: -21147.048 / Time: 0h:3m:4s\nFinish initializing candidate tree set (2)\nCurrent best tree score: -21147.009 / CPU time: 4.597\nNumber of iterations: 20\n--------------------------------------------------------------------\n|               OPTIMIZING CANDIDATE TREE SET                      |\n--------------------------------------------------------------------\nIteration 30 / LogL: -21147.025 / Time: 0h:3m:5s (0h:0m:24s left)\nIteration 40 / LogL: -21151.341 / Time: 0h:3m:6s (0h:0m:17s left)\nIteration 50 / LogL: -21151.309 / Time: 0h:3m:8s (0h:0m:13s left)\nUPDATE BEST LOG-LIKELIHOOD: -21147.009\nIteration 60 / LogL: -21147.048 / Time: 0h:3m:9s (0h:0m:9s left)\nIteration 70 / LogL: -21147.192 / Time: 0h:3m:10s (0h:0m:7s left)\nIteration 80 / LogL: -21147.082 / Time: 0h:3m:12s (0h:0m:4s left)\nIteration 90 / LogL: -21147.201 / Time: 0h:3m:13s (0h:0m:2s left)\nIteration 100 / LogL: -21147.945 / Time: 0h:3m:15s (0h:0m:0s left)\nTREE SEARCH COMPLETED AFTER 103 ITERATIONS / Time: 0h:3m:15s\n\n--------------------------------------------------------------------\n|                    FINALIZING TREE SEARCH                        |\n--------------------------------------------------------------------\nPerforms final model parameters optimization\nEstimate model parameters (epsilon = 0.010)\n1. Initial log-likelihood: -21147.009\nOptimal log-likelihood: -21147.007\nRate parameters:  A-C: 4.073  A-G: 5.665  A-T: 4.139  C-G: 0.467  C-T: 16.215  G-T: 1.000\nBase frequencies:   A: 0.355  C: 0.228  G: 0.192  T: 0.225\nSite proportion and rates:  (0.442,0.075) (0.327,0.864) (0.231,2.961)\nParameters optimization took 1 rounds (0.080 sec)\nBEST SCORE FOUND : -21147.007\nTotal tree length: 4.143\n\nTotal number of iterations: 103\nCPU time used for tree search: 16.141 sec (0h:0m:16s)\nWall-clock time used for tree search: 16.327 sec (0h:0m:16s)\nTotal CPU time used: 192.652 sec (0h:3m:12s)\nTotal wall-clock time used: 195.872 sec (0h:3m:15s)\n\nAnalysis results written to: \n  IQ-TREE report:                PREF.iqtree\n  Maximum-likelihood tree:       PREF.treefile\n  Likelihood distances:          PREF.mldist\n  Screen log file:               PREF.log\n\nDate and Time: Wed Jun 26 12:30:08 2019\n", "job_messages": [], "id": "a285672be4ea6ea8", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/iqtree/iqtree/1.5.5.1-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.4+galaxy3", "time_seconds": 311.3677399158478, "inputs": {"gencode": "1", "standalone": false, "reference_genome|genome_type_select": "indexed", "uglyTestingHack": "enabled"}, "tool_version": "1.16.4+galaxy3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.4+galaxy3", "update_time": "2019-06-26T00:05:07.397503", "inputs": {}, "outputs": {"output": {"src": "hda", "id": "4a8e8c63e4d81c69", "uuid": "ad5a9d5f-07d2-4509-a32f-d7c0a2fde969"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "WARNING: No feature names found for indexing, only reference sequence names will be indexed.\n", "state": "ok", "create_time": "2019-06-26T00:02:18.615432", "stderr": "WARNING: No feature names found for indexing, only reference sequence names will be indexed.\n", "model_class": "Job", "params": {"standalone": "\"false\"", "dbkey": "\"?\"", "reference_genome": "{\"__current_case__\": 0, \"genome_type_select\": \"indexed\", \"genomes\": \"apiMel4\"}", "track_groups": "[]", "plugins": "{\"BlastView\": \"true\", \"ComboTrackSelector\": \"false\", \"GCContent\": \"false\"}", "action": "{\"__current_case__\": 0, \"action_select\": \"create\"}", "gencode": "\"1\"", "jbgen": "{\"aboutDescription\": \"\", \"defaultLocation\": \"\", \"hideGenomeOptions\": \"false\", \"shareLink\": \"true\", \"show_menu\": \"true\", \"show_nav\": \"true\", \"show_overview\": \"true\", \"show_tracklist\": \"true\", \"trackPadding\": \"20\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "uglyTestingHack": "\"enabled\""}, "tool_stdout": "", "job_messages": [], "id": "0ad6dfd4accc2cf1", "job_stdout": ""}, "test_index": 7}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.4+galaxy3-7", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "time_seconds": 66.08823108673096, "inputs": {"rep_contrast_1|contrast": "WT-Mut", "input|format": "matrix", "input|fact|rep_factor_0|groupNames": "Mut,Mut,Mut,WT,WT,WT", "input|counts": {"src": "hda", "id": "2d80ea3ed64d570b"}, "input|fact|rep_factor_0|factorName": "Genotype", "adv|normalisationOption": "TMM", "rep_contrast_0|contrast": "Mut-WT", "adv|topgenes": "6"}, "tool_version": "3.38.3+galaxy2", "output_problems": ["Expected output collection [outTables] to have 2 elements, but it had 0."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "update_time": "2019-06-25T22:48:04.108503", "inputs": {"counts": {"src": "hda", "id": "2d80ea3ed64d570b", "uuid": "164f64b9-2aac-4a91-972c-923d025a9e1d"}}, "outputs": {"outReport": {"src": "hda", "id": "9a9b618febe36ff4", "uuid": "de3e72f6-58ca-402c-a382-3eef9faea982"}}, "history_id": "f840675b8d7f5485", "stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:47:17.419396", "stderr": "", "model_class": "Job", "params": {"adv": "{\"lfc\": \"0.0\", \"normalisationOption\": \"TMM\", \"pAdjust\": \"BH\", \"pVal\": \"0.05\", \"robOption\": \"true\", \"topgenes\": \"6\", \"treat\": \"false\"}", "deMethod": "{\"__current_case__\": 0, \"de_select\": \"voom\", \"weightOption\": \"false\"}", "f": "{\"filt\": {\"__current_case__\": 1, \"filt_select\": \"no\"}}", "dbkey": "\"?\"", "anno": "{\"__current_case__\": 1, \"annoOpt\": \"no\"}", "rep_contrast": "[{\"__index__\": 0, \"contrast\": \"Mut-WT\"}, {\"__index__\": 1, \"contrast\": \"WT-Mut\"}]", "input": "{\"__current_case__\": 1, \"counts\": {\"values\": [{\"id\": 1068347, \"src\": \"hda\"}]}, \"fact\": {\"__current_case__\": 1, \"ffile\": \"no\", \"rep_factor\": [{\"__index__\": 0, \"factorName\": \"Genotype\", \"groupNames\": \"Mut,Mut,Mut,WT,WT,WT\"}]}, \"format\": \"matrix\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "out": "{\"filtCounts\": \"false\", \"libinfo\": \"false\", \"normCounts\": \"false\", \"plots\": \"i\", \"rdaOption\": \"false\", \"rscript\": \"false\"}"}, "tool_stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "job_messages": [], "id": "59cd7bfab3797315", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2-0", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "time_seconds": 64.20206594467163, "inputs": {"anno|geneanno": {"src": "hda", "id": "68df43b930d66b2d"}, "anno|annoOpt": "yes", "input|format": "matrix", "input|fact|rep_factor_0|groupNames": "Mut,Mut,Mut,WT,WT,WT", "input|counts": {"src": "hda", "id": "2d80ea3ed64d570b"}, "input|fact|rep_factor_0|factorName": "Genotype", "adv|normalisationOption": "TMM", "rep_contrast_0|contrast": "Mut-WT", "adv|topgenes": "6"}, "tool_version": "3.38.3+galaxy2", "output_problems": ["Expected output collection [outTables] to have 1 elements, but it had 0."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "update_time": "2019-06-25T22:48:08.954270", "inputs": {"counts": {"src": "hda", "id": "2d80ea3ed64d570b", "uuid": "164f64b9-2aac-4a91-972c-923d025a9e1d"}, "geneanno": {"src": "hda", "id": "68df43b930d66b2d", "uuid": "4618589b-c84a-474b-8941-ca56690cf869"}}, "outputs": {"outReport": {"src": "hda", "id": "cddff7e0c408d6f5", "uuid": "b2921365-3bdd-43df-aa11-36133e974569"}}, "history_id": "f840675b8d7f5485", "stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:47:19.394776", "stderr": "", "model_class": "Job", "params": {"adv": "{\"lfc\": \"0.0\", \"normalisationOption\": \"TMM\", \"pAdjust\": \"BH\", \"pVal\": \"0.05\", \"robOption\": \"true\", \"topgenes\": \"6\", \"treat\": \"false\"}", "deMethod": "{\"__current_case__\": 0, \"de_select\": \"voom\", \"weightOption\": \"false\"}", "f": "{\"filt\": {\"__current_case__\": 1, \"filt_select\": \"no\"}}", "dbkey": "\"?\"", "anno": "{\"__current_case__\": 0, \"annoOpt\": \"yes\", \"geneanno\": {\"values\": [{\"id\": 1068344, \"src\": \"hda\"}]}}", "rep_contrast": "[{\"__index__\": 0, \"contrast\": \"Mut-WT\"}]", "input": "{\"__current_case__\": 1, \"counts\": {\"values\": [{\"id\": 1068347, \"src\": \"hda\"}]}, \"fact\": {\"__current_case__\": 1, \"ffile\": \"no\", \"rep_factor\": [{\"__index__\": 0, \"factorName\": \"Genotype\", \"groupNames\": \"Mut,Mut,Mut,WT,WT,WT\"}]}, \"format\": \"matrix\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "out": "{\"filtCounts\": \"false\", \"libinfo\": \"false\", \"normCounts\": \"false\", \"plots\": \"i\", \"rdaOption\": \"false\", \"rscript\": \"false\"}"}, "tool_stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "job_messages": [], "id": "21f168c6a9fe4418", "job_stdout": null}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "time_seconds": 121.95190501213074, "inputs": {"adv|normalisationOption": "TMM", "out|rscript": true, "input|format": "matrix", "input|fact|rep_factor_0|groupNames": "Mut,Mut,Mut,WT,WT,WT", "input|counts": {"src": "hda", "id": "2d80ea3ed64d570b"}, "out|rdaOption": true, "input|fact|rep_factor_0|factorName": "Genotype", "rep_contrast_0|contrast": "Mut-WT", "adv|topgenes": "6"}, "tool_version": "3.38.3+galaxy2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "update_time": "2019-06-25T22:48:44.935651", "inputs": {"counts": {"src": "hda", "id": "2d80ea3ed64d570b", "uuid": "164f64b9-2aac-4a91-972c-923d025a9e1d"}}, "outputs": {"rscript": {"src": "hda", "id": "fa7af1414365ee18", "uuid": "f099d95e-3639-4b1b-861c-19a7c0152821"}, "outReport": {"src": "hda", "id": "04653b5e31be86e1", "uuid": "ad9d4755-b6bc-4003-b44c-670ca418a33c"}}, "history_id": "f840675b8d7f5485", "stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n[1] \"Saving RData\"\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:47:35.218957", "stderr": "", "model_class": "Job", "params": {"adv": "{\"lfc\": \"0.0\", \"normalisationOption\": \"TMM\", \"pAdjust\": \"BH\", \"pVal\": \"0.05\", \"robOption\": \"true\", \"topgenes\": \"6\", \"treat\": \"false\"}", "deMethod": "{\"__current_case__\": 0, \"de_select\": \"voom\", \"weightOption\": \"false\"}", "f": "{\"filt\": {\"__current_case__\": 1, \"filt_select\": \"no\"}}", "dbkey": "\"?\"", "anno": "{\"__current_case__\": 1, \"annoOpt\": \"no\"}", "rep_contrast": "[{\"__index__\": 0, \"contrast\": \"Mut-WT\"}]", "input": "{\"__current_case__\": 1, \"counts\": {\"values\": [{\"id\": 1068347, \"src\": \"hda\"}]}, \"fact\": {\"__current_case__\": 1, \"ffile\": \"no\", \"rep_factor\": [{\"__index__\": 0, \"factorName\": \"Genotype\", \"groupNames\": \"Mut,Mut,Mut,WT,WT,WT\"}]}, \"format\": \"matrix\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "out": "{\"filtCounts\": \"false\", \"libinfo\": \"false\", \"normCounts\": \"false\", \"plots\": \"i\", \"rdaOption\": \"true\", \"rscript\": \"true\"}"}, "tool_stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n[1] \"Saving RData\"\n", "job_messages": [], "id": "3874b30955a6ece4", "job_stdout": null}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2-2", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "time_seconds": 116.3513491153717, "inputs": {"input|fact|rep_factor_0|factorName": "Genotype", "adv|normalisationOption": "TMM", "input|format": "matrix", "input|fact|rep_factor_0|groupNames": "Mut,Mut,Mut,WT,WT,WT", "input|counts": {"src": "hda", "id": "2d80ea3ed64d570b"}, "input|fact|rep_factor_1|factorName": "Batch", "input|fact|rep_factor_1|groupNames": "b1,b2,b3,b1,b2,b3", "rep_contrast_0|contrast": "Mut-WT", "adv|topgenes": "6"}, "tool_version": "3.38.3+galaxy2", "output_problems": ["Expected output collection [outTables] to have 1 elements, but it had 0."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "update_time": "2019-06-25T22:48:39.597408", "inputs": {"counts": {"src": "hda", "id": "2d80ea3ed64d570b", "uuid": "164f64b9-2aac-4a91-972c-923d025a9e1d"}}, "outputs": {"outReport": {"src": "hda", "id": "4db568f90ce175c2", "uuid": "5a361f05-c501-4e6c-9073-723a9362bae4"}}, "history_id": "f840675b8d7f5485", "stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:47:34.379231", "stderr": "", "model_class": "Job", "params": {"adv": "{\"lfc\": \"0.0\", \"normalisationOption\": \"TMM\", \"pAdjust\": \"BH\", \"pVal\": \"0.05\", \"robOption\": \"true\", \"topgenes\": \"6\", \"treat\": \"false\"}", "deMethod": "{\"__current_case__\": 0, \"de_select\": \"voom\", \"weightOption\": \"false\"}", "f": "{\"filt\": {\"__current_case__\": 1, \"filt_select\": \"no\"}}", "dbkey": "\"?\"", "anno": "{\"__current_case__\": 1, \"annoOpt\": \"no\"}", "rep_contrast": "[{\"__index__\": 0, \"contrast\": \"Mut-WT\"}]", "input": "{\"__current_case__\": 1, \"counts\": {\"values\": [{\"id\": 1068347, \"src\": \"hda\"}]}, \"fact\": {\"__current_case__\": 1, \"ffile\": \"no\", \"rep_factor\": [{\"__index__\": 0, \"factorName\": \"Genotype\", \"groupNames\": \"Mut,Mut,Mut,WT,WT,WT\"}, {\"__index__\": 1, \"factorName\": \"Batch\", \"groupNames\": \"b1,b2,b3,b1,b2,b3\"}]}, \"format\": \"matrix\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "out": "{\"filtCounts\": \"false\", \"libinfo\": \"false\", \"normCounts\": \"false\", \"plots\": \"i\", \"rdaOption\": \"false\", \"rscript\": \"false\"}"}, "tool_stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "job_messages": [], "id": "6a56c2b00f030af0", "job_stdout": null}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2-3", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "time_seconds": 116.48783493041992, "inputs": {"adv|normalisationOption": "TMM", "adv|topgenes": "6", "input|format": "matrix", "input|counts": {"src": "hda", "id": "6137c746c14a041b"}, "rep_contrast_0|contrast": "Mut-WT", "input|fact|ffile": "yes", "input|fact|finfo": {"src": "hda", "id": "fb1656048711c7e1"}}, "tool_version": "3.38.3+galaxy2", "output_problems": ["Expected output collection [outTables] to have 1 elements, but it had 0."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "update_time": "2019-06-25T22:49:21.565510", "inputs": {"counts": {"src": "hda", "id": "6137c746c14a041b", "uuid": "42e52b30-a46a-4560-aba8-5bedd1a992dd"}, "input|finfo": {"src": "hda", "id": "fb1656048711c7e1", "uuid": "3a8ef76f-8664-4722-a84c-0cf857180946"}}, "outputs": {"outReport": {"src": "hda", "id": "bbb14aa121483f76", "uuid": "60094f0a-e33b-4e8d-a17d-6b72ca25917a"}}, "history_id": "f840675b8d7f5485", "stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:48:07.835045", "stderr": "", "model_class": "Job", "params": {"adv": "{\"lfc\": \"0.0\", \"normalisationOption\": \"TMM\", \"pAdjust\": \"BH\", \"pVal\": \"0.05\", \"robOption\": \"true\", \"topgenes\": \"6\", \"treat\": \"false\"}", "deMethod": "{\"__current_case__\": 0, \"de_select\": \"voom\", \"weightOption\": \"false\"}", "f": "{\"filt\": {\"__current_case__\": 1, \"filt_select\": \"no\"}}", "dbkey": "\"?\"", "anno": "{\"__current_case__\": 1, \"annoOpt\": \"no\"}", "rep_contrast": "[{\"__index__\": 0, \"contrast\": \"Mut-WT\"}]", "input": "{\"__current_case__\": 1, \"counts\": {\"values\": [{\"id\": 1068361, \"src\": \"hda\"}]}, \"fact\": {\"__current_case__\": 0, \"ffile\": \"yes\", \"finfo\": {\"values\": [{\"id\": 1068356, \"src\": \"hda\"}]}}, \"format\": \"matrix\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "out": "{\"filtCounts\": \"false\", \"libinfo\": \"false\", \"normCounts\": \"false\", \"plots\": \"i\", \"rdaOption\": \"false\", \"rscript\": \"false\"}"}, "tool_stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "job_messages": [], "id": "2cbb8a47559e4523", "job_stdout": null}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2-4", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "time_seconds": 119.2226448059082, "inputs": {"f|filt|cformat|cntReq": "10", "input|format": "matrix", "input|fact|rep_factor_0|groupNames": "Mut,Mut,Mut,WT,WT,WT", "input|counts": {"src": "hda", "id": "6137c746c14a041b"}, "f|filt|filt_select": "yes", "f|filt|cformat|format_select": "counts", "f|filt|cformat|samples|cntSampleReq": "3", "input|fact|rep_factor_0|factorName": "Genotype", "f|filt|cformat|samples|count_select": "sample", "adv|normalisationOption": "TMM", "rep_contrast_0|contrast": "Mut-WT", "out|filtCounts": true, "out|normCounts": true, "adv|topgenes": "6"}, "tool_version": "3.38.3+galaxy2", "output_problems": ["Job in error state.", "Job in error state.", "Job in error state.", "Expected output collection [outTables] to have 1 elements, but it had 0."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "update_time": "2019-06-25T22:49:10.241440", "inputs": {"counts": {"src": "hda", "id": "6137c746c14a041b", "uuid": "42e52b30-a46a-4560-aba8-5bedd1a992dd"}}, "outputs": {"outFilt": {"src": "hda", "id": "52bdf3f1dfa54ba3", "uuid": "3aed6dcb-13f7-4f99-b4d2-a957c98c7687"}, "outNorm": {"src": "hda", "id": "eb4bc3fda752e3ba", "uuid": "6c3cecdf-dbab-4bbe-964c-ba0b07a6e47b"}, "outReport": {"src": "hda", "id": "7fb270bc09ebfaf4", "uuid": "46f47000-bcef-4533-b0e7-ed5cc0553086"}}, "history_id": "f840675b8d7f5485", "stdout": "[1] \"Extracting counts\"\n[1] \"Outputting filtered counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "error", "create_time": "2019-06-25T22:48:07.463336", "stderr": "", "model_class": "Job", "params": {"adv": "{\"lfc\": \"0.0\", \"normalisationOption\": \"TMM\", \"pAdjust\": \"BH\", \"pVal\": \"0.05\", \"robOption\": \"true\", \"topgenes\": \"6\", \"treat\": \"false\"}", "deMethod": "{\"__current_case__\": 0, \"de_select\": \"voom\", \"weightOption\": \"false\"}", "f": "{\"filt\": {\"__current_case__\": 0, \"cformat\": {\"__current_case__\": 1, \"cntReq\": \"10\", \"format_select\": \"counts\", \"samples\": {\"__current_case__\": 1, \"cntSampleReq\": \"3\", \"count_select\": \"sample\"}}, \"filt_select\": \"yes\"}}", "dbkey": "\"?\"", "anno": "{\"__current_case__\": 1, \"annoOpt\": \"no\"}", "rep_contrast": "[{\"__index__\": 0, \"contrast\": \"Mut-WT\"}]", "input": "{\"__current_case__\": 1, \"counts\": {\"values\": [{\"id\": 1068361, \"src\": \"hda\"}]}, \"fact\": {\"__current_case__\": 1, \"ffile\": \"no\", \"rep_factor\": [{\"__index__\": 0, \"factorName\": \"Genotype\", \"groupNames\": \"Mut,Mut,Mut,WT,WT,WT\"}]}, \"format\": \"matrix\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "out": "{\"filtCounts\": \"true\", \"libinfo\": \"false\", \"normCounts\": \"true\", \"plots\": \"i\", \"rdaOption\": \"false\", \"rscript\": \"false\"}"}, "tool_stdout": "[1] \"Extracting counts\"\n[1] \"Outputting filtered counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "job_messages": null, "id": "36fc3ebf861f2104", "job_stdout": null}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2-5", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "time_seconds": 121.4236409664154, "inputs": {"anno|geneanno": {"src": "hda", "id": "4f812dac31e57852"}, "anno|annoOpt": "yes", "input|rep_factor_1|rep_group_0|groupName": "b1", "input|rep_factor_0|rep_group_1|groupName": "Mut", "input|rep_factor_0|rep_group_1|countsFile": [{"src": "hda", "id": "9f47554bcbbbafe7"}, {"src": "hda", "id": "cdd36fa02b020416"}, {"src": "hda", "id": "2c4674d9172e53f5"}], "input|rep_factor_0|rep_group_0|countsFile": [{"src": "hda", "id": "77926d98a766e63a"}, {"src": "hda", "id": "6bc6f7f0eec9d34e"}, {"src": "hda", "id": "2dc980f2e0b9a8bf"}], "adv|topgenes": "6", "input|rep_factor_1|rep_group_0|countsFile": [{"src": "hda", "id": "77926d98a766e63a"}, {"src": "hda", "id": "9f47554bcbbbafe7"}], "input|rep_factor_0|factorName": "Genotype", "input|rep_factor_1|rep_group_2|countsFile": [{"src": "hda", "id": "2dc980f2e0b9a8bf"}, {"src": "hda", "id": "2c4674d9172e53f5"}], "input|rep_factor_1|rep_group_1|groupName": "b2", "input|format": "files", "input|rep_factor_0|rep_group_0|groupName": "WT", "input|rep_factor_1|factorName": "Batch", "rep_contrast_1|contrast": "WT-Mut", "input|rep_factor_1|rep_group_2|groupName": "b3", "rep_contrast_0|contrast": "Mut-WT", "out|normCounts": true, "input|rep_factor_1|rep_group_1|countsFile": [{"src": "hda", "id": "6bc6f7f0eec9d34e"}, {"src": "hda", "id": "cdd36fa02b020416"}]}, "tool_version": "3.38.3+galaxy2", "output_problems": ["Job in error state.", "Job in error state.", "Expected output collection [outTables] to have 2 elements, but it had 0."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "update_time": "2019-06-25T22:50:27.960197", "inputs": {"input|rep_factor_1|rep_group_2|countsFile2": {"src": "hda", "id": "2c4674d9172e53f5", "uuid": "9455de5c-50a9-4706-abb9-4617ff48be8d"}, "input|rep_factor_1|rep_group_2|countsFile1": {"src": "hda", "id": "2dc980f2e0b9a8bf", "uuid": "0e8bbe11-d7b4-4334-8ba1-9839206688f1"}, "input|rep_factor_1|rep_group_0|countsFile2": {"src": "hda", "id": "9f47554bcbbbafe7", "uuid": "4117d2fd-06a3-4d39-8459-c22330e72bda"}, "geneanno": {"src": "hda", "id": "4f812dac31e57852", "uuid": "791a5eb7-4535-4297-993c-f4af52686046"}, "input|rep_factor_1|rep_group_0|countsFile1": {"src": "hda", "id": "77926d98a766e63a", "uuid": "2a9b74dd-7abe-4a30-b68a-40a47301c5bd"}, "input|rep_factor_0|rep_group_0|countsFile1": {"src": "hda", "id": "77926d98a766e63a", "uuid": "2a9b74dd-7abe-4a30-b68a-40a47301c5bd"}, "input|rep_factor_0|rep_group_0|countsFile2": {"src": "hda", "id": "6bc6f7f0eec9d34e", "uuid": "a7a56467-31b3-4927-b80b-51db88b04a34"}, "input|rep_factor_0|rep_group_0|countsFile3": {"src": "hda", "id": "2dc980f2e0b9a8bf", "uuid": "0e8bbe11-d7b4-4334-8ba1-9839206688f1"}, "input|rep_factor_0|rep_group_1|countsFile": {"src": "hda", "id": "9f47554bcbbbafe7", "uuid": "4117d2fd-06a3-4d39-8459-c22330e72bda"}, "input|rep_factor_1|rep_group_1|countsFile1": {"src": "hda", "id": "6bc6f7f0eec9d34e", "uuid": "a7a56467-31b3-4927-b80b-51db88b04a34"}, "input|rep_factor_1|rep_group_1|countsFile2": {"src": "hda", "id": "cdd36fa02b020416", "uuid": "3fa1f41f-8227-40e3-a238-9089b1d4b5a2"}, "input|rep_factor_0|rep_group_0|countsFile": {"src": "hda", "id": "77926d98a766e63a", "uuid": "2a9b74dd-7abe-4a30-b68a-40a47301c5bd"}, "input|rep_factor_0|rep_group_1|countsFile1": {"src": "hda", "id": "9f47554bcbbbafe7", "uuid": "4117d2fd-06a3-4d39-8459-c22330e72bda"}, "input|rep_factor_0|rep_group_1|countsFile3": {"src": "hda", "id": "2c4674d9172e53f5", "uuid": "9455de5c-50a9-4706-abb9-4617ff48be8d"}, "input|rep_factor_0|rep_group_1|countsFile2": {"src": "hda", "id": "cdd36fa02b020416", "uuid": "3fa1f41f-8227-40e3-a238-9089b1d4b5a2"}, "input|rep_factor_1|rep_group_0|countsFile": {"src": "hda", "id": "77926d98a766e63a", "uuid": "2a9b74dd-7abe-4a30-b68a-40a47301c5bd"}, "input|rep_factor_1|rep_group_2|countsFile": {"src": "hda", "id": "2dc980f2e0b9a8bf", "uuid": "0e8bbe11-d7b4-4334-8ba1-9839206688f1"}, "input|rep_factor_1|rep_group_1|countsFile": {"src": "hda", "id": "6bc6f7f0eec9d34e", "uuid": "a7a56467-31b3-4927-b80b-51db88b04a34"}}, "outputs": {"outNorm": {"src": "hda", "id": "261714807f946ce6", "uuid": "cffca3f3-44f9-41c1-8830-3fe5aecb0606"}, "outReport": {"src": "hda", "id": "f02ad65379a6391e", "uuid": "26a42dd8-3ae0-476c-acc5-346a06ffdceb"}}, "history_id": "f840675b8d7f5485", "stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "error", "create_time": "2019-06-25T22:49:18.971846", "stderr": "", "model_class": "Job", "params": {"adv": "{\"lfc\": \"0.0\", \"normalisationOption\": \"TMM\", \"pAdjust\": \"BH\", \"pVal\": \"0.05\", \"robOption\": \"true\", \"topgenes\": \"6\", \"treat\": \"false\"}", "deMethod": "{\"__current_case__\": 0, \"de_select\": \"voom\", \"weightOption\": \"false\"}", "f": "{\"filt\": {\"__current_case__\": 1, \"filt_select\": \"no\"}}", "dbkey": "\"?\"", "anno": "{\"__current_case__\": 0, \"annoOpt\": \"yes\", \"geneanno\": {\"values\": [{\"id\": 1068378, \"src\": \"hda\"}]}}", "rep_contrast": "[{\"__index__\": 0, \"contrast\": \"Mut-WT\"}, {\"__index__\": 1, \"contrast\": \"WT-Mut\"}]", "input": "{\"__current_case__\": 0, \"format\": \"files\", \"rep_factor\": [{\"__index__\": 0, \"factorName\": \"Genotype\", \"rep_group\": [{\"__index__\": 0, \"countsFile\": {\"values\": [{\"id\": 1068366, \"src\": \"hda\"}, {\"id\": 1068372, \"src\": \"hda\"}, {\"id\": 1068374, \"src\": \"hda\"}]}, \"groupName\": \"WT\"}, {\"__index__\": 1, \"countsFile\": {\"values\": [{\"id\": 1068371, \"src\": \"hda\"}, {\"id\": 1068373, \"src\": \"hda\"}, {\"id\": 1068376, \"src\": \"hda\"}]}, \"groupName\": \"Mut\"}]}, {\"__index__\": 1, \"factorName\": \"Batch\", \"rep_group\": [{\"__index__\": 0, \"countsFile\": {\"values\": [{\"id\": 1068366, \"src\": \"hda\"}, {\"id\": 1068371, \"src\": \"hda\"}]}, \"groupName\": \"b1\"}, {\"__index__\": 1, \"countsFile\": {\"values\": [{\"id\": 1068372, \"src\": \"hda\"}, {\"id\": 1068373, \"src\": \"hda\"}]}, \"groupName\": \"b2\"}, {\"__index__\": 2, \"countsFile\": {\"values\": [{\"id\": 1068374, \"src\": \"hda\"}, {\"id\": 1068376, \"src\": \"hda\"}]}, \"groupName\": \"b3\"}]}]}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "out": "{\"filtCounts\": \"false\", \"libinfo\": \"false\", \"normCounts\": \"true\", \"plots\": \"i\", \"rdaOption\": \"false\", \"rscript\": \"false\"}"}, "tool_stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "job_messages": null, "id": "123708ae75b3d5d6", "job_stdout": null}, "test_index": 6}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2-6", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "time_seconds": 119.1047511100769, "inputs": {"deMethod|de_select": "trend", "adv|normalisationOption": "TMM", "input|format": "matrix", "input|fact|rep_factor_0|groupNames": "Mut,Mut,Mut,WT,WT,WT", "input|counts": {"src": "hda", "id": "6137c746c14a041b"}, "input|fact|rep_factor_0|factorName": "Genotype", "rep_contrast_0|contrast": "Mut-WT", "adv|topgenes": "6"}, "tool_version": "3.38.3+galaxy2", "output_problems": ["Expected output collection [outTables] to have 1 elements, but it had 0."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "update_time": "2019-06-25T22:49:44.531797", "inputs": {"counts": {"src": "hda", "id": "6137c746c14a041b", "uuid": "42e52b30-a46a-4560-aba8-5bedd1a992dd"}}, "outputs": {"outReport": {"src": "hda", "id": "17394076b2f5a8d1", "uuid": "0cd45ce5-935d-48b8-85da-1f941a27b913"}}, "history_id": "f840675b8d7f5485", "stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:48:22.218248", "stderr": "", "model_class": "Job", "params": {"adv": "{\"lfc\": \"0.0\", \"normalisationOption\": \"TMM\", \"pAdjust\": \"BH\", \"pVal\": \"0.05\", \"robOption\": \"true\", \"topgenes\": \"6\", \"treat\": \"false\"}", "deMethod": "{\"__current_case__\": 1, \"de_select\": \"trend\", \"prior_count\": \"3.0\"}", "f": "{\"filt\": {\"__current_case__\": 1, \"filt_select\": \"no\"}}", "dbkey": "\"?\"", "anno": "{\"__current_case__\": 1, \"annoOpt\": \"no\"}", "rep_contrast": "[{\"__index__\": 0, \"contrast\": \"Mut-WT\"}]", "input": "{\"__current_case__\": 1, \"counts\": {\"values\": [{\"id\": 1068361, \"src\": \"hda\"}]}, \"fact\": {\"__current_case__\": 1, \"ffile\": \"no\", \"rep_factor\": [{\"__index__\": 0, \"factorName\": \"Genotype\", \"groupNames\": \"Mut,Mut,Mut,WT,WT,WT\"}]}, \"format\": \"matrix\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "out": "{\"filtCounts\": \"false\", \"libinfo\": \"false\", \"normCounts\": \"false\", \"plots\": \"i\", \"rdaOption\": \"false\", \"rscript\": \"false\"}"}, "tool_stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "job_messages": [], "id": "7970fd2f42aa0340", "job_stdout": null}, "test_index": 7}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2-7", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "time_seconds": 119.32189798355103, "inputs": {"deMethod|de_select": "trend", "anno|geneanno": {"src": "hda", "id": "4f812dac31e57852"}, "anno|annoOpt": "yes", "input|format": "matrix", "input|fact|rep_factor_0|groupNames": "Mut,Mut,Mut,WT,WT,WT", "input|counts": {"src": "hda", "id": "6137c746c14a041b"}, "input|fact|rep_factor_0|factorName": "Genotype", "adv|normalisationOption": "TMM", "rep_contrast_0|contrast": "Mut-WT", "adv|topgenes": "6"}, "tool_version": "3.38.3+galaxy2", "output_problems": ["Expected output collection [outTables] to have 1 elements, but it had 0."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "update_time": "2019-06-25T22:50:03.486721", "inputs": {"counts": {"src": "hda", "id": "6137c746c14a041b", "uuid": "42e52b30-a46a-4560-aba8-5bedd1a992dd"}, "geneanno": {"src": "hda", "id": "4f812dac31e57852", "uuid": "791a5eb7-4535-4297-993c-f4af52686046"}}, "outputs": {"outReport": {"src": "hda", "id": "c7a9b34d2d5f79fe", "uuid": "49dea4c0-0e76-41b1-aa8a-44eaaa542d97"}}, "history_id": "f840675b8d7f5485", "stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:49:00.408032", "stderr": "", "model_class": "Job", "params": {"adv": "{\"lfc\": \"0.0\", \"normalisationOption\": \"TMM\", \"pAdjust\": \"BH\", \"pVal\": \"0.05\", \"robOption\": \"true\", \"topgenes\": \"6\", \"treat\": \"false\"}", "deMethod": "{\"__current_case__\": 1, \"de_select\": \"trend\", \"prior_count\": \"3.0\"}", "f": "{\"filt\": {\"__current_case__\": 1, \"filt_select\": \"no\"}}", "dbkey": "\"?\"", "anno": "{\"__current_case__\": 0, \"annoOpt\": \"yes\", \"geneanno\": {\"values\": [{\"id\": 1068378, \"src\": \"hda\"}]}}", "rep_contrast": "[{\"__index__\": 0, \"contrast\": \"Mut-WT\"}]", "input": "{\"__current_case__\": 1, \"counts\": {\"values\": [{\"id\": 1068361, \"src\": \"hda\"}]}, \"fact\": {\"__current_case__\": 1, \"ffile\": \"no\", \"rep_factor\": [{\"__index__\": 0, \"factorName\": \"Genotype\", \"groupNames\": \"Mut,Mut,Mut,WT,WT,WT\"}]}, \"format\": \"matrix\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "out": "{\"filtCounts\": \"false\", \"libinfo\": \"false\", \"normCounts\": \"false\", \"plots\": \"i\", \"rdaOption\": \"false\", \"rscript\": \"false\"}"}, "tool_stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "job_messages": [], "id": "40321d4bb452b938", "job_stdout": null}, "test_index": 8}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2-8", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "time_seconds": 118.39423990249634, "inputs": {"anno|geneanno": {"src": "hda", "id": "4f812dac31e57852"}, "anno|annoOpt": "yes", "input|format": "matrix", "input|fact|rep_factor_0|groupNames": "2,2,2,1,1,1", "f|filt|filt_select": "yes", "f|filt|cformat|samples|cntSampleReq": "3", "input|fact|rep_factor_0|factorName": "Group", "f|filt|cformat|samples|count_select": "sample", "f|filt|cformat|cntReq": "10", "adv|topgenes": "6", "deMethod|de_select": "voom", "adv|normalisationOption": "TMM", "input|counts": {"src": "hda", "id": "7c7e85e31f31241b"}, "f|filt|cformat|format_select": "counts", "rep_contrast_0|contrast": "2-1", "out|normCounts": true}, "tool_version": "3.38.3+galaxy2", "output_problems": ["Job in error state.", "Job in error state.", "Expected output collection [outTables] to have 1 elements, but it had 0."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2", "update_time": "2019-06-25T22:50:40.063665", "inputs": {"counts": {"src": "hda", "id": "7c7e85e31f31241b", "uuid": "742bf7ee-f67d-435d-ae29-f46e099cde62"}, "geneanno": {"src": "hda", "id": "4f812dac31e57852", "uuid": "791a5eb7-4535-4297-993c-f4af52686046"}}, "outputs": {"outNorm": {"src": "hda", "id": "c193f4f96445cc73", "uuid": "9b9dfe92-cee7-4a93-a036-4f2ed4be684d"}, "outReport": {"src": "hda", "id": "fffa24054806c4b1", "uuid": "9edef23a-b9d6-468c-ac7c-53c9be75ec65"}}, "history_id": "f840675b8d7f5485", "stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "error", "create_time": "2019-06-25T22:49:24.465303", "stderr": "", "model_class": "Job", "params": {"adv": "{\"lfc\": \"0.0\", \"normalisationOption\": \"TMM\", \"pAdjust\": \"BH\", \"pVal\": \"0.05\", \"robOption\": \"true\", \"topgenes\": \"6\", \"treat\": \"false\"}", "deMethod": "{\"__current_case__\": 0, \"de_select\": \"voom\", \"weightOption\": \"false\"}", "f": "{\"filt\": {\"__current_case__\": 0, \"cformat\": {\"__current_case__\": 1, \"cntReq\": \"10\", \"format_select\": \"counts\", \"samples\": {\"__current_case__\": 1, \"cntSampleReq\": \"3\", \"count_select\": \"sample\"}}, \"filt_select\": \"yes\"}}", "dbkey": "\"?\"", "anno": "{\"__current_case__\": 0, \"annoOpt\": \"yes\", \"geneanno\": {\"values\": [{\"id\": 1068378, \"src\": \"hda\"}]}}", "rep_contrast": "[{\"__index__\": 0, \"contrast\": \"2-1\"}]", "input": "{\"__current_case__\": 1, \"counts\": {\"values\": [{\"id\": 1068375, \"src\": \"hda\"}]}, \"fact\": {\"__current_case__\": 1, \"ffile\": \"no\", \"rep_factor\": [{\"__index__\": 0, \"factorName\": \"Group\", \"groupNames\": \"2,2,2,1,1,1\"}]}, \"format\": \"matrix\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "out": "{\"filtCounts\": \"false\", \"libinfo\": \"false\", \"normCounts\": \"true\", \"plots\": \"i\", \"rdaOption\": \"false\", \"rscript\": \"false\"}"}, "tool_stdout": "[1] \"Extracting counts\"\n[1] \"Generating DGEList object\"\n[1] \"Generating Design\"\n[1] \"Calculating Normalisation Factors\"\n[1] \"Generating Contrasts\"\n[1] \"Generating MDS plot\"\n[1] \"Generating DE results\"\n", "job_messages": null, "id": "c25e50caa4c41b86", "job_stdout": null}, "test_index": 9}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.38.3+galaxy2-9", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgbroadcall/2.1.1.20160309.0", "time_seconds": 66.09384393692017, "inputs": {"LVL2MAXGAP": "800", "LVL1MAXGAP": "30", "minlen": "200", "cutofflink": "1.0", "cutoffpeak": "2.0", "infile": {"src": "hda", "id": "48e79548d441ee41"}}, "tool_version": "2.1.1.20160309.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgbroadcall/2.1.1.20160309.0", "update_time": "2019-06-25T23:43:58.232961", "inputs": {"infile": {"src": "hda", "id": "48e79548d441ee41", "uuid": "541c816b-89b8-4194-91d2-bd19340effc6"}}, "outputs": {"outfile": {"src": "hda", "id": "c015a1ca4fc8faa1", "uuid": "0358e8cf-c4cd-4ec5-a2ec-b4f9652b2cce"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "INFO  @ Wed, 26 Jun 2019 09:43:49: Read and build bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:49: Call peaks from bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:50: Write peaks... \nINFO  @ Wed, 26 Jun 2019 09:43:50: Done \n", "state": "ok", "create_time": "2019-06-25T23:43:21.921967", "stderr": "INFO  @ Wed, 26 Jun 2019 09:43:49: Read and build bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:49: Call peaks from bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:50: Write peaks... \nINFO  @ Wed, 26 Jun 2019 09:43:50: Done \n", "model_class": "Job", "params": {"LVL2MAXGAP": "\"800\"", "LVL1MAXGAP": "\"30\"", "minlen": "\"200\"", "cutoffpeak": "\"2.0\"", "dbkey": "\"?\"", "cutofflink": "\"1.0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "f2183c7e85a236ab", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgbroadcall/2.1.1.20160309.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgcmp/2.1.1.20160309.0", "time_seconds": 40.74406099319458, "inputs": {"infile_control": {"src": "hda", "id": "b884baa4155ef25b"}, "infile_treatment": {"src": "hda", "id": "c3737ab38766ede6"}, "bdgcmp_options|bdgcmp_options_selector": "ppois"}, "tool_version": "2.1.1.20160309.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgcmp/2.1.1.20160309.0", "update_time": "2019-06-25T23:43:42.517091", "inputs": {"infile_control": {"src": "hda", "id": "b884baa4155ef25b", "uuid": "ab0dfdce-d68e-467a-89ab-139e9f9dd12a"}, "infile_treatment": {"src": "hda", "id": "c3737ab38766ede6", "uuid": "2ba137d0-3578-44e8-bb6d-1ccafe4e5ba1"}}, "outputs": {"outfile": {"src": "hda", "id": "5bb6472a6b68ad47", "uuid": "b17d1903-ba52-4c8d-bd79-417d886a3e24"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "INFO  @ Wed, 26 Jun 2019 09:43:33: Read and build treatment bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:33: Read and build control bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:33: Build scoreTrackII... \nINFO  @ Wed, 26 Jun 2019 09:43:33: Calculate scores comparing treatment and control by 'ppois'... \nINFO  @ Wed, 26 Jun 2019 09:43:33: Write bedGraph of scores... \nINFO  @ Wed, 26 Jun 2019 09:43:33: Finished 'ppois'! Please check '/mnt/galaxy/files/000/925/dataset_925571.dat'! \n", "state": "ok", "create_time": "2019-06-25T23:43:16.486424", "stderr": "INFO  @ Wed, 26 Jun 2019 09:43:33: Read and build treatment bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:33: Read and build control bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:33: Build scoreTrackII... \nINFO  @ Wed, 26 Jun 2019 09:43:33: Calculate scores comparing treatment and control by 'ppois'... \nINFO  @ Wed, 26 Jun 2019 09:43:33: Write bedGraph of scores... \nINFO  @ Wed, 26 Jun 2019 09:43:33: Finished 'ppois'! Please check '/mnt/galaxy/files/000/925/dataset_925571.dat'! \n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "bdgcmp_options": "{\"__current_case__\": 3, \"bdgcmp_options_selector\": \"ppois\"}"}, "tool_stdout": "", "job_messages": [], "id": "8cc599ded03a98b9", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgcmp/2.1.1.20160309.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgdiff/2.1.1.20160309.1", "time_seconds": 57.33942914009094, "inputs": {"cutoff": "1.0", "minlen": "200", "maxgap": "100", "t2": {"src": "hda", "id": "337ad3ab1b976b7d"}, "t1": {"src": "hda", "id": "3d94530c9dd9db02"}, "c2": {"src": "hda", "id": "100c15c6a87e978c"}, "depth|depth1": "10", "c1": {"src": "hda", "id": "047d6d0b0e83ee76"}, "depth|depth2": "1"}, "tool_version": "2.1.1.20160309.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgdiff/2.1.1.20160309.1", "update_time": "2019-06-25T23:44:00.728086", "inputs": {"c2": {"src": "hda", "id": "100c15c6a87e978c", "uuid": "66b2c1f3-b349-4025-bdbc-178ccfa63181"}, "c1": {"src": "hda", "id": "047d6d0b0e83ee76", "uuid": "b114b145-1949-4980-9c74-f5655e1dd93d"}, "t2": {"src": "hda", "id": "337ad3ab1b976b7d", "uuid": "4007d160-f867-48ab-8473-8f346a1720c4"}, "t1": {"src": "hda", "id": "3d94530c9dd9db02", "uuid": "8b151d71-1798-4db6-987c-73fbd3b0657e"}}, "outputs": {"output_both": {"src": "hda", "id": "c84f975a65ae4a7d", "uuid": "222f9240-8fd5-441d-9fdc-25aa67a347dd"}, "output_cond2": {"src": "hda", "id": "182b72abf617c225", "uuid": "1a80d2d3-8a7e-461c-bcc4-2542ddf6ea1a"}, "output_cond1": {"src": "hda", "id": "3ee09673a8e17533", "uuid": "9b95a6c4-c488-4c0f-a84a-f3b373744ed9"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "INFO  @ Wed, 26 Jun 2019 09:43:51: Read and build treatment 1 bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:51: Read and build control 1 bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:51: Read and build treatment 2 bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:51: Read and build control 2 bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:51: Write peaks... \nINFO  @ Wed, 26 Jun 2019 09:43:51: Done \n", "state": "ok", "create_time": "2019-06-25T23:43:32.497522", "stderr": "INFO  @ Wed, 26 Jun 2019 09:43:51: Read and build treatment 1 bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:51: Read and build control 1 bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:51: Read and build treatment 2 bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:51: Read and build control 2 bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:43:51: Write peaks... \nINFO  @ Wed, 26 Jun 2019 09:43:51: Done \n", "model_class": "Job", "params": {"cutoff": "\"1.0\"", "minlen": "\"200\"", "maxgap": "\"100\"", "dbkey": "\"?\"", "depth": "{\"depth1\": \"10\", \"depth2\": \"1\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "9940bde692cdaaaf", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgdiff/2.1.1.20160309.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgpeakcall/2.1.1.20160309.0", "time_seconds": 39.48696303367615, "inputs": {"maxgap": "30", "cutoff": "5.0", "infile": {"src": "hda", "id": "0ea963ede075e065"}, "minlen": "200"}, "tool_version": "2.1.1.20160309.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgpeakcall/2.1.1.20160309.0", "update_time": "2019-06-25T23:44:21.898949", "inputs": {"infile": {"src": "hda", "id": "0ea963ede075e065", "uuid": "6d5bc88a-e77a-4b16-b7bd-9349d71e7071"}}, "outputs": {"outfile": {"src": "hda", "id": "b233103098ca1f64", "uuid": "afa6a441-487f-4d62-bc24-b1325404dd7a"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "INFO  @ Wed, 26 Jun 2019 09:44:13: Read and build bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:44:13: Call peaks from bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:44:13: Write peaks... \nINFO  @ Wed, 26 Jun 2019 09:44:13: Done \n", "state": "ok", "create_time": "2019-06-25T23:43:57.963317", "stderr": "INFO  @ Wed, 26 Jun 2019 09:44:13: Read and build bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:44:13: Call peaks from bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:44:13: Write peaks... \nINFO  @ Wed, 26 Jun 2019 09:44:13: Done \n", "model_class": "Job", "params": {"cutoff": "\"5.0\"", "minlen": "\"200\"", "maxgap": "\"30\"", "notrackline": "\"false\"", "dbkey": "\"?\"", "cutoff_analysis": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "8c555aa323c17642", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgpeakcall/2.1.1.20160309.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgpeakcall/2.1.1.20160309.0", "time_seconds": 39.79467511177063, "inputs": {"maxgap": "30", "cutoff": "5.0", "cutoff_analysis": true, "infile": {"src": "hda", "id": "ac1d7aaca29e598b"}, "minlen": "200"}, "tool_version": "2.1.1.20160309.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgpeakcall/2.1.1.20160309.0", "update_time": "2019-06-25T23:44:57.165176", "inputs": {"infile": {"src": "hda", "id": "ac1d7aaca29e598b", "uuid": "c00ead18-028f-42cd-9156-2613bf1e3400"}}, "outputs": {"outfile": {"src": "hda", "id": "3ebe7d94ec909cab", "uuid": "e3d10093-218e-4adb-8f7b-2bb0ae9087d6"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "INFO  @ Wed, 26 Jun 2019 09:44:47: Read and build bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:44:47: Analyze cutoff vs number of peaks/total length of peaks/average length of peak \nINFO  @ Wed, 26 Jun 2019 09:44:47: Write report... \nINFO  @ Wed, 26 Jun 2019 09:44:47: Done \n", "state": "ok", "create_time": "2019-06-25T23:44:25.662422", "stderr": "INFO  @ Wed, 26 Jun 2019 09:44:47: Read and build bedGraph... \nINFO  @ Wed, 26 Jun 2019 09:44:47: Analyze cutoff vs number of peaks/total length of peaks/average length of peak \nINFO  @ Wed, 26 Jun 2019 09:44:47: Write report... \nINFO  @ Wed, 26 Jun 2019 09:44:47: Done \n", "model_class": "Job", "params": {"cutoff": "\"5.0\"", "minlen": "\"200\"", "maxgap": "\"30\"", "notrackline": "\"false\"", "dbkey": "\"?\"", "cutoff_analysis": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "2b3ef0a0d9b43cf5", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_bdgpeakcall/2.1.1.20160309.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_callpeak/2.1.1.20160309.5", "time_seconds": 84.92170000076294, "inputs": {"effective_genome_size_options|gsize": "3300000000", "cutoff_options|cutoff_options_selector": "qvalue", "format": "BED", "outputs": ["peaks_tabular", "bdg", "html"], "control|c_multiple|input_control_file": {"src": "hda", "id": "594592ba028f894f"}, "effective_genome_size_options|effective_genome_size_options_selector": "user_defined", "cutoff_options|qvalue": "0.05", "treatment|input_treatment_file": {"src": "hda", "id": "99d115bfbd26cec0"}, "control|c_select": "Yes"}, "tool_version": "2.1.1.20160309.5", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_callpeak/2.1.1.20160309.5", "update_time": "2019-06-25T23:43:55.139098", "inputs": {"control|input_control_file": {"src": "hda", "id": "594592ba028f894f", "uuid": "ccab46c0-ace4-49ca-aceb-d86594aeb845"}, "input_treatment_file": {"src": "hda", "id": "99d115bfbd26cec0", "uuid": "e8c281c2-2ae4-4b2f-8cee-ca4a60a178bb"}}, "outputs": {"output_control_lambda": {"src": "hda", "id": "6e83bd2bbdb4e68e", "uuid": "5f7c51f1-ea0a-4ea6-8701-54fcdc513961"}, "output_treat_pileup": {"src": "hda", "id": "b66be631a0f85b82", "uuid": "165cd087-de18-4030-acd7-957cf4930f74"}, "output_tabular": {"src": "hda", "id": "885992f1d9544fcb", "uuid": "b72c6008-e23c-48d3-af10-d83af20f3f1d"}, "output_extra_files": {"src": "hda", "id": "c6d68642b15316ab", "uuid": "76f100c6-c7cd-492e-a07d-0768c5dc231e"}, "output_narrowpeaks": {"src": "hda", "id": "cb0200c7369a8fe9", "uuid": "7625dafe-a876-47d7-a6bf-2660282513b3"}}, "history_id": "f840675b8d7f5485", "stdout": "INFO  @ Wed, 26 Jun 2019 09:43:27: \n# Command line: callpeak -t /mnt/galaxy/files/000/925/dataset_925553.dat --name ChIP_200K_bed -c /mnt/galaxy/files/000/925/dataset_925554.dat --format BED --gsize 3300000000 --keep-dup 1 --bdg --qvalue 0.05 --mfold 5 50 --bw 300\n# ARGUMENTS LIST:\n# name = ChIP_200K_bed\n# format = BED\n# ChIP-seq file = ['/mnt/galaxy/files/000/925/dataset_925553.dat']\n# control file = ['/mnt/galaxy/files/000/925/dataset_925554.dat']\n# effective genome size = 3.30e+09\n# band width = 300\n# model fold = [5, 50]\n# qvalue cutoff = 5.00e-02\n# Larger dataset will be scaled towards smaller dataset.\n# Range for calculating regional lambda is: 1000 bps and 10000 bps\n# Broad region calling is off\n# Paired-End mode is off\n \nINFO  @ Wed, 26 Jun 2019 09:43:27: #1 read tag files... \nINFO  @ Wed, 26 Jun 2019 09:43:27: #1 read treatment tags... \nINFO  @ Wed, 26 Jun 2019 09:43:27: #1.2 read input tags... \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 tag size is determined as 100 bps \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 tag size = 100 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1  total tags in treatment: 199977 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 user defined the maximum tags... \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 filter out redundant tags at the same location and the same strand by allowing at most 1 tag(s) \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1  tags after filtering in treatment: 199583 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1  Redundant rate of treatment: 0.00 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1  total tags in control: 199978 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 user defined the maximum tags... \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 filter out redundant tags at the same location and the same strand by allowing at most 1 tag(s) \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1  tags after filtering in control: 199867 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1  Redundant rate of control: 0.00 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 finished! \nINFO  @ Wed, 26 Jun 2019 09:43:28: #2 Build Peak Model... \nINFO  @ Wed, 26 Jun 2019 09:43:28: #2 looking for paired plus/minus strand peaks... \nINFO  @ Wed, 26 Jun 2019 09:43:29: #2 number of paired peaks: 4488 \nINFO  @ Wed, 26 Jun 2019 09:43:29: start model_add_line... \nINFO  @ Wed, 26 Jun 2019 09:43:29: start X-correlation... \nINFO  @ Wed, 26 Jun 2019 09:43:29: end of X-cor \nINFO  @ Wed, 26 Jun 2019 09:43:29: #2 finished! \nINFO  @ Wed, 26 Jun 2019 09:43:29: #2 predicted fragment length is 254 bps \nINFO  @ Wed, 26 Jun 2019 09:43:29: #2 alternative fragment length(s) may be 254 bps \nINFO  @ Wed, 26 Jun 2019 09:43:29: #2.2 Generate R script for model : ChIP_200K_bed_model.r \nINFO  @ Wed, 26 Jun 2019 09:43:29: #3 Call peaks... \nINFO  @ Wed, 26 Jun 2019 09:43:29: #3 Pre-compute pvalue-qvalue table... \nINFO  @ Wed, 26 Jun 2019 09:43:30: #3 In the peak calling step, the following will be performed simultaneously: \nINFO  @ Wed, 26 Jun 2019 09:43:30: #3   Write bedGraph files for treatment pileup (after scaling if necessary)... ChIP_200K_bed_treat_pileup.bdg \nINFO  @ Wed, 26 Jun 2019 09:43:30: #3   Write bedGraph files for control lambda (after scaling if necessary)... ChIP_200K_bed_control_lambda.bdg \nINFO  @ Wed, 26 Jun 2019 09:43:30: #3   Pileup will be based on sequencing depth in treatment. \nINFO  @ Wed, 26 Jun 2019 09:43:30: #3 Call peaks for each chromosome... \nINFO  @ Wed, 26 Jun 2019 09:43:37: #4 Write output xls file... ChIP_200K_bed_peaks.xls \nINFO  @ Wed, 26 Jun 2019 09:43:37: #4 Write peak in narrowPeak format file... ChIP_200K_bed_peaks.narrowPeak \nINFO  @ Wed, 26 Jun 2019 09:43:37: #4 Write summits bed file... ChIP_200K_bed_summits.bed \nINFO  @ Wed, 26 Jun 2019 09:43:37: Done! \n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:43:05.280033", "stderr": "", "model_class": "Job", "params": {"control": "{\"__current_case__\": 0, \"c_multiple\": {\"__current_case__\": 0, \"c_multi_select\": \"No\", \"input_control_file\": {\"values\": [{\"id\": 1068707, \"src\": \"hda\"}]}}, \"c_select\": \"Yes\"}", "effective_genome_size_options": "{\"__current_case__\": 4, \"effective_genome_size_options_selector\": \"user_defined\", \"gsize\": \"3300000000\"}", "format": "\"BED\"", "outputs": "[\"peaks_tabular\", \"bdg\", \"html\"]", "cutoff_options": "{\"__current_case__\": 1, \"cutoff_options_selector\": \"qvalue\", \"qvalue\": \"0.05\"}", "advanced_options": "{\"broad_options\": {\"__current_case__\": 1, \"broad_options_selector\": \"nobroad\", \"call_summits\": \"false\"}, \"keep_dup_options\": {\"__current_case__\": 1, \"keep_dup_options_selector\": \"1\"}, \"llocal\": \"\", \"nolambda\": \"false\", \"ratio\": \"\", \"slocal\": \"\", \"spmr\": \"false\", \"to_large\": \"false\"}", "dbkey": "\"?\"", "nomodel_type": "{\"__current_case__\": 0, \"band_width\": \"300\", \"mfold_lower\": \"5\", \"mfold_upper\": \"50\", \"nomodel_type_selector\": \"create_model\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "treatment": "{\"__current_case__\": 0, \"input_treatment_file\": {\"values\": [{\"id\": 1068706, \"src\": \"hda\"}]}, \"t_multi_select\": \"No\"}"}, "tool_stdout": "INFO  @ Wed, 26 Jun 2019 09:43:27: \n# Command line: callpeak -t /mnt/galaxy/files/000/925/dataset_925553.dat --name ChIP_200K_bed -c /mnt/galaxy/files/000/925/dataset_925554.dat --format BED --gsize 3300000000 --keep-dup 1 --bdg --qvalue 0.05 --mfold 5 50 --bw 300\n# ARGUMENTS LIST:\n# name = ChIP_200K_bed\n# format = BED\n# ChIP-seq file = ['/mnt/galaxy/files/000/925/dataset_925553.dat']\n# control file = ['/mnt/galaxy/files/000/925/dataset_925554.dat']\n# effective genome size = 3.30e+09\n# band width = 300\n# model fold = [5, 50]\n# qvalue cutoff = 5.00e-02\n# Larger dataset will be scaled towards smaller dataset.\n# Range for calculating regional lambda is: 1000 bps and 10000 bps\n# Broad region calling is off\n# Paired-End mode is off\n \nINFO  @ Wed, 26 Jun 2019 09:43:27: #1 read tag files... \nINFO  @ Wed, 26 Jun 2019 09:43:27: #1 read treatment tags... \nINFO  @ Wed, 26 Jun 2019 09:43:27: #1.2 read input tags... \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 tag size is determined as 100 bps \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 tag size = 100 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1  total tags in treatment: 199977 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 user defined the maximum tags... \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 filter out redundant tags at the same location and the same strand by allowing at most 1 tag(s) \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1  tags after filtering in treatment: 199583 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1  Redundant rate of treatment: 0.00 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1  total tags in control: 199978 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 user defined the maximum tags... \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 filter out redundant tags at the same location and the same strand by allowing at most 1 tag(s) \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1  tags after filtering in control: 199867 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1  Redundant rate of control: 0.00 \nINFO  @ Wed, 26 Jun 2019 09:43:28: #1 finished! \nINFO  @ Wed, 26 Jun 2019 09:43:28: #2 Build Peak Model... \nINFO  @ Wed, 26 Jun 2019 09:43:28: #2 looking for paired plus/minus strand peaks... \nINFO  @ Wed, 26 Jun 2019 09:43:29: #2 number of paired peaks: 4488 \nINFO  @ Wed, 26 Jun 2019 09:43:29: start model_add_line... \nINFO  @ Wed, 26 Jun 2019 09:43:29: start X-correlation... \nINFO  @ Wed, 26 Jun 2019 09:43:29: end of X-cor \nINFO  @ Wed, 26 Jun 2019 09:43:29: #2 finished! \nINFO  @ Wed, 26 Jun 2019 09:43:29: #2 predicted fragment length is 254 bps \nINFO  @ Wed, 26 Jun 2019 09:43:29: #2 alternative fragment length(s) may be 254 bps \nINFO  @ Wed, 26 Jun 2019 09:43:29: #2.2 Generate R script for model : ChIP_200K_bed_model.r \nINFO  @ Wed, 26 Jun 2019 09:43:29: #3 Call peaks... \nINFO  @ Wed, 26 Jun 2019 09:43:29: #3 Pre-compute pvalue-qvalue table... \nINFO  @ Wed, 26 Jun 2019 09:43:30: #3 In the peak calling step, the following will be performed simultaneously: \nINFO  @ Wed, 26 Jun 2019 09:43:30: #3   Write bedGraph files for treatment pileup (after scaling if necessary)... ChIP_200K_bed_treat_pileup.bdg \nINFO  @ Wed, 26 Jun 2019 09:43:30: #3   Write bedGraph files for control lambda (after scaling if necessary)... ChIP_200K_bed_control_lambda.bdg \nINFO  @ Wed, 26 Jun 2019 09:43:30: #3   Pileup will be based on sequencing depth in treatment. \nINFO  @ Wed, 26 Jun 2019 09:43:30: #3 Call peaks for each chromosome... \nINFO  @ Wed, 26 Jun 2019 09:43:37: #4 Write output xls file... ChIP_200K_bed_peaks.xls \nINFO  @ Wed, 26 Jun 2019 09:43:37: #4 Write peak in narrowPeak format file... ChIP_200K_bed_peaks.narrowPeak \nINFO  @ Wed, 26 Jun 2019 09:43:37: #4 Write summits bed file... ChIP_200K_bed_summits.bed \nINFO  @ Wed, 26 Jun 2019 09:43:37: Done! \n", "job_messages": [], "id": "5752fe69e673f938", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_callpeak/2.1.1.20160309.5-0", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_callpeak/2.1.1.20160309.5", "time_seconds": 40.73389196395874, "inputs": {"effective_genome_size_options|gsize": "3300000000", "cutoff_options|cutoff_options_selector": "qvalue", "format": "BED", "outputs": "pdf", "control|c_multiple|input_control_file": {"src": "hda", "id": "d9afd08d309242a6"}, "effective_genome_size_options|effective_genome_size_options_selector": "user_defined", "cutoff_options|qvalue": "0.05", "treatment|input_treatment_file": {"src": "hda", "id": "99d115bfbd26cec0"}, "control|c_select": "Yes"}, "tool_version": "2.1.1.20160309.5", "output_problems": ["'utf8' codec can't decode byte 0x81 in position 10: invalid start byte"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_callpeak/2.1.1.20160309.5", "update_time": "2019-06-25T23:44:16.855556", "inputs": {"control|input_control_file": {"src": "hda", "id": "d9afd08d309242a6", "uuid": "63297f06-c3c0-491a-9ee0-0804a81971dd"}, "input_treatment_file": {"src": "hda", "id": "99d115bfbd26cec0", "uuid": "e8c281c2-2ae4-4b2f-8cee-ca4a60a178bb"}}, "outputs": {"output_plot": {"src": "hda", "id": "04249861e9dc9e09", "uuid": "2c5b2415-a078-426a-bf93-6b2d2355548a"}, "output_narrowpeaks": {"src": "hda", "id": "b24ce50490223aa5", "uuid": "3fe0c61d-fa75-4c0b-ae95-4d552c12a360"}}, "history_id": "f840675b8d7f5485", "stdout": "INFO  @ Wed, 26 Jun 2019 09:44:02: \n# Command line: callpeak -t /mnt/galaxy/files/000/925/dataset_925553.dat --name ChIP_200K_bed -c /mnt/galaxy/files/000/925/dataset_925568.dat --format BED --gsize 3300000000 --keep-dup 1 --qvalue 0.05 --mfold 5 50 --bw 300\n# ARGUMENTS LIST:\n# name = ChIP_200K_bed\n# format = BED\n# ChIP-seq file = ['/mnt/galaxy/files/000/925/dataset_925553.dat']\n# control file = ['/mnt/galaxy/files/000/925/dataset_925568.dat']\n# effective genome size = 3.30e+09\n# band width = 300\n# model fold = [5, 50]\n# qvalue cutoff = 5.00e-02\n# Larger dataset will be scaled towards smaller dataset.\n# Range for calculating regional lambda is: 1000 bps and 10000 bps\n# Broad region calling is off\n# Paired-End mode is off\n \nINFO  @ Wed, 26 Jun 2019 09:44:02: #1 read tag files... \nINFO  @ Wed, 26 Jun 2019 09:44:02: #1 read treatment tags... \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1.2 read input tags... \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 tag size is determined as 100 bps \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 tag size = 100 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1  total tags in treatment: 199977 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 user defined the maximum tags... \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 filter out redundant tags at the same location and the same strand by allowing at most 1 tag(s) \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1  tags after filtering in treatment: 199583 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1  Redundant rate of treatment: 0.00 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1  total tags in control: 199978 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 user defined the maximum tags... \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 filter out redundant tags at the same location and the same strand by allowing at most 1 tag(s) \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1  tags after filtering in control: 199867 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1  Redundant rate of control: 0.00 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 finished! \nINFO  @ Wed, 26 Jun 2019 09:44:03: #2 Build Peak Model... \nINFO  @ Wed, 26 Jun 2019 09:44:03: #2 looking for paired plus/minus strand peaks... \nINFO  @ Wed, 26 Jun 2019 09:44:04: #2 number of paired peaks: 4488 \nINFO  @ Wed, 26 Jun 2019 09:44:04: start model_add_line... \nINFO  @ Wed, 26 Jun 2019 09:44:04: start X-correlation... \nINFO  @ Wed, 26 Jun 2019 09:44:04: end of X-cor \nINFO  @ Wed, 26 Jun 2019 09:44:04: #2 finished! \nINFO  @ Wed, 26 Jun 2019 09:44:04: #2 predicted fragment length is 254 bps \nINFO  @ Wed, 26 Jun 2019 09:44:04: #2 alternative fragment length(s) may be 254 bps \nINFO  @ Wed, 26 Jun 2019 09:44:04: #2.2 Generate R script for model : ChIP_200K_bed_model.r \nINFO  @ Wed, 26 Jun 2019 09:44:04: #3 Call peaks... \nINFO  @ Wed, 26 Jun 2019 09:44:04: #3 Pre-compute pvalue-qvalue table... \nINFO  @ Wed, 26 Jun 2019 09:44:06: #3 Call peaks for each chromosome... \nINFO  @ Wed, 26 Jun 2019 09:44:07: #4 Write output xls file... ChIP_200K_bed_peaks.xls \nINFO  @ Wed, 26 Jun 2019 09:44:07: #4 Write peak in narrowPeak format file... ChIP_200K_bed_peaks.narrowPeak \nINFO  @ Wed, 26 Jun 2019 09:44:07: #4 Write summits bed file... ChIP_200K_bed_summits.bed \nINFO  @ Wed, 26 Jun 2019 09:44:07: Done! \n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:43:45.453180", "stderr": "", "model_class": "Job", "params": {"control": "{\"__current_case__\": 0, \"c_multiple\": {\"__current_case__\": 0, \"c_multi_select\": \"No\", \"input_control_file\": {\"values\": [{\"id\": 1068721, \"src\": \"hda\"}]}}, \"c_select\": \"Yes\"}", "effective_genome_size_options": "{\"__current_case__\": 4, \"effective_genome_size_options_selector\": \"user_defined\", \"gsize\": \"3300000000\"}", "format": "\"BED\"", "outputs": "\"pdf\"", "cutoff_options": "{\"__current_case__\": 1, \"cutoff_options_selector\": \"qvalue\", \"qvalue\": \"0.05\"}", "advanced_options": "{\"broad_options\": {\"__current_case__\": 1, \"broad_options_selector\": \"nobroad\", \"call_summits\": \"false\"}, \"keep_dup_options\": {\"__current_case__\": 1, \"keep_dup_options_selector\": \"1\"}, \"llocal\": \"\", \"nolambda\": \"false\", \"ratio\": \"\", \"slocal\": \"\", \"spmr\": \"false\", \"to_large\": \"false\"}", "dbkey": "\"?\"", "nomodel_type": "{\"__current_case__\": 0, \"band_width\": \"300\", \"mfold_lower\": \"5\", \"mfold_upper\": \"50\", \"nomodel_type_selector\": \"create_model\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "treatment": "{\"__current_case__\": 0, \"input_treatment_file\": {\"values\": [{\"id\": 1068706, \"src\": \"hda\"}]}, \"t_multi_select\": \"No\"}"}, "tool_stdout": "INFO  @ Wed, 26 Jun 2019 09:44:02: \n# Command line: callpeak -t /mnt/galaxy/files/000/925/dataset_925553.dat --name ChIP_200K_bed -c /mnt/galaxy/files/000/925/dataset_925568.dat --format BED --gsize 3300000000 --keep-dup 1 --qvalue 0.05 --mfold 5 50 --bw 300\n# ARGUMENTS LIST:\n# name = ChIP_200K_bed\n# format = BED\n# ChIP-seq file = ['/mnt/galaxy/files/000/925/dataset_925553.dat']\n# control file = ['/mnt/galaxy/files/000/925/dataset_925568.dat']\n# effective genome size = 3.30e+09\n# band width = 300\n# model fold = [5, 50]\n# qvalue cutoff = 5.00e-02\n# Larger dataset will be scaled towards smaller dataset.\n# Range for calculating regional lambda is: 1000 bps and 10000 bps\n# Broad region calling is off\n# Paired-End mode is off\n \nINFO  @ Wed, 26 Jun 2019 09:44:02: #1 read tag files... \nINFO  @ Wed, 26 Jun 2019 09:44:02: #1 read treatment tags... \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1.2 read input tags... \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 tag size is determined as 100 bps \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 tag size = 100 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1  total tags in treatment: 199977 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 user defined the maximum tags... \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 filter out redundant tags at the same location and the same strand by allowing at most 1 tag(s) \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1  tags after filtering in treatment: 199583 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1  Redundant rate of treatment: 0.00 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1  total tags in control: 199978 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 user defined the maximum tags... \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 filter out redundant tags at the same location and the same strand by allowing at most 1 tag(s) \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1  tags after filtering in control: 199867 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1  Redundant rate of control: 0.00 \nINFO  @ Wed, 26 Jun 2019 09:44:03: #1 finished! \nINFO  @ Wed, 26 Jun 2019 09:44:03: #2 Build Peak Model... \nINFO  @ Wed, 26 Jun 2019 09:44:03: #2 looking for paired plus/minus strand peaks... \nINFO  @ Wed, 26 Jun 2019 09:44:04: #2 number of paired peaks: 4488 \nINFO  @ Wed, 26 Jun 2019 09:44:04: start model_add_line... \nINFO  @ Wed, 26 Jun 2019 09:44:04: start X-correlation... \nINFO  @ Wed, 26 Jun 2019 09:44:04: end of X-cor \nINFO  @ Wed, 26 Jun 2019 09:44:04: #2 finished! \nINFO  @ Wed, 26 Jun 2019 09:44:04: #2 predicted fragment length is 254 bps \nINFO  @ Wed, 26 Jun 2019 09:44:04: #2 alternative fragment length(s) may be 254 bps \nINFO  @ Wed, 26 Jun 2019 09:44:04: #2.2 Generate R script for model : ChIP_200K_bed_model.r \nINFO  @ Wed, 26 Jun 2019 09:44:04: #3 Call peaks... \nINFO  @ Wed, 26 Jun 2019 09:44:04: #3 Pre-compute pvalue-qvalue table... \nINFO  @ Wed, 26 Jun 2019 09:44:06: #3 Call peaks for each chromosome... \nINFO  @ Wed, 26 Jun 2019 09:44:07: #4 Write output xls file... ChIP_200K_bed_peaks.xls \nINFO  @ Wed, 26 Jun 2019 09:44:07: #4 Write peak in narrowPeak format file... ChIP_200K_bed_peaks.narrowPeak \nINFO  @ Wed, 26 Jun 2019 09:44:07: #4 Write summits bed file... ChIP_200K_bed_summits.bed \nINFO  @ Wed, 26 Jun 2019 09:44:07: Done! \n", "job_messages": [], "id": "7e1d3cfdbae19fd1", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_callpeak/2.1.1.20160309.5-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_callpeak/2.1.1.20160309.5", "time_seconds": 39.86371302604675, "inputs": {"effective_genome_size_options|gsize": "3300000000", "effective_genome_size_options|effective_genome_size_options_selector": "user_defined", "format": "BAMPE", "nomodel_type|nomodel_type_selector": "nomodel", "outputs": "pdf", "advanced_options|nolambda": true, "treatment|input_treatment_file": {"src": "hda", "id": "c5aacd845c43808a"}}, "tool_version": "2.1.1.20160309.5", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_callpeak/2.1.1.20160309.5", "update_time": "2019-06-25T23:43:19.424688", "inputs": {"input_treatment_file": {"src": "hda", "id": "c5aacd845c43808a", "uuid": "938d247b-a2a3-4bca-be34-48a11794e85b"}}, "outputs": {"output_narrowpeaks": {"src": "hda", "id": "44e5c09b33bb1ac9", "uuid": "b78a4bd2-299e-4b65-904e-b4dc57e49b58"}}, "history_id": "f840675b8d7f5485", "stdout": "INFO  @ Wed, 26 Jun 2019 09:43:11: \n# Command line: callpeak -t /mnt/galaxy/files/000/925/dataset_925551.dat --name bwa-mem-test1_bam --format BAMPE --gsize 3300000000 --nolambda --keep-dup 1 --qvalue 0.05 --nomodel --extsize 200 --shift 0\n# ARGUMENTS LIST:\n# name = bwa-mem-test1_bam\n# format = BAMPE\n# ChIP-seq file = ['/mnt/galaxy/files/000/925/dataset_925551.dat']\n# control file = None\n# effective genome size = 3.30e+09\n# band width = 300\n# model fold = [5, 50]\n# qvalue cutoff = 5.00e-02\n# Larger dataset will be scaled towards smaller dataset.\n# Range for calculating regional lambda is: 10000 bps\n# Broad region calling is off\n# Paired-End mode is on\n \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 read fragment files... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 read treatment fragments... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 mean fragment size is determined as 193 bp from treatment \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 fragment size = 193 \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1  total fragments in treatment: 99 \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 user defined the maximum fragments... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 filter out redundant fragments by allowing at most 1 identical fragment(s) \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1  fragments after filtering in treatment: 44 \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1  Redundant rate of treatment: 0.56 \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 finished! \nINFO  @ Wed, 26 Jun 2019 09:43:11: #2 Build Peak Model... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #2 Skipped... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #2 Use 193 as fragment length \nINFO  @ Wed, 26 Jun 2019 09:43:11: #3 Call peaks... \nINFO  @ Wed, 26 Jun 2019 09:43:11: # local lambda is disabled! \nINFO  @ Wed, 26 Jun 2019 09:43:11: #3 !!!! DYNAMIC LAMBDA IS DISABLED !!!! \nINFO  @ Wed, 26 Jun 2019 09:43:11: #3 Pre-compute pvalue-qvalue table... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #3 Call peaks for each chromosome... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #4 Write output xls file... bwa-mem-test1_bam_peaks.xls \nINFO  @ Wed, 26 Jun 2019 09:43:11: #4 Write peak in narrowPeak format file... bwa-mem-test1_bam_peaks.narrowPeak \nINFO  @ Wed, 26 Jun 2019 09:43:11: #4 Write summits bed file... bwa-mem-test1_bam_summits.bed \nINFO  @ Wed, 26 Jun 2019 09:43:11: Done! \n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:42:51.305309", "stderr": "", "model_class": "Job", "params": {"control": "{\"__current_case__\": 1, \"c_select\": \"No\"}", "effective_genome_size_options": "{\"__current_case__\": 4, \"effective_genome_size_options_selector\": \"user_defined\", \"gsize\": \"3300000000\"}", "format": "\"BAMPE\"", "outputs": "\"pdf\"", "cutoff_options": "{\"__current_case__\": 1, \"cutoff_options_selector\": \"qvalue\", \"qvalue\": \"0.05\"}", "advanced_options": "{\"broad_options\": {\"__current_case__\": 1, \"broad_options_selector\": \"nobroad\", \"call_summits\": \"false\"}, \"keep_dup_options\": {\"__current_case__\": 1, \"keep_dup_options_selector\": \"1\"}, \"llocal\": \"\", \"nolambda\": \"true\", \"ratio\": \"\", \"slocal\": \"\", \"spmr\": \"false\", \"to_large\": \"false\"}", "dbkey": "\"?\"", "nomodel_type": "{\"__current_case__\": 1, \"extsize\": \"200\", \"nomodel_type_selector\": \"nomodel\", \"shift\": \"0\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "treatment": "{\"__current_case__\": 0, \"input_treatment_file\": {\"values\": [{\"id\": 1068704, \"src\": \"hda\"}]}, \"t_multi_select\": \"No\"}"}, "tool_stdout": "INFO  @ Wed, 26 Jun 2019 09:43:11: \n# Command line: callpeak -t /mnt/galaxy/files/000/925/dataset_925551.dat --name bwa-mem-test1_bam --format BAMPE --gsize 3300000000 --nolambda --keep-dup 1 --qvalue 0.05 --nomodel --extsize 200 --shift 0\n# ARGUMENTS LIST:\n# name = bwa-mem-test1_bam\n# format = BAMPE\n# ChIP-seq file = ['/mnt/galaxy/files/000/925/dataset_925551.dat']\n# control file = None\n# effective genome size = 3.30e+09\n# band width = 300\n# model fold = [5, 50]\n# qvalue cutoff = 5.00e-02\n# Larger dataset will be scaled towards smaller dataset.\n# Range for calculating regional lambda is: 10000 bps\n# Broad region calling is off\n# Paired-End mode is on\n \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 read fragment files... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 read treatment fragments... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 mean fragment size is determined as 193 bp from treatment \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 fragment size = 193 \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1  total fragments in treatment: 99 \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 user defined the maximum fragments... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 filter out redundant fragments by allowing at most 1 identical fragment(s) \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1  fragments after filtering in treatment: 44 \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1  Redundant rate of treatment: 0.56 \nINFO  @ Wed, 26 Jun 2019 09:43:11: #1 finished! \nINFO  @ Wed, 26 Jun 2019 09:43:11: #2 Build Peak Model... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #2 Skipped... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #2 Use 193 as fragment length \nINFO  @ Wed, 26 Jun 2019 09:43:11: #3 Call peaks... \nINFO  @ Wed, 26 Jun 2019 09:43:11: # local lambda is disabled! \nINFO  @ Wed, 26 Jun 2019 09:43:11: #3 !!!! DYNAMIC LAMBDA IS DISABLED !!!! \nINFO  @ Wed, 26 Jun 2019 09:43:11: #3 Pre-compute pvalue-qvalue table... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #3 Call peaks for each chromosome... \nINFO  @ Wed, 26 Jun 2019 09:43:11: #4 Write output xls file... bwa-mem-test1_bam_peaks.xls \nINFO  @ Wed, 26 Jun 2019 09:43:11: #4 Write peak in narrowPeak format file... bwa-mem-test1_bam_peaks.narrowPeak \nINFO  @ Wed, 26 Jun 2019 09:43:11: #4 Write summits bed file... bwa-mem-test1_bam_summits.bed \nINFO  @ Wed, 26 Jun 2019 09:43:11: Done! \n", "job_messages": [], "id": "bf611076757170e7", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_callpeak/2.1.1.20160309.5-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_filterdup/2.1.1.20160309.0", "time_seconds": 40.178645849227905, "inputs": {"effective_genome_size_options|gsize": "3300000000", "effective_genome_size_options|effective_genome_size_options_selector": "user_defined", "infile": {"src": "hda", "id": "5160b1d94c7fea83"}, "keep_dup_options|keep_dup_options_selector": "auto", "pvalue": "1e-5"}, "tool_version": "2.1.1.20160309.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_filterdup/2.1.1.20160309.0", "update_time": "2019-06-25T23:45:32.913564", "inputs": {"infile": {"src": "hda", "id": "5160b1d94c7fea83", "uuid": "214b07c4-7bf3-45c1-996f-b2e330a29358"}}, "outputs": {"outfile": {"src": "hda", "id": "3ea40b4e547f893a", "uuid": "7b3cc665-3fe2-4d47-8640-54cf3f176d38"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "INFO  @ Wed, 26 Jun 2019 09:45:24: read tag files... \nINFO  @ Wed, 26 Jun 2019 09:45:24: # read treatment tags... \nINFO  @ Wed, 26 Jun 2019 09:45:24: tag size = 100 \nINFO  @ Wed, 26 Jun 2019 09:45:24:  total tags in alignment file: 13 \nINFO  @ Wed, 26 Jun 2019 09:45:24: calculate max duplicate tags in single position based on binomal distribution... \nINFO  @ Wed, 26 Jun 2019 09:45:24:  max_dup_tags based on binomal = 0 \nINFO  @ Wed, 26 Jun 2019 09:45:24: filter out redundant tags at the same location and the same strand by allowing at most 0 tag(s) \nINFO  @ Wed, 26 Jun 2019 09:45:24:  tags after filtering in alignment file: 10 \nINFO  @ Wed, 26 Jun 2019 09:45:24:  Redundant rate of alignment file: 0.23 \nINFO  @ Wed, 26 Jun 2019 09:45:24: Write to BED file \nINFO  @ Wed, 26 Jun 2019 09:45:24: finished! Check /mnt/galaxy/files/000/925/dataset_925606.dat. \n", "state": "ok", "create_time": "2019-06-25T23:45:06.042400", "stderr": "INFO  @ Wed, 26 Jun 2019 09:45:24: read tag files... \nINFO  @ Wed, 26 Jun 2019 09:45:24: # read treatment tags... \nINFO  @ Wed, 26 Jun 2019 09:45:24: tag size = 100 \nINFO  @ Wed, 26 Jun 2019 09:45:24:  total tags in alignment file: 13 \nINFO  @ Wed, 26 Jun 2019 09:45:24: calculate max duplicate tags in single position based on binomal distribution... \nINFO  @ Wed, 26 Jun 2019 09:45:24:  max_dup_tags based on binomal = 0 \nINFO  @ Wed, 26 Jun 2019 09:45:24: filter out redundant tags at the same location and the same strand by allowing at most 0 tag(s) \nINFO  @ Wed, 26 Jun 2019 09:45:24:  tags after filtering in alignment file: 10 \nINFO  @ Wed, 26 Jun 2019 09:45:24:  Redundant rate of alignment file: 0.23 \nINFO  @ Wed, 26 Jun 2019 09:45:24: Write to BED file \nINFO  @ Wed, 26 Jun 2019 09:45:24: finished! Check /mnt/galaxy/files/000/925/dataset_925606.dat. \n", "model_class": "Job", "params": {"keep_dup_options": "{\"__current_case__\": 3, \"keep_dup_options_selector\": \"auto\"}", "effective_genome_size_options": "{\"__current_case__\": 5, \"effective_genome_size_options_selector\": \"user_defined\", \"gsize\": \"3300000000\"}", "tsize": "\"\"", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "pvalue": "\"1e-5\""}, "tool_stdout": "", "job_messages": [], "id": "e7082a2f78e72926", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_filterdup/2.1.1.20160309.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_predictd/2.1.1.20160309.0", "time_seconds": 69.7480640411377, "inputs": {"tsize": "", "effective_genome_size_options|gsize": "3300000000", "effective_genome_size_options|effective_genome_size_options_selector": "user_defined", "infiles": [{"src": "hda", "id": "81ccda0957f5b7c5"}, {"src": "hda", "id": "71289fbfaf665a06"}], "mfold|upper": "50", "mfold|lower": "5", "band_width": "300"}, "tool_version": "2.1.1.20160309.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_predictd/2.1.1.20160309.0", "update_time": "2019-06-25T23:45:40.676863", "inputs": {"infiles2": {"src": "hda", "id": "71289fbfaf665a06", "uuid": "0072ed57-319d-4b15-9e61-e43f8aa8a7e8"}, "infiles": {"src": "hda", "id": "81ccda0957f5b7c5", "uuid": "ea99fe22-4551-4156-9bf5-6b6f1fad7293"}, "infiles1": {"src": "hda", "id": "81ccda0957f5b7c5", "uuid": "ea99fe22-4551-4156-9bf5-6b6f1fad7293"}}, "outputs": {"outfile_image": {"src": "hda", "id": "71927bd07098f9a0", "uuid": "3c40441b-acee-4700-8387-8cbcbaf9443a"}, "outfile": {"src": "hda", "id": "b01dfb531be63498", "uuid": "00ab936e-93f2-4411-9e8a-63379fc198e1"}}, "history_id": "f840675b8d7f5485", "stdout": "null device \n          1 \n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:45:03.245721", "stderr": "", "model_class": "Job", "params": {"tsize": "\"\"", "effective_genome_size_options": "{\"__current_case__\": 5, \"effective_genome_size_options_selector\": \"user_defined\", \"gsize\": \"3300000000\"}", "dbkey": "\"?\"", "mfold": "{\"lower\": \"5\", \"upper\": \"50\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "band_width": "\"300\""}, "tool_stdout": "null device \n          1 \n", "job_messages": [], "id": "caf0df3d4ad9ae02", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_predictd/2.1.1.20160309.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_randsample/2.1.1.20160309.0", "time_seconds": 44.6169171333313, "inputs": {"method_options|percentage": "80.0", "seed": "1", "infile": {"src": "hda", "id": "71289fbfaf665a06"}, "method_options|method_options_selector": "percentage"}, "tool_version": "2.1.1.20160309.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_randsample/2.1.1.20160309.0", "update_time": "2019-06-25T23:46:10.108847", "inputs": {"infile": {"src": "hda", "id": "71289fbfaf665a06", "uuid": "0072ed57-319d-4b15-9e61-e43f8aa8a7e8"}}, "outputs": {"outfile": {"src": "hda", "id": "c18fd1e4dc12e776", "uuid": "b29d664c-f32b-4b62-ad5c-3329dc97a9ba"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "INFO  @ Wed, 26 Jun 2019 09:45:55: read tag files... \nINFO  @ Wed, 26 Jun 2019 09:45:55: # read treatment tags... \nINFO  @ Wed, 26 Jun 2019 09:45:55: tag size is determined as 100 bps \nINFO  @ Wed, 26 Jun 2019 09:45:55: tag size = 100 \nINFO  @ Wed, 26 Jun 2019 09:45:55:  total tags in alignment file: 199977 \nINFO  @ Wed, 26 Jun 2019 09:45:55:  Percentage of tags you want to keep: 80.00% \nINFO  @ Wed, 26 Jun 2019 09:45:55:  Random seed has been set as: 1 \nINFO  @ Wed, 26 Jun 2019 09:45:55:  tags after random sampling in alignment file: 159966 \nINFO  @ Wed, 26 Jun 2019 09:45:55: Write to BED file \nINFO  @ Wed, 26 Jun 2019 09:45:56: finished! Check /mnt/galaxy/files/000/925/dataset_925615.dat. \n", "state": "ok", "create_time": "2019-06-25T23:45:40.620664", "stderr": "INFO  @ Wed, 26 Jun 2019 09:45:55: read tag files... \nINFO  @ Wed, 26 Jun 2019 09:45:55: # read treatment tags... \nINFO  @ Wed, 26 Jun 2019 09:45:55: tag size is determined as 100 bps \nINFO  @ Wed, 26 Jun 2019 09:45:55: tag size = 100 \nINFO  @ Wed, 26 Jun 2019 09:45:55:  total tags in alignment file: 199977 \nINFO  @ Wed, 26 Jun 2019 09:45:55:  Percentage of tags you want to keep: 80.00% \nINFO  @ Wed, 26 Jun 2019 09:45:55:  Random seed has been set as: 1 \nINFO  @ Wed, 26 Jun 2019 09:45:55:  tags after random sampling in alignment file: 159966 \nINFO  @ Wed, 26 Jun 2019 09:45:55: Write to BED file \nINFO  @ Wed, 26 Jun 2019 09:45:56: finished! Check /mnt/galaxy/files/000/925/dataset_925615.dat. \n", "model_class": "Job", "params": {"tsize": "\"\"", "seed": "\"1\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "method_options": "{\"__current_case__\": 0, \"method_options_selector\": \"percentage\", \"percentage\": \"80.0\"}", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "e7993afd86237112", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_randsample/2.1.1.20160309.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_refinepeak/2.1.1.20160309.0", "time_seconds": 42.04159593582153, "inputs": {"bed_infile": {"src": "hda", "id": "711ab09e5759dea2"}, "winsize": "200", "infile": {"src": "hda", "id": "135750915a20c4f5"}, "cutoff": "5.0"}, "tool_version": "2.1.1.20160309.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_refinepeak/2.1.1.20160309.0", "update_time": "2019-06-25T23:44:00.394811", "inputs": {"bed_infile": {"src": "hda", "id": "711ab09e5759dea2", "uuid": "1c33978b-cb84-4da1-8b45-23fb30d577ef"}, "infile": {"src": "hda", "id": "135750915a20c4f5", "uuid": "98431c4d-58ba-44b0-abd1-8e3e5838e2d4"}}, "outputs": {"outfile": {"src": "hda", "id": "517d77f170736bd3", "uuid": "f7f4c913-c7a2-425c-ba36-3a92ac5f4c4d"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "INFO  @ Wed, 26 Jun 2019 09:43:52: read tag files... \nINFO  @ Wed, 26 Jun 2019 09:43:52: # read treatment tags... \nINFO  @ Wed, 26 Jun 2019 09:43:52: Done! \n", "state": "ok", "create_time": "2019-06-25T23:43:38.554507", "stderr": "INFO  @ Wed, 26 Jun 2019 09:43:52: read tag files... \nINFO  @ Wed, 26 Jun 2019 09:43:52: # read treatment tags... \nINFO  @ Wed, 26 Jun 2019 09:43:52: Done! \n", "model_class": "Job", "params": {"cutoff": "\"5.0\"", "winsize": "\"200\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "223d5ad8c2731069", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_refinepeak/2.1.1.20160309.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mlst/mlst_list/2.16.1", "time_seconds": 58.20256996154785, "inputs": {"list_type": true}, "tool_version": "2.16.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mlst/mlst_list/2.16.1", "update_time": "2019-06-26T01:21:54.136669", "inputs": {}, "outputs": {"report": {"src": "hda", "id": "924e5c9462ce77ce", "uuid": "53b41b68-87a7-4522-bb4b-9aa2c7cac194"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T01:21:39.229911", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "list_type": "\"true\""}, "tool_stdout": "", "job_messages": [], "id": "049876be0318a2af", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mlst/mlst_list/2.16.1-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mlst/mlst_list/2.16.1", "time_seconds": 58.30239796638489, "inputs": {"list_type": false}, "tool_version": "2.16.1", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mlst/mlst_list/2.16.1", "update_time": "2019-06-26T01:21:56.233625", "inputs": {}, "outputs": {"report": {"src": "hda", "id": "de5601d9c3089644", "uuid": "e77c5941-262c-45ae-a7e8-a8472308fab7"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T01:21:41.274130", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\"", "list_type": "\"false\""}, "tool_stdout": "", "job_messages": [], "id": "0666d16965017565", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mlst/mlst_list/2.16.1-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_align_check/mothur_align_check/1.39.5.0", "time_seconds": 81.74395799636841, "inputs": {"ss|source": "history", "fasta": {"src": "hda", "id": "1dbd7540210468d5"}, "savelog": true, "ss|map": {"src": "hda", "id": "c93c53e1caa5255e"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_align_check/mothur_align_check/1.39.5.0", "update_time": "2019-06-26T01:53:31.735414", "inputs": {"map": {"src": "hda", "id": "c93c53e1caa5255e", "uuid": "cd9cfd91-445e-4995-a2e6-51bec74cff7b"}, "fasta": {"src": "hda", "id": "1dbd7540210468d5", "uuid": "f9aa6f77-25ac-4df2-a010-87761fc9125e"}}, "outputs": {"align.check": {"src": "hda", "id": "3a8297293d1a68b8", "uuid": "8386735c-5c91-4155-9732-055f3d55b5b2"}, "logfile": {"src": "hda", "id": "c656ca4f2bab2ec7", "uuid": "8c04fa96-384b-4be6-8249-716e797173b9"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > align.check(fasta=fasta.dat,map=map.dat)\n\n\t\tPound\tDash\tPlus\tEqual\tLoop\tTilde\tTotal\nMinimum:\t0\t0\t0\t0\t0\t0\t0\n2.5%-tile:\t0\t0\t0\t0\t0\t0\t0\n25%-tile:\t0\t0\t0\t0\t0\t0\t0\nMedian: \t0\t0\t0\t0\t0\t0\t0\n75%-tile:\t0\t0\t0\t0\t0\t0\t0\n97.5%-tile:\t0\t0\t0\t0\t0\t0\t0\nMaximum:\t0\t0\t0\t0\t0\t0\t0\n# of Seqs:\t3\n\nOutput File Names: \nfasta.align.check\n\n\nmothur > quit\nname\tpound\tdash\tplus\tequal\tloop\ttilde\ttotal\tnumseqs\nU68589\t0\t0\t0\t0\t0\t0\t0\t1\nU68590\t0\t0\t0\t0\t0\t0\t0\t1\nU68591\t0\t0\t0\t0\t0\t0\t0\t1\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T01:53:19.723373", "stderr": "", "model_class": "Job", "params": {"count": "null", "name": "null", "ss": "{\"__current_case__\": 1, \"map\": {\"values\": [{\"id\": 1069580, \"src\": \"hda\"}]}, \"source\": \"history\"}", "dbkey": "\"?\"", "savelog": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > align.check(fasta=fasta.dat,map=map.dat)\n\n\t\tPound\tDash\tPlus\tEqual\tLoop\tTilde\tTotal\nMinimum:\t0\t0\t0\t0\t0\t0\t0\n2.5%-tile:\t0\t0\t0\t0\t0\t0\t0\n25%-tile:\t0\t0\t0\t0\t0\t0\t0\nMedian: \t0\t0\t0\t0\t0\t0\t0\n75%-tile:\t0\t0\t0\t0\t0\t0\t0\n97.5%-tile:\t0\t0\t0\t0\t0\t0\t0\nMaximum:\t0\t0\t0\t0\t0\t0\t0\n# of Seqs:\t3\n\nOutput File Names: \nfasta.align.check\n\n\nmothur > quit\nname\tpound\tdash\tplus\tequal\tloop\ttilde\ttotal\tnumseqs\nU68589\t0\t0\t0\t0\t0\t0\t0\t1\nU68590\t0\t0\t0\t0\t0\t0\t0\t1\nU68591\t0\t0\t0\t0\t0\t0\t0\t1\n", "job_messages": [], "id": "0bec3d7cf8c69ad9", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_align_check/mothur_align_check/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_align_check/mothur_align_check/1.39.5.0", "time_seconds": 88.11797904968262, "inputs": {"ss|source": "history", "fasta": {"src": "hda", "id": "1dbd7540210468d5"}, "savelog": true, "name": {"src": "hda", "id": "6982f6077c77248c"}, "ss|map": {"src": "hda", "id": "c93c53e1caa5255e"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_align_check/mothur_align_check/1.39.5.0", "update_time": "2019-06-26T01:53:51.442139", "inputs": {"map": {"src": "hda", "id": "c93c53e1caa5255e", "uuid": "cd9cfd91-445e-4995-a2e6-51bec74cff7b"}, "fasta": {"src": "hda", "id": "1dbd7540210468d5", "uuid": "f9aa6f77-25ac-4df2-a010-87761fc9125e"}, "name": {"src": "hda", "id": "6982f6077c77248c", "uuid": "e2b260f1-b366-4efd-8534-a0f62c5118e5"}}, "outputs": {"align.check": {"src": "hda", "id": "2df16109bdfcba81", "uuid": "ddb3febf-98be-4135-a47f-9b62af4ed08c"}, "logfile": {"src": "hda", "id": "ff7caf16db283b71", "uuid": "45bb208a-7c4a-4a78-ade0-4c09a04912a1"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > align.check(fasta=fasta.dat,name=name.dat,map=map.dat)\n\n\t\tPound\tDash\tPlus\tEqual\tLoop\tTilde\tTotal\nMinimum:\t0\t0\t0\t0\t0\t0\t0\n2.5%-tile:\t0\t0\t0\t0\t0\t0\t0\n25%-tile:\t0\t0\t0\t0\t0\t0\t0\nMedian: \t0\t0\t0\t0\t0\t0\t0\n75%-tile:\t0\t0\t0\t0\t0\t0\t0\n97.5%-tile:\t0\t0\t0\t0\t0\t0\t0\nMaximum:\t0\t0\t0\t0\t0\t0\t0\n# of unique seqs:\t3\ntotal # of seqs:\t3\n\nOutput File Names: \nfasta.align.check\n\n\nmothur > quit\nname\tpound\tdash\tplus\tequal\tloop\ttilde\ttotal\tnumseqs\nU68589\t0\t0\t0\t0\t0\t0\t0\t1\nU68590\t0\t0\t0\t0\t0\t0\t0\t1\nU68591\t0\t0\t0\t0\t0\t0\t0\t1\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T01:53:37.203618", "stderr": "", "model_class": "Job", "params": {"count": "null", "ss": "{\"__current_case__\": 1, \"map\": {\"values\": [{\"id\": 1069580, \"src\": \"hda\"}]}, \"source\": \"history\"}", "savelog": "\"true\"", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > align.check(fasta=fasta.dat,name=name.dat,map=map.dat)\n\n\t\tPound\tDash\tPlus\tEqual\tLoop\tTilde\tTotal\nMinimum:\t0\t0\t0\t0\t0\t0\t0\n2.5%-tile:\t0\t0\t0\t0\t0\t0\t0\n25%-tile:\t0\t0\t0\t0\t0\t0\t0\nMedian: \t0\t0\t0\t0\t0\t0\t0\n75%-tile:\t0\t0\t0\t0\t0\t0\t0\n97.5%-tile:\t0\t0\t0\t0\t0\t0\t0\nMaximum:\t0\t0\t0\t0\t0\t0\t0\n# of unique seqs:\t3\ntotal # of seqs:\t3\n\nOutput File Names: \nfasta.align.check\n\n\nmothur > quit\nname\tpound\tdash\tplus\tequal\tloop\ttilde\ttotal\tnumseqs\nU68589\t0\t0\t0\t0\t0\t0\t0\t1\nU68590\t0\t0\t0\t0\t0\t0\t0\t1\nU68591\t0\t0\t0\t0\t0\t0\t0\t1\n", "job_messages": [], "id": "a76b18a9e7ba9dfc", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_align_check/mothur_align_check/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_chimera_slayer/mothur_chimera_slayer/1.39.5.0", "time_seconds": 40.45705199241638, "inputs": {"fasta": {"src": "hda", "id": "663e5d8b402701a0"}, "alignment|reference": {"src": "hda", "id": "ef8b8b18962ad8ad"}, "savelog": true, "alignment|source": "hist"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_chimera_slayer/mothur_chimera_slayer/1.39.5.0", "update_time": "2019-06-25T23:12:00.851304", "inputs": {"fasta": {"src": "hda", "id": "663e5d8b402701a0", "uuid": "8073261d-45f4-4016-862f-fd6d0097d1a9"}, "reference": {"src": "hda", "id": "ef8b8b18962ad8ad", "uuid": "98aa22b3-d2c7-4517-a486-2b964aa20302"}}, "outputs": {"slayer.chimeras": {"src": "hda", "id": "899096d62060b42d", "uuid": "f9748a46-7d94-4328-a139-a78089d1f5ab"}, "logfile": {"src": "hda", "id": "246738607eec4ffe", "uuid": "7d73e82a-7ec2-4534-855a-056959643e7c"}, "out_accnos": {"src": "hda", "id": "cb77bc930d252532", "uuid": "04e9fb7a-36e9-41cd-8ab0-44b7305f1946"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > chimera.slayer(fasta=fasta.dat,reference=/mnt/galaxy/files/000/925/data \rset_925481.dat,dereplicate=false,processors=1)\n\nUsing 1 processors.\nChecking sequences from fasta.dat ...\nReading sequences from /mnt/galaxy/files/000/925/dataset_925481.dat...Done.\n\nOnly reporting sequence supported by 90% of bootstrapped results.\nProcessing sequence: 10\nIt took 2 secs to check 10 sequences.\n\nOutput File Names: \nfasta.slayer.chimeras\nfasta.slayer.accnos\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:11:46.587852", "stderr": "", "model_class": "Job", "params": {"dereplicate": "\"false\"", "dbkey": "\"?\"", "savelog": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "options": "{\"__current_case__\": 0, \"setby\": \"default\"}", "alignment": "{\"__current_case__\": 1, \"reference\": {\"values\": [{\"id\": 1068629, \"src\": \"hda\"}]}, \"source\": \"hist\"}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > chimera.slayer(fasta=fasta.dat,reference=/mnt/galaxy/files/000/925/data \rset_925481.dat,dereplicate=false,processors=1)\n\nUsing 1 processors.\nChecking sequences from fasta.dat ...\nReading sequences from /mnt/galaxy/files/000/925/dataset_925481.dat...Done.\n\nOnly reporting sequence supported by 90% of bootstrapped results.\nProcessing sequence: 10\nIt took 2 secs to check 10 sequences.\n\nOutput File Names: \nfasta.slayer.chimeras\nfasta.slayer.accnos\n\n\nmothur > quit\n", "job_messages": [], "id": "e174bd18a912e7ce", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_chimera_slayer/mothur_chimera_slayer/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_chimera_slayer/mothur_chimera_slayer/1.39.5.0", "time_seconds": 40.15440583229065, "inputs": {"options|setby": "user", "savelog": true, "alignment|source": "self", "options|search": "kmer", "fasta": {"src": "hda", "id": "f97d8d9c4f5fde6c"}, "alignment|name": {"src": "hda", "id": "3160969c1a08dec7"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_chimera_slayer/mothur_chimera_slayer/1.39.5.0", "update_time": "2019-06-25T23:12:32.060482", "inputs": {"fasta": {"src": "hda", "id": "f97d8d9c4f5fde6c", "uuid": "444aeea5-3d98-4461-8a33-d978460c5001"}, "name": {"src": "hda", "id": "3160969c1a08dec7", "uuid": "bbaf6cef-9835-4af9-8160-0d2c8095b58d"}}, "outputs": {"slayer.chimeras": {"src": "hda", "id": "fff69da71952ec53", "uuid": "747eafa1-2e5a-4d1c-a0a6-7b91eaf72769"}, "logfile": {"src": "hda", "id": "e4661fc49cee6e6b", "uuid": "919de3d1-2438-4fdb-b005-eed36d30f914"}, "out_accnos": {"src": "hda", "id": "4cf7cb8a483bb1aa", "uuid": "ab98237b-6c02-4a9c-a0db-8804986812d5"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > chimera.slayer(fasta=fasta.dat,reference=self,name=/mnt/galaxy/files/00 \r0/925/dataset_925489.dat,search=kmer,window=50,increment=5,match=5,mismatch=-4,n \rumwanted=15,parents=3,minsim=90,mincov=70,iters=1000,minbs=90,minsnp=10,divergen \rce=1.007,trim=false,split=false,dereplicate=false,processors=1)\n\nUsing 1 processors.\nChecking sequences from fasta.dat ...\nSorting fastafile according to abundance...Done.\nReading sequences from fasta.dat...Done.\n\nOnly reporting sequence supported by 90% of bootstrapped results.\nProcessing sequence: 32\nIt took 1 secs to check 32 sequences.\n\nOutput File Names: \nfasta.slayer.chimeras\nfasta.slayer.accnos\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:12:18.600137", "stderr": "", "model_class": "Job", "params": {"dereplicate": "\"false\"", "dbkey": "\"?\"", "savelog": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "options": "{\"__current_case__\": 1, \"divergence\": \"1.007\", \"increment\": \"5\", \"iters\": \"1000\", \"match\": \"5\", \"minbs\": \"90\", \"mincov\": \"70\", \"minsim\": \"90\", \"minsnp\": \"10\", \"mismatch\": \"-4\", \"numwanted\": \"15\", \"parents\": \"3\", \"search\": \"kmer\", \"setby\": \"user\", \"split\": \"false\", \"trim\": \"false\", \"window\": \"50\"}", "alignment": "{\"__current_case__\": 2, \"count\": null, \"group\": null, \"name\": {\"values\": [{\"id\": 1068637, \"src\": \"hda\"}]}, \"source\": \"self\"}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > chimera.slayer(fasta=fasta.dat,reference=self,name=/mnt/galaxy/files/00 \r0/925/dataset_925489.dat,search=kmer,window=50,increment=5,match=5,mismatch=-4,n \rumwanted=15,parents=3,minsim=90,mincov=70,iters=1000,minbs=90,minsnp=10,divergen \rce=1.007,trim=false,split=false,dereplicate=false,processors=1)\n\nUsing 1 processors.\nChecking sequences from fasta.dat ...\nSorting fastafile according to abundance...Done.\nReading sequences from fasta.dat...Done.\n\nOnly reporting sequence supported by 90% of bootstrapped results.\nProcessing sequence: 32\nIt took 1 secs to check 32 sequences.\n\nOutput File Names: \nfasta.slayer.chimeras\nfasta.slayer.accnos\n\n\nmothur > quit\n", "job_messages": [], "id": "34a6383c530ed2d0", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_chimera_slayer/mothur_chimera_slayer/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_classify_seqs/mothur_classify_seqs/1.39.5.0", "time_seconds": 54.56929087638855, "inputs": {"alignment|template": {"src": "hda", "id": "16275a65ca1e50c6"}, "savelog": true, "alignment|source": "hist", "tax|taxonomy": {"src": "hda", "id": "c999953201ae050a"}, "fasta": {"src": "hda", "id": "a9b67947f435b17b"}, "tax|source2": "hist"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_classify_seqs/mothur_classify_seqs/1.39.5.0", "update_time": "2019-06-25T22:01:09.916631", "inputs": {"taxonomy": {"src": "hda", "id": "c999953201ae050a", "uuid": "33075cf3-8e96-4f42-bb60-a83b8b9ad4ca"}, "fasta": {"src": "hda", "id": "a9b67947f435b17b", "uuid": "38dfcace-b240-439b-8186-df2eb6f3011d"}, "template": {"src": "hda", "id": "16275a65ca1e50c6", "uuid": "d30ea53b-4bf1-4d45-869e-34c33997d56e"}}, "outputs": {"tree_sum": {"src": "hda", "id": "7acefc35ad19de34", "uuid": "1fef8025-9d12-47cd-92f7-333afc0b701e"}, "logfile": {"src": "hda", "id": "6bb1da5d356c5e5d", "uuid": "85b9f9f6-ff50-45c1-b349-5183cc894f17"}, "taxonomy_out": {"src": "hda", "id": "2ac27158e973fa39", "uuid": "0676ff67-0b9d-4823-bf8b-185b5f61a9dc"}, "tax_summary": {"src": "hda", "id": "0b3283c86d96c5fc", "uuid": "959f753e-b604-46b1-aa5f-0d74b300def4"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > classify.seqs(fasta=fasta.dat,reference=alignment.template.dat,taxonomy=\r=tax.taxonomy.dat,method=wang,ksize=8,iters=100,cutoff=80,probs=true,relabund=fal\rlse,output=simple,printlevel=-1,processors=2)\n\nUsing 2 processors.\nGenerating search database...    DONE.\nIt took 0 seconds generate search database. \n\nReading in the tax.taxonomy.dat taxonomy...\tDONE.\nCalculating template taxonomy tree...     DONE.\nCalculating template probabilities...     DONE.\nIt took 0 seconds get probabilities. \nClassifying sequences from fasta.dat ...\n[WARNING]: U68640 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68642 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68643 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68596 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68651 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68655 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68657 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68658 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68609 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68610 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68611 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68668 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68613 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68669 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68614 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68670 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68618 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68675 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68620 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68677 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68681 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68682 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68627 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68634 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\nProcessing sequence: 50\nProcessing sequence: 48\n\n[WARNING]: mothur reversed some your sequences for a better classification.  If you would like to take a closer look, please check fasta.taxonomy.wang.flip.accnos for the list of the sequences.\n\nIt took 1 secs to classify 98 sequences.\n\n\nIt took 0 secs to create the summary file for 98 sequences.\n\n\nOutput File Names: \nfasta.taxonomy.wang.taxonomy\nfasta.taxonomy.wang.tax.summary\nfasta.taxonomy.wang.flip.accnos\n\n\nmothur > quit\n\n\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nDetected 11 [WARNING] messages, please review.\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:00:52.237544", "stderr": "", "model_class": "Job", "params": {"count": "null", "name": "null", "relabund": "\"false\"", "tax": "{\"__current_case__\": 1, \"source2\": \"hist\", \"taxonomy\": {\"values\": [{\"id\": 1067388, \"src\": \"hda\"}]}}", "dbkey": "\"?\"", "savelog": "\"true\"", "classify": "{\"__current_case__\": 0, \"cutoff\": \"80\", \"iters\": \"100\", \"ksize\": \"8\", \"method\": \"wang\", \"probs\": \"true\"}", "printlevel": "\"-1\"", "output": "\"simple\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "alignment": "{\"__current_case__\": 1, \"source\": \"hist\", \"template\": {\"values\": [{\"id\": 1067387, \"src\": \"hda\"}]}}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > classify.seqs(fasta=fasta.dat,reference=alignment.template.dat,taxonomy=\r=tax.taxonomy.dat,method=wang,ksize=8,iters=100,cutoff=80,probs=true,relabund=fal\rlse,output=simple,printlevel=-1,processors=2)\n\nUsing 2 processors.\nGenerating search database...    DONE.\nIt took 0 seconds generate search database. \n\nReading in the tax.taxonomy.dat taxonomy...\tDONE.\nCalculating template taxonomy tree...     DONE.\nCalculating template probabilities...     DONE.\nIt took 0 seconds get probabilities. \nClassifying sequences from fasta.dat ...\n[WARNING]: U68640 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68642 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68643 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68596 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68651 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68655 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68657 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68658 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68609 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68610 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68611 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68668 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68613 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68669 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68614 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68670 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68618 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68675 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68620 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68677 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68681 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68682 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68627 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\n[WARNING]: U68634 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.\nProcessing sequence: 50\nProcessing sequence: 48\n\n[WARNING]: mothur reversed some your sequences for a better classification.  If you would like to take a closer look, please check fasta.taxonomy.wang.flip.accnos for the list of the sequences.\n\nIt took 1 secs to classify 98 sequences.\n\n\nIt took 0 secs to create the summary file for 98 sequences.\n\n\nOutput File Names: \nfasta.taxonomy.wang.taxonomy\nfasta.taxonomy.wang.tax.summary\nfasta.taxonomy.wang.flip.accnos\n\n\nmothur > quit\n\n\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nDetected 11 [WARNING] messages, please review.\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n", "job_messages": [], "id": "c4d89db5e14b23ad", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_classify_seqs/mothur_classify_seqs/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_classify_seqs/mothur_classify_seqs/1.39.5.0", "time_seconds": 46.72797513008118, "inputs": {"alignment|template": {"src": "hda", "id": "16275a65ca1e50c6"}, "classify|method": "knn", "savelog": true, "alignment|source": "hist", "tax|taxonomy": {"src": "hda", "id": "c999953201ae050a"}, "fasta": {"src": "hda", "id": "a9b67947f435b17b"}, "tax|source2": "hist"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_classify_seqs/mothur_classify_seqs/1.39.5.0", "update_time": "2019-06-25T22:01:16.173638", "inputs": {"taxonomy": {"src": "hda", "id": "c999953201ae050a", "uuid": "33075cf3-8e96-4f42-bb60-a83b8b9ad4ca"}, "fasta": {"src": "hda", "id": "a9b67947f435b17b", "uuid": "38dfcace-b240-439b-8186-df2eb6f3011d"}, "template": {"src": "hda", "id": "16275a65ca1e50c6", "uuid": "d30ea53b-4bf1-4d45-869e-34c33997d56e"}}, "outputs": {"tree_sum": {"src": "hda", "id": "dc11f8ce5fc7ab4b", "uuid": "62987933-cba7-4a12-b410-97ae29587fa8"}, "logfile": {"src": "hda", "id": "cfbcec0a110c9a77", "uuid": "cef4eb13-00ce-43c8-8377-7efd14c011e8"}, "taxonomy_out": {"src": "hda", "id": "60dda509a6f83a07", "uuid": "2db6b3dc-25d5-4b4b-882d-4628022c64b3"}, "tax_summary": {"src": "hda", "id": "fff6a0b6928a2e54", "uuid": "9e590f35-2e9d-46ed-acf4-699ef527e154"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > classify.seqs(fasta=fasta.dat,reference=alignment.template.dat,taxonomy=\r=tax.taxonomy.dat,method=knn,numwanted=10,search=kmer,ksize=8,relabund=false,outp\rput=simple,printlevel=-1,processors=2)\n\nUsing 2 processors.\nGenerating search database...    DONE.\nIt took 0 seconds generate search database. \n\nReading in the tax.taxonomy.dat taxonomy...\tDONE.\nClassifying sequences from fasta.dat ...\nProcessing sequence: 50\nProcessing sequence: 48\n\nIt took 0 secs to classify 98 sequences.\n\n\nIt took 0 secs to create the summary file for 98 sequences.\n\n\nOutput File Names: \nfasta.taxonomy.knn.taxonomy\nfasta.taxonomy.knn.tax.summary\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:00:59.612151", "stderr": "", "model_class": "Job", "params": {"count": "null", "name": "null", "relabund": "\"false\"", "tax": "{\"__current_case__\": 1, \"source2\": \"hist\", \"taxonomy\": {\"values\": [{\"id\": 1067388, \"src\": \"hda\"}]}}", "dbkey": "\"?\"", "savelog": "\"true\"", "classify": "{\"__current_case__\": 1, \"method\": \"knn\", \"numwanted\": \"10\", \"search\": {\"__current_case__\": 0, \"algorithm\": \"kmer\", \"ksize\": \"8\"}}", "printlevel": "\"-1\"", "output": "\"simple\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "alignment": "{\"__current_case__\": 1, \"source\": \"hist\", \"template\": {\"values\": [{\"id\": 1067387, \"src\": \"hda\"}]}}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > classify.seqs(fasta=fasta.dat,reference=alignment.template.dat,taxonomy=\r=tax.taxonomy.dat,method=knn,numwanted=10,search=kmer,ksize=8,relabund=false,outp\rput=simple,printlevel=-1,processors=2)\n\nUsing 2 processors.\nGenerating search database...    DONE.\nIt took 0 seconds generate search database. \n\nReading in the tax.taxonomy.dat taxonomy...\tDONE.\nClassifying sequences from fasta.dat ...\nProcessing sequence: 50\nProcessing sequence: 48\n\nIt took 0 secs to classify 98 sequences.\n\n\nIt took 0 secs to create the summary file for 98 sequences.\n\n\nOutput File Names: \nfasta.taxonomy.knn.taxonomy\nfasta.taxonomy.knn.tax.summary\n\n\nmothur > quit\n", "job_messages": [], "id": "c51fe5b3671b9a5a", "job_stdout": null}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_classify_seqs/mothur_classify_seqs/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_classify_seqs/mothur_classify_seqs/1.39.5.0", "time_seconds": 60.12457799911499, "inputs": {"alignment|source": "hist", "alignment|template": {"src": "hda", "id": "16275a65ca1e50c6"}, "classify|method": "knn", "classify|search|algorithm": "blast", "savelog": true, "fasta": {"src": "hda", "id": "16275a65ca1e50c6"}, "tax|taxonomy": {"src": "hda", "id": "c999953201ae050a"}, "tax|source2": "hist"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_classify_seqs/mothur_classify_seqs/1.39.5.0", "update_time": "2019-06-25T22:01:31.000674", "inputs": {"taxonomy": {"src": "hda", "id": "c999953201ae050a", "uuid": "33075cf3-8e96-4f42-bb60-a83b8b9ad4ca"}, "fasta": {"src": "hda", "id": "16275a65ca1e50c6", "uuid": "d30ea53b-4bf1-4d45-869e-34c33997d56e"}, "template": {"src": "hda", "id": "16275a65ca1e50c6", "uuid": "d30ea53b-4bf1-4d45-869e-34c33997d56e"}}, "outputs": {"tree_sum": {"src": "hda", "id": "2712dcf0566d62fa", "uuid": "a9d05a3f-a06f-41ca-a7f3-be93b2d5dfab"}, "logfile": {"src": "hda", "id": "7b9585a0330df30f", "uuid": "79a3e7db-35d8-429e-bc06-979d73e10606"}, "taxonomy_out": {"src": "hda", "id": "720cdc7f846eeb9a", "uuid": "682f3900-3721-4f4a-b46c-4d4dcb5082e8"}, "tax_summary": {"src": "hda", "id": "2b2470ef05b465fc", "uuid": "8085ce21-6b37-4083-aa42-096834869a03"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > classify.seqs(fasta=fasta.dat,reference=alignment.template.dat,taxonomy=\r=tax.taxonomy.dat,method=knn,numwanted=10,search=blast,match=1,mismatch=-1,gapope\ren=-2,gapextend=-1,relabund=false,output=simple,printlevel=-1,processors=2)\n\nUsing 2 processors.\nGenerating search database...    DONE.\nIt took 1 seconds generate search database. \n\nReading in the tax.taxonomy.dat taxonomy...\tDONE.\nClassifying sequences from fasta.dat ...\nProcessing sequence: 100\nProcessing sequence: 120\nProcessing sequence: 100\nProcessing sequence: 122\n\nIt took 5 secs to classify 242 sequences.\n\n\nIt took 0 secs to create the summary file for 242 sequences.\n\n\nOutput File Names: \nfasta.taxonomy.knn.taxonomy\nfasta.taxonomy.knn.tax.summary\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:01:01.429950", "stderr": "", "model_class": "Job", "params": {"count": "null", "name": "null", "relabund": "\"false\"", "tax": "{\"__current_case__\": 1, \"source2\": \"hist\", \"taxonomy\": {\"values\": [{\"id\": 1067388, \"src\": \"hda\"}]}}", "dbkey": "\"?\"", "savelog": "\"true\"", "classify": "{\"__current_case__\": 1, \"method\": \"knn\", \"numwanted\": \"10\", \"search\": {\"__current_case__\": 1, \"algorithm\": \"blast\", \"gapextend\": \"-1\", \"gapopen\": \"-2\", \"match\": \"1\", \"mismatch\": \"-1\"}}", "printlevel": "\"-1\"", "output": "\"simple\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "alignment": "{\"__current_case__\": 1, \"source\": \"hist\", \"template\": {\"values\": [{\"id\": 1067387, \"src\": \"hda\"}]}}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > classify.seqs(fasta=fasta.dat,reference=alignment.template.dat,taxonomy=\r=tax.taxonomy.dat,method=knn,numwanted=10,search=blast,match=1,mismatch=-1,gapope\ren=-2,gapextend=-1,relabund=false,output=simple,printlevel=-1,processors=2)\n\nUsing 2 processors.\nGenerating search database...    DONE.\nIt took 1 seconds generate search database. \n\nReading in the tax.taxonomy.dat taxonomy...\tDONE.\nClassifying sequences from fasta.dat ...\nProcessing sequence: 100\nProcessing sequence: 120\nProcessing sequence: 100\nProcessing sequence: 122\n\nIt took 5 secs to classify 242 sequences.\n\n\nIt took 0 secs to create the summary file for 242 sequences.\n\n\nOutput File Names: \nfasta.taxonomy.knn.taxonomy\nfasta.taxonomy.knn.tax.summary\n\n\nmothur > quit\n", "job_messages": [], "id": "15ec6c1d4489baa4", "job_stdout": null}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_classify_seqs/mothur_classify_seqs/1.39.5.0-2", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "time_seconds": 42.338494062423706, "inputs": {"splitby|condmethod|method": "average", "splitby|matrix|format": "phylip", "savelog": true, "splitby|matrix|dist": {"src": "hda", "id": "a6647ea58a4a0142"}, "splitby|splitmethod": "distance"}, "tool_version": "1.39.5.0", "output_problems": ["Job in error state.", "Job in error state.", "Job in error state.", "Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "update_time": "2019-06-25T23:49:25.594186", "inputs": {"splitby|dist": {"src": "hda", "id": "a6647ea58a4a0142", "uuid": "a875821f-d93e-4ebd-a913-bad55cb97e8e"}}, "outputs": {"rabund": {"src": "hda", "id": "9d005376a34fb8a6", "uuid": "7f7fa0e9-4c29-4565-86aa-85c90a37362c"}, "logfile": {"src": "hda", "id": "676d968553a3e94f", "uuid": "fa6e8e08-9a7f-4012-ad53-216cbb60beef"}, "otulist": {"src": "hda", "id": "9de1ce04d613b3d9", "uuid": "4c923147-83f3-41f3-90d8-6da0cf443dc8"}, "sabund": {"src": "hda", "id": "08ddb345bb0a4437", "uuid": "d41892da-4eea-4619-8dc9-f8db05522393"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=distance,phylip=splitby.matrix.dist.dat,method\rd=average,precision=100,large=false,cluster=true,runsensspec=true,processors=2)\n\nUsing 2 processors.\nConverting to column format...\nIt took 0 seconds to convert the distance file.\nSplitting the file...\nIt took 0 seconds to split the distance file.\nsplitby.matrix.dist.column.dist.5.temp\nsplitby.matrix.dist.column.dist.7.temp\nsplitby.matrix.dist.column.dist.6.temp\nsplitby.matrix.dist.column.dist.10.temp\nsplitby.matrix.dist.column.dist.0.temp\nsplitby.matrix.dist.column.dist.11.temp\n\nReading splitby.matrix.dist.column.dist.12.temp\nsplitby.matrix.dist.column.dist.5.temp\nsplitby.matrix.dist.column.dist.7.temp\nsplitby.matrix.dist.column.dist.6.temp\nsplitby.matrix.dist.column.dist.10.temp\nsplitby.matrix.dist.column.dist.0.temp\nsplitby.matrix.dist.column.dist.11.temp\n\nReading splitby.matrix.dist.column.dist.5.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.12.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.5.temp\n\nReading splitby.matrix.dist.column.dist.9.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.9.temp\nCutoff was 0.15 changed cutoff to 0.14\n\nReading splitby.matrix.dist.column.dist.7.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.7.temp\n\nReading splitby.matrix.dist.column.dist.13.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.13.temp\nCutoff was 0.15 changed cutoff to 0.12\n\nReading splitby.matrix.dist.column.dist.6.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.6.temp\n\nReading splitby.matrix.dist.column.dist.3.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.3.temp\n\nReading splitby.matrix.dist.column.dist.10.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.10.temp\n\nReading splitby.matrix.dist.column.dist.4.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.4.temp\n\nReading splitby.matrix.dist.column.dist.0.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.0.temp\nCutoff was 0.15 changed cutoff to 0.13\n\nReading splitby.matrix.dist.column.dist.1.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.1.temp\n\nReading splitby.matrix.dist.column.dist.11.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.11.temp\n\nReading splitby.matrix.dist.column.dist.2.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.2.temp\nCutoff was 0.15 changed cutoff to 0.11\n\nCutoff was 0.15 changed cutoff to 0.11\nIt took 0 seconds to cluster\nMerging the clustered files...\nIt took 0 seconds to merge.\n\nOutput File Names: \nsplitby.matrix.dist.column.an.sabund\nsplitby.matrix.dist.column.an.rabund\nsplitby.matrix.dist.column.an.list\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "error", "create_time": "2019-06-25T23:48:58.719544", "stderr": "", "model_class": "Job", "params": {"runsensspec": "\"true\"", "cutoff": "\"0.0\"", "splitby": "{\"__current_case__\": 0, \"condmethod\": {\"__current_case__\": 2, \"method\": \"average\"}, \"matrix\": {\"__current_case__\": 1, \"dist\": {\"values\": [{\"id\": 1068825, \"src\": \"hda\"}]}, \"format\": \"phylip\", \"nameOrCount\": null}, \"splitmethod\": \"distance\"}", "precision": "\"100\"", "dbkey": "\"?\"", "large": "\"false\"", "cluster": "\"true\"", "savelog": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=distance,phylip=splitby.matrix.dist.dat,method\rd=average,precision=100,large=false,cluster=true,runsensspec=true,processors=2)\n\nUsing 2 processors.\nConverting to column format...\nIt took 0 seconds to convert the distance file.\nSplitting the file...\nIt took 0 seconds to split the distance file.\nsplitby.matrix.dist.column.dist.5.temp\nsplitby.matrix.dist.column.dist.7.temp\nsplitby.matrix.dist.column.dist.6.temp\nsplitby.matrix.dist.column.dist.10.temp\nsplitby.matrix.dist.column.dist.0.temp\nsplitby.matrix.dist.column.dist.11.temp\n\nReading splitby.matrix.dist.column.dist.12.temp\nsplitby.matrix.dist.column.dist.5.temp\nsplitby.matrix.dist.column.dist.7.temp\nsplitby.matrix.dist.column.dist.6.temp\nsplitby.matrix.dist.column.dist.10.temp\nsplitby.matrix.dist.column.dist.0.temp\nsplitby.matrix.dist.column.dist.11.temp\n\nReading splitby.matrix.dist.column.dist.5.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.12.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.5.temp\n\nReading splitby.matrix.dist.column.dist.9.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.9.temp\nCutoff was 0.15 changed cutoff to 0.14\n\nReading splitby.matrix.dist.column.dist.7.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.7.temp\n\nReading splitby.matrix.dist.column.dist.13.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.13.temp\nCutoff was 0.15 changed cutoff to 0.12\n\nReading splitby.matrix.dist.column.dist.6.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.6.temp\n\nReading splitby.matrix.dist.column.dist.3.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.3.temp\n\nReading splitby.matrix.dist.column.dist.10.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.10.temp\n\nReading splitby.matrix.dist.column.dist.4.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.4.temp\n\nReading splitby.matrix.dist.column.dist.0.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.0.temp\nCutoff was 0.15 changed cutoff to 0.13\n\nReading splitby.matrix.dist.column.dist.1.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.1.temp\n\nReading splitby.matrix.dist.column.dist.11.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.11.temp\n\nReading splitby.matrix.dist.column.dist.2.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.matrix.dist.column.dist.2.temp\nCutoff was 0.15 changed cutoff to 0.11\n\nCutoff was 0.15 changed cutoff to 0.11\nIt took 0 seconds to cluster\nMerging the clustered files...\nIt took 0 seconds to merge.\n\nOutput File Names: \nsplitby.matrix.dist.column.an.sabund\nsplitby.matrix.dist.column.an.rabund\nsplitby.matrix.dist.column.an.list\n\n\nmothur > quit\n", "job_messages": null, "id": "4e4970bdccc51fff", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0-0", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "time_seconds": 41.43829107284546, "inputs": {"splitby|condmethod|method": "average", "cluster": false, "savelog": true, "splitby|matrix|dist": {"src": "hda", "id": "0a9f9dde69fde124"}, "splitby|splitmethod": "distance", "splitby|matrix|format": "phylip"}, "tool_version": "1.39.5.0", "output_problems": ["Job in error state.", "Job in error state.", "Job in error state.", "Expected output collection [splitnames] to have 14 elements, but it had 0.", "Expected output collection [splitdist] to have 13 elements, but it had 0."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "update_time": "2019-06-25T23:49:54.514143", "inputs": {"splitby|dist": {"src": "hda", "id": "0a9f9dde69fde124", "uuid": "eb1e4054-d1a5-4622-a241-eee50cbde708"}}, "outputs": {"rabund": {"src": "hda", "id": "8f88d270f3a8b074", "uuid": "7c5864e9-63b0-49ac-9b4c-9a8338b50e9a"}, "logfile": {"src": "hda", "id": "05725dfc624cd24a", "uuid": "b5ee77ce-8034-41d8-9672-9d9eceb26858"}, "otulist": {"src": "hda", "id": "576d11f9650808c3", "uuid": "df083e83-4fb1-4ad1-acfc-a6cf125fdc61"}, "splitfile": {"src": "hda", "id": "9d3ada7667d0cc77", "uuid": "7701644d-bb7a-4438-b41e-dcad805c6799"}, "sabund": {"src": "hda", "id": "bef8e5244824cb4c", "uuid": "80c1751b-55f9-4aa9-a250-2df8e8258a0c"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=distance,phylip=splitby.matrix.dist.dat,method\rd=average,precision=100,large=false,cluster=false,runsensspec=true,processors=2) \r\u001b[A\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[K)\n\nUsing 2 processors.\nConverting to column format...\nIt took 0 seconds to convert the distance file.\nSplitting the file...\nIt took 0 seconds to split the distance file.\n\nOutput File Names: \n\nsplitby.matrix.dist.column.file\nsplitby.matrix.dist.column.dist.2.temp\nsplitby.matrix.dist.dat.names.2.temp\nsplitby.matrix.dist.column.dist.5.temp\nsplitby.matrix.dist.dat.names.5.temp\nsplitby.matrix.dist.column.dist.1.temp\nsplitby.matrix.dist.dat.names.1.temp\nsplitby.matrix.dist.column.dist.7.temp\nsplitby.matrix.dist.dat.names.7.temp\nsplitby.matrix.dist.column.dist.4.temp\nsplitby.matrix.dist.dat.names.4.temp\nsplitby.matrix.dist.column.dist.6.temp\nsplitby.matrix.dist.dat.names.6.temp\nsplitby.matrix.dist.column.dist.3.temp\nsplitby.matrix.dist.dat.names.3.temp\nsplitby.matrix.dist.column.dist.10.temp\nsplitby.matrix.dist.dat.names.10.temp\nsplitby.matrix.dist.column.dist.13.temp\nsplitby.matrix.dist.dat.names.13.temp\nsplitby.matrix.dist.column.dist.0.temp\nsplitby.matrix.dist.dat.names.0.temp\nsplitby.matrix.dist.column.dist.9.temp\nsplitby.matrix.dist.dat.names.9.temp\nsplitby.matrix.dist.column.dist.11.temp\nsplitby.matrix.dist.dat.names.11.temp\nsplitby.matrix.dist.column.dist.12.temp\nsplitby.matrix.dist.dat.names.12.temp\n\n\nmothur > quit\n", "exit_code": 1, "job_stderr": null, "tool_stderr": "cp: cannot stat 'splitby.*.list': No such file or directory\n", "state": "error", "create_time": "2019-06-25T23:49:24.071857", "stderr": "cp: cannot stat 'splitby.*.list': No such file or directory\n", "model_class": "Job", "params": {"runsensspec": "\"true\"", "cutoff": "\"0.0\"", "splitby": "{\"__current_case__\": 0, \"condmethod\": {\"__current_case__\": 2, \"method\": \"average\"}, \"matrix\": {\"__current_case__\": 1, \"dist\": {\"values\": [{\"id\": 1068847, \"src\": \"hda\"}]}, \"format\": \"phylip\", \"nameOrCount\": null}, \"splitmethod\": \"distance\"}", "precision": "\"100\"", "dbkey": "\"?\"", "large": "\"false\"", "cluster": "\"false\"", "savelog": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=distance,phylip=splitby.matrix.dist.dat,method\rd=average,precision=100,large=false,cluster=false,runsensspec=true,processors=2) \r\u001b[A\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[K)\n\nUsing 2 processors.\nConverting to column format...\nIt took 0 seconds to convert the distance file.\nSplitting the file...\nIt took 0 seconds to split the distance file.\n\nOutput File Names: \n\nsplitby.matrix.dist.column.file\nsplitby.matrix.dist.column.dist.2.temp\nsplitby.matrix.dist.dat.names.2.temp\nsplitby.matrix.dist.column.dist.5.temp\nsplitby.matrix.dist.dat.names.5.temp\nsplitby.matrix.dist.column.dist.1.temp\nsplitby.matrix.dist.dat.names.1.temp\nsplitby.matrix.dist.column.dist.7.temp\nsplitby.matrix.dist.dat.names.7.temp\nsplitby.matrix.dist.column.dist.4.temp\nsplitby.matrix.dist.dat.names.4.temp\nsplitby.matrix.dist.column.dist.6.temp\nsplitby.matrix.dist.dat.names.6.temp\nsplitby.matrix.dist.column.dist.3.temp\nsplitby.matrix.dist.dat.names.3.temp\nsplitby.matrix.dist.column.dist.10.temp\nsplitby.matrix.dist.dat.names.10.temp\nsplitby.matrix.dist.column.dist.13.temp\nsplitby.matrix.dist.dat.names.13.temp\nsplitby.matrix.dist.column.dist.0.temp\nsplitby.matrix.dist.dat.names.0.temp\nsplitby.matrix.dist.column.dist.9.temp\nsplitby.matrix.dist.dat.names.9.temp\nsplitby.matrix.dist.column.dist.11.temp\nsplitby.matrix.dist.dat.names.11.temp\nsplitby.matrix.dist.column.dist.12.temp\nsplitby.matrix.dist.dat.names.12.temp\n\n\nmothur > quit\n", "job_messages": null, "id": "b38f527a228a2e8e", "job_stdout": null}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0-1", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "time_seconds": 19.945788860321045, "inputs": {"splitby|taxonomy": {"src": "hda", "id": "cfe95fd5bcad6521"}, "splitby|condmethod|method": "average", "savelog": true, "splitby|splitmethod": "classify", "splitby|dist": {"src": "hda", "id": "e9d24c2773c981c7"}, "splitby|nameOrCount": {"src": "hda", "id": "bb1f6ae981c6f390"}}, "tool_version": "1.39.5.0", "output_problems": ["Job in error state.", "Job in error state.", "Job in error state.", "Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "update_time": "2019-06-25T23:49:54.188407", "inputs": {"nameOrCount": {"src": "hda", "id": "bb1f6ae981c6f390", "uuid": "3d641e6a-ce77-47f6-8340-b213b490b0bf"}, "taxonomy": {"src": "hda", "id": "cfe95fd5bcad6521", "uuid": "c2df7480-0f9a-445f-9495-8cd59a88d208"}, "dist": {"src": "hda", "id": "e9d24c2773c981c7", "uuid": "c9982a52-2ad2-44af-9c96-0c7d9d9b8ea4"}}, "outputs": {"rabund": {"src": "hda", "id": "c65b562817d4fa3e", "uuid": "b2699ec6-dd62-4d25-9563-bed10421eb8e"}, "logfile": {"src": "hda", "id": "f5e1fe16251e23bd", "uuid": "c5609b4d-2fd9-4b9f-861f-86abb5ea641d"}, "otulist": {"src": "hda", "id": "93664bb6f43ea0e2", "uuid": "c4e9a639-0b7a-40ce-894e-a2465497a6fa"}, "sabund": {"src": "hda", "id": "164882ee5347e4f6", "uuid": "f5af0807-e5ff-43fe-8a79-fdc4a485c2b1"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=classify,column=splitby.dist.dat,taxonomy=spli\ritby.taxonomy.dat,name=splitby.nameOrCount.dat,taxlevel=1,method=average,precisio\ron=100,large=false,cluster=true,runsensspec=true,processors=2)\n\nUsing 2 processors.\nSplitting the file...\nIt took 0 seconds to split the distance file.\n\nReading splitby.dist.dat.0.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.dist.dat.0.temp\nIt took 0 seconds to cluster\nMerging the clustered files...\nIt took 0 seconds to merge.\n\nOutput File Names: \nsplitby.dist.an.sabund\nsplitby.dist.an.rabund\nsplitby.dist.an.list\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "error", "create_time": "2019-06-25T23:49:41.933108", "stderr": "", "model_class": "Job", "params": {"runsensspec": "\"true\"", "cutoff": "\"0.0\"", "splitby": "{\"__current_case__\": 1, \"condmethod\": {\"__current_case__\": 2, \"method\": \"average\"}, \"dist\": {\"values\": [{\"id\": 1068827, \"src\": \"hda\"}]}, \"nameOrCount\": {\"values\": [{\"id\": 1068830, \"src\": \"hda\"}]}, \"splitmethod\": \"classify\", \"taxlevel\": \"1\", \"taxonomy\": {\"values\": [{\"id\": 1068829, \"src\": \"hda\"}]}}", "precision": "\"100\"", "dbkey": "\"?\"", "large": "\"false\"", "cluster": "\"true\"", "savelog": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=classify,column=splitby.dist.dat,taxonomy=spli\ritby.taxonomy.dat,name=splitby.nameOrCount.dat,taxlevel=1,method=average,precisio\ron=100,large=false,cluster=true,runsensspec=true,processors=2)\n\nUsing 2 processors.\nSplitting the file...\nIt took 0 seconds to split the distance file.\n\nReading splitby.dist.dat.0.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.dist.dat.0.temp\nIt took 0 seconds to cluster\nMerging the clustered files...\nIt took 0 seconds to merge.\n\nOutput File Names: \nsplitby.dist.an.sabund\nsplitby.dist.an.rabund\nsplitby.dist.an.list\n\n\nmothur > quit\n", "job_messages": null, "id": "617ab8a304f77de4", "job_stdout": null}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "time_seconds": 53.173025131225586, "inputs": {"splitby|taxonomy": {"src": "hda", "id": "cfe95fd5bcad6521"}, "splitby|condmethod|method": "average", "savelog": true, "splitby|splitmethod": "classify", "splitby|dist": {"src": "hda", "id": "e9d24c2773c981c7"}, "splitby|nameOrCount": {"src": "hda", "id": "aa9ff9d528ea508c"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "update_time": "2019-06-25T23:49:54.224711", "inputs": {"nameOrCount": {"src": "hda", "id": "aa9ff9d528ea508c", "uuid": "2b276f24-be24-4481-a0e4-5e9894752fe1"}, "taxonomy": {"src": "hda", "id": "cfe95fd5bcad6521", "uuid": "c2df7480-0f9a-445f-9495-8cd59a88d208"}, "dist": {"src": "hda", "id": "e9d24c2773c981c7", "uuid": "c9982a52-2ad2-44af-9c96-0c7d9d9b8ea4"}}, "outputs": {"logfile": {"src": "hda", "id": "0aaf60772a98441e", "uuid": "637d6443-deb0-48d0-8694-f0e4554b6fe7"}, "otulist": {"src": "hda", "id": "9f0043dda8cf8457", "uuid": "e2219c32-6938-41be-b243-d5db90f3825a"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=classify,column=splitby.dist.dat,taxonomy=spli\ritby.taxonomy.dat,count=splitby.nameOrCount.dat,taxlevel=1,method=average,precisi\rion=100,large=false,cluster=true,runsensspec=true,processors=2)\n\nUsing 2 processors.\nSplitting the file...\nIt took 1 seconds to split the distance file.\n\nReading splitby.dist.dat.0.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.dist.dat.0.temp\nIt took 0 seconds to cluster\nMerging the clustered files...\nIt took 0 seconds to merge.\n\nOutput File Names: \nsplitby.dist.an.unique_list.list\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:49:32.315392", "stderr": "", "model_class": "Job", "params": {"runsensspec": "\"true\"", "cutoff": "\"0.0\"", "splitby": "{\"__current_case__\": 1, \"condmethod\": {\"__current_case__\": 2, \"method\": \"average\"}, \"dist\": {\"values\": [{\"id\": 1068827, \"src\": \"hda\"}]}, \"nameOrCount\": {\"values\": [{\"id\": 1068832, \"src\": \"hda\"}]}, \"splitmethod\": \"classify\", \"taxlevel\": \"1\", \"taxonomy\": {\"values\": [{\"id\": 1068829, \"src\": \"hda\"}]}}", "precision": "\"100\"", "dbkey": "\"?\"", "large": "\"false\"", "cluster": "\"true\"", "savelog": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=classify,column=splitby.dist.dat,taxonomy=spli\ritby.taxonomy.dat,count=splitby.nameOrCount.dat,taxlevel=1,method=average,precisi\rion=100,large=false,cluster=true,runsensspec=true,processors=2)\n\nUsing 2 processors.\nSplitting the file...\nIt took 1 seconds to split the distance file.\n\nReading splitby.dist.dat.0.temp\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.dist.dat.0.temp\nIt took 0 seconds to cluster\nMerging the clustered files...\nIt took 0 seconds to merge.\n\nOutput File Names: \nsplitby.dist.an.unique_list.list\n\n\nmothur > quit\n", "job_messages": [], "id": "d8b7d19814dcf509", "job_stdout": null}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0-3", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "time_seconds": 21.54782199859619, "inputs": {"splitby|taxonomy": {"src": "hda", "id": "87298522b8173bcf"}, "splitby|fasta": {"src": "hda", "id": "95420676b404dcda"}, "splitby|condmethod|method": "average", "savelog": true, "cutoff": "9999", "splitby|splitmethod": "fasta", "splitby|nameOrCount": {"src": "hda", "id": "a89a1557a508dc94"}}, "tool_version": "1.39.5.0", "output_problems": ["Job in error state.", "Job in error state.", "Job in error state.", "Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "update_time": "2019-06-25T23:50:12.839890", "inputs": {"nameOrCount": {"src": "hda", "id": "a89a1557a508dc94", "uuid": "54433472-7f06-4d67-af96-c47504cc1657"}, "taxonomy": {"src": "hda", "id": "87298522b8173bcf", "uuid": "0fbc9bfe-826e-4f12-89ff-55307e03c7de"}, "fasta": {"src": "hda", "id": "95420676b404dcda", "uuid": "774cf284-0c7b-4c3d-8dfc-1845763d3523"}}, "outputs": {"rabund": {"src": "hda", "id": "8d6c4c60edc759b0", "uuid": "5146d65f-f921-4885-9822-f0c6ec679bae"}, "logfile": {"src": "hda", "id": "a534ede0b900a62d", "uuid": "ad06308d-b387-479e-9709-188ffb59851f"}, "otulist": {"src": "hda", "id": "fa0d9108d8fcea6c", "uuid": "58606172-1246-4b71-b7aa-79bd62daac0f"}, "sabund": {"src": "hda", "id": "e7fd1ec1f3933cf5", "uuid": "77ee3722-5f7c-4130-a5e0-901c9f332886"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=fasta,fasta=splitby.fasta.dat,taxonomy=splitby\ry.taxonomy.dat,name=splitby.nameOrCount.dat,taxlevel=3,classic=false,method=avera\rage,cutoff=9999.0,precision=100,large=false,cluster=true,runsensspec=true,process\rsors=2)\n\nUsing 2 processors.\nSplitting the file...\n/******************************************/\nRunning command: dist.seqs(fasta=splitby.fasta.dat.0.temp, processors=2, cutoff=9999)\n\nUsing 2 processors.\n/******************************************/\n0\t0\n1\t0\n\nOutput File Names: \nsplitby.fasta.dat.0.dist\n\nIt took 0 seconds to calculate the distances for 2 sequences.\nIt took 0 seconds to split the distance file.\n\nReading splitby.fasta.dat.0.dist\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.fasta.dat.0.dist\nIt took 0 seconds to cluster\nMerging the clustered files...\nIt took 1 seconds to merge.\n\nOutput File Names: \nsplitby.fasta.an.sabund\nsplitby.fasta.an.rabund\nsplitby.fasta.an.list\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "error", "create_time": "2019-06-25T23:50:00.741855", "stderr": "", "model_class": "Job", "params": {"runsensspec": "\"true\"", "cutoff": "\"9999.0\"", "splitby": "{\"__current_case__\": 2, \"classic\": \"false\", \"condmethod\": {\"__current_case__\": 2, \"method\": \"average\"}, \"fasta\": {\"values\": [{\"id\": 1068840, \"src\": \"hda\"}]}, \"nameOrCount\": {\"values\": [{\"id\": 1068845, \"src\": \"hda\"}]}, \"splitmethod\": \"fasta\", \"taxlevel\": \"3\", \"taxonomy\": {\"values\": [{\"id\": 1068841, \"src\": \"hda\"}]}}", "precision": "\"100\"", "dbkey": "\"?\"", "large": "\"false\"", "cluster": "\"true\"", "savelog": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=fasta,fasta=splitby.fasta.dat,taxonomy=splitby\ry.taxonomy.dat,name=splitby.nameOrCount.dat,taxlevel=3,classic=false,method=avera\rage,cutoff=9999.0,precision=100,large=false,cluster=true,runsensspec=true,process\rsors=2)\n\nUsing 2 processors.\nSplitting the file...\n/******************************************/\nRunning command: dist.seqs(fasta=splitby.fasta.dat.0.temp, processors=2, cutoff=9999)\n\nUsing 2 processors.\n/******************************************/\n0\t0\n1\t0\n\nOutput File Names: \nsplitby.fasta.dat.0.dist\n\nIt took 0 seconds to calculate the distances for 2 sequences.\nIt took 0 seconds to split the distance file.\n\nReading splitby.fasta.dat.0.dist\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\n\nClustering splitby.fasta.dat.0.dist\nIt took 0 seconds to cluster\nMerging the clustered files...\nIt took 1 seconds to merge.\n\nOutput File Names: \nsplitby.fasta.an.sabund\nsplitby.fasta.an.rabund\nsplitby.fasta.an.list\n\n\nmothur > quit\n", "job_messages": null, "id": "c0a552fd0d4d1207", "job_stdout": null}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0-4", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "time_seconds": 28.198320865631104, "inputs": {"splitby|taxonomy": {"src": "hda", "id": "87298522b8173bcf"}, "splitby|fasta": {"src": "hda", "id": "95420676b404dcda"}, "splitby|condmethod|method": "agc", "savelog": true, "splitby|splitmethod": "fasta", "splitby|nameOrCount": {"src": "hda", "id": "a89a1557a508dc94"}}, "tool_version": "1.39.5.0", "output_problems": ["Job in error state.", "Job in error state.", "Job in error state.", "Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "update_time": "2019-06-25T23:50:04.071402", "inputs": {"nameOrCount": {"src": "hda", "id": "a89a1557a508dc94", "uuid": "54433472-7f06-4d67-af96-c47504cc1657"}, "taxonomy": {"src": "hda", "id": "87298522b8173bcf", "uuid": "0fbc9bfe-826e-4f12-89ff-55307e03c7de"}, "fasta": {"src": "hda", "id": "95420676b404dcda", "uuid": "774cf284-0c7b-4c3d-8dfc-1845763d3523"}}, "outputs": {"rabund": {"src": "hda", "id": "b4473e015c1db8e6", "uuid": "9b3b3ac0-9be5-4db4-a9b7-0798b39771ee"}, "logfile": {"src": "hda", "id": "381230ad98de5c53", "uuid": "c0a8a091-7636-4b03-86ba-6246d5a8e798"}, "otulist": {"src": "hda", "id": "1c5eefce4b120714", "uuid": "2f269947-55ef-4723-81ae-18731082d98c"}, "sabund": {"src": "hda", "id": "3af9550a36d87465", "uuid": "e47d80e5-c60a-4ca8-afcb-c08982c8780c"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=fasta,fasta=splitby.fasta.dat,taxonomy=splitby\ry.taxonomy.dat,name=splitby.nameOrCount.dat,taxlevel=3,classic=false,method=agc,p\rprecision=100,large=false,cluster=true,runsensspec=true,processors=2)\n\nUsing 2 processors.\nSplitting the file...\n\nYou did not set a cutoff, using 0.03.\n/mnt/pulsar/server/dependencies/_conda/envs/mulled-v1-736475004b65901caa33ce32368de7bd390f9f20eaf8369d7ccbbf0be4fb73c4/bin/mothurvsearch file does not exist. Checking path... \nFound vsearch in your path, using /mnt/pulsar/server/dependencies/_conda/envs/mulled-v1-736475004b65901caa33ce32368de7bd390f9f20eaf8369d7ccbbf0be4fb73c4/bin/vsearch\nIt took 0 seconds to split the distance file.\n\nClustering splitby.fasta.dat.0.temp\nIt took 0 seconds to cluster\nMerging the clustered files...\nIt took 1 seconds to merge.\n\nOutput File Names: \nsplitby.fasta.agc.sabund\nsplitby.fasta.agc.rabund\nsplitby.fasta.agc.list\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "vsearch v2.6.0_linux_x86_64, 15.7GB RAM, 4 cores\nhttps://github.com/torognes/vsearch\n\nReading file splitby.fasta.dat.0.temp.sorted.fasta.temp 100%\n1873 nt in 2 seqs, min 930, max 943, avg 936\nMasking 100%\nCounting k-mers 100%\nClustering 100%\nSorting clusters 100%\nWriting clusters 100%\nClusters: 2 Size min 1, max 1, avg 1.0\nSingletons: 2, 100.0% of seqs, 100.0% of clusters\n", "state": "error", "create_time": "2019-06-25T23:49:48.676337", "stderr": "vsearch v2.6.0_linux_x86_64, 15.7GB RAM, 4 cores\nhttps://github.com/torognes/vsearch\n\nReading file splitby.fasta.dat.0.temp.sorted.fasta.temp 100%\n1873 nt in 2 seqs, min 930, max 943, avg 936\nMasking 100%\nCounting k-mers 100%\nClustering 100%\nSorting clusters 100%\nWriting clusters 100%\nClusters: 2 Size min 1, max 1, avg 1.0\nSingletons: 2, 100.0% of seqs, 100.0% of clusters\n", "model_class": "Job", "params": {"runsensspec": "\"true\"", "cutoff": "\"0.0\"", "splitby": "{\"__current_case__\": 2, \"classic\": \"false\", \"condmethod\": {\"__current_case__\": 3, \"method\": \"agc\"}, \"fasta\": {\"values\": [{\"id\": 1068840, \"src\": \"hda\"}]}, \"nameOrCount\": {\"values\": [{\"id\": 1068845, \"src\": \"hda\"}]}, \"splitmethod\": \"fasta\", \"taxlevel\": \"3\", \"taxonomy\": {\"values\": [{\"id\": 1068841, \"src\": \"hda\"}]}}", "precision": "\"100\"", "dbkey": "\"?\"", "large": "\"false\"", "cluster": "\"true\"", "savelog": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=fasta,fasta=splitby.fasta.dat,taxonomy=splitby\ry.taxonomy.dat,name=splitby.nameOrCount.dat,taxlevel=3,classic=false,method=agc,p\rprecision=100,large=false,cluster=true,runsensspec=true,processors=2)\n\nUsing 2 processors.\nSplitting the file...\n\nYou did not set a cutoff, using 0.03.\n/mnt/pulsar/server/dependencies/_conda/envs/mulled-v1-736475004b65901caa33ce32368de7bd390f9f20eaf8369d7ccbbf0be4fb73c4/bin/mothurvsearch file does not exist. Checking path... \nFound vsearch in your path, using /mnt/pulsar/server/dependencies/_conda/envs/mulled-v1-736475004b65901caa33ce32368de7bd390f9f20eaf8369d7ccbbf0be4fb73c4/bin/vsearch\nIt took 0 seconds to split the distance file.\n\nClustering splitby.fasta.dat.0.temp\nIt took 0 seconds to cluster\nMerging the clustered files...\nIt took 1 seconds to merge.\n\nOutput File Names: \nsplitby.fasta.agc.sabund\nsplitby.fasta.agc.rabund\nsplitby.fasta.agc.list\n\n\nmothur > quit\n", "job_messages": null, "id": "a33f958ef7456a6b", "job_stdout": null}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0-5", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "time_seconds": 23.157346963882446, "inputs": {"splitby|condmethod|method": "opti", "splitby|matrix|format": "phylip", "savelog": true, "splitby|matrix|dist": {"src": "hda", "id": "0a9f9dde69fde124"}, "splitby|splitmethod": "distance"}, "tool_version": "1.39.5.0", "output_problems": ["Job in error state.", "Job in error state.", "Job in error state.", "Job in error state.", "Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0", "update_time": "2019-06-25T23:50:11.671838", "inputs": {"splitby|dist": {"src": "hda", "id": "0a9f9dde69fde124", "uuid": "eb1e4054-d1a5-4622-a241-eee50cbde708"}}, "outputs": {"sensspec": {"src": "hda", "id": "0f88620f4c93eb47", "uuid": "303ad435-37ce-41be-8dbf-ee1d310060bb"}, "rabund": {"src": "hda", "id": "330a75202f593c34", "uuid": "efbc7997-5517-411a-8883-50b6a1f273c5"}, "logfile": {"src": "hda", "id": "683a48ddd7eb8cd6", "uuid": "56423d42-c799-4cbe-beaa-76aa9d6b666e"}, "otulist": {"src": "hda", "id": "cd7c93b1370241df", "uuid": "cf24d1cb-adb9-4622-9957-9ff050275425"}, "sabund": {"src": "hda", "id": "050f34dd0833c756", "uuid": "4b473396-eaeb-42e8-ba36-417cd4bad88b"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=distance,phylip=splitby.matrix.dist.dat,method\rd=opti,metric=mcc,initialize=singleton,delta=0.0001,iters=100,precision=100,large\re=false,cluster=true,runsensspec=true,processors=2)\n\nUsing 2 processors.\nConverting to column format...\nIt took 0 seconds to convert the distance file.\nSplitting the file...\nIt took 1 seconds to split the distance file.\nsplitby.matrix.dist.column.dist.0.temp\nsplitby.matrix.dist.column.dist.1.temp\n\nYou did not set a cutoff, using 0.03.\n\nsplitby.matrix.dist.column.dist.0.temp\nsplitby.matrix.dist.column.dist.1.temp\n\nYou did not set a cutoff, using 0.03.\n\nClustering splitby.matrix.dist.column.dist.0.temp\nClustering splitby.matrix.dist.column.dist.4.temp\n\ntp\ttn\tfp\tfn\tsensitivity\tspecificity\tppv\tnpv\tfdr\taccuracy\tmcc\tf1score\n0\t3569\t0\t1\t0\t1\t0\t0.99972\t0\t0.99972\t0\t0\t\n\n\nYou did not set a cutoff, using 0.03.\n\nClustering splitby.matrix.dist.column.dist.3.temp\n\ntp\ttn\tfp\tfn\tsensitivity\tspecificity\tppv\tnpv\tfdr\taccuracy\tmcc\tf1score\n0\t3735\t0\t6\t0\t1\t0\t0.998396\t0\t0.998396\t0\t0\t\n\n\nYou did not set a cutoff, using 0.03.\n\nClustering splitby.matrix.dist.column.dist.1.temp\n\ntp\ttn\tfp\tfn\tsensitivity\tspecificity\tppv\tnpv\tfdr\taccuracy\tmcc\tf1score\n0\t3652\t0\t3\t0\t1\t0\t0.999179\t0\t0.999179\t0\t0\t\n\n\nYou did not set a cutoff, using 0.03.\n\nClustering splitby.matrix.dist.column.dist.2.temp\n\ntp\ttn\tfp\tfn\tsensitivity\tspecificity\tppv\tnpv\tfdr\taccuracy\tmcc\tf1score\n0\t3569\t0\t1\t0\t1\t0\t0.99972\t0\t0.99972\t0\t0\t\n\n\ntp\ttn\tfp\tfn\tsensitivity\tspecificity\tppv\tnpv\tfdr\taccuracy\tmcc\tf1score\n0\t3735\t0\t6\t0\t1\t0\t0.998396\t0\t0.998396\t0\t0\t\n\n\nCutoff was 0.03 changed cutoff to 0.03\nIt took 0 seconds to cluster\nMerging the clustered files...\nIt took 0 seconds to merge.\n/******************************************/\nRunning command: sens.spec(cutoff=0.03, list=splitby.matrix.dist.column.opti_mcc.list, phylip=splitby.matrix.dist.dat, name=splitby.matrix.dist.dat.names)\n\nNOTE: sens.spec assumes that only unique sequences were used to generate the distance matrix.\n\n0.03\nIt took 0 to run sens.spec.\n\nOutput File Names: \nsplitby.matrix.dist.column.opti_mcc.sensspec\n\n/******************************************/\nDone.\n\n\nlabel\tcutoff\ttp\ttn\tfp\tfn\tsensitivity\tspecificity\tppv\tnpv\tfdr\taccuracy\tmcc\tf1score\n0.03\t0.03\t0\t4736\t0\t17\t0\t1\t0\t0.9964\t0\t0.9964\t0\t0\n\nOutput File Names: \nsplitby.matrix.dist.column.opti_mcc.sabund\nsplitby.matrix.dist.column.opti_mcc.rabund\nsplitby.matrix.dist.column.opti_mcc.list\nsplitby.matrix.dist.column.opti_mcc.sensspec\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "error", "create_time": "2019-06-25T23:49:58.747516", "stderr": "", "model_class": "Job", "params": {"runsensspec": "\"true\"", "cutoff": "\"0.0\"", "splitby": "{\"__current_case__\": 0, \"condmethod\": {\"__current_case__\": 3, \"delta\": \"0.0001\", \"initialize\": \"singleton\", \"iters\": \"100\", \"method\": \"opti\", \"metric\": \"mcc\"}, \"matrix\": {\"__current_case__\": 1, \"dist\": {\"values\": [{\"id\": 1068847, \"src\": \"hda\"}]}, \"format\": \"phylip\", \"nameOrCount\": null}, \"splitmethod\": \"distance\"}", "precision": "\"100\"", "dbkey": "\"?\"", "large": "\"false\"", "cluster": "\"true\"", "savelog": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > cluster.split(splitmethod=distance,phylip=splitby.matrix.dist.dat,method\rd=opti,metric=mcc,initialize=singleton,delta=0.0001,iters=100,precision=100,large\re=false,cluster=true,runsensspec=true,processors=2)\n\nUsing 2 processors.\nConverting to column format...\nIt took 0 seconds to convert the distance file.\nSplitting the file...\nIt took 1 seconds to split the distance file.\nsplitby.matrix.dist.column.dist.0.temp\nsplitby.matrix.dist.column.dist.1.temp\n\nYou did not set a cutoff, using 0.03.\n\nsplitby.matrix.dist.column.dist.0.temp\nsplitby.matrix.dist.column.dist.1.temp\n\nYou did not set a cutoff, using 0.03.\n\nClustering splitby.matrix.dist.column.dist.0.temp\nClustering splitby.matrix.dist.column.dist.4.temp\n\ntp\ttn\tfp\tfn\tsensitivity\tspecificity\tppv\tnpv\tfdr\taccuracy\tmcc\tf1score\n0\t3569\t0\t1\t0\t1\t0\t0.99972\t0\t0.99972\t0\t0\t\n\n\nYou did not set a cutoff, using 0.03.\n\nClustering splitby.matrix.dist.column.dist.3.temp\n\ntp\ttn\tfp\tfn\tsensitivity\tspecificity\tppv\tnpv\tfdr\taccuracy\tmcc\tf1score\n0\t3735\t0\t6\t0\t1\t0\t0.998396\t0\t0.998396\t0\t0\t\n\n\nYou did not set a cutoff, using 0.03.\n\nClustering splitby.matrix.dist.column.dist.1.temp\n\ntp\ttn\tfp\tfn\tsensitivity\tspecificity\tppv\tnpv\tfdr\taccuracy\tmcc\tf1score\n0\t3652\t0\t3\t0\t1\t0\t0.999179\t0\t0.999179\t0\t0\t\n\n\nYou did not set a cutoff, using 0.03.\n\nClustering splitby.matrix.dist.column.dist.2.temp\n\ntp\ttn\tfp\tfn\tsensitivity\tspecificity\tppv\tnpv\tfdr\taccuracy\tmcc\tf1score\n0\t3569\t0\t1\t0\t1\t0\t0.99972\t0\t0.99972\t0\t0\t\n\n\ntp\ttn\tfp\tfn\tsensitivity\tspecificity\tppv\tnpv\tfdr\taccuracy\tmcc\tf1score\n0\t3735\t0\t6\t0\t1\t0\t0.998396\t0\t0.998396\t0\t0\t\n\n\nCutoff was 0.03 changed cutoff to 0.03\nIt took 0 seconds to cluster\nMerging the clustered files...\nIt took 0 seconds to merge.\n/******************************************/\nRunning command: sens.spec(cutoff=0.03, list=splitby.matrix.dist.column.opti_mcc.list, phylip=splitby.matrix.dist.dat, name=splitby.matrix.dist.dat.names)\n\nNOTE: sens.spec assumes that only unique sequences were used to generate the distance matrix.\n\n0.03\nIt took 0 to run sens.spec.\n\nOutput File Names: \nsplitby.matrix.dist.column.opti_mcc.sensspec\n\n/******************************************/\nDone.\n\n\nlabel\tcutoff\ttp\ttn\tfp\tfn\tsensitivity\tspecificity\tppv\tnpv\tfdr\taccuracy\tmcc\tf1score\n0.03\t0.03\t0\t4736\t0\t17\t0\t1\t0\t0.9964\t0\t0.9964\t0\t0\n\nOutput File Names: \nsplitby.matrix.dist.column.opti_mcc.sabund\nsplitby.matrix.dist.column.opti_mcc.rabund\nsplitby.matrix.dist.column.opti_mcc.list\nsplitby.matrix.dist.column.opti_mcc.sensspec\n\n\nmothur > quit\n", "job_messages": null, "id": "525dc1a160131b36", "job_stdout": null}, "test_index": 6}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_cluster_split/mothur_cluster_split/1.39.5.0-6", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_consensus_seqs/mothur_consensus_seqs/1.39.5.0", "time_seconds": 89.09532809257507, "inputs": {"fasta": {"src": "hda", "id": "375f52b288c0fded"}, "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_consensus_seqs/mothur_consensus_seqs/1.39.5.0", "update_time": "2019-06-25T23:48:52.693183", "inputs": {"fasta": {"src": "hda", "id": "375f52b288c0fded", "uuid": "18f9de39-4809-4fce-b120-96ddfc1e6ca1"}}, "outputs": {"logfile": {"src": "hda", "id": "2669d60a0fc09684", "uuid": "85c800b2-2e8e-483b-8798-103c30774124"}, "cons_fasta": {"src": "hda", "id": "d2e0227dffc6f1b6", "uuid": "391d323b-e675-490c-b5de-08db03dd41a3"}, "summary": {"src": "hda", "id": "ab545595d6afbb90", "uuid": "24a9ce8c-0618-423d-a263-d9f4c5c45038"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > consensus.seqs(fasta=fasta.dat)\nIt took 1 secs to find the consensus sequences.\nOutput File Names: \nfasta.cons.summary\nfasta.cons.fasta\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:48:17.118173", "stderr": "", "model_class": "Job", "params": {"count": "null", "cutoff": "\"\"", "name": "null", "dbkey": "\"?\"", "savelog": "\"true\"", "perotu": "{\"__current_case__\": 1, \"use\": \"no\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > consensus.seqs(fasta=fasta.dat)\nIt took 1 secs to find the consensus sequences.\nOutput File Names: \nfasta.cons.summary\nfasta.cons.fasta\n\n\nmothur > quit\n", "job_messages": [], "id": "c5f6d4d5af378026", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_consensus_seqs/mothur_consensus_seqs/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_consensus_seqs/mothur_consensus_seqs/1.39.5.0", "time_seconds": 101.8430118560791, "inputs": {"count": {"src": "hda", "id": "c01eb12abe1c4c92"}, "perotu|otu": {"src": "hda", "id": "e5f477662f305ef2"}, "fasta": {"src": "hda", "id": "8a9e787dfebb15fe"}, "savelog": true, "perotu|use": "yes"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_consensus_seqs/mothur_consensus_seqs/1.39.5.0", "update_time": "2019-06-25T23:49:39.699920", "inputs": {"count": {"src": "hda", "id": "c01eb12abe1c4c92", "uuid": "dbf41c6a-4a7a-4fa8-81ad-ce8dc93e3bb1"}, "fasta": {"src": "hda", "id": "8a9e787dfebb15fe", "uuid": "cb50f13b-86a9-4085-86eb-b174daac8ee7"}, "otu": {"src": "hda", "id": "e5f477662f305ef2", "uuid": "2c456af5-94ac-4625-8429-16de09a04edb"}}, "outputs": {"__new_primary_file_consensusnames|0.30__": {"src": "hda", "id": "25dc41009b849e7e", "uuid": "722f2d5d-124b-4eec-ae79-236a41b08d4e"}, "__new_primary_file_consensusnames|0.33__": {"src": "hda", "id": "ff1294758687d104", "uuid": "0daf152f-0f9d-447e-99d1-096c7dde6ad7"}, "__new_primary_file_consensusfastas|0.30__": {"src": "hda", "id": "aa1fa3d2a0f60b74", "uuid": "dcfadbf3-cf54-4f5a-8bb9-f2f2ff5f4e59"}, "__new_primary_file_consensusfastas|0.33__": {"src": "hda", "id": "ab2b943a19cbefd9", "uuid": "b8773335-9466-41a2-ad20-fe6ae4a20dd8"}, "__new_primary_file_consensusfastas|unique__": {"src": "hda", "id": "b3569a3bb615da91", "uuid": "9633cbe7-7071-4871-914b-b053d96d0124"}, "__new_primary_file_consensussummaries|0.30__": {"src": "hda", "id": "e68858297efd409e", "uuid": "e8166d07-df99-467f-9b3e-9e376ac884ce"}, "__new_primary_file_consensussummaries|0.33__": {"src": "hda", "id": "008dea2850ec08c8", "uuid": "dc5b6e61-2cf6-4e94-9a05-c67dca820f8f"}, "__new_primary_file_consensusnames|unique__": {"src": "hda", "id": "382c0100095043b7", "uuid": "5891be63-a85c-4b62-bad4-67efb94dc421"}, "__new_primary_file_consensussummaries|unique__": {"src": "hda", "id": "c4d6166a1f9f0f32", "uuid": "e9b0ae93-459e-4330-84a8-6bb86916b067"}, "logfile": {"src": "hda", "id": "b8514c0a66b30333", "uuid": "cd36778f-d2e1-4e5a-85e9-f4d697bad089"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > consensus.seqs(fasta=fasta.dat,list=perotu.otu.dat,count=count.dat)\nunique\n0.30\n0.33\nIt took 4 secs to find the consensus sequences.\nOutput File Names: \nfasta.unique.cons.summary\nfasta.unique.cons.names\nfasta.unique.cons.fasta\nfasta.0.30.cons.summary\nfasta.0.30.cons.names\nfasta.0.30.cons.fasta\nfasta.0.33.cons.summary\nfasta.0.33.cons.names\nfasta.0.33.cons.fasta\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:48:43.715121", "stderr": "", "model_class": "Job", "params": {"cutoff": "\"\"", "name": "null", "dbkey": "\"?\"", "savelog": "\"true\"", "perotu": "{\"__current_case__\": 0, \"label\": null, \"otu\": {\"values\": [{\"id\": 1068816, \"src\": \"hda\"}]}, \"use\": \"yes\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > consensus.seqs(fasta=fasta.dat,list=perotu.otu.dat,count=count.dat)\nunique\n0.30\n0.33\nIt took 4 secs to find the consensus sequences.\nOutput File Names: \nfasta.unique.cons.summary\nfasta.unique.cons.names\nfasta.unique.cons.fasta\nfasta.0.30.cons.summary\nfasta.0.30.cons.names\nfasta.0.30.cons.fasta\nfasta.0.33.cons.summary\nfasta.0.33.cons.names\nfasta.0.33.cons.fasta\n\n\nmothur > quit\n", "job_messages": [], "id": "b2facc203c0827f7", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_consensus_seqs/mothur_consensus_seqs/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_count_seqs/mothur_count_seqs/1.39.5.0", "time_seconds": 57.01651692390442, "inputs": {"savelog": true, "name": {"src": "hda", "id": "c85d49b52b21ac6d"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_count_seqs/mothur_count_seqs/1.39.5.0", "update_time": "2019-06-26T02:24:34.237153", "inputs": {"name": {"src": "hda", "id": "c85d49b52b21ac6d", "uuid": "956382ff-8132-4d4b-afa3-a0d1a34a58c2"}}, "outputs": {"logfile": {"src": "hda", "id": "d3b1d0346ef6a3ea", "uuid": "18ffea61-29ca-45be-8de1-4e705af4a8d8"}, "seq_count": {"src": "hda", "id": "2ae7eb4167e3601f", "uuid": "70b59e1e-9020-4dfc-a46d-8c7f225da318"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > count.seqs(name=name.dat)\n\nUsing 1 processors.\nIt took 0 secs to create a table for 98 sequences.\n\n\nTotal number of sequences: 98\n\nOutput File Names: \nname.count_table\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:24:08.018938", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "dbkey": "\"?\"", "grouping": "{\"__current_case__\": 1, \"use\": \"no\"}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > count.seqs(name=name.dat)\n\nUsing 1 processors.\nIt took 0 secs to create a table for 98 sequences.\n\n\nTotal number of sequences: 98\n\nOutput File Names: \nname.count_table\n\n\nmothur > quit\n", "job_messages": [], "id": "254aa41c78ed42a3", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_count_seqs/mothur_count_seqs/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_count_seqs/mothur_count_seqs/1.39.5.0", "time_seconds": 56.88098382949829, "inputs": {"grouping|group": {"src": "hda", "id": "ad58733490857527"}, "grouping|use": "yes", "savelog": true, "name": {"src": "hda", "id": "c85d49b52b21ac6d"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_count_seqs/mothur_count_seqs/1.39.5.0", "update_time": "2019-06-26T02:24:34.294075", "inputs": {"group": {"src": "hda", "id": "ad58733490857527", "uuid": "5d121d43-2ead-4f8d-bca1-dde2d4f31590"}, "name": {"src": "hda", "id": "c85d49b52b21ac6d", "uuid": "956382ff-8132-4d4b-afa3-a0d1a34a58c2"}}, "outputs": {"logfile": {"src": "hda", "id": "fd0526907a232f68", "uuid": "cbb1f445-c82b-4aaf-8af8-7063b8cd57cf"}, "seq_count": {"src": "hda", "id": "d334f68e396d364e", "uuid": "51d3f6d1-95d1-4c80-ab15-6bc2fb87de9b"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > count.seqs(group=grouping.group.dat,name=name.dat)\n\nUsing 1 processors.\nIt took 0 secs to create a table for 98 sequences.\n\n\nTotal number of sequences: 98\n\nOutput File Names: \nname.count_table\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:24:02.343536", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "dbkey": "\"?\"", "grouping": "{\"__current_case__\": 0, \"group\": {\"values\": [{\"id\": 1069634, \"src\": \"hda\"}]}, \"groups\": null, \"use\": \"yes\"}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > count.seqs(group=grouping.group.dat,name=name.dat)\n\nUsing 1 processors.\nIt took 0 secs to create a table for 98 sequences.\n\n\nTotal number of sequences: 98\n\nOutput File Names: \nname.count_table\n\n\nmothur > quit\n", "job_messages": [], "id": "e1246086eb61dca2", "job_stdout": null}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_count_seqs/mothur_count_seqs/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_count_seqs/mothur_count_seqs/1.39.5.0", "time_seconds": 55.775866985321045, "inputs": {"grouping|group": {"src": "hda", "id": "ad58733490857527"}, "grouping|use": "yes", "savelog": true, "name": {"src": "hda", "id": "c85d49b52b21ac6d"}, "grouping|groups": "pasture"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_count_seqs/mothur_count_seqs/1.39.5.0", "update_time": "2019-06-26T02:24:48.639728", "inputs": {"group": {"src": "hda", "id": "ad58733490857527", "uuid": "5d121d43-2ead-4f8d-bca1-dde2d4f31590"}, "name": {"src": "hda", "id": "c85d49b52b21ac6d", "uuid": "956382ff-8132-4d4b-afa3-a0d1a34a58c2"}}, "outputs": {"logfile": {"src": "hda", "id": "1a8455a31aff0047", "uuid": "ebbc3881-5785-45df-9723-2ad61680f55b"}, "seq_count": {"src": "hda", "id": "fa69f4199a776a5d", "uuid": "ba2016ea-9567-4578-bcb1-ec5549d1064d"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > count.seqs(group=grouping.group.dat,groups=pasture,name=name.dat)\n\nUsing 1 processors.\nIt took 0 secs to create a table for 98 sequences.\n\n\nTotal number of sequences: 98\n\nOutput File Names: \nname.count_table\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:24:27.665014", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "dbkey": "\"?\"", "grouping": "{\"__current_case__\": 0, \"group\": {\"values\": [{\"id\": 1069634, \"src\": \"hda\"}]}, \"groups\": \"pasture\", \"use\": \"yes\"}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > count.seqs(group=grouping.group.dat,groups=pasture,name=name.dat)\n\nUsing 1 processors.\nIt took 0 secs to create a table for 98 sequences.\n\n\nTotal number of sequences: 98\n\nOutput File Names: \nname.count_table\n\n\nmothur > quit\n", "job_messages": [], "id": "99e8ebedb0376ee2", "job_stdout": null}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_count_seqs/mothur_count_seqs/1.39.5.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_count_seqs/mothur_count_seqs/1.39.5.0", "time_seconds": 46.24787902832031, "inputs": {"grouping|group": {"src": "hda", "id": "ad58733490857527"}, "grouping|use": "yes", "savelog": true, "name": {"src": "hda", "id": "c85d49b52b21ac6d"}, "grouping|groups": ["pasture", "forest"]}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_count_seqs/mothur_count_seqs/1.39.5.0", "update_time": "2019-06-26T02:24:53.980203", "inputs": {"group": {"src": "hda", "id": "ad58733490857527", "uuid": "5d121d43-2ead-4f8d-bca1-dde2d4f31590"}, "name": {"src": "hda", "id": "c85d49b52b21ac6d", "uuid": "956382ff-8132-4d4b-afa3-a0d1a34a58c2"}}, "outputs": {"logfile": {"src": "hda", "id": "b66fc406dc988a74", "uuid": "250c3137-4d90-4b10-b3b9-8c05e76cc7f0"}, "seq_count": {"src": "hda", "id": "2d5e0d072c70c839", "uuid": "05a75c0a-0900-4243-ad19-6dd1d18e9e0b"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > count.seqs(group=grouping.group.dat,groups=pasture-forest,name=name.dat)\r)\n\nUsing 1 processors.\nIt took 0 secs to create a table for 98 sequences.\n\n\nTotal number of sequences: 98\n\nOutput File Names: \nname.count_table\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:24:36.515801", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "dbkey": "\"?\"", "grouping": "{\"__current_case__\": 0, \"group\": {\"values\": [{\"id\": 1069634, \"src\": \"hda\"}]}, \"groups\": [\"pasture\", \"forest\"], \"use\": \"yes\"}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > count.seqs(group=grouping.group.dat,groups=pasture-forest,name=name.dat)\r)\n\nUsing 1 processors.\nIt took 0 secs to create a table for 98 sequences.\n\n\nTotal number of sequences: 98\n\nOutput File Names: \nname.count_table\n\n\nmothur > quit\n", "job_messages": [], "id": "9974ab91b79448c5", "job_stdout": null}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_count_seqs/mothur_count_seqs/1.39.5.0-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_deunique_tree/mothur_deunique_tree/1.39.5.0", "time_seconds": 78.48404693603516, "inputs": {"tree": {"src": "hda", "id": "b3cdbc285cf6481c"}, "savelog": true, "names": {"src": "hda", "id": "3c46bb4ad4335170"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_deunique_tree/mothur_deunique_tree/1.39.5.0", "update_time": "2019-06-26T00:21:40.662364", "inputs": {"tree": {"src": "hda", "id": "b3cdbc285cf6481c", "uuid": "da80dfda-dd65-4aa8-ba0e-773e777aa3f7"}, "names": {"src": "hda", "id": "3c46bb4ad4335170", "uuid": "38b12219-82ad-4dde-92f9-873bffd9ac85"}}, "outputs": {"logfile": {"src": "hda", "id": "64f801b917d4e992", "uuid": "a32dd0b6-b0da-4d8d-ae74-ca17cf9a298a"}, "out_tree": {"src": "hda", "id": "5ded10f1f8082f90", "uuid": "9fd0e536-f764-4a7d-a9f0-048bf9fadcdc"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > deunique.tree(tree=tree.dat,name=names.dat)\n\nOutput File Names: \ntree.deunique.tre\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:21:26.178207", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "dbkey": "\"?\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > deunique.tree(tree=tree.dat,name=names.dat)\n\nOutput File Names: \ntree.deunique.tre\n\n\nmothur > quit\n", "job_messages": [], "id": "b395d8c0c75d8cc5", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_deunique_tree/mothur_deunique_tree/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_dist_seqs/mothur_dist_seqs/1.39.5.0", "time_seconds": 52.0401349067688, "inputs": {"fasta": {"src": "hda", "id": "0b25b2a662b86256"}, "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_dist_seqs/mothur_dist_seqs/1.39.5.0", "update_time": "2019-06-25T21:59:44.201416", "inputs": {"fasta": {"src": "hda", "id": "0b25b2a662b86256", "uuid": "d3d9e534-409d-4bfa-992c-3558fdf2b3cf"}}, "outputs": {"logfile": {"src": "hda", "id": "b6a8c653698699b9", "uuid": "7f6692f3-6d65-4028-ad30-9c5b599cd39e"}, "out_dist": {"src": "hda", "id": "4416740fdeb25136", "uuid": "d63865ba-bae6-452f-94e0-dda41e060e6d"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > dist.seqs(fasta=fasta.dat,countends=true,processors=1)\n\nUsing 1 processors.\n0\t0\n31\t0\n\nOutput File Names: \nfasta.dist\n\nIt took 0 seconds to calculate the distances for 32 sequences.\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:59:17.792643", "stderr": "", "model_class": "Job", "params": {"cutoff": "\"\"", "countends": "\"true\"", "dbkey": "\"?\"", "savelog": "\"true\"", "output": "\"\"", "calc": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > dist.seqs(fasta=fasta.dat,countends=true,processors=1)\n\nUsing 1 processors.\n0\t0\n31\t0\n\nOutput File Names: \nfasta.dist\n\nIt took 0 seconds to calculate the distances for 32 sequences.\n\nmothur > quit\n", "job_messages": [], "id": "13ffaa6c3b4fc233", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_dist_seqs/mothur_dist_seqs/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_dist_seqs/mothur_dist_seqs/1.39.5.0", "time_seconds": 38.10673809051514, "inputs": {"cutoff": "0.3", "savelog": true, "countends": false, "output": "lt", "fasta": {"src": "hda", "id": "0b25b2a662b86256"}, "calc": "nogaps"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_dist_seqs/mothur_dist_seqs/1.39.5.0", "update_time": "2019-06-25T21:59:58.308638", "inputs": {"fasta": {"src": "hda", "id": "0b25b2a662b86256", "uuid": "d3d9e534-409d-4bfa-992c-3558fdf2b3cf"}}, "outputs": {"logfile": {"src": "hda", "id": "e2f3b64cecee8616", "uuid": "d062cbf2-c052-4909-adeb-e27e1e364f17"}, "out_dist": {"src": "hda", "id": "0cd0dc59f3c445ea", "uuid": "6e24abf2-59de-41e2-850f-7cc00d67bc56"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > dist.seqs(fasta=fasta.dat,calc=nogaps,countends=false,cutoff=0.3,output \r=lt,processors=1)\n\nUsing 1 processors.\n0\t0\n31\t0\n\nOutput File Names: \nfasta.phylip.dist\n\nIt took 0 seconds to calculate the distances for 32 sequences.\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:59:42.113991", "stderr": "", "model_class": "Job", "params": {"cutoff": "\"0.3\"", "countends": "\"false\"", "dbkey": "\"?\"", "savelog": "\"true\"", "output": "\"lt\"", "calc": "\"nogaps\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > dist.seqs(fasta=fasta.dat,calc=nogaps,countends=false,cutoff=0.3,output \r=lt,processors=1)\n\nUsing 1 processors.\n0\t0\n31\t0\n\nOutput File Names: \nfasta.phylip.dist\n\nIt took 0 seconds to calculate the distances for 32 sequences.\n\nmothur > quit\n", "job_messages": [], "id": "70fc04ec84cf9729", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_dist_seqs/mothur_dist_seqs/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_dist_shared/mothur_dist_shared/1.39.5.0", "time_seconds": 80.18554592132568, "inputs": {"calc": "canberra", "subsampling|iters": "42", "label": "0.10", "subsampling|subsample": "2", "savelog": true, "output": "square", "subsampling|use": "yes", "otu": {"src": "hda", "id": "3feb659ec7518ba8"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_dist_shared/mothur_dist_shared/1.39.5.0", "update_time": "2019-06-26T00:52:20.897265", "inputs": {"otu": {"src": "hda", "id": "3feb659ec7518ba8", "uuid": "1b9d220d-4721-4a20-b01a-0835fdc84e64"}}, "outputs": {"__new_primary_file_distfiles|canberra.0.10.square__": {"src": "hda", "id": "139d193084000a4a", "uuid": "2abe5b66-20d3-41ed-a0f6-32bb8d4b6160"}, "logfile": {"src": "hda", "id": "2eb612c427735736", "uuid": "a7c02caa-4952-4028-b927-0a8fd3292354"}, "__new_primary_file_distfiles|canberra.0.10.square.std__": {"src": "hda", "id": "c9c70a40c0728c79", "uuid": "bd447d82-b0e5-4c6a-b69a-35291bcc15b8"}, "__new_primary_file_distfiles|canberra.0.10.square.ave__": {"src": "hda", "id": "acfcade74f3baf41", "uuid": "6104f649-be22-44e6-b16b-22f626b1e6e1"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > dist.shared(shared=otu.dat,label=0.10,calc=canberra,subsample=2,iters=4 \r2,output=square,processors=1)\n\nUsing 1 processors.\n0.10\n\nOutput File Names: \notu.canberra.0.10.square.dist\notu.canberra.0.10.square.ave.dist\notu.canberra.0.10.square.std.dist\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:52:07.430321", "stderr": "", "model_class": "Job", "params": {"dbkey": "\"?\"", "label": "\"0.10\"", "savelog": "\"true\"", "groups": "null", "output": "\"square\"", "subsampling": "{\"__current_case__\": 0, \"iters\": \"42\", \"subsample\": \"2\", \"use\": \"yes\"}", "calc": "\"canberra\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > dist.shared(shared=otu.dat,label=0.10,calc=canberra,subsample=2,iters=4 \r2,output=square,processors=1)\n\nUsing 1 processors.\n0.10\n\nOutput File Names: \notu.canberra.0.10.square.dist\notu.canberra.0.10.square.ave.dist\notu.canberra.0.10.square.std.dist\n\n\nmothur > quit\n", "job_messages": [], "id": "897f65aec849c774", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_dist_shared/mothur_dist_shared/1.39.5.0-3", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_filter_seqs/mothur_filter_seqs/1.39.5.0", "time_seconds": 79.30603098869324, "inputs": {"fasta": {"src": "hda", "id": "b71314700f6cbaa5"}, "savelog": true, "inputs_0|fasta": {"src": "hda", "id": "f9a6ecacd8b46459"}}, "tool_version": "1.39.5.0", "output_problems": ["Expected output collection [filteredfastas] to have 2 elements, but it had 0."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_filter_seqs/mothur_filter_seqs/1.39.5.0", "update_time": "2019-06-25T22:44:25.080732", "inputs": {"fasta": {"src": "hda", "id": "b71314700f6cbaa5", "uuid": "b8e73f32-b65c-4e65-b7d2-edcfbe42cb11"}, "inputs_0|fasta": {"src": "hda", "id": "f9a6ecacd8b46459", "uuid": "40f02e4a-7cbc-439b-93c0-e40bcd9b0c99"}}, "outputs": {"out_filter": {"src": "hda", "id": "93346aae1bbb9cf1", "uuid": "772081d9-1739-4dfe-b1d0-7657654e186a"}, "logfile": {"src": "hda", "id": "341ef439dbc89230", "uuid": "40185854-39b4-4801-a362-207a60bae1a4"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > filter.seqs(fasta=fasta.dat-fasta0.dat,vertical=true,soft=0,processors=2\r2)\n\nUsing 2 processors.\nCreating Filter... \n15\n17\n17\n5\n5\n\n\nRunning Filter... \n15\n17\n5\n17\n5\n\n\n\nLength of filtered alignment: 553\nNumber of columns removed: 49447\nLength of the original alignment: 50000\nNumber of sequences used to construct filter: 42\n\nOutput File Names: \nfastafasta0.filter\nfasta.filter.fasta\nfasta0.filter.fasta\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:44:09.978545", "stderr": "", "model_class": "Job", "params": {"inputs": "[{\"__index__\": 0, \"fasta\": {\"values\": [{\"id\": 1068321, \"src\": \"hda\"}]}}]", "trump": "\"\"", "vertical": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "hard": "null", "dbkey": "\"?\"", "savelog": "\"true\"", "soft": "\"0\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > filter.seqs(fasta=fasta.dat-fasta0.dat,vertical=true,soft=0,processors=2\r2)\n\nUsing 2 processors.\nCreating Filter... \n15\n17\n17\n5\n5\n\n\nRunning Filter... \n15\n17\n5\n17\n5\n\n\n\nLength of filtered alignment: 553\nNumber of columns removed: 49447\nLength of the original alignment: 50000\nNumber of sequences used to construct filter: 42\n\nOutput File Names: \nfastafasta0.filter\nfasta.filter.fasta\nfasta0.filter.fasta\n\n\nmothur > quit\n", "job_messages": [], "id": "512ee6fff01fac09", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_filter_seqs/mothur_filter_seqs/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_filter_seqs/mothur_filter_seqs/1.39.5.0", "time_seconds": 80.15604186058044, "inputs": {"fasta": {"src": "hda", "id": "b71314700f6cbaa5"}, "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_filter_seqs/mothur_filter_seqs/1.39.5.0", "update_time": "2019-06-25T22:44:11.311173", "inputs": {"fasta": {"src": "hda", "id": "b71314700f6cbaa5", "uuid": "b8e73f32-b65c-4e65-b7d2-edcfbe42cb11"}}, "outputs": {"out_filter": {"src": "hda", "id": "4081e43516feaeb4", "uuid": "e65e08e7-5142-4509-85d3-a86f18198dc7"}, "filteredfasta": {"src": "hda", "id": "60dc3fb96fab7d9b", "uuid": "7ca2ad2b-0772-4736-8f45-1afb8f8800f9"}, "logfile": {"src": "hda", "id": "9ae2d098bff5e2f0", "uuid": "a8a1dbdd-531b-4a05-b0f4-6377b9379af7"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > filter.seqs(fasta=fasta.dat,vertical=true,soft=0,processors=2)\n\nUsing 2 processors.\nCreating Filter... \n15\n17\n\n\nRunning Filter... \n15\n17\n\n\n\nLength of filtered alignment: 553\nNumber of columns removed: 49447\nLength of the original alignment: 50000\nNumber of sequences used to construct filter: 32\n\nOutput File Names: \nfasta.filter\nfasta.filter.fasta\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:43:55.320712", "stderr": "", "model_class": "Job", "params": {"inputs": "[]", "trump": "\"\"", "vertical": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "hard": "null", "dbkey": "\"?\"", "savelog": "\"true\"", "soft": "\"0\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > filter.seqs(fasta=fasta.dat,vertical=true,soft=0,processors=2)\n\nUsing 2 processors.\nCreating Filter... \n15\n17\n\n\nRunning Filter... \n15\n17\n\n\n\nLength of filtered alignment: 553\nNumber of columns removed: 49447\nLength of the original alignment: 50000\nNumber of sequences used to construct filter: 32\n\nOutput File Names: \nfasta.filter\nfasta.filter.fasta\n\n\nmothur > quit\n", "job_messages": [], "id": "46770959ed6b1e84", "job_stdout": null}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_filter_seqs/mothur_filter_seqs/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_get_dists/mothur_get_dists/1.39.5.0", "time_seconds": 40.21898603439331, "inputs": {"input|dist": {"src": "hda", "id": "59701c71f603d2b5"}, "input|source": "phylip", "savelog": true, "accnos": {"src": "hda", "id": "29e5728191752c13"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_get_dists/mothur_get_dists/1.39.5.0", "update_time": "2019-06-25T23:45:44.919665", "inputs": {"accnos": {"src": "hda", "id": "29e5728191752c13", "uuid": "7959c65b-a94a-4330-838c-6aa99c41aded"}, "dist": {"src": "hda", "id": "59701c71f603d2b5", "uuid": "83026ff5-edac-4752-8196-f1c3206a3e24"}}, "outputs": {"pick_dist": {"src": "hda", "id": "d56bdc0b6709e878", "uuid": "99eb0846-fe18-4a1c-b545-f19c41f63eb6"}, "logfile": {"src": "hda", "id": "19f422adae01b1b8", "uuid": "99410448-01cd-4df0-8281-0cd74ffcbdb2"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > get.dists(accnos=accnos.dat,phylip=input.dist.dat)\nSelected 8 groups or sequences from your phylip file.\n\nOutput File names: \ninput.dist.pick.dat\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:45:31.113176", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "dbkey": "\"?\"", "input": "{\"__current_case__\": 1, \"dist\": {\"values\": [{\"id\": 1068751, \"src\": \"hda\"}]}, \"source\": \"phylip\"}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > get.dists(accnos=accnos.dat,phylip=input.dist.dat)\nSelected 8 groups or sequences from your phylip file.\n\nOutput File names: \ninput.dist.pick.dat\n\n\nmothur > quit\n", "job_messages": [], "id": "e91460a65b454c54", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_get_dists/mothur_get_dists/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_get_label/mothur_get_label/1.39.5.0", "time_seconds": 77.68923306465149, "inputs": {"savelog": true, "otu": {"src": "hda", "id": "7e6f0624d8ba2df5"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_get_label/mothur_get_label/1.39.5.0", "update_time": "2019-06-25T23:03:14.157926", "inputs": {"otu": {"src": "hda", "id": "7e6f0624d8ba2df5", "uuid": "803f1e84-8bc3-46c1-8b5a-54d7714765b0"}}, "outputs": {"logfile": {"src": "hda", "id": "f8852465225c5816", "uuid": "929fc775-c5e4-45ea-912d-f0b3f2e4a9d4"}, "labels_list": {"src": "hda", "id": "228f8583bf4795cc", "uuid": "617fc05d-c2e5-4048-94f3-670c49bdb4a6"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > get.label(rabund=otu.dat)\n0.03\n0.05\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:03:00.845073", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "dbkey": "\"?\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > get.label(rabund=otu.dat)\n0.03\n0.05\n\nmothur > quit\n", "job_messages": [], "id": "0363b6235213f439", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_get_label/mothur_get_label/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_get_mimarkspackage/mothur_get_mimarkspackage/1.39.5.0", "time_seconds": 39.96971893310547, "inputs": {"input|filetype": "group", "savelog": true, "input|infile": {"src": "hda", "id": "42a01048fd2f082e"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_get_mimarkspackage/mothur_get_mimarkspackage/1.39.5.0", "update_time": "2019-06-25T22:50:13.306084", "inputs": {"infile": {"src": "hda", "id": "42a01048fd2f082e", "uuid": "c1ce53f2-c785-472e-a566-7c95b0598fe3"}}, "outputs": {"logfile": {"src": "hda", "id": "a48ab1de2bdfc277", "uuid": "9b7e9145-92b3-4766-9d67-f30ac3e446e4"}, "package_out": {"src": "hda", "id": "ed51bb3f7b022cd4", "uuid": "a34b64d3-d64f-4c7d-b7cc-6c4531970e59"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > get.mimarkspackage(group=input.infile.dat,package=miscellaneous,require \rdonly=false)\n\nOutput File Names: \ninput.infile.tsv\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:49:59.892087", "stderr": "", "model_class": "Job", "params": {"package": "\"miscellaneous\"", "dbkey": "\"?\"", "savelog": "\"true\"", "input": "{\"__current_case__\": 0, \"filetype\": \"group\", \"infile\": {\"values\": [{\"id\": 1068395, \"src\": \"hda\"}]}}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "requiredonly": "\"false\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > get.mimarkspackage(group=input.infile.dat,package=miscellaneous,require \rdonly=false)\n\nOutput File Names: \ninput.infile.tsv\n\n\nmothur > quit\n", "job_messages": [], "id": "5ca27e34568b9921", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_get_mimarkspackage/mothur_get_mimarkspackage/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_get_mimarkspackage/mothur_get_mimarkspackage/1.39.5.0", "time_seconds": 38.787652015686035, "inputs": {"input|filetype": "oligos", "input|infile": {"src": "hda", "id": "51e8eef7a6ca45b0"}, "savelog": true, "requiredonly": true, "package": "human_associated"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_get_mimarkspackage/mothur_get_mimarkspackage/1.39.5.0", "update_time": "2019-06-25T22:50:27.275894", "inputs": {"infile": {"src": "hda", "id": "51e8eef7a6ca45b0", "uuid": "29d1f313-db70-41cd-8f6d-d1ff653c2bc5"}}, "outputs": {"logfile": {"src": "hda", "id": "1a5dece81e7f2d64", "uuid": "88e6c200-9a77-4b5a-b957-df68493ea6f2"}, "package_out": {"src": "hda", "id": "69cf895ac6a12c63", "uuid": "dbe93c26-d0cb-4924-acd7-2849132bc545"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > get.mimarkspackage(oligos=input.infile.dat,package=human_associated,req \ruiredonly=true)\n\nOutput File Names: \ninput.infile.tsv\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:50:12.251730", "stderr": "", "model_class": "Job", "params": {"package": "\"human_associated\"", "dbkey": "\"?\"", "savelog": "\"true\"", "input": "{\"__current_case__\": 1, \"filetype\": \"oligos\", \"infile\": {\"values\": [{\"id\": 1068396, \"src\": \"hda\"}]}}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "requiredonly": "\"true\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > get.mimarkspackage(oligos=input.infile.dat,package=human_associated,req \ruiredonly=true)\n\nOutput File Names: \ninput.infile.tsv\n\n\nmothur > quit\n", "job_messages": [], "id": "55ac401dab90fc17", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_get_mimarkspackage/mothur_get_mimarkspackage/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_homova/mothur_homova/1.39.5.0", "time_seconds": 84.81845903396606, "inputs": {"dist": {"src": "hda", "id": "6319cac98ac04d0b"}, "design": {"src": "hda", "id": "f65726899c94265f"}, "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_homova/mothur_homova/1.39.5.0", "update_time": "2019-06-25T22:57:26.921652", "inputs": {"design": {"src": "hda", "id": "f65726899c94265f", "uuid": "45de4bfa-72b3-450d-b0e4-0ccc8a582641"}, "dist": {"src": "hda", "id": "6319cac98ac04d0b", "uuid": "99461003-e9cb-4eae-8629-17c979d66a0b"}}, "outputs": {"logfile": {"src": "hda", "id": "73c966f36e62f388", "uuid": "67a68e95-687b-445f-894c-55a59a9c38c1"}, "homova": {"src": "hda", "id": "9ea8f3acb4e38f33", "uuid": "88b0920f-56e9-4e02-95c8-0d254eb71a1c"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > homova(phylip=dist.dat,design=design.dat,iters=1000,alpha=0.05)\nHOMOVA\tBValue\tP-value\tSSwithin/(Ni-1)_values\nA-B\t0.000158784\t0.978\t0.0491681\t0.0493482\nExperiment-wise error rate: 0.05\nIf you have borderline P-values, you should try increasing the number of iterations\n\nOutput File Names: \ndist.homova\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:57:12.873826", "stderr": "", "model_class": "Job", "params": {"iters": "\"1000\"", "dbkey": "\"?\"", "savelog": "\"true\"", "sets": "null", "alpha": "\"0.05\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > homova(phylip=dist.dat,design=design.dat,iters=1000,alpha=0.05)\nHOMOVA\tBValue\tP-value\tSSwithin/(Ni-1)_values\nA-B\t0.000158784\t0.978\t0.0491681\t0.0493482\nExperiment-wise error rate: 0.05\nIf you have borderline P-values, you should try increasing the number of iterations\n\nOutput File Names: \ndist.homova\n\n\nmothur > quit\n", "job_messages": [], "id": "2a93deb645275e98", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_homova/mothur_homova/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_homova/mothur_homova/1.39.5.0", "time_seconds": 72.9662778377533, "inputs": {"design": {"src": "hda", "id": "f65726899c94265f"}, "savelog": true, "dist": {"src": "hda", "id": "6319cac98ac04d0b"}, "sets": "A"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_homova/mothur_homova/1.39.5.0", "update_time": "2019-06-25T22:56:45.387790", "inputs": {"design": {"src": "hda", "id": "f65726899c94265f", "uuid": "45de4bfa-72b3-450d-b0e4-0ccc8a582641"}, "dist": {"src": "hda", "id": "6319cac98ac04d0b", "uuid": "99461003-e9cb-4eae-8629-17c979d66a0b"}}, "outputs": {"logfile": {"src": "hda", "id": "06a304982a4bdca9", "uuid": "2f6dc4bc-ded6-4a07-a8df-953023db10d8"}, "homova": {"src": "hda", "id": "6118e7f7edd53774", "uuid": "44a8b867-b208-4412-bf7b-a18c708946e8"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > homova(phylip=dist.dat,design=design.dat,sets=A,iters=1000,alpha=0.05)\nHOMOVA\tBValue\tP-value\tSSwithin/(Ni-1)_values\nA\t-nan\t<0.001*\t0.0491681\nExperiment-wise error rate: 0.05\nIf you have borderline P-values, you should try increasing the number of iterations\n\nOutput File Names: \ndist.homova\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:56:30.680655", "stderr": "", "model_class": "Job", "params": {"iters": "\"1000\"", "dbkey": "\"?\"", "savelog": "\"true\"", "sets": "\"A\"", "alpha": "\"0.05\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > homova(phylip=dist.dat,design=design.dat,sets=A,iters=1000,alpha=0.05)\nHOMOVA\tBValue\tP-value\tSSwithin/(Ni-1)_values\nA\t-nan\t<0.001*\t0.0491681\nExperiment-wise error rate: 0.05\nIf you have borderline P-values, you should try increasing the number of iterations\n\nOutput File Names: \ndist.homova\n\n\nmothur > quit\n", "job_messages": [], "id": "955898c9bf3b7e2b", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_homova/mothur_homova/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_lefse/mothur_lefse/1.39.5.0", "time_seconds": 53.12456202507019, "inputs": {"design": {"src": "hda", "id": "7f126b332124b24c"}, "savelog": true, "otu": {"src": "hda", "id": "fef688d29185764b"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_lefse/mothur_lefse/1.39.5.0", "update_time": "2019-06-25T22:50:01.058497", "inputs": {"design": {"src": "hda", "id": "7f126b332124b24c", "uuid": "96e83ae6-812b-4771-b5b1-c943b2549c4c"}, "otu": {"src": "hda", "id": "fef688d29185764b", "uuid": "b22dc215-1a85-4bb5-97db-131e38609a5c"}}, "outputs": {"logfile": {"src": "hda", "id": "de758c8de7c1ed88", "uuid": "417168c7-df26-49aa-b6d5-a9a3f17ea127"}, "summary": {"src": "hda", "id": "55fd8bb99ba69bf3", "uuid": "1108602d-d388-41a0-be73-b2c63f8dfb17"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > lefse(shared=shared.dat,design=design.dat,aalpha=0.05,walpha=0.05,lda=2 \r.0,iters=30,fboots=0.67,strict=0,minc=10,wilc=T,curv=F,norm=T)\n\nYou did not provide a class, using dpw.\n\n1\n\nNumber of significantly discriminative features: 0 ( 0 ) before internal wilcoxon.\nNo features with significant differences between the classes.\n\nOutput File Names: \nshared.1.lefse_summary\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:49:35.572670", "stderr": "", "model_class": "Job", "params": {"curv": "\"false\"", "aalpha": "\"0.05\"", "lda": "\"2.0\"", "sclass": "\"\"", "iters": "\"30\"", "minc": "\"10\"", "dbkey": "\"?\"", "label": "null", "strict": "\"0\"", "fboots": "\"0.67\"", "savelog": "\"true\"", "sets": "\"\"", "walpha": "\"0.05\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "class": "\"\"", "norm": "\"true\"", "wilc": "\"true\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > lefse(shared=shared.dat,design=design.dat,aalpha=0.05,walpha=0.05,lda=2 \r.0,iters=30,fboots=0.67,strict=0,minc=10,wilc=T,curv=F,norm=T)\n\nYou did not provide a class, using dpw.\n\n1\n\nNumber of significantly discriminative features: 0 ( 0 ) before internal wilcoxon.\nNo features with significant differences between the classes.\n\nOutput File Names: \nshared.1.lefse_summary\n\n\nmothur > quit\n", "job_messages": [], "id": "10002b88c3e792ef", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_lefse/mothur_lefse/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_lefse/mothur_lefse/1.39.5.0", "time_seconds": 39.9829740524292, "inputs": {"design": {"src": "hda", "id": "7f126b332124b24c"}, "label": "1", "savelog": true, "class": "dpw", "otu": {"src": "hda", "id": "4235fa67cd082fc6"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_lefse/mothur_lefse/1.39.5.0", "update_time": "2019-06-25T22:49:28.281252", "inputs": {"design": {"src": "hda", "id": "7f126b332124b24c", "uuid": "96e83ae6-812b-4771-b5b1-c943b2549c4c"}, "otu": {"src": "hda", "id": "4235fa67cd082fc6", "uuid": "737fa1b2-9057-4e39-bd70-7a6076da3125"}}, "outputs": {"logfile": {"src": "hda", "id": "ac54c139a1666968", "uuid": "71ca2993-2580-4465-9a25-bb1dba76a227"}, "summary": {"src": "hda", "id": "007e930329970bc5", "uuid": "20fcc753-e79f-4a16-bea8-71b3015c09a9"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > lefse(shared=shared.dat,design=design.dat,class=dpw,label=1,aalpha=0.05 \r,walpha=0.05,lda=2.0,iters=30,fboots=0.67,strict=0,minc=10,wilc=T,curv=F,norm=T) \r\u001b[A\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[K)\n1\n\nNumber of significantly discriminative features: 0 ( 0 ) before internal wilcoxon.\nNo features with significant differences between the classes.\n\nOutput File Names: \nshared.1.lefse_summary\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:49:09.073125", "stderr": "", "model_class": "Job", "params": {"curv": "\"false\"", "aalpha": "\"0.05\"", "lda": "\"2.0\"", "sclass": "\"\"", "iters": "\"30\"", "minc": "\"10\"", "dbkey": "\"?\"", "label": "[\"1\"]", "strict": "\"0\"", "fboots": "\"0.67\"", "savelog": "\"true\"", "sets": "\"\"", "walpha": "\"0.05\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "class": "\"dpw\"", "norm": "\"true\"", "wilc": "\"true\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > lefse(shared=shared.dat,design=design.dat,class=dpw,label=1,aalpha=0.05 \r,walpha=0.05,lda=2.0,iters=30,fboots=0.67,strict=0,minc=10,wilc=T,curv=F,norm=T) \r\u001b[A\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[K)\n1\n\nNumber of significantly discriminative features: 0 ( 0 ) before internal wilcoxon.\nNo features with significant differences between the classes.\n\nOutput File Names: \nshared.1.lefse_summary\n\n\nmothur > quit\n", "job_messages": [], "id": "2e7117483d40bcb0", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_lefse/mothur_lefse/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_lefse/mothur_lefse/1.39.5.0", "time_seconds": 32.88935303688049, "inputs": {"savelog": true, "sets": "8,142", "design": {"src": "hda", "id": "3a9c836985a09da8"}, "class": "dpw", "otu": {"src": "hda", "id": "fef688d29185764b"}, "label": "1"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_lefse/mothur_lefse/1.39.5.0", "update_time": "2019-06-25T22:50:07.307589", "inputs": {"design": {"src": "hda", "id": "3a9c836985a09da8", "uuid": "44b743a8-6f1a-41f2-b0c2-3988e20edbd3"}, "otu": {"src": "hda", "id": "fef688d29185764b", "uuid": "b22dc215-1a85-4bb5-97db-131e38609a5c"}}, "outputs": {"logfile": {"src": "hda", "id": "50f8ee4987a254d3", "uuid": "eb54b260-916f-4d44-ac17-c2bece5de33c"}, "summary": {"src": "hda", "id": "9553dcde6fb3601e", "uuid": "1a352f3a-f42f-4da1-9f6d-19ae96f106ac"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > lefse(shared=shared.dat,design=design.dat,class=dpw,label=1,sets=8-142, \raalpha=0.05,walpha=0.05,lda=2.0,iters=30,fboots=0.67,strict=0,minc=10,wilc=T,cur \rv=F,norm=T)\n1\n\nNumber of significantly discriminative features: 0 ( 0 ) before internal wilcoxon.\nNo features with significant differences between the classes.\n\nOutput File Names: \nshared.1.lefse_summary\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:49:55.279959", "stderr": "", "model_class": "Job", "params": {"curv": "\"false\"", "aalpha": "\"0.05\"", "lda": "\"2.0\"", "sclass": "\"\"", "iters": "\"30\"", "minc": "\"10\"", "dbkey": "\"?\"", "label": "\"1\"", "strict": "\"0\"", "fboots": "\"0.67\"", "savelog": "\"true\"", "sets": "\"8,142\"", "walpha": "\"0.05\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "class": "\"dpw\"", "norm": "\"true\"", "wilc": "\"true\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > lefse(shared=shared.dat,design=design.dat,class=dpw,label=1,sets=8-142, \raalpha=0.05,walpha=0.05,lda=2.0,iters=30,fboots=0.67,strict=0,minc=10,wilc=T,cur \rv=F,norm=T)\n1\n\nNumber of significantly discriminative features: 0 ( 0 ) before internal wilcoxon.\nNo features with significant differences between the classes.\n\nOutput File Names: \nshared.1.lefse_summary\n\n\nmothur > quit\n", "job_messages": [], "id": "5a6a071b4de6a209", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_lefse/mothur_lefse/1.39.5.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_list_seqs/mothur_list_seqs/1.39.5.0", "time_seconds": 52.01033592224121, "inputs": {"search|input": {"src": "hda", "id": "a9b67947f435b17b"}, "search|intype": "fasta", "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_list_seqs/mothur_list_seqs/1.39.5.0", "update_time": "2019-06-25T22:00:47.822437", "inputs": {"input": {"src": "hda", "id": "a9b67947f435b17b", "uuid": "38dfcace-b240-439b-8186-df2eb6f3011d"}}, "outputs": {"logfile": {"src": "hda", "id": "b471fcceceb0e630", "uuid": "5d3ad6e9-bb7f-4af0-9ddc-8b130e4850fa"}, "accnos": {"src": "hda", "id": "0bf3481a4e890bcf", "uuid": "1d9f6d70-ebc2-4955-9447-f300bf475f59"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > list.seqs(fasta=search.input.dat)\n\nOutput File Names: \nsearch.input.accnos\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:00:17.140025", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "search": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 1067380, \"src\": \"hda\"}]}, \"intype\": \"fasta\"}", "savelog": "\"true\"", "dbkey": "\"?\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > list.seqs(fasta=search.input.dat)\n\nOutput File Names: \nsearch.input.accnos\n\n\nmothur > quit\n", "job_messages": [], "id": "b402b24c8698dc6a", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_list_seqs/mothur_list_seqs/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_list_seqs/mothur_list_seqs/1.39.5.0", "time_seconds": 38.15574407577515, "inputs": {"search|input": {"src": "hda", "id": "d965e3790fe6a1eb"}, "search|intype": "count", "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_list_seqs/mothur_list_seqs/1.39.5.0", "update_time": "2019-06-25T22:00:25.226345", "inputs": {"input": {"src": "hda", "id": "d965e3790fe6a1eb", "uuid": "8b2b5272-d408-4b8c-83a2-413e446eae16"}}, "outputs": {"logfile": {"src": "hda", "id": "a750c538376572f6", "uuid": "8f5dbac9-23d6-4b67-a9bc-aa2fc5cad9bd"}, "accnos": {"src": "hda", "id": "4ddb6ff607ddd237", "uuid": "a7c1016e-dda8-4dc2-a83b-0f8cd0f92817"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > list.seqs(count=search.input.dat)\n\nOutput File Names: \nsearch.input.accnos\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:00:08.903985", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "search": "{\"__current_case__\": 7, \"input\": {\"values\": [{\"id\": 1067370, \"src\": \"hda\"}]}, \"intype\": \"count\"}", "savelog": "\"true\"", "dbkey": "\"?\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > list.seqs(count=search.input.dat)\n\nOutput File Names: \nsearch.input.accnos\n\n\nmothur > quit\n", "job_messages": [], "id": "e644e2f9d68e2831", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_list_seqs/mothur_list_seqs/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_make_design/mothur_make_design/1.39.5.0", "time_seconds": 58.911988973617554, "inputs": {"groupings_0|name": "tardis", "source": {"src": "hda", "id": "a9fda40ea91fa60c"}, "groupings_0|groups": ["forest", "pasture"], "groupings_1|name": "dalek", "groupings_1|groups": "pasture"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_make_design/mothur_make_design/1.39.5.0", "update_time": "2019-06-25T23:35:14.868349", "inputs": {"source": {"src": "hda", "id": "a9fda40ea91fa60c", "uuid": "faf41b18-4807-4828-8f60-13742fa59ac0"}}, "outputs": {"design": {"src": "hda", "id": "5c252b8404f09bcb", "uuid": "ff5fd5d5-5b08-4fff-9bbf-759614fb1e4f"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:35:02.223597", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"false\"", "dbkey": "\"?\"", "groupings": "[{\"__index__\": 0, \"groups\": [\"forest\", \"pasture\"], \"name\": \"tardis\"}, {\"__index__\": 1, \"groups\": \"pasture\", \"name\": \"dalek\"}]"}, "tool_stdout": "", "job_messages": [], "id": "7a9ea5de5011d5de", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_make_design/mothur_make_design/1.39.5.0-0", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_nmds/mothur_nmds/1.39.5.0", "time_seconds": 12.585644006729126, "inputs": {"axes": {"src": "hda", "id": "85fd0b4eade89adc"}, "dist": {"src": "hda", "id": "2bab78be56e5ebfb"}, "iters": "10", "epsilon": "1e-12", "maxiters": "500", "savelog": true, "mindim": "1", "maxdim": "2"}, "tool_version": "1.39.5.0", "output_problems": ["Job in error state.", "Job in error state.", "Job in error state.", "Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_nmds/mothur_nmds/1.39.5.0", "update_time": "2019-06-25T22:37:13.618447", "inputs": {"axes": {"src": "hda", "id": "85fd0b4eade89adc", "uuid": "35556c87-9925-4c78-ae53-605e181ee67c"}, "dist": {"src": "hda", "id": "2bab78be56e5ebfb", "uuid": "844e5f61-1e35-4822-9d9b-e04fa5d0df4b"}}, "outputs": {"nmds_axes": {"src": "hda", "id": "44a26c89aa3d8439", "uuid": "631040e9-6e9d-4fc6-8cba-fae6ce2d6679"}, "logfile": {"src": "hda", "id": "ca7b43f65bc692c7", "uuid": "fda3b1c3-fdd6-47e0-8cf7-3486077ed39e"}, "nmds_stress": {"src": "hda", "id": "61ef2a5dd35f99a0", "uuid": "592932ae-2dcc-464f-944a-c9504ac39394"}, "nmds_iters": {"src": "hda", "id": "ccfe5d7a29c75741", "uuid": "7fed509d-9673-4e80-99ee-e686e9f95b0a"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": null, "job_stderr": null, "tool_stderr": "", "state": "error", "create_time": "2019-06-25T22:37:09.625688", "stderr": "", "model_class": "Job", "params": {"iters": "\"10\"", "epsilon": "\"1e-12\"", "maxiters": "\"500\"", "dbkey": "\"?\"", "savelog": "\"true\"", "mindim": "\"1\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "maxdim": "\"2\""}, "tool_stdout": "", "job_messages": null, "id": "aec007d01c457732", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_nmds/mothur_nmds/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_parsimony/mothur_parsimony/1.39.5.0", "time_seconds": 109.32615995407104, "inputs": {"group": {"src": "hda", "id": "401222b91ff602d7"}, "name": {"src": "hda", "id": "d796a8200e26c929"}, "groups": ["green", "orange"], "iters": "1000", "savelog": true, "tree": {"src": "hda", "id": "6378415f17426aef"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_parsimony/mothur_parsimony/1.39.5.0", "update_time": "2019-06-25T23:54:32.447384", "inputs": {"group": {"src": "hda", "id": "401222b91ff602d7", "uuid": "8d195fbb-825e-4bce-8843-28a926142a42"}, "tree": {"src": "hda", "id": "6378415f17426aef", "uuid": "ad39f9ba-d133-4a06-b36c-d948530ec545"}, "name": {"src": "hda", "id": "d796a8200e26c929", "uuid": "5ab69e3e-3f88-4441-8a64-3fd52b8e8d17"}}, "outputs": {"psummary": {"src": "hda", "id": "645a4930d9194a5b", "uuid": "1fec74c4-cb01-4a39-9a92-6539416c8148"}, "logfile": {"src": "hda", "id": "1f425d70897ca4e5", "uuid": "a99be351-4739-49de-83b7-88931b4d0057"}, "parsimony": {"src": "hda", "id": "779d0c164bff2f17", "uuid": "ed2902a5-8962-44d1-a9b1-98e6a4b17f14"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > parsimony(tree=tree.dat,iters=1000,group=group.dat,groups=green-orange, \rname=name.dat,processors=1)\n\nUsing 1 processors.\n********************#****#****#****#****#****#****#****#****#****#****#\nComparing to random:||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\nTree#\tGroups\tParsScore\tParsSig\n1\tgreen-orange\t1\t1\n\n\nOutput File Names: \ntree.dat.parsimony\ntree.dat.psummary\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:54:18.276356", "stderr": "", "model_class": "Job", "params": {"count": "null", "iters": "\"1000\"", "dbkey": "\"?\"", "savelog": "\"true\"", "groups": "[\"green\", \"orange\"]", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > parsimony(tree=tree.dat,iters=1000,group=group.dat,groups=green-orange, \rname=name.dat,processors=1)\n\nUsing 1 processors.\n********************#****#****#****#****#****#****#****#****#****#****#\nComparing to random:||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\nTree#\tGroups\tParsScore\tParsSig\n1\tgreen-orange\t1\t1\n\n\nOutput File Names: \ntree.dat.parsimony\ntree.dat.psummary\n\n\nmothur > quit\n", "job_messages": [], "id": "fab9093254d638a3", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_parsimony/mothur_parsimony/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_phylo_diversity/mothur_phylo_diversity/1.39.5.0", "time_seconds": 85.4291410446167, "inputs": {"tree": {"src": "hda", "id": "55f185d168e6153f"}, "grouping|use": "no", "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_phylo_diversity/mothur_phylo_diversity/1.39.5.0", "update_time": "2019-06-26T00:08:31.840275", "inputs": {"tree": {"src": "hda", "id": "55f185d168e6153f", "uuid": "4ce486ee-0405-4910-92cf-6db2ef764900"}}, "outputs": {"logfile": {"src": "hda", "id": "0d19256a2840a61e", "uuid": "f0246773-0dcd-48d4-96f8-27a4e7b37576"}, "summary_out": {"src": "hda", "id": "f7fdb4321743a416", "uuid": "f9141c35-68cd-4281-81a7-67f2afb198cc"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > phylo.diversity(tree=tree.dat,iters=1000,freq=100.0,scale=false,collect \r=false,rarefy=false,summary=true,processors=1)\n\nUsing 1 processors.\nIt took 0 secs to run phylo.diversity.\n\nOutput File Names: \ntree.1.phylodiv.summary\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:08:17.470187", "stderr": "", "model_class": "Job", "params": {"count": "null", "scale": "\"false\"", "name": "null", "iters": "\"1000\"", "rarefy": "\"false\"", "dbkey": "\"?\"", "summary": "\"true\"", "collect": "\"false\"", "savelog": "\"true\"", "freq": "\"100.0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "grouping": "{\"__current_case__\": 1, \"use\": \"no\"}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > phylo.diversity(tree=tree.dat,iters=1000,freq=100.0,scale=false,collect \r=false,rarefy=false,summary=true,processors=1)\n\nUsing 1 processors.\nIt took 0 secs to run phylo.diversity.\n\nOutput File Names: \ntree.1.phylodiv.summary\n\n\nmothur > quit\n", "job_messages": [], "id": "62814dddf064bfb3", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_phylo_diversity/mothur_phylo_diversity/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_phylo_diversity/mothur_phylo_diversity/1.39.5.0", "time_seconds": 137.17646598815918, "inputs": {"collect": true, "grouping|use": "yes", "savelog": true, "grouping|group": {"src": "hda", "id": "af92204767126679"}, "tree": {"src": "hda", "id": "55f185d168e6153f"}, "rarefy": true, "grouping|groups": ["orange", "green"]}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_phylo_diversity/mothur_phylo_diversity/1.39.5.0", "update_time": "2019-06-26T00:08:48.082804", "inputs": {"group": {"src": "hda", "id": "af92204767126679", "uuid": "957cc4ed-6812-494b-a63b-1242cdb19005"}, "tree": {"src": "hda", "id": "55f185d168e6153f", "uuid": "4ce486ee-0405-4910-92cf-6db2ef764900"}}, "outputs": {"rarefaction_out": {"src": "hda", "id": "f2f5aca336882868", "uuid": "fa0bf899-1619-4946-8b70-801f16e8eb5b"}, "logfile": {"src": "hda", "id": "70d3fadb373a0de0", "uuid": "4e19e66e-d14a-45d8-b6ae-f769770398ca"}, "summary_out": {"src": "hda", "id": "5747e138618c643a", "uuid": "55077b00-b65a-420f-88f8-1e30420523fb"}, "collectors_out": {"src": "hda", "id": "1eefc166c88a338d", "uuid": "07ccfb71-1937-472b-a22d-8605021f80d0"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > phylo.diversity(tree=tree.dat,group=grouping.group.dat,groups=orange-gr \reen,iters=1000,freq=100.0,scale=false,collect=true,rarefy=true,summary=true,proc \ressors=1)\n\nUsing 1 processors.\nIt took 0 secs to run phylo.diversity.\n\nOutput File Names: \ntree.1.phylodiv.summary\ntree.1.phylodiv.rarefaction\ntree.1.phylodiv\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T00:08:34.280777", "stderr": "", "model_class": "Job", "params": {"count": "null", "scale": "\"false\"", "name": "null", "iters": "\"1000\"", "rarefy": "\"true\"", "dbkey": "\"?\"", "summary": "\"true\"", "collect": "\"true\"", "savelog": "\"true\"", "freq": "\"100.0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "grouping": "{\"__current_case__\": 0, \"group\": {\"values\": [{\"id\": 1069252, \"src\": \"hda\"}]}, \"groups\": [\"orange\", \"green\"], \"use\": \"yes\"}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > phylo.diversity(tree=tree.dat,group=grouping.group.dat,groups=orange-gr \reen,iters=1000,freq=100.0,scale=false,collect=true,rarefy=true,summary=true,proc \ressors=1)\n\nUsing 1 processors.\nIt took 0 secs to run phylo.diversity.\n\nOutput File Names: \ntree.1.phylodiv.summary\ntree.1.phylodiv.rarefaction\ntree.1.phylodiv\n\n\nmothur > quit\n", "job_messages": [], "id": "c4a79d40fd5d5769", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_phylo_diversity/mothur_phylo_diversity/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_dists/mothur_remove_dists/1.39.5.0", "time_seconds": 57.15578007698059, "inputs": {"input|dist": {"src": "hda", "id": "5f76259945516ab6"}, "input|source": "phylip", "savelog": true, "accnos": {"src": "hda", "id": "55d67b779bce28d1"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_dists/mothur_remove_dists/1.39.5.0", "update_time": "2019-06-26T02:27:42.367653", "inputs": {"accnos": {"src": "hda", "id": "55d67b779bce28d1", "uuid": "f3d4a7fa-0a90-4163-9086-7264206b52da"}, "dist": {"src": "hda", "id": "5f76259945516ab6", "uuid": "4cdc325d-cb64-4dae-936b-90bdc591ea7e"}}, "outputs": {"pick_dist": {"src": "hda", "id": "04dbfead0f70c6f6", "uuid": "8baa1aaf-7b24-4663-8944-91118e36c1db"}, "logfile": {"src": "hda", "id": "4ee7134dae0ca23b", "uuid": "a5250d86-bb35-4d99-9fdf-dcc8a6632665"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.dists(accnos=accnos.dat,phylip=input_dist.dat)\nRemoved 8 groups or sequences from your phylip file.\n\nOutput File names: \ninput_dist.pick.dat\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:27:08.228672", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "dbkey": "\"?\"", "input": "{\"__current_case__\": 1, \"dist\": {\"values\": [{\"id\": 1069680, \"src\": \"hda\"}]}, \"source\": \"phylip\"}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.dists(accnos=accnos.dat,phylip=input_dist.dat)\nRemoved 8 groups or sequences from your phylip file.\n\nOutput File names: \ninput_dist.pick.dat\n\n\nmothur > quit\n", "job_messages": [], "id": "c8d8cc8f7b641b7f", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_dists/mothur_remove_dists/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0", "time_seconds": 40.67086386680603, "inputs": {"count": {"src": "hda", "id": "2a240fcb5f1da597"}, "file|taxonomy": {"src": "hda", "id": "d21f1faf9b138ac2"}, "file|filetype": "usetaxonomy", "taxon": "Bacteria;Firmicutes;"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0", "update_time": "2019-06-25T22:37:58.472803", "inputs": {"count": {"src": "hda", "id": "2a240fcb5f1da597", "uuid": "80c8d05c-2f05-4e5f-a561-b84b5b0dc6c4"}, "taxonomy": {"src": "hda", "id": "d21f1faf9b138ac2", "uuid": "733becd2-b5fd-4136-bec1-a3c1d6ef77f8"}}, "outputs": {"taxonomy_out": {"src": "hda", "id": "9bd458aed5f6739a", "uuid": "bff96e48-472f-428f-b83b-8f94ea6349ab"}, "count_out": {"src": "hda", "id": "7d9ba3f8c53a07e2", "uuid": "3de7a7f1-308e-4a2d-9351-67d97f8fbd26"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.lineage(taxonomy=file.taxonomy.dat,taxon='Bacteria;Firmicutes;', \rcount=count.dat)\n\n[NOTE]: The count file should contain only unique names, so mothur assumes your fasta, list and taxonomy files also contain only uniques.\n\n\nOutput File Names: \nfile.taxonomy.pick.dat\ncount.pick.dat\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:37:33.812468", "stderr": "", "model_class": "Job", "params": {"dups": "\"true\"", "fasta_in": "null", "taxon": "\"Bacteria;Firmicutes;\"", "dbkey": "\"?\"", "group_in": "null", "savelog": "\"false\"", "file": "{\"__current_case__\": 0, \"filetype\": \"usetaxonomy\", \"taxonomy\": {\"values\": [{\"id\": 1068108, \"src\": \"hda\"}]}, \"taxons\": null}", "alignreport_in": "null", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "list_in": "null", "name_in": "null"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.lineage(taxonomy=file.taxonomy.dat,taxon='Bacteria;Firmicutes;', \rcount=count.dat)\n\n[NOTE]: The count file should contain only unique names, so mothur assumes your fasta, list and taxonomy files also contain only uniques.\n\n\nOutput File Names: \nfile.taxonomy.pick.dat\ncount.pick.dat\n\n\nmothur > quit\n", "job_messages": [], "id": "999e8896a7b71b17", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0", "time_seconds": 71.49720501899719, "inputs": {"fasta_in": {"src": "hda", "id": "5c8db89d1253d766"}, "taxon": "Bacteria;Firmicutes;,Bacteria;Actinobacteria;", "file|filetype": "usetaxonomy", "group_in": {"src": "hda", "id": "398941866310b844"}, "file|taxonomy": {"src": "hda", "id": "d21f1faf9b138ac2"}, "alignreport_in": {"src": "hda", "id": "fc2afcec27ccef23"}, "list_in": {"src": "hda", "id": "6b7562c32723bb38"}, "name_in": {"src": "hda", "id": "632d002f5bb7d325"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0", "update_time": "2019-06-25T22:38:45.392074", "inputs": {"taxonomy": {"src": "hda", "id": "d21f1faf9b138ac2", "uuid": "733becd2-b5fd-4136-bec1-a3c1d6ef77f8"}, "fasta_in": {"src": "hda", "id": "5c8db89d1253d766", "uuid": "40a0f029-bb49-45df-9a7d-bc399de24fba"}, "group_in": {"src": "hda", "id": "398941866310b844", "uuid": "fa9a442d-3310-4bfb-9afb-ee583ec2de54"}, "alignreport_in": {"src": "hda", "id": "fc2afcec27ccef23", "uuid": "1020a92b-d070-4a7a-bde3-661dba22c517"}, "list_in": {"src": "hda", "id": "6b7562c32723bb38", "uuid": "0756db75-c854-4839-9d2f-d5bad777f6a4"}, "name_in": {"src": "hda", "id": "632d002f5bb7d325", "uuid": "8063b183-f098-471e-a923-46e165785e20"}}, "outputs": {"__new_primary_file_list_out|0.17__": {"src": "hda", "id": "891ea1ba3ab76f19", "uuid": "5c3ff43a-5b58-43b7-a040-89cc53372ddf"}, "__new_primary_file_list_out|0.32__": {"src": "hda", "id": "135c218178065ad4", "uuid": "08e57a7a-47eb-425d-b9fa-f9fad06b9e0d"}, "__new_primary_file_list_out|0.16__": {"src": "hda", "id": "96799e2b110210aa", "uuid": "4c468c75-9076-4f6e-9612-217b4f5af99d"}, "name_out": {"src": "hda", "id": "b090142115cf012d", "uuid": "a7711b42-32a7-48f2-8c8f-fe87111a7bef"}, "fasta_out": {"src": "hda", "id": "b8ce95895a74e554", "uuid": "56e7b139-7c6a-4bc3-ae6e-23834a883347"}, "__new_primary_file_list_out|0.22__": {"src": "hda", "id": "5a644f7f514d51bf", "uuid": "8bf57420-0917-4e49-b039-8fa314f0a39e"}, "__new_primary_file_list_out|0.15__": {"src": "hda", "id": "242dd981f4ad2760", "uuid": "7e400eec-32ea-4f01-abc4-931303f4ef83"}, "__new_primary_file_list_out|0.20__": {"src": "hda", "id": "a635752618923b61", "uuid": "4dca2030-9688-4e79-b26e-14b0d9911ebb"}, "__new_primary_file_list_out|unique__": {"src": "hda", "id": "3987572cd6852674", "uuid": "3ad3b0d6-70a6-48db-af71-ce12374b05fe"}, "__new_primary_file_list_out|0.26__": {"src": "hda", "id": "05ce662fac78b2e1", "uuid": "45e71b7c-d92b-442d-b0d2-4cd576008cd1"}, "__new_primary_file_list_out|0.14__": {"src": "hda", "id": "bce86cccb7a80ff9", "uuid": "11598d87-b27a-460e-8d15-aa5020c8b93c"}, "__new_primary_file_list_out|0.45__": {"src": "hda", "id": "99f1e88e418b5de3", "uuid": "8bc57d26-182a-4249-afc0-fe8143acde96"}, "__new_primary_file_list_out|0.27__": {"src": "hda", "id": "9443394d51707f73", "uuid": "0b803b77-1758-4715-8fcf-f40f04c097b5"}, "__new_primary_file_list_out|0.36__": {"src": "hda", "id": "2e6dc769a1281a56", "uuid": "8fa8aae0-b0d1-47a5-9667-c486a277047e"}, "__new_primary_file_list_out|0.12__": {"src": "hda", "id": "4323cad5131bbd10", "uuid": "2ca8cc44-7537-43bf-8ccc-637e259928f9"}, "__new_primary_file_list_out|0.18__": {"src": "hda", "id": "72d56d61b45d69cd", "uuid": "8846b74b-1e95-4f08-8633-a0fadd2d6ad1"}, "__new_primary_file_list_out|0.24__": {"src": "hda", "id": "e15354d757a625f8", "uuid": "0590d1f9-c921-4cb3-98aa-69d6f4ec869d"}, "alignreport_out": {"src": "hda", "id": "d64f7b5aa1beb24b", "uuid": "880d75ac-044b-4bc9-9e83-7af0e60a399e"}, "__new_primary_file_list_out|0.19__": {"src": "hda", "id": "fe49696e6eda74ec", "uuid": "c759015d-01ac-49ac-ade5-e4ceb97e7bc0"}, "__new_primary_file_list_out|0.25__": {"src": "hda", "id": "72cbf2bdbbaece1d", "uuid": "fe10f1e0-a321-4bbc-8959-ec1872ac2568"}, "__new_primary_file_list_out|0.04__": {"src": "hda", "id": "10fe377cef0c7275", "uuid": "3bc3734b-96be-4b2c-a919-1796af429a2c"}, "__new_primary_file_list_out|0.02__": {"src": "hda", "id": "fc41364f7710faf4", "uuid": "a39dc463-ca0a-4ce3-9017-7b48bd2c54d4"}, "__new_primary_file_list_out|0.23__": {"src": "hda", "id": "dc4c90618fe0028b", "uuid": "9b08e372-0814-42fb-ad63-fc0cf14714dc"}, "__new_primary_file_list_out|0.05__": {"src": "hda", "id": "fde3199959f8b970", "uuid": "685a75d8-c591-43e0-8050-66ac78f23958"}, "group_out": {"src": "hda", "id": "92b1b455eddeb517", "uuid": "3957abdc-9148-4eca-bb66-ef4b7c48cf83"}, "__new_primary_file_list_out|0.21__": {"src": "hda", "id": "724fe53dd64085a3", "uuid": "ad983c32-feb3-4704-8fcc-b6f37b807c17"}, "__new_primary_file_list_out|0.41__": {"src": "hda", "id": "41c87c448594349d", "uuid": "0d386771-b05b-4e74-9047-c246d052f512"}, "__new_primary_file_list_out|0.06__": {"src": "hda", "id": "c6641aebe15b65bd", "uuid": "c25ee6f2-5dc5-48bc-97e0-eeeb39dc66fc"}, "__new_primary_file_list_out|0.33__": {"src": "hda", "id": "eb942ba57b82e64a", "uuid": "1befd59f-7e5b-4f50-a7ac-a54d69170544"}, "__new_primary_file_list_out|0.13__": {"src": "hda", "id": "35d28da558e12430", "uuid": "aa80c2eb-63a3-419f-b283-8e546ba35c0f"}, "__new_primary_file_list_out|0.07__": {"src": "hda", "id": "a9e8d886f49b6e35", "uuid": "fac00514-d5c6-4cb8-a4a2-ee40ec91e678"}, "__new_primary_file_list_out|0.08__": {"src": "hda", "id": "0f99d413f925f47c", "uuid": "81187b31-c6ec-429a-b574-5cd3c6d6a85e"}, "__new_primary_file_list_out|0.38__": {"src": "hda", "id": "2c7c440dc8d0aa6d", "uuid": "46c40ea3-00c2-4a55-a26b-5cba2b3e8f7b"}, "__new_primary_file_list_out|0.29__": {"src": "hda", "id": "6f94629e3fa1e351", "uuid": "08f297aa-a567-4475-9612-d571cbb2d954"}, "__new_primary_file_list_out|0.09__": {"src": "hda", "id": "3ee62e01578c564c", "uuid": "bb425a9b-f162-4b69-8404-950c2a09650c"}, "taxonomy_out": {"src": "hda", "id": "0c05a3f4a490fb55", "uuid": "4c3ac403-a554-4d08-8608-9a73a1083517"}, "__new_primary_file_list_out|0.55__": {"src": "hda", "id": "e189d999ce2c135d", "uuid": "7f5f8673-f16a-44fc-a067-b46b6ed095db"}, "__new_primary_file_list_out|0.11__": {"src": "hda", "id": "c2671502c488e997", "uuid": "5654f022-c292-4df0-9d91-014824929339"}, "__new_primary_file_list_out|0.01__": {"src": "hda", "id": "771ae1a39755b603", "uuid": "f908ca0f-bb24-49c2-8dff-6de71f225584"}, "__new_primary_file_list_out|0.03__": {"src": "hda", "id": "fd9ee4b1ded2bc8f", "uuid": "7d93e2d4-5c32-4c0f-87e7-d7aff727ec2c"}, "__new_primary_file_list_out|0.10__": {"src": "hda", "id": "242c4b7611052f87", "uuid": "7e52202c-bba2-45c0-91d4-d390e849aefd"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.lineage(taxonomy=file.taxonomy.dat,taxon='Bacteria;Firmicutes;-B \racteria;Actinobacteria;',fasta=fasta_in.dat,group=group_in.dat,alignreport=align \rreport_in.dat,list=list_in.dat,name=name_in.dat,dups=true)\nYou did not provide a label, I will use the first label in your inputfile.\n\nOutput File Names: \nfile.taxonomy.pick.dat\nname_in.pick.dat\nfasta_in.pick.dat\ngroup_in.pick.dat\nalignreport_in.pick.align.report\nlist_in.unique.pick.dat\nlist_in.0.01.pick.dat\nlist_in.0.02.pick.dat\nlist_in.0.03.pick.dat\nlist_in.0.04.pick.dat\nlist_in.0.05.pick.dat\nlist_in.0.06.pick.dat\nlist_in.0.07.pick.dat\nlist_in.0.08.pick.dat\nlist_in.0.09.pick.dat\nlist_in.0.10.pick.dat\nlist_in.0.11.pick.dat\nlist_in.0.12.pick.dat\nlist_in.0.13.pick.dat\nlist_in.0.14.pick.dat\nlist_in.0.15.pick.dat\nlist_in.0.16.pick.dat\nlist_in.0.17.pick.dat\nlist_in.0.18.pick.dat\nlist_in.0.19.pick.dat\nlist_in.0.20.pick.dat\nlist_in.0.21.pick.dat\nlist_in.0.22.pick.dat\nlist_in.0.23.pick.dat\nlist_in.0.24.pick.dat\nlist_in.0.25.pick.dat\nlist_in.0.26.pick.dat\nlist_in.0.27.pick.dat\nlist_in.0.29.pick.dat\nlist_in.0.32.pick.dat\nlist_in.0.33.pick.dat\nlist_in.0.36.pick.dat\nlist_in.0.38.pick.dat\nlist_in.0.41.pick.dat\nlist_in.0.45.pick.dat\nlist_in.0.55.pick.dat\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:38:26.012021", "stderr": "", "model_class": "Job", "params": {"count": "null", "dups": "\"true\"", "taxon": "\"Bacteria;Firmicutes;,Bacteria;Actinobacteria;\"", "dbkey": "\"?\"", "savelog": "\"false\"", "file": "{\"__current_case__\": 0, \"filetype\": \"usetaxonomy\", \"taxonomy\": {\"values\": [{\"id\": 1068108, \"src\": \"hda\"}]}, \"taxons\": null}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.lineage(taxonomy=file.taxonomy.dat,taxon='Bacteria;Firmicutes;-B \racteria;Actinobacteria;',fasta=fasta_in.dat,group=group_in.dat,alignreport=align \rreport_in.dat,list=list_in.dat,name=name_in.dat,dups=true)\nYou did not provide a label, I will use the first label in your inputfile.\n\nOutput File Names: \nfile.taxonomy.pick.dat\nname_in.pick.dat\nfasta_in.pick.dat\ngroup_in.pick.dat\nalignreport_in.pick.align.report\nlist_in.unique.pick.dat\nlist_in.0.01.pick.dat\nlist_in.0.02.pick.dat\nlist_in.0.03.pick.dat\nlist_in.0.04.pick.dat\nlist_in.0.05.pick.dat\nlist_in.0.06.pick.dat\nlist_in.0.07.pick.dat\nlist_in.0.08.pick.dat\nlist_in.0.09.pick.dat\nlist_in.0.10.pick.dat\nlist_in.0.11.pick.dat\nlist_in.0.12.pick.dat\nlist_in.0.13.pick.dat\nlist_in.0.14.pick.dat\nlist_in.0.15.pick.dat\nlist_in.0.16.pick.dat\nlist_in.0.17.pick.dat\nlist_in.0.18.pick.dat\nlist_in.0.19.pick.dat\nlist_in.0.20.pick.dat\nlist_in.0.21.pick.dat\nlist_in.0.22.pick.dat\nlist_in.0.23.pick.dat\nlist_in.0.24.pick.dat\nlist_in.0.25.pick.dat\nlist_in.0.26.pick.dat\nlist_in.0.27.pick.dat\nlist_in.0.29.pick.dat\nlist_in.0.32.pick.dat\nlist_in.0.33.pick.dat\nlist_in.0.36.pick.dat\nlist_in.0.38.pick.dat\nlist_in.0.41.pick.dat\nlist_in.0.45.pick.dat\nlist_in.0.55.pick.dat\n\n\nmothur > quit\n", "job_messages": [], "id": "8889f9d660e9af1e", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0", "time_seconds": 26.060631036758423, "inputs": {"file|taxonomy": {"src": "hda", "id": "d21f1faf9b138ac2"}, "file|taxons": ["Bacteria(100);Firmicutes(100);Clostridia(100);Clostridiales(100);Lachnospiraceae(100);Dorea(99);", "Bacteria(100);Firmicutes(100);Clostridia(100);Clostridiales(100);Lachnospiraceae(100);Roseburia(47);"], "file|filetype": "usetaxonomy"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0", "update_time": "2019-06-25T22:38:05.562071", "inputs": {"taxonomy": {"src": "hda", "id": "d21f1faf9b138ac2", "uuid": "733becd2-b5fd-4136-bec1-a3c1d6ef77f8"}}, "outputs": {"taxonomy_out": {"src": "hda", "id": "b2222585dcbb2356", "uuid": "5db7c64c-ee76-40bb-9910-a824a2983a75"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.lineage(taxonomy=file.taxonomy.dat,taxon='Bacteria;Firmicutes;Cl \rostridia;Clostridiales;Lachnospiraceae;Dorea;-Bacteria;Firmicutes;Clostridia;Clo \rstridiales;Lachnospiraceae;Roseburia;')\n\nOutput File Names: \nfile.taxonomy.pick.dat\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:37:52.549758", "stderr": "", "model_class": "Job", "params": {"count": "null", "dups": "\"true\"", "fasta_in": "null", "taxon": "\"\"", "dbkey": "\"?\"", "group_in": "null", "savelog": "\"false\"", "file": "{\"__current_case__\": 0, \"filetype\": \"usetaxonomy\", \"taxonomy\": {\"values\": [{\"id\": 1068108, \"src\": \"hda\"}]}, \"taxons\": [\"Bacteria(100);Firmicutes(100);Clostridia(100);Clostridiales(100);Lachnospiraceae(100);Dorea(99);\", \"Bacteria(100);Firmicutes(100);Clostridia(100);Clostridiales(100);Lachnospiraceae(100);Roseburia(47);\"]}", "alignreport_in": "null", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "list_in": "null", "name_in": "null"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.lineage(taxonomy=file.taxonomy.dat,taxon='Bacteria;Firmicutes;Cl \rostridia;Clostridiales;Lachnospiraceae;Dorea;-Bacteria;Firmicutes;Clostridia;Clo \rstridiales;Lachnospiraceae;Roseburia;')\n\nOutput File Names: \nfile.taxonomy.pick.dat\n\n\nmothur > quit\n", "job_messages": [], "id": "31c14b5166f69edc", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0", "time_seconds": 40.68187594413757, "inputs": {"file|taxonomy": {"src": "hda", "id": "a952f2ecc418f0c3"}, "file|filetype": "useconstaxonomy", "taxon": "Bacteria;Bacteroidetes;"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0", "update_time": "2019-06-25T22:38:27.595305", "inputs": {"taxonomy": {"src": "hda", "id": "a952f2ecc418f0c3", "uuid": "87d46c5e-b798-48e2-859d-b31bc35dabeb"}}, "outputs": {"taxonomy_out": {"src": "hda", "id": "a6023fe0741dc926", "uuid": "d6f62b48-ba46-473c-b04d-9115c2745578"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.lineage(constaxonomy=file.taxonomy.dat,taxon='Bacteria;Bacteroid \retes;')\n\nOutput File Names: \nfile.taxonomy.pick.dat\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:38:06.708872", "stderr": "", "model_class": "Job", "params": {"count": "null", "dups": "\"true\"", "fasta_in": "null", "taxon": "\"Bacteria;Bacteroidetes;\"", "dbkey": "\"?\"", "group_in": "null", "savelog": "\"false\"", "file": "{\"__current_case__\": 1, \"filetype\": \"useconstaxonomy\", \"list\": null, \"shared\": null, \"taxonomy\": {\"values\": [{\"id\": 1068114, \"src\": \"hda\"}]}, \"taxons\": null}", "alignreport_in": "null", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "list_in": "null", "name_in": "null"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.lineage(constaxonomy=file.taxonomy.dat,taxon='Bacteria;Bacteroid \retes;')\n\nOutput File Names: \nfile.taxonomy.pick.dat\n\n\nmothur > quit\n", "job_messages": [], "id": "d28c6951ecfe10c4", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0", "time_seconds": 25.223466157913208, "inputs": {"file|taxonomy": {"src": "hda", "id": "a952f2ecc418f0c3"}, "file|taxons": ["Bacteria(100);Firmicutes(100);Clostridia(70);Clostridiales(70);Lachnospiraceae(51);unclassified;", "Bacteria(100);Proteobacteria(100);Gammaproteobacteria(100);unclassified;unclassified;unclassified;"], "file|filetype": "useconstaxonomy"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0", "update_time": "2019-06-25T22:38:51.978350", "inputs": {"taxonomy": {"src": "hda", "id": "a952f2ecc418f0c3", "uuid": "87d46c5e-b798-48e2-859d-b31bc35dabeb"}}, "outputs": {"taxonomy_out": {"src": "hda", "id": "6571764156f7bbd7", "uuid": "4b0c85e4-4341-4200-af9c-c1ab6fb68a23"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.lineage(constaxonomy=file.taxonomy.dat,taxon='Bacteria;Firmicute \rs;Clostridia;Clostridiales;Lachnospiraceae;unclassified;-Bacteria;Proteobacteria \r;Gammaproteobacteria;unclassified;unclassified;unclassified;')\n\nOutput File Names: \nfile.taxonomy.pick.dat\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:38:37.960889", "stderr": "", "model_class": "Job", "params": {"count": "null", "dups": "\"true\"", "fasta_in": "null", "taxon": "\"\"", "dbkey": "\"?\"", "group_in": "null", "savelog": "\"false\"", "file": "{\"__current_case__\": 1, \"filetype\": \"useconstaxonomy\", \"list\": null, \"shared\": null, \"taxonomy\": {\"values\": [{\"id\": 1068114, \"src\": \"hda\"}]}, \"taxons\": [\"Bacteria(100);Firmicutes(100);Clostridia(70);Clostridiales(70);Lachnospiraceae(51);unclassified;\", \"Bacteria(100);Proteobacteria(100);Gammaproteobacteria(100);unclassified;unclassified;unclassified;\"]}", "alignreport_in": "null", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "list_in": "null", "name_in": "null"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.lineage(constaxonomy=file.taxonomy.dat,taxon='Bacteria;Firmicute \rs;Clostridia;Clostridiales;Lachnospiraceae;unclassified;-Bacteria;Proteobacteria \r;Gammaproteobacteria;unclassified;unclassified;unclassified;')\n\nOutput File Names: \nfile.taxonomy.pick.dat\n\n\nmothur > quit\n", "job_messages": [], "id": "3b85b0284d28c70d", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_lineage/mothur_remove_lineage/1.39.5.0-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_otulabels/mothur_remove_otulabels/1.39.5.0", "time_seconds": 38.27771711349487, "inputs": {"infile|label": "0.22", "accnos": {"src": "hda", "id": "c52916204c592c01"}, "savelog": true, "infile|otu": {"src": "hda", "id": "045ad930d626fd80"}, "infile|intype": "in_shared"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_otulabels/mothur_remove_otulabels/1.39.5.0", "update_time": "2019-06-25T22:03:15.606777", "inputs": {"accnos": {"src": "hda", "id": "c52916204c592c01", "uuid": "a38cad14-a381-4dbf-a779-94251d591949"}, "otu": {"src": "hda", "id": "045ad930d626fd80", "uuid": "74d66600-bb26-4f9f-9b61-bda72ff53726"}}, "outputs": {"pick_out": {"src": "hda", "id": "02cf52fb3a67be20", "uuid": "e4466174-d205-4d64-b23d-ffa688f6996f"}, "logfile": {"src": "hda", "id": "ee63ecb34bb809c7", "uuid": "0680ba0f-4e28-47c7-bec5-e29cb2740a76"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.otulabels(list=infile.otu.dat,label=0.22,accnos=accnos.dat)\nRemoved 0 OTUs from your list file.\n\nOutput File Names: \ninfile.otu.0.22.pick.dat\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:03:01.613256", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "infile": "{\"__current_case__\": 0, \"intype\": \"in_shared\", \"label\": \"0.22\", \"otu\": {\"values\": [{\"id\": 1067426, \"src\": \"hda\"}]}}", "dbkey": "\"?\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.otulabels(list=infile.otu.dat,label=0.22,accnos=accnos.dat)\nRemoved 0 OTUs from your list file.\n\nOutput File Names: \ninfile.otu.0.22.pick.dat\n\n\nmothur > quit\n", "job_messages": [], "id": "59e3afbbdc6ae99a", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_otulabels/mothur_remove_otulabels/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_otulabels/mothur_remove_otulabels/1.39.5.0", "time_seconds": 38.39846992492676, "inputs": {"infile|intype": "in_other", "accnos": {"src": "hda", "id": "fddcbcd2b700d7b8"}, "savelog": true, "infile|otu": {"src": "hda", "id": "8f37eaa52aa24a48"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_otulabels/mothur_remove_otulabels/1.39.5.0", "update_time": "2019-06-25T22:03:43.180739", "inputs": {"accnos": {"src": "hda", "id": "fddcbcd2b700d7b8", "uuid": "611c0fb2-0fd1-4564-a0bb-9f3520f67ea0"}, "otu": {"src": "hda", "id": "8f37eaa52aa24a48", "uuid": "3db4bbdb-6b27-4683-a521-0426e27305ef"}}, "outputs": {"pick_out": {"src": "hda", "id": "81a229db4ee84837", "uuid": "dae83057-3908-4bed-8b9f-5c8afb9a31a9"}, "logfile": {"src": "hda", "id": "556cbc992ca05af7", "uuid": "aadd474a-7ec5-4ee6-a7e9-76d5dd90e21f"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.otulabels(corraxes=infile.otu.dat,accnos=accnos.dat)\nRemoved 3 lines from your corr.axes file.\n\nOutput File Names: \ninfile.otu.pick.dat\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:03:29.321274", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "infile": "{\"__current_case__\": 1, \"intype\": \"in_other\", \"otu\": {\"values\": [{\"id\": 1067433, \"src\": \"hda\"}]}}", "dbkey": "\"?\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > remove.otulabels(corraxes=infile.otu.dat,accnos=accnos.dat)\nRemoved 3 lines from your corr.axes file.\n\nOutput File Names: \ninfile.otu.pick.dat\n\n\nmothur > quit\n", "job_messages": [], "id": "374f6e29c15c5da4", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_remove_otulabels/mothur_remove_otulabels/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_reverse_seqs/mothur_reverse_seqs/1.39.5.0", "time_seconds": 34.21686005592346, "inputs": {"fasta": {"src": "hda", "id": "5ed8429cf2a24857"}, "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_reverse_seqs/mothur_reverse_seqs/1.39.5.0", "update_time": "2019-06-25T22:55:02.350758", "inputs": {"fasta": {"src": "hda", "id": "5ed8429cf2a24857", "uuid": "091aa240-9638-4c8b-ac56-5ce54df4ef21"}}, "outputs": {"logfile": {"src": "hda", "id": "33c0c8335f4141e7", "uuid": "2b87610b-3e91-4ab0-8c85-305f4187ffb8"}, "out_fasta": {"src": "hda", "id": "f6f2125b27d1e8e1", "uuid": "377c0417-12ad-4094-be00-28fe990ba492"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > reverse.seqs(fasta=fasta.dat)\n\nOutput File Names: \nfasta.rc.dat\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:54:47.086793", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "dbkey": "\"?\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > reverse.seqs(fasta=fasta.dat)\n\nOutput File Names: \nfasta.rc.dat\n\nmothur > quit\n", "job_messages": [], "id": "b94c582bfb33e646", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_reverse_seqs/mothur_reverse_seqs/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_shhh_seqs/mothur_shhh_seqs/1.39.5.0", "time_seconds": 57.88972997665405, "inputs": {"fasta": {"src": "hda", "id": "2848489d7321e076"}, "savelog": true, "name": {"src": "hda", "id": "149aa78ab93c00c6"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_shhh_seqs/mothur_shhh_seqs/1.39.5.0", "update_time": "2019-06-25T23:47:44.303619", "inputs": {"fasta": {"src": "hda", "id": "2848489d7321e076", "uuid": "3d4e584e-03e0-4fb8-87b6-a51c19a0e691"}, "name": {"src": "hda", "id": "149aa78ab93c00c6", "uuid": "8e537f99-3a47-4527-8658-da139b99bb92"}}, "outputs": {"shhh_fasta": {"src": "hda", "id": "e65e9f259a89ef65", "uuid": "34bbbb9b-ae61-4119-a55d-b2cd9f8c153c"}, "logfile": {"src": "hda", "id": "72026b37864ee247", "uuid": "9eda7011-9dea-488b-8997-44d2d6170a4d"}, "shhh_map": {"src": "hda", "id": "f6a8f00ad2a6d886", "uuid": "662bc658-a4a2-40c9-aa41-00431317e3a3"}, "shhh_names": {"src": "hda", "id": "2fe26bd0b463b533", "uuid": "f7ad70d9-aa65-4e7c-bce3-287cbaeed606"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > shhh.seqs(fasta=fasta.dat,name=name.dat,sigma=0.01,processors=1)\n\nUsing 1 processors.\n\nCalculating distances...\n0\t0\n9\t1\nDone.\n/******************************************/\nRunning command: cluster(phylip=fasta.shhh.dist, method=furthest, cutoff=0.08)\n\nUsing 1 processors.\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\nunique\t2\t8\t1\n0.05\t2\t6\t2\nIt took 0 seconds to cluster\n\nOutput File Names: \nfasta.shhh.fn.sabund\nfasta.shhh.fn.rabund\nfasta.shhh.fn.list\n\n/******************************************/\n\nOutput File Names: \nfasta.shhh_seqs.map\nfasta.shhh_seqs.fasta\nfasta.shhh_seqs.names\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:47:29.265763", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "sigma": "\"0.01\"", "group": "null", "dbkey": "\"?\"", "savelog": "\"true\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > shhh.seqs(fasta=fasta.dat,name=name.dat,sigma=0.01,processors=1)\n\nUsing 1 processors.\n\nCalculating distances...\n0\t0\n9\t1\nDone.\n/******************************************/\nRunning command: cluster(phylip=fasta.shhh.dist, method=furthest, cutoff=0.08)\n\nUsing 1 processors.\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\nunique\t2\t8\t1\n0.05\t2\t6\t2\nIt took 0 seconds to cluster\n\nOutput File Names: \nfasta.shhh.fn.sabund\nfasta.shhh.fn.rabund\nfasta.shhh.fn.list\n\n/******************************************/\n\nOutput File Names: \nfasta.shhh_seqs.map\nfasta.shhh_seqs.fasta\nfasta.shhh_seqs.names\n\n\nmothur > quit\n", "job_messages": [], "id": "83f65c58e56b552b", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_shhh_seqs/mothur_shhh_seqs/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_shared/mothur_summary_shared/1.39.5.0", "time_seconds": 56.1904239654541, "inputs": {"savelog": true, "otu": {"src": "hda", "id": "58d769631e227d18"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_shared/mothur_summary_shared/1.39.5.0", "update_time": "2019-06-26T02:31:35.491942", "inputs": {"otu": {"src": "hda", "id": "58d769631e227d18", "uuid": "0cb5fb42-a802-46ee-b9aa-f1af0aec974f"}}, "outputs": {"logfile": {"src": "hda", "id": "d692680eca57c5cc", "uuid": "58279b58-d6ed-439d-ab89-0919f5bfc168"}, "summary": {"src": "hda", "id": "665d87b3c197010e", "uuid": "68ca7515-c8a0-41b1-8b8f-b73d8177d3df"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > summary.shared(shared=otu.dat,calc=sharedsobs-sharedchao-sharedace-jcla \rss-jest-sorclass-sorest-jabund-sorabund-thetan-thetayc,all=false,distance=false, \routput=lt,processors=1)\n\nUsing 1 processors.\nunique\n0.01\n0.02\n0.03\n0.04\n0.05\n0.06\n0.07\n0.08\n0.09\n0.10\n0.11\n0.12\n0.13\n0.14\n0.15\n0.16\n0.17\n0.18\n0.19\n0.20\n0.21\n0.22\n0.23\n0.24\n0.25\n0.26\n0.27\n0.29\n0.32\n0.33\n0.36\n0.38\n0.41\n0.45\n0.55\n\nOutput File Names: \notu.summary\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:31:14.196740", "stderr": "", "model_class": "Job", "params": {"distance": "\"false\"", "all": "\"false\"", "dbkey": "\"?\"", "label": "null", "subsample": "{\"__current_case__\": 1, \"use\": \"no\"}", "savelog": "\"true\"", "groups": "null", "output": "\"lt\"", "calc": "[\"sharedsobs\", \"sharedchao\", \"sharedace\", \"jclass\", \"jest\", \"sorclass\", \"sorest\", \"jabund\", \"sorabund\", \"thetan\", \"thetayc\"]", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > summary.shared(shared=otu.dat,calc=sharedsobs-sharedchao-sharedace-jcla \rss-jest-sorclass-sorest-jabund-sorabund-thetan-thetayc,all=false,distance=false, \routput=lt,processors=1)\n\nUsing 1 processors.\nunique\n0.01\n0.02\n0.03\n0.04\n0.05\n0.06\n0.07\n0.08\n0.09\n0.10\n0.11\n0.12\n0.13\n0.14\n0.15\n0.16\n0.17\n0.18\n0.19\n0.20\n0.21\n0.22\n0.23\n0.24\n0.25\n0.26\n0.27\n0.29\n0.32\n0.33\n0.36\n0.38\n0.41\n0.45\n0.55\n\nOutput File Names: \notu.summary\n\n\nmothur > quit\n", "job_messages": [], "id": "0e765792636da9ba", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_shared/mothur_summary_shared/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_shared/mothur_summary_shared/1.39.5.0", "time_seconds": 42.40775012969971, "inputs": {"subsample|use": "yes", "savelog": true, "otu": {"src": "hda", "id": "324c416e867e7b3c"}, "subsample|iters": "42", "subsample|subsample": "10"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_shared/mothur_summary_shared/1.39.5.0", "update_time": "2019-06-26T02:31:06.262853", "inputs": {"otu": {"src": "hda", "id": "324c416e867e7b3c", "uuid": "c462de74-563e-4f85-bedc-875e76f75ec0"}}, "outputs": {"logfile": {"src": "hda", "id": "3990278b906d6e57", "uuid": "f0baf43d-3ea9-445f-8653-65651eb243bb"}, "summary": {"src": "hda", "id": "bde47389ab87e1a4", "uuid": "8d2546d9-f1c1-4d2f-b69b-ed7585bc5c33"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > summary.shared(shared=otu.dat,calc=sharedsobs-sharedchao-sharedace-jcla \rss-jest-sorclass-sorest-jabund-sorabund-thetan-thetayc,all=false,distance=false, \rsubsample=10,iters=42,output=lt,processors=1)\n\nUsing 1 processors.\n0.10\n\nOutput File Names: \notu.summary\notu.sharedsobs.0.10.lt.dist\notu.sharedchao.0.10.lt.dist\notu.sharedace.0.10.lt.dist\notu.jclass.0.10.lt.dist\notu.jest.0.10.lt.dist\notu.sorclass.0.10.lt.dist\notu.sorest.0.10.lt.dist\notu.jabund.0.10.lt.dist\notu.sorabund.0.10.lt.dist\notu.thetan.0.10.lt.dist\notu.thetayc.0.10.lt.dist\notu.sharedsobs.0.10.lt.ave.dist\notu.sharedsobs.0.10.lt.std.dist\notu.sharedchao.0.10.lt.ave.dist\notu.sharedchao.0.10.lt.std.dist\notu.sharedace.0.10.lt.ave.dist\notu.sharedace.0.10.lt.std.dist\notu.jclass.0.10.lt.ave.dist\notu.jclass.0.10.lt.std.dist\notu.jest.0.10.lt.ave.dist\notu.jest.0.10.lt.std.dist\notu.sorclass.0.10.lt.ave.dist\notu.sorclass.0.10.lt.std.dist\notu.sorest.0.10.lt.ave.dist\notu.sorest.0.10.lt.std.dist\notu.jabund.0.10.lt.ave.dist\notu.jabund.0.10.lt.std.dist\notu.sorabund.0.10.lt.ave.dist\notu.sorabund.0.10.lt.std.dist\notu.thetan.0.10.lt.ave.dist\notu.thetan.0.10.lt.std.dist\notu.thetayc.0.10.lt.ave.dist\notu.thetayc.0.10.lt.std.dist\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:30:48.913026", "stderr": "", "model_class": "Job", "params": {"distance": "\"false\"", "all": "\"false\"", "dbkey": "\"?\"", "label": "null", "subsample": "{\"__current_case__\": 0, \"iters\": \"42\", \"subsample\": \"10\", \"use\": \"yes\"}", "savelog": "\"true\"", "groups": "null", "output": "\"lt\"", "calc": "[\"sharedsobs\", \"sharedchao\", \"sharedace\", \"jclass\", \"jest\", \"sorclass\", \"sorest\", \"jabund\", \"sorabund\", \"thetan\", \"thetayc\"]", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > summary.shared(shared=otu.dat,calc=sharedsobs-sharedchao-sharedace-jcla \rss-jest-sorclass-sorest-jabund-sorabund-thetan-thetayc,all=false,distance=false, \rsubsample=10,iters=42,output=lt,processors=1)\n\nUsing 1 processors.\n0.10\n\nOutput File Names: \notu.summary\notu.sharedsobs.0.10.lt.dist\notu.sharedchao.0.10.lt.dist\notu.sharedace.0.10.lt.dist\notu.jclass.0.10.lt.dist\notu.jest.0.10.lt.dist\notu.sorclass.0.10.lt.dist\notu.sorest.0.10.lt.dist\notu.jabund.0.10.lt.dist\notu.sorabund.0.10.lt.dist\notu.thetan.0.10.lt.dist\notu.thetayc.0.10.lt.dist\notu.sharedsobs.0.10.lt.ave.dist\notu.sharedsobs.0.10.lt.std.dist\notu.sharedchao.0.10.lt.ave.dist\notu.sharedchao.0.10.lt.std.dist\notu.sharedace.0.10.lt.ave.dist\notu.sharedace.0.10.lt.std.dist\notu.jclass.0.10.lt.ave.dist\notu.jclass.0.10.lt.std.dist\notu.jest.0.10.lt.ave.dist\notu.jest.0.10.lt.std.dist\notu.sorclass.0.10.lt.ave.dist\notu.sorclass.0.10.lt.std.dist\notu.sorest.0.10.lt.ave.dist\notu.sorest.0.10.lt.std.dist\notu.jabund.0.10.lt.ave.dist\notu.jabund.0.10.lt.std.dist\notu.sorabund.0.10.lt.ave.dist\notu.sorabund.0.10.lt.std.dist\notu.thetan.0.10.lt.ave.dist\notu.thetan.0.10.lt.std.dist\notu.thetayc.0.10.lt.ave.dist\notu.thetayc.0.10.lt.std.dist\n\n\nmothur > quit\n", "job_messages": [], "id": "10571a2e63cf3cdb", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_shared/mothur_summary_shared/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_shared/mothur_summary_shared/1.39.5.0", "time_seconds": 56.69855308532715, "inputs": {"calc": ["sharedsobs", "sharedchao", "sharedace", "anderberg", "jclass", "jest", "kulczynski", "kulczynskicody", "kstest", "lennon", "ochiai", "sorclass", "sorest", "whittaker", "hamming", "memchi2", "memchord", "memeuclidean", "mempearson", "braycurtis", "jabund", "morisitahorn", "sorabund", "thetan", "thetayc", "canberra", "gower", "hellinger", "manhattan", "odum", "soergel", "spearman", "speciesprofile", "structchi2", "structchord", "structeuclidean", "structkulczynski", "structpearson", "sharednseqs", "sharedobserved"], "savelog": true, "otu": {"src": "hda", "id": "a405f021ea8af8fb"}, "groups": ["forest", "pasture"], "label": ["0.05", "0.22", "0.32"]}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_shared/mothur_summary_shared/1.39.5.0", "update_time": "2019-06-26T02:32:13.884524", "inputs": {"otu": {"src": "hda", "id": "a405f021ea8af8fb", "uuid": "41f01617-8c16-4814-b0ae-2be750ffb04c"}}, "outputs": {"logfile": {"src": "hda", "id": "71dd863f466784b8", "uuid": "595ca16c-169b-4713-a08a-72f8e20e5d5a"}, "summary": {"src": "hda", "id": "05fcba787a92fa28", "uuid": "f9232a31-d879-4f29-8e50-0c4dcd70a7da"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > summary.shared(shared=otu.dat,label=0.05-0.22-0.32,groups=forest-pastur \re,calc=sharedsobs-sharedchao-sharedace-anderberg-jclass-jest-kulczynski-kulczyns \rkicody-kstest-lennon-ochiai-sorclass-sorest-whittaker-hamming-memchi2-memchord-m \remeuclidean-mempearson-braycurtis-jabund-morisitahorn-sorabund-thetan-thetayc-ca \rnberra-gower-hellinger-manhattan-odum-soergel-spearman-speciesprofile-structchi2 \r-structchord-structeuclidean-structkulczynski-structpearson-sharednseqs-sharedob \rserved,all=false,distance=false,output=lt,processors=1)\n\nUsing 1 processors.\nsharedobserved is not a valid estimator for the summary.shared command and will be disregarded. Valid estimators are anderberg, braycurtis, canberra, default, gower, hamming, hellinger, jabund, jclass, jest, jsd, kstest, kulczynski, kulczynskicody, lennon, manhattan, memchi2, memchord, memeuclidean, mempearson, morisitahorn, ochiai, odum, rjsd, sharedace, sharedchao, sharednseqs, sharedsobs, soergel, sorabund, sorclass, sorest, spearman, speciesprofile, structchi2, structchord, structeuclidean, structkulczynski, structpearson, thetan, thetayc, whittaker, \n0.05\n0.22\n0.32\n\nOutput File Names: \notu.summary\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:31:48.736174", "stderr": "", "model_class": "Job", "params": {"distance": "\"false\"", "all": "\"false\"", "dbkey": "\"?\"", "label": "[\"0.05\", \"0.22\", \"0.32\"]", "subsample": "{\"__current_case__\": 1, \"use\": \"no\"}", "savelog": "\"true\"", "groups": "[\"forest\", \"pasture\"]", "output": "\"lt\"", "calc": "[\"sharedsobs\", \"sharedchao\", \"sharedace\", \"anderberg\", \"jclass\", \"jest\", \"kulczynski\", \"kulczynskicody\", \"kstest\", \"lennon\", \"ochiai\", \"sorclass\", \"sorest\", \"whittaker\", \"hamming\", \"memchi2\", \"memchord\", \"memeuclidean\", \"mempearson\", \"braycurtis\", \"jabund\", \"morisitahorn\", \"sorabund\", \"thetan\", \"thetayc\", \"canberra\", \"gower\", \"hellinger\", \"manhattan\", \"odum\", \"soergel\", \"spearman\", \"speciesprofile\", \"structchi2\", \"structchord\", \"structeuclidean\", \"structkulczynski\", \"structpearson\", \"sharednseqs\", \"sharedobserved\"]", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > summary.shared(shared=otu.dat,label=0.05-0.22-0.32,groups=forest-pastur \re,calc=sharedsobs-sharedchao-sharedace-anderberg-jclass-jest-kulczynski-kulczyns \rkicody-kstest-lennon-ochiai-sorclass-sorest-whittaker-hamming-memchi2-memchord-m \remeuclidean-mempearson-braycurtis-jabund-morisitahorn-sorabund-thetan-thetayc-ca \rnberra-gower-hellinger-manhattan-odum-soergel-spearman-speciesprofile-structchi2 \r-structchord-structeuclidean-structkulczynski-structpearson-sharednseqs-sharedob \rserved,all=false,distance=false,output=lt,processors=1)\n\nUsing 1 processors.\nsharedobserved is not a valid estimator for the summary.shared command and will be disregarded. Valid estimators are anderberg, braycurtis, canberra, default, gower, hamming, hellinger, jabund, jclass, jest, jsd, kstest, kulczynski, kulczynskicody, lennon, manhattan, memchi2, memchord, memeuclidean, mempearson, morisitahorn, ochiai, odum, rjsd, sharedace, sharedchao, sharednseqs, sharedsobs, soergel, sorabund, sorclass, sorest, spearman, speciesprofile, structchi2, structchord, structeuclidean, structkulczynski, structpearson, thetan, thetayc, whittaker, \n0.05\n0.22\n0.32\n\nOutput File Names: \notu.summary\n\n\nmothur > quit\n", "job_messages": [], "id": "a2d275fab5fd6359", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_shared/mothur_summary_shared/1.39.5.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_shared/mothur_summary_shared/1.39.5.0", "time_seconds": 67.86290097236633, "inputs": {"distance": true, "calc": "sorclass", "savelog": true, "otu": {"src": "hda", "id": "a405f021ea8af8fb"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_shared/mothur_summary_shared/1.39.5.0", "update_time": "2019-06-26T02:32:40.146468", "inputs": {"otu": {"src": "hda", "id": "a405f021ea8af8fb", "uuid": "41f01617-8c16-4814-b0ae-2be750ffb04c"}}, "outputs": {"__new_primary_file_distfiles|sorclass.0.16.lt__": {"src": "hda", "id": "bc0ad2b7fe96ae84", "uuid": "21a0001c-7ee6-40cf-99cc-708f855c6362"}, "__new_primary_file_distfiles|sorclass.0.11.lt__": {"src": "hda", "id": "0a3b59350f364afb", "uuid": "99927109-bc53-45b0-80c6-a434cfea5a54"}, "__new_primary_file_distfiles|sorclass.0.08.lt__": {"src": "hda", "id": "e584789946629ab2", "uuid": "07b5b2bf-0ad0-4cba-be7b-274a14857427"}, "__new_primary_file_distfiles|sorclass.0.27.lt__": {"src": "hda", "id": "74f8cd9d26918324", "uuid": "e9f0bdf2-cd3f-487f-a3cd-2b3ddf81cea3"}, "__new_primary_file_distfiles|sorclass.0.22.lt__": {"src": "hda", "id": "cbb83f3a95d38200", "uuid": "ea27ff18-d40a-43d1-bf19-ce1dfbd18a6d"}, "__new_primary_file_distfiles|sorclass.0.45.lt__": {"src": "hda", "id": "a62ef3d314cf4599", "uuid": "583c8269-cfb1-47af-a10e-42b6df50db28"}, "__new_primary_file_distfiles|sorclass.unique.lt__": {"src": "hda", "id": "73441d266776686b", "uuid": "7e51718f-0cf1-46da-a1e1-81a20d20a918"}, "__new_primary_file_distfiles|sorclass.0.09.lt__": {"src": "hda", "id": "1c176807e45b999e", "uuid": "d5a0f40d-5dfa-4404-a411-5299f747622b"}, "__new_primary_file_distfiles|sorclass.0.38.lt__": {"src": "hda", "id": "f1335b0c79246198", "uuid": "079daf4c-093e-4590-b01e-18ea9ccf7e58"}, "__new_primary_file_distfiles|sorclass.0.10.lt__": {"src": "hda", "id": "3a1e2c18b846fc91", "uuid": "2632e5e5-b6ac-490c-806a-a961f3c98909"}, "__new_primary_file_distfiles|sorclass.0.29.lt__": {"src": "hda", "id": "5c12f17dd7a79d7d", "uuid": "8905b526-8bea-4167-856d-f1354c6706b5"}, "__new_primary_file_distfiles|sorclass.0.04.lt__": {"src": "hda", "id": "03d611b71b9a1850", "uuid": "3f966114-df95-4621-b20f-88ba9dc8e9e0"}, "__new_primary_file_distfiles|sorclass.0.19.lt__": {"src": "hda", "id": "9e4be5f8f5bc4880", "uuid": "bcfac9f6-eab5-482a-8776-7717009200a3"}, "__new_primary_file_distfiles|sorclass.0.25.lt__": {"src": "hda", "id": "e7a0cfd9f22458a2", "uuid": "c981b4e2-6ff5-4e7c-9d31-b6186ed68f98"}, "__new_primary_file_distfiles|sorclass.0.26.lt__": {"src": "hda", "id": "8dbaec33902ce05a", "uuid": "528fda59-7e5a-4768-9023-149cbb1f46d6"}, "__new_primary_file_distfiles|sorclass.0.36.lt__": {"src": "hda", "id": "67132b89d7dd80ab", "uuid": "fff07bd7-25cf-42fa-9cc2-206d7ffdd45a"}, "__new_primary_file_distfiles|sorclass.0.15.lt__": {"src": "hda", "id": "044ecc556029b9ae", "uuid": "f1e1f8b5-dabf-44f2-b31a-a8b202af2ab0"}, "__new_primary_file_distfiles|sorclass.0.05.lt__": {"src": "hda", "id": "78e572a8adc5ac8a", "uuid": "95226acd-03b3-4478-ad66-d56f98c1d4a7"}, "__new_primary_file_distfiles|sorclass.0.02.lt__": {"src": "hda", "id": "a93e58975cdfbeee", "uuid": "d908b446-7f5a-4b28-b1fd-50b04b19dd34"}, "__new_primary_file_distfiles|sorclass.0.23.lt__": {"src": "hda", "id": "c354b20e87a588fc", "uuid": "3bd540d7-f45e-4d25-8eca-0919a9ea72cf"}, "__new_primary_file_distfiles|sorclass.0.20.lt__": {"src": "hda", "id": "01d1cd5840713a0c", "uuid": "edb3cf1c-3a5a-4c9e-9def-76ca5b88296b"}, "__new_primary_file_distfiles|sorclass.0.41.lt__": {"src": "hda", "id": "7c931ab0cb456d47", "uuid": "52aa0bdb-acd3-4561-9fd6-4ce186321656"}, "__new_primary_file_distfiles|sorclass.0.12.lt__": {"src": "hda", "id": "cc3a16de69e31456", "uuid": "a85463a7-4178-454b-928d-68fa56c0585a"}, "logfile": {"src": "hda", "id": "01a707ce2a40740f", "uuid": "9bf50766-541d-482e-a8cf-832b8f0b093c"}, "__new_primary_file_distfiles|sorclass.0.01.lt__": {"src": "hda", "id": "d70fd93d690c739f", "uuid": "e6fe367b-26d5-419b-9ff3-9de25fcdc77e"}, "__new_primary_file_distfiles|sorclass.0.03.lt__": {"src": "hda", "id": "5fb05b4e21306400", "uuid": "70d958f5-bcc7-4816-abda-dc0305a95fe9"}, "__new_primary_file_distfiles|sorclass.0.13.lt__": {"src": "hda", "id": "75c4e0ccdb880136", "uuid": "40736705-84b5-4ad1-b1a9-836d00ba95e1"}, "__new_primary_file_distfiles|sorclass.0.07.lt__": {"src": "hda", "id": "887222da03f38946", "uuid": "cac1dd38-b38a-4c76-a810-92b17d06a2fe"}, "__new_primary_file_distfiles|sorclass.0.14.lt__": {"src": "hda", "id": "e5d5288ab6c95e5d", "uuid": "43d6eada-f016-4dd3-93e0-a5944c95f641"}, "__new_primary_file_distfiles|sorclass.0.17.lt__": {"src": "hda", "id": "c76b088c5d1204b2", "uuid": "f376ba78-2f72-4fff-9b24-8d4b982c2d8a"}, "__new_primary_file_distfiles|sorclass.0.24.lt__": {"src": "hda", "id": "5fd0e9f8ddca861b", "uuid": "0eb65330-27c1-454c-982c-5ff3406095ea"}, "__new_primary_file_distfiles|sorclass.0.18.lt__": {"src": "hda", "id": "59f35b234168d83c", "uuid": "16e25cdb-55d9-4ef2-9900-182bf9fce6f2"}, "__new_primary_file_distfiles|sorclass.0.21.lt__": {"src": "hda", "id": "d5ee212a98a43269", "uuid": "193cc06d-a74d-4bd0-8575-c260f83156d6"}, "summary": {"src": "hda", "id": "2e32832d1c7473f4", "uuid": "fa583072-8598-45df-970d-9e88d590a3fe"}, "__new_primary_file_distfiles|sorclass.0.06.lt__": {"src": "hda", "id": "93a9737001393240", "uuid": "2efb768b-1f3d-419d-837f-87dcd2e860ca"}, "__new_primary_file_distfiles|sorclass.0.33.lt__": {"src": "hda", "id": "c489db2d7f6ebf03", "uuid": "14aebc4d-24be-4518-be7c-6986040785f0"}, "__new_primary_file_distfiles|sorclass.0.55.lt__": {"src": "hda", "id": "abd63f37621a3ad8", "uuid": "35ff4d92-6728-492f-b147-b4a1aec73c82"}, "__new_primary_file_distfiles|sorclass.0.32.lt__": {"src": "hda", "id": "6d89ef32839a0a7f", "uuid": "381592d7-0cd4-4d45-a0db-3128ed6a1dca"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > summary.shared(shared=otu.dat,calc=sorclass,all=false,distance=true,out \rput=lt,processors=1)\n\nUsing 1 processors.\nunique\n0.01\n0.02\n0.03\n0.04\n0.05\n0.06\n0.07\n0.08\n0.09\n0.10\n0.11\n0.12\n0.13\n0.14\n0.15\n0.16\n0.17\n0.18\n0.19\n0.20\n0.21\n0.22\n0.23\n0.24\n0.25\n0.26\n0.27\n0.29\n0.32\n0.33\n0.36\n0.38\n0.41\n0.45\n0.55\n\nOutput File Names: \notu.summary\notu.sorclass.unique.lt.dist\notu.sorclass.0.01.lt.dist\notu.sorclass.0.02.lt.dist\notu.sorclass.0.03.lt.dist\notu.sorclass.0.04.lt.dist\notu.sorclass.0.05.lt.dist\notu.sorclass.0.06.lt.dist\notu.sorclass.0.07.lt.dist\notu.sorclass.0.08.lt.dist\notu.sorclass.0.09.lt.dist\notu.sorclass.0.10.lt.dist\notu.sorclass.0.11.lt.dist\notu.sorclass.0.12.lt.dist\notu.sorclass.0.13.lt.dist\notu.sorclass.0.14.lt.dist\notu.sorclass.0.15.lt.dist\notu.sorclass.0.16.lt.dist\notu.sorclass.0.17.lt.dist\notu.sorclass.0.18.lt.dist\notu.sorclass.0.19.lt.dist\notu.sorclass.0.20.lt.dist\notu.sorclass.0.21.lt.dist\notu.sorclass.0.22.lt.dist\notu.sorclass.0.23.lt.dist\notu.sorclass.0.24.lt.dist\notu.sorclass.0.25.lt.dist\notu.sorclass.0.26.lt.dist\notu.sorclass.0.27.lt.dist\notu.sorclass.0.29.lt.dist\notu.sorclass.0.32.lt.dist\notu.sorclass.0.33.lt.dist\notu.sorclass.0.36.lt.dist\notu.sorclass.0.38.lt.dist\notu.sorclass.0.41.lt.dist\notu.sorclass.0.45.lt.dist\notu.sorclass.0.55.lt.dist\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:32:13.944529", "stderr": "", "model_class": "Job", "params": {"distance": "\"true\"", "all": "\"false\"", "dbkey": "\"?\"", "label": "null", "subsample": "{\"__current_case__\": 1, \"use\": \"no\"}", "savelog": "\"true\"", "groups": "null", "output": "\"lt\"", "calc": "\"sorclass\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > summary.shared(shared=otu.dat,calc=sorclass,all=false,distance=true,out \rput=lt,processors=1)\n\nUsing 1 processors.\nunique\n0.01\n0.02\n0.03\n0.04\n0.05\n0.06\n0.07\n0.08\n0.09\n0.10\n0.11\n0.12\n0.13\n0.14\n0.15\n0.16\n0.17\n0.18\n0.19\n0.20\n0.21\n0.22\n0.23\n0.24\n0.25\n0.26\n0.27\n0.29\n0.32\n0.33\n0.36\n0.38\n0.41\n0.45\n0.55\n\nOutput File Names: \notu.summary\notu.sorclass.unique.lt.dist\notu.sorclass.0.01.lt.dist\notu.sorclass.0.02.lt.dist\notu.sorclass.0.03.lt.dist\notu.sorclass.0.04.lt.dist\notu.sorclass.0.05.lt.dist\notu.sorclass.0.06.lt.dist\notu.sorclass.0.07.lt.dist\notu.sorclass.0.08.lt.dist\notu.sorclass.0.09.lt.dist\notu.sorclass.0.10.lt.dist\notu.sorclass.0.11.lt.dist\notu.sorclass.0.12.lt.dist\notu.sorclass.0.13.lt.dist\notu.sorclass.0.14.lt.dist\notu.sorclass.0.15.lt.dist\notu.sorclass.0.16.lt.dist\notu.sorclass.0.17.lt.dist\notu.sorclass.0.18.lt.dist\notu.sorclass.0.19.lt.dist\notu.sorclass.0.20.lt.dist\notu.sorclass.0.21.lt.dist\notu.sorclass.0.22.lt.dist\notu.sorclass.0.23.lt.dist\notu.sorclass.0.24.lt.dist\notu.sorclass.0.25.lt.dist\notu.sorclass.0.26.lt.dist\notu.sorclass.0.27.lt.dist\notu.sorclass.0.29.lt.dist\notu.sorclass.0.32.lt.dist\notu.sorclass.0.33.lt.dist\notu.sorclass.0.36.lt.dist\notu.sorclass.0.38.lt.dist\notu.sorclass.0.41.lt.dist\notu.sorclass.0.45.lt.dist\notu.sorclass.0.55.lt.dist\n\n\nmothur > quit\n", "job_messages": [], "id": "bed4426ac77e84e9", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_shared/mothur_summary_shared/1.39.5.0-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_tax/mothur_summary_tax/1.39.5.0", "time_seconds": 39.02053189277649, "inputs": {"tax|source": "hist", "tax|taxonomy": {"src": "hda", "id": "45b2ed579d5572ba"}, "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_tax/mothur_summary_tax/1.39.5.0", "update_time": "2019-06-25T22:54:30.458322", "inputs": {"taxonomy": {"src": "hda", "id": "45b2ed579d5572ba", "uuid": "70100402-9313-47ef-a903-3ad9cdf821fd"}}, "outputs": {"taxsummary": {"src": "hda", "id": "fece7ffeb852a098", "uuid": "2237f034-810c-43dc-998b-1cc3dd565921"}, "logfile": {"src": "hda", "id": "75a352b9e87eca3a", "uuid": "ae70db30-8847-4d02-aec3-aa7a9848d58c"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > summary.tax(taxonomy=tax.taxonomy.dat,relabund=false,threshold=0,output \r=simple,printlevel=-1)\n\nIt took 0 secs to create the summary file for 242 sequences.\n\n\nOutput File Names: \ntax.taxonomy.tax.summary\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:54:15.276365", "stderr": "", "model_class": "Job", "params": {"count": "null", "group": "null", "name": "null", "relabund": "\"false\"", "tax": "{\"__current_case__\": 1, \"source\": \"hist\", \"taxonomy\": {\"values\": [{\"id\": 1068501, \"src\": \"hda\"}]}}", "dbkey": "\"?\"", "savelog": "\"true\"", "printlevel": "\"-1\"", "threshold": "\"0\"", "output": "\"simple\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > summary.tax(taxonomy=tax.taxonomy.dat,relabund=false,threshold=0,output \r=simple,printlevel=-1)\n\nIt took 0 secs to create the summary file for 242 sequences.\n\n\nOutput File Names: \ntax.taxonomy.tax.summary\n\n\nmothur > quit\n", "job_messages": [], "id": "7cf669b33ee4dc39", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_tax/mothur_summary_tax/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_tax/mothur_summary_tax/1.39.5.0", "time_seconds": 38.83984303474426, "inputs": {"tax|source": "hist", "tax|taxonomy": {"src": "hda", "id": "45b2ed579d5572ba"}, "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_tax/mothur_summary_tax/1.39.5.0", "update_time": "2019-06-25T22:54:37.125545", "inputs": {"taxonomy": {"src": "hda", "id": "45b2ed579d5572ba", "uuid": "70100402-9313-47ef-a903-3ad9cdf821fd"}}, "outputs": {"taxsummary": {"src": "hda", "id": "39ae05d5218b7028", "uuid": "abc51e54-5a5c-4ed9-a100-b1ac7c8fee29"}, "logfile": {"src": "hda", "id": "12a850aea75f57fb", "uuid": "b52126d7-f5a7-4b57-898d-01283a3b73e3"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > summary.tax(taxonomy=tax.taxonomy.dat,relabund=false,threshold=0,output \r=simple,printlevel=-1)\n\nIt took 0 secs to create the summary file for 242 sequences.\n\n\nOutput File Names: \ntax.taxonomy.tax.summary\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:54:24.109812", "stderr": "", "model_class": "Job", "params": {"count": "null", "group": "null", "name": "null", "relabund": "\"false\"", "tax": "{\"__current_case__\": 1, \"source\": \"hist\", \"taxonomy\": {\"values\": [{\"id\": 1068501, \"src\": \"hda\"}]}}", "dbkey": "\"?\"", "savelog": "\"true\"", "printlevel": "\"-1\"", "threshold": "\"0\"", "output": "\"simple\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > summary.tax(taxonomy=tax.taxonomy.dat,relabund=false,threshold=0,output \r=simple,printlevel=-1)\n\nIt took 0 secs to create the summary file for 242 sequences.\n\n\nOutput File Names: \ntax.taxonomy.tax.summary\n\n\nmothur > quit\n", "job_messages": [], "id": "ff0b05d2d2685461", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_summary_tax/mothur_summary_tax/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_tree_shared/mothur_tree_shared/1.39.5.0", "time_seconds": 38.95932483673096, "inputs": {"input|dist": {"src": "hda", "id": "6081992a1ebfc36d"}, "input|source": "phylip", "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_tree_shared/mothur_tree_shared/1.39.5.0", "update_time": "2019-06-25T22:07:08.750920", "inputs": {"dist": {"src": "hda", "id": "6081992a1ebfc36d", "uuid": "d43f2ae1-d5d5-40c3-a443-34c99b1baecc"}}, "outputs": {"logfile": {"src": "hda", "id": "71a4bccc294ed031", "uuid": "8e378e4b-6ce8-4546-a615-51fcc85361ec"}, "tre": {"src": "hda", "id": "1a81b97eae3d585d", "uuid": "98dbe51a-e195-43cc-ad70-813104d8d92f"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > tree.shared(phylip=input_dist.dat,calc=jclass-thetayc,processors=1)\n\nUsing 1 processors.\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\nTree complete. \n\nOutput File Names: \ninput_dist.tre\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:06:54.738274", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "calc": "[\"jclass\", \"thetayc\"]", "savelog": "\"true\"", "dbkey": "\"?\"", "input": "{\"__current_case__\": 1, \"dist\": {\"values\": [{\"id\": 1067495, \"src\": \"hda\"}]}, \"name\": null, \"source\": \"phylip\"}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > tree.shared(phylip=input_dist.dat,calc=jclass-thetayc,processors=1)\n\nUsing 1 processors.\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\nTree complete. \n\nOutput File Names: \ninput_dist.tre\n\n\nmothur > quit\n", "job_messages": [], "id": "c6f937dc481a7a8b", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_tree_shared/mothur_tree_shared/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_tree_shared/mothur_tree_shared/1.39.5.0", "time_seconds": 127.28171586990356, "inputs": {"input|subsampling|use": "yes", "input|dist": {"src": "hda", "id": "2bc258d983ebb167"}, "input|source": "shared", "savelog": true, "calc": "jclass"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_tree_shared/mothur_tree_shared/1.39.5.0", "update_time": "2019-06-25T22:07:36.273223", "inputs": {"dist": {"src": "hda", "id": "2bc258d983ebb167", "uuid": "bea9272d-9f86-4bef-b54c-3a87bf5397fa"}}, "outputs": {"__new_primary_file_trefiles|jclass.0.23.cons__": {"src": "hda", "id": "65e7d0249674412a", "uuid": "8875bbb0-6553-4af0-814f-5468ec24772e"}, "__new_primary_file_trefiles|jclass.0.17.all__": {"src": "hda", "id": "50ca4aa09af99137", "uuid": "6396f7b1-8976-4dfb-8a29-dd9cbc101f7d"}, "__new_primary_file_trefiles|jclass.0.27.cons__": {"src": "hda", "id": "9ab0663d76b4d355", "uuid": "3d81be2b-e159-4e45-86c5-90a0031ce98f"}, "__new_primary_file_trefiles|jclass.0.41.all__": {"src": "hda", "id": "7c092ccde374e5af", "uuid": "32b8d0f7-b4d2-43e9-be36-f0c00a999380"}, "__new_primary_file_trefiles|jclass.0.22.ave__": {"src": "hda", "id": "40d47123b0245d1a", "uuid": "9da405fe-20d8-493b-846e-e418f2a0e103"}, "__new_primary_file_trefiles|jclass.0.18.ave__": {"src": "hda", "id": "13364dac38bfb3d1", "uuid": "1c2195e0-6729-401c-88b6-0c9fdd307da5"}, "__new_primary_file_trefiles|jclass.0.05.cons__": {"src": "hda", "id": "7d405d3c2b2f741b", "uuid": "96287b0d-a953-4f35-a31d-beced585831d"}, "__new_primary_file_trefiles|jclass.0.19.cons__": {"src": "hda", "id": "6943542421e0d895", "uuid": "52cd7e89-e902-4de5-9f0f-a85e76eb5abd"}, "__new_primary_file_trefiles|jclass.0.09.ave__": {"src": "hda", "id": "1a5c0f40adbcbe44", "uuid": "b7cb69de-a05c-4cfc-96d0-20c1a2110369"}, "__new_primary_file_trefiles|jclass.0.29.ave__": {"src": "hda", "id": "5b79ebacf5616770", "uuid": "1020f9f3-5fef-47ea-a656-7983c85c4f50"}, "__new_primary_file_trefiles|jclass.0.26.ave__": {"src": "hda", "id": "f67e0e329215a4f9", "uuid": "762b895e-e106-4156-a7df-1d6d06545386"}, "__new_primary_file_trefiles|jclass.0.25.cons__": {"src": "hda", "id": "2b3b56b4ea1bc86f", "uuid": "8b802459-6b15-4603-a3c4-828247a707a2"}, "__new_primary_file_trefiles|jclass.0.20.ave__": {"src": "hda", "id": "c5e6e65a606b54f1", "uuid": "263b57ea-70ec-425b-9ce9-954a667169d8"}, "__new_primary_file_trefiles|jclass.0.07.all__": {"src": "hda", "id": "48060fa42c54c315", "uuid": "5e0a850d-f16a-436a-a700-cb5b4133f363"}, "__new_primary_file_trefiles|jclass.0.27.ave__": {"src": "hda", "id": "64afed76fcffa2e2", "uuid": "99288656-4584-45ee-8eb4-c906062a42ab"}, "__new_primary_file_trefiles|jclass.0.24.cons__": {"src": "hda", "id": "aab22d7e5cf26fa7", "uuid": "806a788d-8c8f-4554-a949-8b983afb54a5"}, "__new_primary_file_trefiles|jclass.0.11.all__": {"src": "hda", "id": "79e616c8ea1d6146", "uuid": "b3748c50-0390-48b5-86b7-bfe5c3c1a2ef"}, "__new_primary_file_trefiles|jclass.0.20.cons__": {"src": "hda", "id": "23f63244fe648160", "uuid": "dfd0e161-d0a2-4e2c-8bef-eee7aa8bde1b"}, "logfile": {"src": "hda", "id": "a94b830c72c89aa0", "uuid": "89ae3672-2f42-419e-aa6b-08262f6527c3"}, "__new_primary_file_trefiles|jclass.0.36.ave__": {"src": "hda", "id": "71d3d08f388e68b2", "uuid": "7f4e30a8-414d-47ab-b91e-f99816fdd778"}, "__new_primary_file_trefiles|jclass.0.07.cons__": {"src": "hda", "id": "ec80d9f8e043ecf3", "uuid": "61ee7ff5-ebf6-422d-94e2-cabb05bab7d3"}, "__new_primary_file_trefiles|jclass.0.12.all__": {"src": "hda", "id": "bb722c1e360f016e", "uuid": "726c1b50-b1d7-4bb1-a8b2-0a07d3e3bb5c"}, "__new_primary_file_trefiles|jclass.0.01.ave__": {"src": "hda", "id": "e4eb3889a52f7ea2", "uuid": "dcb2964f-757a-45b7-b018-88681f346106"}, "__new_primary_file_trefiles|jclass.0.18.all__": {"src": "hda", "id": "9c610133676560c7", "uuid": "137d1453-cecf-47fd-8536-1474ca7220df"}, "__new_primary_file_trefiles|jclass.0.02.all__": {"src": "hda", "id": "7f0cc53f67d9adbf", "uuid": "21250176-2f80-4718-b614-1c9c23ea6958"}, "__new_primary_file_trefiles|jclass.0.29.cons__": {"src": "hda", "id": "96f1912c1870e500", "uuid": "346b22d7-4d95-48d3-a48d-812df3c1fd61"}, "__new_primary_file_trefiles|jclass.0.26.all__": {"src": "hda", "id": "da688398ad2105c5", "uuid": "aa14dfb5-a78a-4b1e-8eb0-db41eed1df61"}, "__new_primary_file_trefiles|jclass.0.32.all__": {"src": "hda", "id": "b3a5806e0ab2437e", "uuid": "8f7323d5-493a-4dfe-833f-924d3c0ee717"}, "__new_primary_file_trefiles|jclass.0.25.all__": {"src": "hda", "id": "dd66b01f9cb21c93", "uuid": "1008ee88-fe9f-465f-95a8-9819f3bbcbde"}, "__new_primary_file_trefiles|jclass.0.08.cons__": {"src": "hda", "id": "08f30fc511f89d39", "uuid": "4a46ea37-832a-4520-a795-b0bcb78b3cec"}, "__new_primary_file_trefiles|jclass.0.45.all__": {"src": "hda", "id": "437350d4f144f67c", "uuid": "32e141fb-8414-49db-b8a6-191785a74d71"}, "__new_primary_file_trefiles|jclass.0.01.cons__": {"src": "hda", "id": "11bfbb5312dd4b5c", "uuid": "ce5028f0-976f-410b-ae57-0d2a8d93273c"}, "__new_primary_file_trefiles|jclass.0.11.ave__": {"src": "hda", "id": "ddfdf088a13dcb66", "uuid": "93cbeeea-3cec-4aa1-99ec-ce013ac22111"}, "__new_primary_file_trefiles|jclass.0.08.ave__": {"src": "hda", "id": "d1c7597be91b315a", "uuid": "44d5fe2f-ce13-4b13-93a3-121865125883"}, "__new_primary_file_trefiles|jclass.0.08.all__": {"src": "hda", "id": "5cfd668826abe11d", "uuid": "8e9a7979-8e24-470a-9363-d8e17f083526"}, "__new_primary_file_trefiles|jclass.0.14.cons__": {"src": "hda", "id": "5252d42fe9da31c4", "uuid": "933c43c9-08c7-4238-9feb-3aa0f14dc6bd"}, "__new_primary_file_trefiles|jclass.0.18.cons__": {"src": "hda", "id": "6e509c36843f7490", "uuid": "497d5f57-bd7b-4f58-96f1-3f4b2a9efb5a"}, "__new_primary_file_trefiles|jclass.0.03.ave__": {"src": "hda", "id": "28ee89c77a7120e1", "uuid": "0996a8e7-ccc3-4a79-b11d-43acd15f3440"}, "__new_primary_file_trefiles|jclass.0.41.cons__": {"src": "hda", "id": "3d48d38aee2f91f7", "uuid": "ad4aeda9-57d5-434f-bb16-b8467959f436"}, "__new_primary_file_trefiles|jclass.0.55.cons__": {"src": "hda", "id": "ef8195518116d0c0", "uuid": "e0f8eb83-9617-4c1a-9737-fc82f31004ed"}, "__new_primary_file_trefiles|jclass.0.26.cons__": {"src": "hda", "id": "ff085c62f41e018b", "uuid": "3b90e4d2-df76-43c7-b1e2-4d84cfd3304e"}, "__new_primary_file_trefiles|jclass.0.12.cons__": {"src": "hda", "id": "a9c47df4b4a68255", "uuid": "21ed63f4-dcdf-4d98-9542-cdad6f5b3885"}, "__new_primary_file_trefiles|jclass.0.04.all__": {"src": "hda", "id": "ada3f4598266a16a", "uuid": "e9d131f6-46f8-421e-b8cf-42a8445a4bdb"}, "__new_primary_file_trefiles|jclass.0.36.all__": {"src": "hda", "id": "113bfce713b6e1cf", "uuid": "55e73637-172b-4376-917b-760ae5be4319"}, "__new_primary_file_trefiles|jclass.0.20.all__": {"src": "hda", "id": "08dbab2ba52d9d77", "uuid": "1d8d9f15-9343-4fd8-be3e-07d585979a58"}, "__new_primary_file_trefiles|jclass.0.17.cons__": {"src": "hda", "id": "1035f3b700e8527c", "uuid": "8d003b7f-9fe5-468b-af9b-4c8c500af4f9"}, "__new_primary_file_trefiles|jclass.0.15.cons__": {"src": "hda", "id": "0753edeaa32a9db2", "uuid": "8047200e-abaf-48bd-8c49-dfd1f7fa965c"}, "__new_primary_file_trefiles|jclass.0.10.ave__": {"src": "hda", "id": "f2425258602ca3be", "uuid": "f4a12c1d-02f7-4a42-a65a-1d6f7aab24a0"}, "__new_primary_file_trefiles|jclass.0.21.cons__": {"src": "hda", "id": "b00adbc79885a50d", "uuid": "5fc37075-d657-427f-878f-7279bbae4c9e"}, "__new_primary_file_trefiles|jclass.0.55.ave__": {"src": "hda", "id": "7b483570a674bd2c", "uuid": "13a150b6-142f-4399-8fb5-ce5d1980c612"}, "__new_primary_file_trefiles|jclass.0.01.all__": {"src": "hda", "id": "f6cbcfceaeb5210e", "uuid": "a5629ab7-c9bd-4e7b-b40c-9a534b1e71a8"}, "__new_primary_file_trefiles|jclass.0.10.cons__": {"src": "hda", "id": "c090ae44e1c342ca", "uuid": "b0b6aa2f-f954-48a9-a47b-aae7e532df8d"}, "__new_primary_file_trefiles|jclass.0.19.all__": {"src": "hda", "id": "9d11c5af495d35b9", "uuid": "3e12e6c4-4afd-4487-8f82-3e928a6f1065"}, "__new_primary_file_trefiles|jclass.0.12.ave__": {"src": "hda", "id": "eb2018bbffc9740d", "uuid": "758fdfbd-4de2-473d-bf9a-14e3fb0147a1"}, "__new_primary_file_trefiles|jclass.0.21.ave__": {"src": "hda", "id": "3785c15c8e118b34", "uuid": "6a42269e-bce2-4fd3-8269-5fe3d0a38228"}, "__new_primary_file_trefiles|jclass.0.14.all__": {"src": "hda", "id": "f8d1e79e323811fe", "uuid": "1117faad-d8cc-4789-8323-01cced3f2a29"}, "__new_primary_file_trefiles|jclass.0.11.cons__": {"src": "hda", "id": "dc19699c12dd9f1a", "uuid": "b3fb02ef-f8cc-4e20-9a7d-f1eed58a7ca7"}, "__new_primary_file_trefiles|jclass.0.33.all__": {"src": "hda", "id": "872592282f5dff19", "uuid": "3f942ae8-0499-4709-8811-9ea815395c7f"}, "__new_primary_file_trefiles|jclass.0.22.cons__": {"src": "hda", "id": "3c8c791ffad5cc0a", "uuid": "6805e01f-6511-4f7e-b06d-04d5c5a3a4a5"}, "__new_primary_file_trefiles|jclass.0.25.ave__": {"src": "hda", "id": "36f977e6bdf97d80", "uuid": "ca296215-1d4f-460a-9973-174490b90c68"}, "__new_primary_file_trefiles|jclass.0.06.ave__": {"src": "hda", "id": "caa006e62b5cc642", "uuid": "7bab2cfa-c2a3-4b12-b52c-293fc766267b"}, "__new_primary_file_trefiles|jclass.0.32.cons__": {"src": "hda", "id": "bab28a762f563be8", "uuid": "e80c9415-beba-4fd2-a015-f8db4eb4f183"}, "__new_primary_file_trefiles|jclass.0.23.all__": {"src": "hda", "id": "e7d43e68f428cd99", "uuid": "26141bbe-5e57-43a8-80be-85e8cb3a10eb"}, "__new_primary_file_trefiles|jclass.unique.cons__": {"src": "hda", "id": "73436e7127fd6d69", "uuid": "dcfe40d9-6581-4ad3-9fba-8e209cb6b8a6"}, "__new_primary_file_trefiles|jclass.0.45.cons__": {"src": "hda", "id": "02805f53c878ad0d", "uuid": "980f8a58-62e3-4922-8483-35aba79ec591"}, "__new_primary_file_trefiles|jclass.0.05.all__": {"src": "hda", "id": "94c6696a3105a430", "uuid": "6d919e71-1d26-439a-bf14-b3e29d259a80"}, "__new_primary_file_trefiles|jclass.0.38.ave__": {"src": "hda", "id": "2a34fdbc044975c0", "uuid": "01506e4a-b9b7-4761-905c-a78e61176ec2"}, "__new_primary_file_trefiles|jclass.unique.ave__": {"src": "hda", "id": "c8af56649d722c40", "uuid": "8a230975-9b17-469d-981b-b10157585ced"}, "__new_primary_file_trefiles|jclass.0.06.all__": {"src": "hda", "id": "1ea0a4ad5556d0fe", "uuid": "db1cad9d-5a8c-46ff-b5c6-af24a4c0517b"}, "__new_primary_file_trefiles|jclass.0.22.all__": {"src": "hda", "id": "37b2c8505e3ea6b2", "uuid": "e81c2522-e2df-4624-95f9-d749938d4a09"}, "__new_primary_file_trefiles|jclass.0.55.all__": {"src": "hda", "id": "8972df1989bde2ed", "uuid": "f06c0d06-4e3c-4463-b811-b6ff1e48c916"}, "__new_primary_file_trefiles|jclass.0.13.all__": {"src": "hda", "id": "7d8802794e0bf20b", "uuid": "d923fb91-40d5-493c-8d2e-6fae19d93d32"}, "__new_primary_file_trefiles|jclass.0.05.ave__": {"src": "hda", "id": "49b960f0e28d0fd1", "uuid": "1dbd3a78-27ba-40d1-b380-c259c7316234"}, "__new_primary_file_trefiles|jclass.0.21.all__": {"src": "hda", "id": "d89debc096b1e8d3", "uuid": "626e03b4-b747-4d41-b97e-57a11516557e"}, "__new_primary_file_trefiles|jclass.0.10.all__": {"src": "hda", "id": "d9245f6e4e91e8e6", "uuid": "75a9f119-b4b4-47e6-a0c5-790657e5c1d6"}, "__new_primary_file_trefiles|jclass.0.38.cons__": {"src": "hda", "id": "45b9df13b04cc159", "uuid": "f196cac1-6f24-49f9-b0ef-729e3d7bd950"}, "__new_primary_file_trefiles|jclass.0.19.ave__": {"src": "hda", "id": "d3026d05a629bcf8", "uuid": "ce422876-d948-47d1-837f-140041029faf"}, "__new_primary_file_trefiles|jclass.0.16.ave__": {"src": "hda", "id": "aee992d923318ab6", "uuid": "e9a15536-6f74-4518-bf58-8a4cdd77330c"}, "__new_primary_file_trefiles|jclass.0.16.all__": {"src": "hda", "id": "e7a679747285c216", "uuid": "d00f2ecd-a7b4-43f0-8e20-601ebd6d9fdb"}, "__new_primary_file_trefiles|jclass.0.36.cons__": {"src": "hda", "id": "1d0b32a2b68333ac", "uuid": "ee7c5677-a88d-4149-8847-303045f3f3fa"}, "__new_primary_file_trefiles|jclass.0.29.all__": {"src": "hda", "id": "e67050060e7e1cf0", "uuid": "a24f4488-e1a8-4cb7-ada6-b0d1f1b1b2dc"}, "__new_primary_file_trefiles|jclass.0.33.ave__": {"src": "hda", "id": "c957210e705ae8b9", "uuid": "76664b8c-1a59-4fa4-a877-a26d4ead5d38"}, "__new_primary_file_trefiles|jclass.0.04.cons__": {"src": "hda", "id": "7e8b4a5d48da218c", "uuid": "49f83bd8-cf57-4882-b119-f746e86ad462"}, "__new_primary_file_trefiles|jclass.0.02.cons__": {"src": "hda", "id": "9cf5e22c4d2ab40b", "uuid": "2946fbb4-4e14-4a37-831c-0b1b4ff4bc5c"}, "__new_primary_file_trefiles|jclass.0.02.ave__": {"src": "hda", "id": "1841dfd3e20ac064", "uuid": "181cc10d-c8b8-4bd4-b0cc-180c45b5fdfe"}, "__new_primary_file_trefiles|jclass.0.09.cons__": {"src": "hda", "id": "9efe167f62c0ba65", "uuid": "3efaed06-501f-43e7-9048-0e05a57074a8"}, "__new_primary_file_trefiles|jclass.0.13.cons__": {"src": "hda", "id": "6e7644f607568413", "uuid": "4444c7cb-6313-4cce-b764-1ec922a42cfc"}, "__new_primary_file_trefiles|jclass.0.15.all__": {"src": "hda", "id": "c089f2f0e7ce9be9", "uuid": "10297fa4-11b1-40dc-871d-5005ff9c09c7"}, "__new_primary_file_trefiles|jclass.0.24.all__": {"src": "hda", "id": "f6dc2aaea4ad8474", "uuid": "55cf1e70-1be5-4b74-9bf7-76853282628f"}, "__new_primary_file_trefiles|jclass.unique.all__": {"src": "hda", "id": "bd04e8d0dcb7182d", "uuid": "ceea21a7-a7fd-4172-af57-a63f3cfb4415"}, "__new_primary_file_trefiles|jclass.0.33.cons__": {"src": "hda", "id": "c1483a0de0ee04e3", "uuid": "50d94e36-56ad-4207-881f-48c2e6d0d3ca"}, "__new_primary_file_trefiles|jclass.0.09.all__": {"src": "hda", "id": "a287e24384ae5046", "uuid": "76e1f7a7-fd82-4f3a-b5d3-41081e6bb419"}, "__new_primary_file_trefiles|jclass.0.27.all__": {"src": "hda", "id": "a77d606321fb6ae9", "uuid": "d0a6a392-282f-4cd5-8df3-79873ac02e82"}, "__new_primary_file_trefiles|jclass.0.23.ave__": {"src": "hda", "id": "a02c4b5c2a26d7f2", "uuid": "5cc2d03e-c326-4532-9e6e-8559ab91f19d"}, "__new_primary_file_trefiles|jclass.0.38.all__": {"src": "hda", "id": "f9be32273967b302", "uuid": "c4cfea6a-580d-4e92-af4c-96266da167d6"}, "__new_primary_file_trefiles|jclass.0.32.ave__": {"src": "hda", "id": "7cb14e8db7127626", "uuid": "c38df2b4-3c83-4242-befe-7c0c65a53b26"}, "__new_primary_file_trefiles|jclass.0.04.ave__": {"src": "hda", "id": "fd43234b0da73225", "uuid": "24a3a5b1-7c38-4b0f-b556-8be83defa960"}, "__new_primary_file_trefiles|jclass.0.45.ave__": {"src": "hda", "id": "db8d2ba560f85e0d", "uuid": "bd017530-12a2-40de-8020-5543578377c7"}, "__new_primary_file_trefiles|jclass.0.16.cons__": {"src": "hda", "id": "271e34c97184f3ed", "uuid": "e194692f-55ff-4eae-96b6-82136101d8de"}, "__new_primary_file_trefiles|jclass.0.07.ave__": {"src": "hda", "id": "478cc8d7964042af", "uuid": "ba125fb8-4e10-4ea8-a2e7-1ac869bd4eaa"}, "__new_primary_file_trefiles|jclass.0.14.ave__": {"src": "hda", "id": "fabd311bddd21696", "uuid": "28195cbb-b4ba-4724-85f1-b817c640dfeb"}, "__new_primary_file_trefiles|jclass.0.41.ave__": {"src": "hda", "id": "ab3276539775364d", "uuid": "5c8f9b0b-f65f-426a-91ab-539a019beccc"}, "__new_primary_file_trefiles|jclass.0.24.ave__": {"src": "hda", "id": "b27d26d546bf88d3", "uuid": "1f906d35-8ec0-46fb-9cd5-b5baf9418901"}, "__new_primary_file_trefiles|jclass.0.17.ave__": {"src": "hda", "id": "157a6d4f8400c568", "uuid": "59f53103-0995-489a-bd58-135f66581bd6"}, "__new_primary_file_trefiles|jclass.0.06.cons__": {"src": "hda", "id": "1012052e1a2cbcbe", "uuid": "29ceb6fa-c1c5-43d8-8271-9b20172163fc"}, "__new_primary_file_trefiles|jclass.0.13.ave__": {"src": "hda", "id": "e46854859042bbc3", "uuid": "0a6e51bf-3db6-49a1-bcfd-b2fb5ec8e3ae"}, "__new_primary_file_trefiles|jclass.0.03.all__": {"src": "hda", "id": "2601ed2b563ee901", "uuid": "cf058263-f026-4eef-b73f-bd630e40affd"}, "__new_primary_file_trefiles|jclass.0.15.ave__": {"src": "hda", "id": "42887755ca0f89b0", "uuid": "2dadac9e-b5a6-4dcd-b363-7bfbaa84c4ad"}, "__new_primary_file_trefiles|jclass.0.03.cons__": {"src": "hda", "id": "af4d11c2b1b9074d", "uuid": "a131fa34-7a93-469f-9397-527b4da1e4a1"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > tree.shared(shared=input_dist.dat,subsample=T,calc=jclass,processors=1) \r\u001b[A\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[K)\n\nUsing 1 processors.\nunique\n0.01\n0.02\n0.03\n0.04\n0.05\n0.06\n0.07\n0.08\n0.09\n0.10\n0.11\n0.12\n0.13\n0.14\n0.15\n0.16\n0.17\n0.18\n0.19\n0.20\n0.21\n0.22\n0.23\n0.24\n0.25\n0.26\n0.27\n0.29\n0.32\n0.33\n0.36\n0.38\n0.41\n0.45\n0.55\n\nOutput File Names: \ninput_dist.jclass.unique.ave.tre\ninput_dist.jclass.unique.all.tre\ninput_dist.jclass.unique.cons.tre\ninput_dist.jclass.0.01.ave.tre\ninput_dist.jclass.0.01.all.tre\ninput_dist.jclass.0.01.cons.tre\ninput_dist.jclass.0.02.ave.tre\ninput_dist.jclass.0.02.all.tre\ninput_dist.jclass.0.02.cons.tre\ninput_dist.jclass.0.03.ave.tre\ninput_dist.jclass.0.03.all.tre\ninput_dist.jclass.0.03.cons.tre\ninput_dist.jclass.0.04.ave.tre\ninput_dist.jclass.0.04.all.tre\ninput_dist.jclass.0.04.cons.tre\ninput_dist.jclass.0.05.ave.tre\ninput_dist.jclass.0.05.all.tre\ninput_dist.jclass.0.05.cons.tre\ninput_dist.jclass.0.06.ave.tre\ninput_dist.jclass.0.06.all.tre\ninput_dist.jclass.0.06.cons.tre\ninput_dist.jclass.0.07.ave.tre\ninput_dist.jclass.0.07.all.tre\ninput_dist.jclass.0.07.cons.tre\ninput_dist.jclass.0.08.ave.tre\ninput_dist.jclass.0.08.all.tre\ninput_dist.jclass.0.08.cons.tre\ninput_dist.jclass.0.09.ave.tre\ninput_dist.jclass.0.09.all.tre\ninput_dist.jclass.0.09.cons.tre\ninput_dist.jclass.0.10.ave.tre\ninput_dist.jclass.0.10.all.tre\ninput_dist.jclass.0.10.cons.tre\ninput_dist.jclass.0.11.ave.tre\ninput_dist.jclass.0.11.all.tre\ninput_dist.jclass.0.11.cons.tre\ninput_dist.jclass.0.12.ave.tre\ninput_dist.jclass.0.12.all.tre\ninput_dist.jclass.0.12.cons.tre\ninput_dist.jclass.0.13.ave.tre\ninput_dist.jclass.0.13.all.tre\ninput_dist.jclass.0.13.cons.tre\ninput_dist.jclass.0.14.ave.tre\ninput_dist.jclass.0.14.all.tre\ninput_dist.jclass.0.14.cons.tre\ninput_dist.jclass.0.15.ave.tre\ninput_dist.jclass.0.15.all.tre\ninput_dist.jclass.0.15.cons.tre\ninput_dist.jclass.0.16.ave.tre\ninput_dist.jclass.0.16.all.tre\ninput_dist.jclass.0.16.cons.tre\ninput_dist.jclass.0.17.ave.tre\ninput_dist.jclass.0.17.all.tre\ninput_dist.jclass.0.17.cons.tre\ninput_dist.jclass.0.18.ave.tre\ninput_dist.jclass.0.18.all.tre\ninput_dist.jclass.0.18.cons.tre\ninput_dist.jclass.0.19.ave.tre\ninput_dist.jclass.0.19.all.tre\ninput_dist.jclass.0.19.cons.tre\ninput_dist.jclass.0.20.ave.tre\ninput_dist.jclass.0.20.all.tre\ninput_dist.jclass.0.20.cons.tre\ninput_dist.jclass.0.21.ave.tre\ninput_dist.jclass.0.21.all.tre\ninput_dist.jclass.0.21.cons.tre\ninput_dist.jclass.0.22.ave.tre\ninput_dist.jclass.0.22.all.tre\ninput_dist.jclass.0.22.cons.tre\ninput_dist.jclass.0.23.ave.tre\ninput_dist.jclass.0.23.all.tre\ninput_dist.jclass.0.23.cons.tre\ninput_dist.jclass.0.24.ave.tre\ninput_dist.jclass.0.24.all.tre\ninput_dist.jclass.0.24.cons.tre\ninput_dist.jclass.0.25.ave.tre\ninput_dist.jclass.0.25.all.tre\ninput_dist.jclass.0.25.cons.tre\ninput_dist.jclass.0.26.ave.tre\ninput_dist.jclass.0.26.all.tre\ninput_dist.jclass.0.26.cons.tre\ninput_dist.jclass.0.27.ave.tre\ninput_dist.jclass.0.27.all.tre\ninput_dist.jclass.0.27.cons.tre\ninput_dist.jclass.0.29.ave.tre\ninput_dist.jclass.0.29.all.tre\ninput_dist.jclass.0.29.cons.tre\ninput_dist.jclass.0.32.ave.tre\ninput_dist.jclass.0.32.all.tre\ninput_dist.jclass.0.32.cons.tre\ninput_dist.jclass.0.33.ave.tre\ninput_dist.jclass.0.33.all.tre\ninput_dist.jclass.0.33.cons.tre\ninput_dist.jclass.0.36.ave.tre\ninput_dist.jclass.0.36.all.tre\ninput_dist.jclass.0.36.cons.tre\ninput_dist.jclass.0.38.ave.tre\ninput_dist.jclass.0.38.all.tre\ninput_dist.jclass.0.38.cons.tre\ninput_dist.jclass.0.41.ave.tre\ninput_dist.jclass.0.41.all.tre\ninput_dist.jclass.0.41.cons.tre\ninput_dist.jclass.0.45.ave.tre\ninput_dist.jclass.0.45.all.tre\ninput_dist.jclass.0.45.cons.tre\ninput_dist.jclass.0.55.ave.tre\ninput_dist.jclass.0.55.all.tre\ninput_dist.jclass.0.55.cons.tre\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:06:54.812967", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "calc": "\"jclass\"", "savelog": "\"true\"", "dbkey": "\"?\"", "input": "{\"__current_case__\": 2, \"dist\": {\"values\": [{\"id\": 1067498, \"src\": \"hda\"}]}, \"groups\": null, \"label\": null, \"source\": \"shared\", \"subsampling\": {\"__current_case__\": 0, \"iters\": \"\", \"subsample\": \"\", \"use\": \"yes\"}}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > tree.shared(shared=input_dist.dat,subsample=T,calc=jclass,processors=1) \r\u001b[A\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[K)\n\nUsing 1 processors.\nunique\n0.01\n0.02\n0.03\n0.04\n0.05\n0.06\n0.07\n0.08\n0.09\n0.10\n0.11\n0.12\n0.13\n0.14\n0.15\n0.16\n0.17\n0.18\n0.19\n0.20\n0.21\n0.22\n0.23\n0.24\n0.25\n0.26\n0.27\n0.29\n0.32\n0.33\n0.36\n0.38\n0.41\n0.45\n0.55\n\nOutput File Names: \ninput_dist.jclass.unique.ave.tre\ninput_dist.jclass.unique.all.tre\ninput_dist.jclass.unique.cons.tre\ninput_dist.jclass.0.01.ave.tre\ninput_dist.jclass.0.01.all.tre\ninput_dist.jclass.0.01.cons.tre\ninput_dist.jclass.0.02.ave.tre\ninput_dist.jclass.0.02.all.tre\ninput_dist.jclass.0.02.cons.tre\ninput_dist.jclass.0.03.ave.tre\ninput_dist.jclass.0.03.all.tre\ninput_dist.jclass.0.03.cons.tre\ninput_dist.jclass.0.04.ave.tre\ninput_dist.jclass.0.04.all.tre\ninput_dist.jclass.0.04.cons.tre\ninput_dist.jclass.0.05.ave.tre\ninput_dist.jclass.0.05.all.tre\ninput_dist.jclass.0.05.cons.tre\ninput_dist.jclass.0.06.ave.tre\ninput_dist.jclass.0.06.all.tre\ninput_dist.jclass.0.06.cons.tre\ninput_dist.jclass.0.07.ave.tre\ninput_dist.jclass.0.07.all.tre\ninput_dist.jclass.0.07.cons.tre\ninput_dist.jclass.0.08.ave.tre\ninput_dist.jclass.0.08.all.tre\ninput_dist.jclass.0.08.cons.tre\ninput_dist.jclass.0.09.ave.tre\ninput_dist.jclass.0.09.all.tre\ninput_dist.jclass.0.09.cons.tre\ninput_dist.jclass.0.10.ave.tre\ninput_dist.jclass.0.10.all.tre\ninput_dist.jclass.0.10.cons.tre\ninput_dist.jclass.0.11.ave.tre\ninput_dist.jclass.0.11.all.tre\ninput_dist.jclass.0.11.cons.tre\ninput_dist.jclass.0.12.ave.tre\ninput_dist.jclass.0.12.all.tre\ninput_dist.jclass.0.12.cons.tre\ninput_dist.jclass.0.13.ave.tre\ninput_dist.jclass.0.13.all.tre\ninput_dist.jclass.0.13.cons.tre\ninput_dist.jclass.0.14.ave.tre\ninput_dist.jclass.0.14.all.tre\ninput_dist.jclass.0.14.cons.tre\ninput_dist.jclass.0.15.ave.tre\ninput_dist.jclass.0.15.all.tre\ninput_dist.jclass.0.15.cons.tre\ninput_dist.jclass.0.16.ave.tre\ninput_dist.jclass.0.16.all.tre\ninput_dist.jclass.0.16.cons.tre\ninput_dist.jclass.0.17.ave.tre\ninput_dist.jclass.0.17.all.tre\ninput_dist.jclass.0.17.cons.tre\ninput_dist.jclass.0.18.ave.tre\ninput_dist.jclass.0.18.all.tre\ninput_dist.jclass.0.18.cons.tre\ninput_dist.jclass.0.19.ave.tre\ninput_dist.jclass.0.19.all.tre\ninput_dist.jclass.0.19.cons.tre\ninput_dist.jclass.0.20.ave.tre\ninput_dist.jclass.0.20.all.tre\ninput_dist.jclass.0.20.cons.tre\ninput_dist.jclass.0.21.ave.tre\ninput_dist.jclass.0.21.all.tre\ninput_dist.jclass.0.21.cons.tre\ninput_dist.jclass.0.22.ave.tre\ninput_dist.jclass.0.22.all.tre\ninput_dist.jclass.0.22.cons.tre\ninput_dist.jclass.0.23.ave.tre\ninput_dist.jclass.0.23.all.tre\ninput_dist.jclass.0.23.cons.tre\ninput_dist.jclass.0.24.ave.tre\ninput_dist.jclass.0.24.all.tre\ninput_dist.jclass.0.24.cons.tre\ninput_dist.jclass.0.25.ave.tre\ninput_dist.jclass.0.25.all.tre\ninput_dist.jclass.0.25.cons.tre\ninput_dist.jclass.0.26.ave.tre\ninput_dist.jclass.0.26.all.tre\ninput_dist.jclass.0.26.cons.tre\ninput_dist.jclass.0.27.ave.tre\ninput_dist.jclass.0.27.all.tre\ninput_dist.jclass.0.27.cons.tre\ninput_dist.jclass.0.29.ave.tre\ninput_dist.jclass.0.29.all.tre\ninput_dist.jclass.0.29.cons.tre\ninput_dist.jclass.0.32.ave.tre\ninput_dist.jclass.0.32.all.tre\ninput_dist.jclass.0.32.cons.tre\ninput_dist.jclass.0.33.ave.tre\ninput_dist.jclass.0.33.all.tre\ninput_dist.jclass.0.33.cons.tre\ninput_dist.jclass.0.36.ave.tre\ninput_dist.jclass.0.36.all.tre\ninput_dist.jclass.0.36.cons.tre\ninput_dist.jclass.0.38.ave.tre\ninput_dist.jclass.0.38.all.tre\ninput_dist.jclass.0.38.cons.tre\ninput_dist.jclass.0.41.ave.tre\ninput_dist.jclass.0.41.all.tre\ninput_dist.jclass.0.41.cons.tre\ninput_dist.jclass.0.45.ave.tre\ninput_dist.jclass.0.45.all.tre\ninput_dist.jclass.0.45.cons.tre\ninput_dist.jclass.0.55.ave.tre\ninput_dist.jclass.0.55.all.tre\ninput_dist.jclass.0.55.cons.tre\n\n\nmothur > quit\n", "job_messages": [], "id": "2bdf8306739d3ba9", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_tree_shared/mothur_tree_shared/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_tree_shared/mothur_tree_shared/1.39.5.0", "time_seconds": 99.93827605247498, "inputs": {"input|dist": {"src": "hda", "id": "2bc258d983ebb167"}, "input|source": "shared", "input|groups": ["forest", "pasture"], "savelog": true, "input|label": ["0.05", "0.22", "0.32"], "calc": ["sharedsobs", "sharedchao", "sharedace", "anderberg", "jclass", "jest", "kulczynski", "kulczynskicody", "kstest", "lennon", "ochiai", "sorclass", "sorest", "whittaker", "hamming", "memchi2", "memchord", "memeuclidean", "mempearson", "braycurtis", "jabund", "morisitahorn", "sorabund", "thetan", "thetayc", "canberra", "gower", "hellinger", "manhattan", "odum", "soergel", "spearman", "speciesprofile", "structchi2", "structchord", "structeuclidean", "structkulczynski", "structpearson", "sharednseqs", "sharedobserved"]}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_tree_shared/mothur_tree_shared/1.39.5.0", "update_time": "2019-06-25T22:07:37.779758", "inputs": {"dist": {"src": "hda", "id": "2bc258d983ebb167", "uuid": "bea9272d-9f86-4bef-b54c-3a87bf5397fa"}}, "outputs": {"__new_primary_file_trefiles|hamming.0.22__": {"src": "hda", "id": "a809776074d51a20", "uuid": "f95087db-4ea7-4dc4-bfdd-f59ddc1d2927"}, "__new_primary_file_trefiles|jclass.0.05__": {"src": "hda", "id": "6f3f2ed2c6735f5e", "uuid": "a8799c64-c345-4c95-ad0a-37f502f3f629"}, "__new_primary_file_trefiles|sorabund.0.32__": {"src": "hda", "id": "180d5107250c93ed", "uuid": "16e77afc-1e44-4775-bcbb-13ba577d415c"}, "__new_primary_file_trefiles|thetayc.0.32__": {"src": "hda", "id": "a83a80df71a03fa9", "uuid": "ff284a4f-5a4b-42f6-8e51-267a32d73e84"}, "__new_primary_file_trefiles|memeuclidean.0.05__": {"src": "hda", "id": "b9903188272eb653", "uuid": "ea6329ab-9a66-4f74-bc57-977afcf894cc"}, "__new_primary_file_trefiles|sorest.0.32__": {"src": "hda", "id": "21c060b31e413423", "uuid": "6bfe18dc-780c-486b-98ce-ffbcc342c0b5"}, "__new_primary_file_trefiles|speciesprofile.0.05__": {"src": "hda", "id": "1684001794619201", "uuid": "df445c96-6ac4-4943-8cb6-8c4cefb2f4c5"}, "__new_primary_file_trefiles|kstest.0.05__": {"src": "hda", "id": "2be5eee56c102166", "uuid": "08e9a985-8c14-4c84-915c-93a62a22d124"}, "__new_primary_file_trefiles|odum.0.22__": {"src": "hda", "id": "060e43d84e7c3b48", "uuid": "2211ee12-b0c9-4920-97b4-14e9f09a218c"}, "__new_primary_file_trefiles|jest.0.05__": {"src": "hda", "id": "826500a436e60fde", "uuid": "6cb67587-e59d-4994-8906-325b0cac439c"}, "__new_primary_file_trefiles|kstest.0.32__": {"src": "hda", "id": "34750c3f0a81e20b", "uuid": "2ed04eed-1b41-4856-a40d-8ad0b0cb3506"}, "__new_primary_file_trefiles|braycurtis.0.32__": {"src": "hda", "id": "401488210fdc6d8d", "uuid": "38410ccb-00b7-4ab0-9a5f-b30c8cce0cb1"}, "__new_primary_file_trefiles|structkulczynski.0.32__": {"src": "hda", "id": "7e85f23c88fbbfd2", "uuid": "67bac54b-865f-4b4c-b481-32444a3bf998"}, "__new_primary_file_trefiles|hellinger.0.22__": {"src": "hda", "id": "a307fe9a1932d9db", "uuid": "542933fb-65bf-4012-8516-02a10f3da888"}, "__new_primary_file_trefiles|soergel.0.22__": {"src": "hda", "id": "4490c03ed6167dbd", "uuid": "814ed526-9048-44ae-a1ec-97bc9ce4cd2b"}, "__new_primary_file_trefiles|whittaker.0.05__": {"src": "hda", "id": "92f28d202c6b514e", "uuid": "2ec51fbf-ca1d-419e-9d68-c73e40c5740b"}, "__new_primary_file_trefiles|sharedchao.0.32__": {"src": "hda", "id": "c7ceab8afae237a2", "uuid": "7ee60875-8014-4454-952b-600192d31980"}, "__new_primary_file_trefiles|morisitahorn.0.05__": {"src": "hda", "id": "a2b551d7612b6f9a", "uuid": "a08492e8-388e-443a-a4a6-1c6b6dd13b01"}, "__new_primary_file_trefiles|sharedchao.0.05__": {"src": "hda", "id": "7b9abf1e5ed901b1", "uuid": "93660638-0d24-4405-8816-239193c7e455"}, "__new_primary_file_trefiles|ochiai.0.05__": {"src": "hda", "id": "941e52798116ce39", "uuid": "6c06d689-0616-4186-a90e-bed3fe70dd06"}, "__new_primary_file_trefiles|gower.0.22__": {"src": "hda", "id": "4984ec4ae18fbc05", "uuid": "7245e33a-a2d1-4760-b2fc-ef39537704c4"}, "__new_primary_file_trefiles|sharednseqs.0.22__": {"src": "hda", "id": "50b5eecb9882f268", "uuid": "034dd64f-f687-4df9-b57d-c7ba25d2f7c3"}, "__new_primary_file_trefiles|sharedchao.0.22__": {"src": "hda", "id": "39491e17c0518b21", "uuid": "13c97d7b-9092-4be4-98d3-f176f8f6645f"}, "__new_primary_file_trefiles|sharednseqs.0.32__": {"src": "hda", "id": "f0ac0621fad86ea8", "uuid": "6f5285f9-d8a3-40e9-a135-f10e8f589b25"}, "logfile": {"src": "hda", "id": "c2951f1afbaa79f7", "uuid": "309aff05-e2ba-4134-98d5-3b05d670c2e5"}, "__new_primary_file_trefiles|sharedace.0.22__": {"src": "hda", "id": "909e6b08b1bcd1f4", "uuid": "1ad009ae-6cda-4b65-be7a-fe93f0e8cfd1"}, "__new_primary_file_trefiles|sharedsobs.0.22__": {"src": "hda", "id": "1a022f604a71a426", "uuid": "b6c9c267-7615-4fd7-a5ea-88eabce5fb14"}, "__new_primary_file_trefiles|sorclass.0.22__": {"src": "hda", "id": "09888dce8b0f4b6c", "uuid": "77e16ccc-cf57-4602-84ed-931b7c6d241b"}, "__new_primary_file_trefiles|thetan.0.05__": {"src": "hda", "id": "a8f38df5816a3c5b", "uuid": "0369c752-96cd-4468-bb4b-997b3f19aeee"}, "__new_primary_file_trefiles|manhattan.0.32__": {"src": "hda", "id": "987bfee3fc6557fd", "uuid": "6bef7b0e-8069-47b8-b669-70b1bc7d5ad2"}, "__new_primary_file_trefiles|spearman.0.22__": {"src": "hda", "id": "5189ea129be60d81", "uuid": "2f42ce30-b267-4f8d-8bbf-b6442c456707"}, "__new_primary_file_trefiles|thetan.0.32__": {"src": "hda", "id": "bd606ce57b0968b2", "uuid": "976e4aeb-4791-4284-8e9e-9e9e3d6c4b27"}, "__new_primary_file_trefiles|manhattan.0.05__": {"src": "hda", "id": "1b974cc471b79765", "uuid": "1d206b88-c7de-4e68-93f2-b8aa59aa7d4a"}, "__new_primary_file_trefiles|structpearson.0.32__": {"src": "hda", "id": "919441e6f8bc9d8a", "uuid": "a2878b96-00b6-4595-9b99-34d926897e1b"}, "__new_primary_file_trefiles|lennon.0.05__": {"src": "hda", "id": "ffcf5dc2889f3716", "uuid": "3c143f9d-b6ce-461b-a5da-74d4e1fc2eeb"}, "__new_primary_file_trefiles|canberra.0.32__": {"src": "hda", "id": "0ad9e2b569e28328", "uuid": "a5360430-5e14-437d-8237-4f464a419c3f"}, "__new_primary_file_trefiles|kulczynskicody.0.05__": {"src": "hda", "id": "24129d2ad4af7233", "uuid": "cb7c0f4b-7435-4f91-8a3b-6f1175539a5b"}, "__new_primary_file_trefiles|structeuclidean.0.22__": {"src": "hda", "id": "7bfe18e41cc7240d", "uuid": "baad7bae-b960-487b-807b-21963827bde9"}, "__new_primary_file_trefiles|structkulczynski.0.05__": {"src": "hda", "id": "642b85d3570e0116", "uuid": "1ee09f82-25c6-4fb7-818b-924337370ca9"}, "__new_primary_file_trefiles|structchord.0.22__": {"src": "hda", "id": "be28f8431caaf10f", "uuid": "36e95c79-f131-4f8c-9cf0-c0469298c4d0"}, "__new_primary_file_trefiles|kulczynskicody.0.32__": {"src": "hda", "id": "a01477a2829f10a3", "uuid": "77157ea9-8d97-43c3-be9a-5f5614b946e3"}, "__new_primary_file_trefiles|odum.0.05__": {"src": "hda", "id": "e70b1e68b723206d", "uuid": "b8cc79ad-cc7f-4222-82ac-3e631842f5a5"}, "__new_primary_file_trefiles|thetayc.0.22__": {"src": "hda", "id": "5d81b6f0e606f27b", "uuid": "349cc2ef-c4e4-4406-b00e-070e7f77ac09"}, "__new_primary_file_trefiles|sharedsobs.0.05__": {"src": "hda", "id": "96c83675fbfa16dd", "uuid": "f164881d-f4de-4d1d-bb46-87ceb641845b"}, "__new_primary_file_trefiles|hamming.0.05__": {"src": "hda", "id": "65d29753d9da4a6e", "uuid": "81da4c03-1242-4ba7-a9d8-354ffea8a3be"}, "__new_primary_file_trefiles|jclass.0.32__": {"src": "hda", "id": "9b5c3fd0d42a6732", "uuid": "923ac64c-2c24-4073-acf7-0bbbfea21360"}, "__new_primary_file_trefiles|memchi2.0.22__": {"src": "hda", "id": "75e32afa30a513bd", "uuid": "65fce854-b6fb-488b-91f4-c4bd4ecab7c7"}, "__new_primary_file_trefiles|odum.0.32__": {"src": "hda", "id": "e847d34029126181", "uuid": "27aa8b1e-26e7-4087-8a4f-d4fd8332a8b8"}, "__new_primary_file_trefiles|hamming.0.32__": {"src": "hda", "id": "1e0d7ad6494133a6", "uuid": "21ce9cdd-5337-48ae-acd9-c83b83cdb09e"}, "__new_primary_file_trefiles|ochiai.0.32__": {"src": "hda", "id": "bb91d77bd07f8fbb", "uuid": "c78c4e91-c259-4c40-ad58-e95821ee591e"}, "__new_primary_file_trefiles|ochiai.0.22__": {"src": "hda", "id": "a19e4574b6386cc6", "uuid": "fe0981de-b85f-4f90-8a72-5a52ce31576b"}, "__new_primary_file_trefiles|memchord.0.32__": {"src": "hda", "id": "ec19aa989062d741", "uuid": "4fcbdcfe-463e-4885-8bd3-0d58e7950921"}, "__new_primary_file_trefiles|memchi2.0.05__": {"src": "hda", "id": "a0cdda69c05b6b51", "uuid": "9ade7483-c5b7-4e3b-b5ae-e8783d21528d"}, "__new_primary_file_trefiles|kstest.0.22__": {"src": "hda", "id": "8a7698809d0a7df7", "uuid": "71e163c4-af7c-4d34-8b38-706ead83e0d3"}, "__new_primary_file_trefiles|structkulczynski.0.22__": {"src": "hda", "id": "d6bf74d3efc97c80", "uuid": "faa9b4e4-3ec3-4cff-90c9-e4c4276a0056"}, "__new_primary_file_trefiles|soergel.0.32__": {"src": "hda", "id": "25d45e6ce14a7f2c", "uuid": "ef4d09e4-ddba-49e8-8e19-012378da7d60"}, "__new_primary_file_trefiles|jest.0.22__": {"src": "hda", "id": "626648c0f3bb2e53", "uuid": "a7c94296-61d1-47cd-886f-6f4e20660c8c"}, "__new_primary_file_trefiles|memchi2.0.32__": {"src": "hda", "id": "e945b0473795ccb2", "uuid": "b6afe940-b765-4bf1-944f-bd3aca82b7ad"}, "__new_primary_file_trefiles|braycurtis.0.22__": {"src": "hda", "id": "a6a70fee9595a90c", "uuid": "09b5f842-70cb-43d6-80a7-3d39f8f70e32"}, "__new_primary_file_trefiles|structeuclidean.0.05__": {"src": "hda", "id": "17eae8e7fb4c3434", "uuid": "cc363246-7199-483c-b49a-51c9f25414c2"}, "__new_primary_file_trefiles|structpearson.0.22__": {"src": "hda", "id": "4cfd8e928dc42cc3", "uuid": "ac69e2a5-c703-4fbd-8b81-403e2a9ec759"}, "__new_primary_file_trefiles|kulczynskicody.0.22__": {"src": "hda", "id": "5ea025a3acda5b12", "uuid": "c119cdb4-690c-4ae1-a131-de894e39d295"}, "__new_primary_file_trefiles|gower.0.05__": {"src": "hda", "id": "cf33dfecbaee437f", "uuid": "fedcca3e-eedd-4bc8-a3d7-d4428f803c93"}, "__new_primary_file_trefiles|jabund.0.05__": {"src": "hda", "id": "7cc205facdd0d66c", "uuid": "d35dcbc8-6cee-4b60-8c2c-2a65e1c74dfb"}, "__new_primary_file_trefiles|jest.0.32__": {"src": "hda", "id": "eaa6c4d8ffd515b0", "uuid": "53e4c54e-a075-4098-9be1-6da8644556e8"}, "__new_primary_file_trefiles|jabund.0.32__": {"src": "hda", "id": "92bf6c0c6b753c9a", "uuid": "12bb00df-2ea7-4214-bd97-146ffdd46959"}, "__new_primary_file_trefiles|kulczynski.0.32__": {"src": "hda", "id": "e83770250defd4c2", "uuid": "0a3f0608-6e49-4ee7-aea6-c5e09419f637"}, "__new_primary_file_trefiles|kulczynski.0.22__": {"src": "hda", "id": "4f6db13f4545e6ef", "uuid": "69a6e74f-7ddd-4335-bd16-0767fb9f21be"}, "__new_primary_file_trefiles|hellinger.0.05__": {"src": "hda", "id": "f39f0dc7dbdc439c", "uuid": "ee94afce-2c4c-46ce-9524-13f6dca33ab8"}, "__new_primary_file_trefiles|speciesprofile.0.32__": {"src": "hda", "id": "178b9d650f8a0d85", "uuid": "cecb8339-b818-4466-a9a0-be8d53fcfc48"}, "__new_primary_file_trefiles|whittaker.0.32__": {"src": "hda", "id": "8798ca4220ae3b74", "uuid": "2429ff13-1c97-413d-8f77-b017e69d563b"}, "__new_primary_file_trefiles|lennon.0.32__": {"src": "hda", "id": "5716439f65847773", "uuid": "77e3435a-bb75-4588-bda3-7a33cd1fdd33"}, "__new_primary_file_trefiles|sharedsobs.0.32__": {"src": "hda", "id": "8af1e242e8750760", "uuid": "cc84bcd4-e386-4238-85f6-017191b79a2d"}, "__new_primary_file_trefiles|sorclass.0.05__": {"src": "hda", "id": "37d63e834e90b668", "uuid": "38dadb37-869d-4d5b-8d5b-a376989087aa"}, "__new_primary_file_trefiles|morisitahorn.0.22__": {"src": "hda", "id": "f98f03a3f3a0c85a", "uuid": "d2a9280c-b202-4ec5-9143-dc390ac26912"}, "__new_primary_file_trefiles|morisitahorn.0.32__": {"src": "hda", "id": "d29a9407d42eea51", "uuid": "ca6f7a84-062b-434c-88a9-d942b5e4bac0"}, "__new_primary_file_trefiles|whittaker.0.22__": {"src": "hda", "id": "5dea55a2a7f3f90d", "uuid": "a55df500-8af7-4802-8ff1-6867a2e53ea7"}, "__new_primary_file_trefiles|soergel.0.05__": {"src": "hda", "id": "88a6424ba43d516d", "uuid": "b9386375-617e-43c1-b6be-eb006b0924c2"}, "__new_primary_file_trefiles|memchord.0.05__": {"src": "hda", "id": "ed4ea5aa6444ba65", "uuid": "2ac13446-7bbc-483d-8c31-67c87d37ba91"}, "__new_primary_file_trefiles|thetan.0.22__": {"src": "hda", "id": "59cd39e3e930b87f", "uuid": "050abfe0-156f-4a3d-8c80-1f97c56731cd"}, "__new_primary_file_trefiles|canberra.0.22__": {"src": "hda", "id": "d3f6340b0eb83b3b", "uuid": "c1554ee5-825a-4a0b-8e44-8b1b39f707a6"}, "__new_primary_file_trefiles|sorclass.0.32__": {"src": "hda", "id": "c9605077143fa9f3", "uuid": "ccc93afd-eb70-4e08-97e3-c35682edcf87"}, "__new_primary_file_trefiles|lennon.0.22__": {"src": "hda", "id": "0181d596d4fb4d62", "uuid": "04522c65-76a9-47bb-be8a-6c5419a9c20e"}, "__new_primary_file_trefiles|sorabund.0.22__": {"src": "hda", "id": "2a3a9bdcfb168f06", "uuid": "12af6ba4-0276-47ef-af0b-d502f26a101c"}, "__new_primary_file_trefiles|manhattan.0.22__": {"src": "hda", "id": "17e6dd432dca6056", "uuid": "4df02f66-3639-4d1f-b6d6-48bfb71e151d"}, "__new_primary_file_trefiles|speciesprofile.0.22__": {"src": "hda", "id": "7a59e1ebc411d707", "uuid": "0647f8ed-1c28-4bf9-a077-12cd8ce4cba2"}, "__new_primary_file_trefiles|canberra.0.05__": {"src": "hda", "id": "c9142e6a9bffc640", "uuid": "ae5cea6c-f105-4d4f-8556-0ee200f83243"}, "__new_primary_file_trefiles|jclass.0.22__": {"src": "hda", "id": "1b5b15d0fc4f803d", "uuid": "1890c8cf-4495-4063-873b-cf7eee2990a8"}, "__new_primary_file_trefiles|structchi2.0.05__": {"src": "hda", "id": "ecbd7eff1b245f07", "uuid": "0de3d6ab-fc5c-42ec-bb4d-abc3da2391ea"}, "__new_primary_file_trefiles|structchord.0.32__": {"src": "hda", "id": "6969f544ce26582a", "uuid": "43fd0fbe-9195-4cf4-b212-0bc42cdf537c"}, "__new_primary_file_trefiles|structeuclidean.0.32__": {"src": "hda", "id": "a53110ee01cffdaa", "uuid": "7c2cdf1b-f20b-4bbc-9734-7ff1b814b3f8"}, "__new_primary_file_trefiles|hellinger.0.32__": {"src": "hda", "id": "f5b0b82abed3528e", "uuid": "f472c5de-fbdd-4304-85c5-aefbeb6de9a1"}, "__new_primary_file_trefiles|sharedace.0.05__": {"src": "hda", "id": "03901fa77b34c27f", "uuid": "4c9745b5-0e5f-4f1d-a4c2-bc6f869e96fc"}, "__new_primary_file_trefiles|anderberg.0.22__": {"src": "hda", "id": "f9059d557017f704", "uuid": "e35d3225-8811-4363-bcb1-3cd13ce68904"}, "__new_primary_file_trefiles|structchi2.0.32__": {"src": "hda", "id": "f62938060e8ed407", "uuid": "e8be1fe0-790c-4702-ab59-b74d20ce969d"}, "__new_primary_file_trefiles|memeuclidean.0.22__": {"src": "hda", "id": "f076a9eedd794696", "uuid": "e22f7dd4-cd6f-407a-806f-90ed11badfce"}, "__new_primary_file_trefiles|memeuclidean.0.32__": {"src": "hda", "id": "5657631aaad0a648", "uuid": "ac32f383-ab1a-481f-8e14-4fcf49b6dd67"}, "__new_primary_file_trefiles|spearman.0.05__": {"src": "hda", "id": "97335858f4e5b36c", "uuid": "66253047-e173-4451-8963-0ba152067c5a"}, "__new_primary_file_trefiles|structchord.0.05__": {"src": "hda", "id": "e3161c80d64319dd", "uuid": "e8894a0d-eecb-464a-ba46-d1a0fee044bf"}, "__new_primary_file_trefiles|spearman.0.32__": {"src": "hda", "id": "c7ebf3997ac1300b", "uuid": "7eba0287-d8ab-4f69-972d-e70da1fce788"}, "__new_primary_file_trefiles|gower.0.32__": {"src": "hda", "id": "9a78e2ad1b6be793", "uuid": "1863dcb7-0bb6-473c-b62b-648bf001477b"}, "__new_primary_file_trefiles|sharedace.0.32__": {"src": "hda", "id": "a42d3162a805ab9c", "uuid": "92a172b7-fd80-4fae-b068-51168b4ccebf"}, "__new_primary_file_trefiles|memchord.0.22__": {"src": "hda", "id": "9db149e1a3e8db88", "uuid": "2d10b0d1-875b-4de2-8694-3d359ca9c76e"}, "__new_primary_file_trefiles|jabund.0.22__": {"src": "hda", "id": "21f5104166518be2", "uuid": "f3e4d966-c6f1-4a36-8966-61c6d38d6231"}, "__new_primary_file_trefiles|anderberg.0.05__": {"src": "hda", "id": "e2928ff325f93401", "uuid": "e8a9fa25-49fd-4d48-a44f-3d84b7cb026e"}, "__new_primary_file_trefiles|sorabund.0.05__": {"src": "hda", "id": "76060719bbc6488c", "uuid": "135a2b97-8854-4e5b-9e73-0d061c4d78d8"}, "__new_primary_file_trefiles|thetayc.0.05__": {"src": "hda", "id": "173ff318ae2757cb", "uuid": "1d004860-ab4b-48c2-9f5c-51172243ae27"}, "__new_primary_file_trefiles|sharednseqs.0.05__": {"src": "hda", "id": "2023f7a267980136", "uuid": "f467f1b4-8b9f-45d5-949f-e762caa63749"}, "__new_primary_file_trefiles|anderberg.0.32__": {"src": "hda", "id": "4973bd2786b2e48c", "uuid": "812834d4-93d9-40e3-aa86-08d3402e83cf"}, "__new_primary_file_trefiles|structchi2.0.22__": {"src": "hda", "id": "157b6469cb5d35f5", "uuid": "d837e518-8487-47e8-9990-0e7cc318d0ff"}, "__new_primary_file_trefiles|mempearson.0.05__": {"src": "hda", "id": "c961b73f661c934c", "uuid": "f5ef04f2-1261-4777-91d4-2cb98d0ac747"}, "__new_primary_file_trefiles|mempearson.0.22__": {"src": "hda", "id": "d1c7bf5121f59953", "uuid": "0c8f0fd2-7ecc-4d00-acf9-f33066db6d59"}, "__new_primary_file_trefiles|kulczynski.0.05__": {"src": "hda", "id": "6f925a3f88dc1076", "uuid": "e0a61f0d-7ea6-4086-8816-30c604ef1cb4"}, "__new_primary_file_trefiles|mempearson.0.32__": {"src": "hda", "id": "683421845d896679", "uuid": "d28fd535-71b7-4bf9-9734-deda8837b0a3"}, "__new_primary_file_trefiles|sorest.0.22__": {"src": "hda", "id": "e6fc2da94e9288d1", "uuid": "7ac8e145-d18d-416e-9e3f-5fa85a5a4ad2"}, "__new_primary_file_trefiles|braycurtis.0.05__": {"src": "hda", "id": "f3e37e2828f5aa44", "uuid": "262d0c6c-24c9-4b07-bf7d-e0cc2fb10b7b"}, "__new_primary_file_trefiles|sorest.0.05__": {"src": "hda", "id": "29e4c51c61e48fb6", "uuid": "3820fb62-d7a0-47b4-a30d-cbfaed99be6f"}, "__new_primary_file_trefiles|structpearson.0.05__": {"src": "hda", "id": "2aa4d230300d0ac7", "uuid": "89ae93e2-ef8d-491e-a9f5-3ce3611eb705"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > tree.shared(shared=input_dist.dat,groups=forest-pasture,label=0.05-0.22 \r-0.32,calc=sharedsobs-sharedchao-sharedace-anderberg-jclass-jest-kulczynski-kulc \rzynskicody-kstest-lennon-ochiai-sorclass-sorest-whittaker-hamming-memchi2-memcho \rrd-memeuclidean-mempearson-braycurtis-jabund-morisitahorn-sorabund-thetan-thetay \rc-canberra-gower-hellinger-manhattan-odum-soergel-spearman-speciesprofile-struct \rchi2-structchord-structeuclidean-structkulczynski-structpearson-sharednseqs-shar \redobserved,processors=1)\n\nUsing 1 processors.\nsharedobserved is not a valid estimator for the tree.shared command and will be disregarded. Valid estimators are anderberg, braycurtis, canberra, gower, hamming, hellinger, jabund, jclass, jest, jsd, kstest, kulczynski, kulczynskicody, lennon, manhattan, memchi2, memchord, memeuclidean, mempearson, morisitahorn, ochiai, odum, rjsd, sharedace, sharedchao, sharednseqs, sharedsobs, soergel, sorabund, sorclass, sorest, spearman, speciesprofile, structchi2, structchord, structeuclidean, structkulczynski, structpearson, thetan, thetayc, whittaker, \n0.05\n0.22\n0.32\n\nOutput File Names: \ninput_dist.sharedsobs.0.05.tre\ninput_dist.sharedchao.0.05.tre\ninput_dist.sharedace.0.05.tre\ninput_dist.anderberg.0.05.tre\ninput_dist.jclass.0.05.tre\ninput_dist.jest.0.05.tre\ninput_dist.kulczynski.0.05.tre\ninput_dist.kulczynskicody.0.05.tre\ninput_dist.kstest.0.05.tre\ninput_dist.lennon.0.05.tre\ninput_dist.ochiai.0.05.tre\ninput_dist.sorclass.0.05.tre\ninput_dist.sorest.0.05.tre\ninput_dist.whittaker.0.05.tre\ninput_dist.hamming.0.05.tre\ninput_dist.memchi2.0.05.tre\ninput_dist.memchord.0.05.tre\ninput_dist.memeuclidean.0.05.tre\ninput_dist.mempearson.0.05.tre\ninput_dist.braycurtis.0.05.tre\ninput_dist.jabund.0.05.tre\ninput_dist.morisitahorn.0.05.tre\ninput_dist.sorabund.0.05.tre\ninput_dist.thetan.0.05.tre\ninput_dist.thetayc.0.05.tre\ninput_dist.canberra.0.05.tre\ninput_dist.gower.0.05.tre\ninput_dist.hellinger.0.05.tre\ninput_dist.manhattan.0.05.tre\ninput_dist.odum.0.05.tre\ninput_dist.soergel.0.05.tre\ninput_dist.spearman.0.05.tre\ninput_dist.speciesprofile.0.05.tre\ninput_dist.structchi2.0.05.tre\ninput_dist.structchord.0.05.tre\ninput_dist.structeuclidean.0.05.tre\ninput_dist.structkulczynski.0.05.tre\ninput_dist.structpearson.0.05.tre\ninput_dist.sharednseqs.0.05.tre\ninput_dist.sharedsobs.0.22.tre\ninput_dist.sharedchao.0.22.tre\ninput_dist.sharedace.0.22.tre\ninput_dist.anderberg.0.22.tre\ninput_dist.jclass.0.22.tre\ninput_dist.jest.0.22.tre\ninput_dist.kulczynski.0.22.tre\ninput_dist.kulczynskicody.0.22.tre\ninput_dist.kstest.0.22.tre\ninput_dist.lennon.0.22.tre\ninput_dist.ochiai.0.22.tre\ninput_dist.sorclass.0.22.tre\ninput_dist.sorest.0.22.tre\ninput_dist.whittaker.0.22.tre\ninput_dist.hamming.0.22.tre\ninput_dist.memchi2.0.22.tre\ninput_dist.memchord.0.22.tre\ninput_dist.memeuclidean.0.22.tre\ninput_dist.mempearson.0.22.tre\ninput_dist.braycurtis.0.22.tre\ninput_dist.jabund.0.22.tre\ninput_dist.morisitahorn.0.22.tre\ninput_dist.sorabund.0.22.tre\ninput_dist.thetan.0.22.tre\ninput_dist.thetayc.0.22.tre\ninput_dist.canberra.0.22.tre\ninput_dist.gower.0.22.tre\ninput_dist.hellinger.0.22.tre\ninput_dist.manhattan.0.22.tre\ninput_dist.odum.0.22.tre\ninput_dist.soergel.0.22.tre\ninput_dist.spearman.0.22.tre\ninput_dist.speciesprofile.0.22.tre\ninput_dist.structchi2.0.22.tre\ninput_dist.structchord.0.22.tre\ninput_dist.structeuclidean.0.22.tre\ninput_dist.structkulczynski.0.22.tre\ninput_dist.structpearson.0.22.tre\ninput_dist.sharednseqs.0.22.tre\ninput_dist.sharedsobs.0.32.tre\ninput_dist.sharedchao.0.32.tre\ninput_dist.sharedace.0.32.tre\ninput_dist.anderberg.0.32.tre\ninput_dist.jclass.0.32.tre\ninput_dist.jest.0.32.tre\ninput_dist.kulczynski.0.32.tre\ninput_dist.kulczynskicody.0.32.tre\ninput_dist.kstest.0.32.tre\ninput_dist.lennon.0.32.tre\ninput_dist.ochiai.0.32.tre\ninput_dist.sorclass.0.32.tre\ninput_dist.sorest.0.32.tre\ninput_dist.whittaker.0.32.tre\ninput_dist.hamming.0.32.tre\ninput_dist.memchi2.0.32.tre\ninput_dist.memchord.0.32.tre\ninput_dist.memeuclidean.0.32.tre\ninput_dist.mempearson.0.32.tre\ninput_dist.braycurtis.0.32.tre\ninput_dist.jabund.0.32.tre\ninput_dist.morisitahorn.0.32.tre\ninput_dist.sorabund.0.32.tre\ninput_dist.thetan.0.32.tre\ninput_dist.thetayc.0.32.tre\ninput_dist.canberra.0.32.tre\ninput_dist.gower.0.32.tre\ninput_dist.hellinger.0.32.tre\ninput_dist.manhattan.0.32.tre\ninput_dist.odum.0.32.tre\ninput_dist.soergel.0.32.tre\ninput_dist.spearman.0.32.tre\ninput_dist.speciesprofile.0.32.tre\ninput_dist.structchi2.0.32.tre\ninput_dist.structchord.0.32.tre\ninput_dist.structeuclidean.0.32.tre\ninput_dist.structkulczynski.0.32.tre\ninput_dist.structpearson.0.32.tre\ninput_dist.sharednseqs.0.32.tre\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:07:12.600312", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "calc": "[\"sharedsobs\", \"sharedchao\", \"sharedace\", \"anderberg\", \"jclass\", \"jest\", \"kulczynski\", \"kulczynskicody\", \"kstest\", \"lennon\", \"ochiai\", \"sorclass\", \"sorest\", \"whittaker\", \"hamming\", \"memchi2\", \"memchord\", \"memeuclidean\", \"mempearson\", \"braycurtis\", \"jabund\", \"morisitahorn\", \"sorabund\", \"thetan\", \"thetayc\", \"canberra\", \"gower\", \"hellinger\", \"manhattan\", \"odum\", \"soergel\", \"spearman\", \"speciesprofile\", \"structchi2\", \"structchord\", \"structeuclidean\", \"structkulczynski\", \"structpearson\", \"sharednseqs\", \"sharedobserved\"]", "savelog": "\"true\"", "dbkey": "\"?\"", "input": "{\"__current_case__\": 2, \"dist\": {\"values\": [{\"id\": 1067498, \"src\": \"hda\"}]}, \"groups\": [\"forest\", \"pasture\"], \"label\": [\"0.05\", \"0.22\", \"0.32\"], \"source\": \"shared\", \"subsampling\": {\"__current_case__\": 1, \"use\": \"no\"}}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > tree.shared(shared=input_dist.dat,groups=forest-pasture,label=0.05-0.22 \r-0.32,calc=sharedsobs-sharedchao-sharedace-anderberg-jclass-jest-kulczynski-kulc \rzynskicody-kstest-lennon-ochiai-sorclass-sorest-whittaker-hamming-memchi2-memcho \rrd-memeuclidean-mempearson-braycurtis-jabund-morisitahorn-sorabund-thetan-thetay \rc-canberra-gower-hellinger-manhattan-odum-soergel-spearman-speciesprofile-struct \rchi2-structchord-structeuclidean-structkulczynski-structpearson-sharednseqs-shar \redobserved,processors=1)\n\nUsing 1 processors.\nsharedobserved is not a valid estimator for the tree.shared command and will be disregarded. Valid estimators are anderberg, braycurtis, canberra, gower, hamming, hellinger, jabund, jclass, jest, jsd, kstest, kulczynski, kulczynskicody, lennon, manhattan, memchi2, memchord, memeuclidean, mempearson, morisitahorn, ochiai, odum, rjsd, sharedace, sharedchao, sharednseqs, sharedsobs, soergel, sorabund, sorclass, sorest, spearman, speciesprofile, structchi2, structchord, structeuclidean, structkulczynski, structpearson, thetan, thetayc, whittaker, \n0.05\n0.22\n0.32\n\nOutput File Names: \ninput_dist.sharedsobs.0.05.tre\ninput_dist.sharedchao.0.05.tre\ninput_dist.sharedace.0.05.tre\ninput_dist.anderberg.0.05.tre\ninput_dist.jclass.0.05.tre\ninput_dist.jest.0.05.tre\ninput_dist.kulczynski.0.05.tre\ninput_dist.kulczynskicody.0.05.tre\ninput_dist.kstest.0.05.tre\ninput_dist.lennon.0.05.tre\ninput_dist.ochiai.0.05.tre\ninput_dist.sorclass.0.05.tre\ninput_dist.sorest.0.05.tre\ninput_dist.whittaker.0.05.tre\ninput_dist.hamming.0.05.tre\ninput_dist.memchi2.0.05.tre\ninput_dist.memchord.0.05.tre\ninput_dist.memeuclidean.0.05.tre\ninput_dist.mempearson.0.05.tre\ninput_dist.braycurtis.0.05.tre\ninput_dist.jabund.0.05.tre\ninput_dist.morisitahorn.0.05.tre\ninput_dist.sorabund.0.05.tre\ninput_dist.thetan.0.05.tre\ninput_dist.thetayc.0.05.tre\ninput_dist.canberra.0.05.tre\ninput_dist.gower.0.05.tre\ninput_dist.hellinger.0.05.tre\ninput_dist.manhattan.0.05.tre\ninput_dist.odum.0.05.tre\ninput_dist.soergel.0.05.tre\ninput_dist.spearman.0.05.tre\ninput_dist.speciesprofile.0.05.tre\ninput_dist.structchi2.0.05.tre\ninput_dist.structchord.0.05.tre\ninput_dist.structeuclidean.0.05.tre\ninput_dist.structkulczynski.0.05.tre\ninput_dist.structpearson.0.05.tre\ninput_dist.sharednseqs.0.05.tre\ninput_dist.sharedsobs.0.22.tre\ninput_dist.sharedchao.0.22.tre\ninput_dist.sharedace.0.22.tre\ninput_dist.anderberg.0.22.tre\ninput_dist.jclass.0.22.tre\ninput_dist.jest.0.22.tre\ninput_dist.kulczynski.0.22.tre\ninput_dist.kulczynskicody.0.22.tre\ninput_dist.kstest.0.22.tre\ninput_dist.lennon.0.22.tre\ninput_dist.ochiai.0.22.tre\ninput_dist.sorclass.0.22.tre\ninput_dist.sorest.0.22.tre\ninput_dist.whittaker.0.22.tre\ninput_dist.hamming.0.22.tre\ninput_dist.memchi2.0.22.tre\ninput_dist.memchord.0.22.tre\ninput_dist.memeuclidean.0.22.tre\ninput_dist.mempearson.0.22.tre\ninput_dist.braycurtis.0.22.tre\ninput_dist.jabund.0.22.tre\ninput_dist.morisitahorn.0.22.tre\ninput_dist.sorabund.0.22.tre\ninput_dist.thetan.0.22.tre\ninput_dist.thetayc.0.22.tre\ninput_dist.canberra.0.22.tre\ninput_dist.gower.0.22.tre\ninput_dist.hellinger.0.22.tre\ninput_dist.manhattan.0.22.tre\ninput_dist.odum.0.22.tre\ninput_dist.soergel.0.22.tre\ninput_dist.spearman.0.22.tre\ninput_dist.speciesprofile.0.22.tre\ninput_dist.structchi2.0.22.tre\ninput_dist.structchord.0.22.tre\ninput_dist.structeuclidean.0.22.tre\ninput_dist.structkulczynski.0.22.tre\ninput_dist.structpearson.0.22.tre\ninput_dist.sharednseqs.0.22.tre\ninput_dist.sharedsobs.0.32.tre\ninput_dist.sharedchao.0.32.tre\ninput_dist.sharedace.0.32.tre\ninput_dist.anderberg.0.32.tre\ninput_dist.jclass.0.32.tre\ninput_dist.jest.0.32.tre\ninput_dist.kulczynski.0.32.tre\ninput_dist.kulczynskicody.0.32.tre\ninput_dist.kstest.0.32.tre\ninput_dist.lennon.0.32.tre\ninput_dist.ochiai.0.32.tre\ninput_dist.sorclass.0.32.tre\ninput_dist.sorest.0.32.tre\ninput_dist.whittaker.0.32.tre\ninput_dist.hamming.0.32.tre\ninput_dist.memchi2.0.32.tre\ninput_dist.memchord.0.32.tre\ninput_dist.memeuclidean.0.32.tre\ninput_dist.mempearson.0.32.tre\ninput_dist.braycurtis.0.32.tre\ninput_dist.jabund.0.32.tre\ninput_dist.morisitahorn.0.32.tre\ninput_dist.sorabund.0.32.tre\ninput_dist.thetan.0.32.tre\ninput_dist.thetayc.0.32.tre\ninput_dist.canberra.0.32.tre\ninput_dist.gower.0.32.tre\ninput_dist.hellinger.0.32.tre\ninput_dist.manhattan.0.32.tre\ninput_dist.odum.0.32.tre\ninput_dist.soergel.0.32.tre\ninput_dist.spearman.0.32.tre\ninput_dist.speciesprofile.0.32.tre\ninput_dist.structchi2.0.32.tre\ninput_dist.structchord.0.32.tre\ninput_dist.structeuclidean.0.32.tre\ninput_dist.structkulczynski.0.32.tre\ninput_dist.structpearson.0.32.tre\ninput_dist.sharednseqs.0.32.tre\n\n\nmothur > quit\n", "job_messages": [], "id": "29cdf36671627e76", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_tree_shared/mothur_tree_shared/1.39.5.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_tree_shared/mothur_tree_shared/1.39.5.0", "time_seconds": 73.15835118293762, "inputs": {"input|dist": {"src": "hda", "id": "42347d02716ba2c7"}, "input|source": "column", "savelog": true, "input|name": {"src": "hda", "id": "ca61a3446022b1f7"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_tree_shared/mothur_tree_shared/1.39.5.0", "update_time": "2019-06-25T22:07:44.545294", "inputs": {"dist": {"src": "hda", "id": "42347d02716ba2c7", "uuid": "0b0b5068-2187-42f6-aa10-84b0044ddad1"}, "name": {"src": "hda", "id": "ca61a3446022b1f7", "uuid": "281fe450-2ae3-41f9-a50c-1b5e7fe59eb2"}}, "outputs": {"logfile": {"src": "hda", "id": "3ec12ba9d36cdefe", "uuid": "5938187a-4db2-4cb6-b437-0f31e36a2345"}, "tre": {"src": "hda", "id": "e8867efea970598d", "uuid": "98c57e35-5135-4e1d-98bd-12fe398cffba"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > tree.shared(column=input_dist.dat,name=input_name.dat,calc=jclass-theta \ryc,processors=1)\n\nUsing 1 processors.\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\nTree complete. \n\nOutput File Names: \ninput_dist.tre\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:07:30.846793", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "calc": "[\"jclass\", \"thetayc\"]", "savelog": "\"true\"", "dbkey": "\"?\"", "input": "{\"__current_case__\": 0, \"dist\": {\"values\": [{\"id\": 1067502, \"src\": \"hda\"}]}, \"name\": {\"values\": [{\"id\": 1067503, \"src\": \"hda\"}]}, \"source\": \"column\"}"}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > tree.shared(column=input_dist.dat,name=input_name.dat,calc=jclass-theta \ryc,processors=1)\n\nUsing 1 processors.\n********************#****#****#****#****#****#****#****#****#****#****#\nReading matrix:     ||||||||||||||||||||||||||||||||||||||||||||||||||||\n***********************************************************************\nTree complete. \n\nOutput File Names: \ninput_dist.tre\n\n\nmothur > quit\n", "job_messages": [], "id": "9a28671ce3065447", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_tree_shared/mothur_tree_shared/1.39.5.0-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0", "time_seconds": 77.47255516052246, "inputs": {"fasta": {"src": "hda", "id": "fd622e1da5fd776c"}, "maxhomop": "4", "savelog": true, "names": {"src": "hda", "id": "327f08a97fdf4c4b"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0", "update_time": "2019-06-25T22:42:37.282692", "inputs": {"fasta": {"src": "hda", "id": "fd622e1da5fd776c", "uuid": "e6ceb5b1-a060-4e8e-9790-d81d80fd875b"}, "names": {"src": "hda", "id": "327f08a97fdf4c4b", "uuid": "97b9e00c-1897-4fcd-97cc-9bb903b1ecdf"}}, "outputs": {"trim_fasta": {"src": "hda", "id": "73462b9a6017fac0", "uuid": "3853c6f6-fe94-481a-a0a9-5a9842107477"}, "trim_names": {"src": "hda", "id": "70cfb2117bc585e3", "uuid": "56487ba1-016c-484f-995a-151ab42c54a3"}, "logfile": {"src": "hda", "id": "3243d00e7b9df18a", "uuid": "0dd060c2-85a2-4508-bd88-6bf5e28d251f"}, "scrap_names": {"src": "hda", "id": "a8c6c0045b69459f", "uuid": "c67bc313-58c5-47a7-9235-72d886fcaad4"}, "scrap_fasta": {"src": "hda", "id": "5617c3bb9e4f06d4", "uuid": "2dee3981-c031-4062-8dc1-5523336ba040"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > trim.seqs(fasta=fasta.dat,minlength=0,maxlength=0,maxambig=-1,maxhomop= \r4,keepfirst=0,removelast=0,flip=false,name=names.dat,logtransform=false,checkori \rent=false,processors=1)\n\nUsing 1 processors.\n98\n\n\nOutput File Names: \nfasta.trim.fasta\nfasta.scrap.fasta\nnames.trim.names\nnames.scrap.names\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:42:04.543999", "stderr": "", "model_class": "Job", "params": {"count": "null", "oligo": "{\"__current_case__\": 0, \"add\": \"no\"}", "checkorient": "\"false\"", "minlength": "\"0\"", "maxhomop": "\"4\"", "logtransform": "\"false\"", "dbkey": "\"?\"", "flip": "\"false\"", "qual": "{\"__current_case__\": 0, \"add2\": \"no\"}", "removelast": "\"0\"", "savelog": "\"true\"", "maxlength": "\"0\"", "maxambig": "\"-1\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "keepfirst": "\"0\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > trim.seqs(fasta=fasta.dat,minlength=0,maxlength=0,maxambig=-1,maxhomop= \r4,keepfirst=0,removelast=0,flip=false,name=names.dat,logtransform=false,checkori \rent=false,processors=1)\n\nUsing 1 processors.\n98\n\n\nOutput File Names: \nfasta.trim.fasta\nfasta.scrap.fasta\nnames.trim.names\nnames.scrap.names\n\n\nmothur > quit\n", "job_messages": [], "id": "72c9d42f545318b2", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0", "time_seconds": 79.4363808631897, "inputs": {"count": {"src": "hda", "id": "2e6341e7d2c7a6f0"}, "fasta": {"src": "hda", "id": "fd622e1da5fd776c"}, "maxhomop": "4", "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0", "update_time": "2019-06-25T22:42:42.937961", "inputs": {"count": {"src": "hda", "id": "2e6341e7d2c7a6f0", "uuid": "4b2cffa4-f176-4ad6-a335-c39925f40fb8"}, "fasta": {"src": "hda", "id": "fd622e1da5fd776c", "uuid": "e6ceb5b1-a060-4e8e-9790-d81d80fd875b"}}, "outputs": {"trim_fasta": {"src": "hda", "id": "9705ecb8533f71b5", "uuid": "5a3aed76-12b6-4005-ba4e-db1f867d0aab"}, "trim_count": {"src": "hda", "id": "ae99c3a5332acafe", "uuid": "fb6c1bf1-b607-4f61-a3b8-863bf7c6f7b3"}, "logfile": {"src": "hda", "id": "17c6327b86d62868", "uuid": "77ee60b4-c7b0-43ea-9de3-09ac12277fcb"}, "scrap_count": {"src": "hda", "id": "15d04ea983fa3f8e", "uuid": "ed361c72-f9b0-4666-858a-f1d5959cda8e"}, "scrap_fasta": {"src": "hda", "id": "b4c57c4f646ad041", "uuid": "badc0a92-f80a-4ca8-aa7f-9fc0fd7b3333"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > trim.seqs(fasta=fasta.dat,minlength=0,maxlength=0,maxambig=-1,maxhomop= \r4,keepfirst=0,removelast=0,flip=false,logtransform=false,checkorient=false,count \r=count.dat,processors=1)\n\nUsing 1 processors.\n98\n\n\nOutput File Names: \nfasta.trim.fasta\nfasta.scrap.fasta\ncount.trim.count_table\ncount.scrap.count_table\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:42:14.965637", "stderr": "", "model_class": "Job", "params": {"oligo": "{\"__current_case__\": 0, \"add\": \"no\"}", "checkorient": "\"false\"", "minlength": "\"0\"", "maxhomop": "\"4\"", "logtransform": "\"false\"", "dbkey": "\"?\"", "flip": "\"false\"", "qual": "{\"__current_case__\": 0, \"add2\": \"no\"}", "removelast": "\"0\"", "savelog": "\"true\"", "names": "null", "maxlength": "\"0\"", "maxambig": "\"-1\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "keepfirst": "\"0\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > trim.seqs(fasta=fasta.dat,minlength=0,maxlength=0,maxambig=-1,maxhomop= \r4,keepfirst=0,removelast=0,flip=false,logtransform=false,checkorient=false,count \r=count.dat,processors=1)\n\nUsing 1 processors.\n98\n\n\nOutput File Names: \nfasta.trim.fasta\nfasta.scrap.fasta\ncount.trim.count_table\ncount.scrap.count_table\n\n\nmothur > quit\n", "job_messages": [], "id": "9b95f066e5fda5f6", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0", "time_seconds": 72.0076150894165, "inputs": {"oligo|add": "yes", "oligo|oligos": {"src": "hda", "id": "02bf75ea3f86eef5"}, "savelog": true, "oligo|pdiffs": "100", "fasta": {"src": "hda", "id": "fd622e1da5fd776c"}, "oligo|bdiffs": "100"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0", "update_time": "2019-06-25T22:42:42.855865", "inputs": {"oligos": {"src": "hda", "id": "02bf75ea3f86eef5", "uuid": "c76abb04-439a-4aae-b602-8badd1cacb95"}, "fasta": {"src": "hda", "id": "fd622e1da5fd776c", "uuid": "e6ceb5b1-a060-4e8e-9790-d81d80fd875b"}}, "outputs": {"trim_fasta": {"src": "hda", "id": "d5c4e6c868b65de5", "uuid": "3cf54ef7-a62a-4820-8ba3-a9e6cdb37592"}, "groups_file": {"src": "hda", "id": "6a3e13a434a3834c", "uuid": "8cf96ffc-b7bf-4c3a-998b-ae8747a12f72"}, "logfile": {"src": "hda", "id": "f6e643b6c858f2b7", "uuid": "0e85edba-ea6d-4dc6-9c0e-a847673c649b"}, "scrap_fasta": {"src": "hda", "id": "6e29272766ac22aa", "uuid": "20329241-72f9-4c72-ad5f-d4139a19d865"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > trim.seqs(fasta=fasta.dat,minlength=0,maxlength=0,maxambig=-1,maxhomop= \r0,keepfirst=0,removelast=0,oligos=oligo.oligos.dat,bdiffs=100,pdiffs=100,tdiffs= \r0,ldiffs=0,sdiffs=0,keepforward=false,allfiles=false,flip=false,logtransform=fal \rse,checkorient=false,processors=1)\n\nUsing 1 processors.\n98\n\nGroup count: \nF003D000\t32\nF003D006\t1\nF003D008\t3\nF003D142\t7\nF003D144\t8\nF003D146\t4\nF003D148\t33\nF003D150\t1\nMOCK.GQY1XT001\t2\nTotal of all groups is 91\n\nOutput File Names: \nfasta.trim.fasta\nfasta.scrap.fasta\nfasta.groups\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:42:15.798998", "stderr": "", "model_class": "Job", "params": {"count": "null", "oligo": "{\"__current_case__\": 1, \"add\": \"yes\", \"allfiles\": \"false\", \"bdiffs\": \"100\", \"keepforward\": \"false\", \"ldiffs\": \"0\", \"oligos\": {\"values\": [{\"id\": 1068250, \"src\": \"hda\"}]}, \"pdiffs\": \"100\", \"sdiffs\": \"0\", \"tdiffs\": \"0\"}", "checkorient": "\"false\"", "minlength": "\"0\"", "maxhomop": "\"0\"", "logtransform": "\"false\"", "dbkey": "\"?\"", "flip": "\"false\"", "qual": "{\"__current_case__\": 0, \"add2\": \"no\"}", "removelast": "\"0\"", "savelog": "\"true\"", "names": "null", "maxlength": "\"0\"", "maxambig": "\"-1\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "keepfirst": "\"0\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > trim.seqs(fasta=fasta.dat,minlength=0,maxlength=0,maxambig=-1,maxhomop= \r0,keepfirst=0,removelast=0,oligos=oligo.oligos.dat,bdiffs=100,pdiffs=100,tdiffs= \r0,ldiffs=0,sdiffs=0,keepforward=false,allfiles=false,flip=false,logtransform=fal \rse,checkorient=false,processors=1)\n\nUsing 1 processors.\n98\n\nGroup count: \nF003D000\t32\nF003D006\t1\nF003D008\t3\nF003D142\t7\nF003D144\t8\nF003D146\t4\nF003D148\t33\nF003D150\t1\nMOCK.GQY1XT001\t2\nTotal of all groups is 91\n\nOutput File Names: \nfasta.trim.fasta\nfasta.scrap.fasta\nfasta.groups\n\n\nmothur > quit\n", "job_messages": [], "id": "dfbbe0afe0b34922", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0", "time_seconds": 67.58958315849304, "inputs": {"oligo|allfiles": true, "oligo|add": "yes", "oligo|oligos": {"src": "hda", "id": "02bf75ea3f86eef5"}, "savelog": true, "oligo|pdiffs": "100", "fasta": {"src": "hda", "id": "fd622e1da5fd776c"}, "oligo|bdiffs": "100"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0", "update_time": "2019-06-25T22:42:48.587621", "inputs": {"oligos": {"src": "hda", "id": "02bf75ea3f86eef5", "uuid": "c76abb04-439a-4aae-b602-8badd1cacb95"}, "fasta": {"src": "hda", "id": "fd622e1da5fd776c", "uuid": "e6ceb5b1-a060-4e8e-9790-d81d80fd875b"}}, "outputs": {"trim_fasta": {"src": "hda", "id": "9c43d9bddcfe957d", "uuid": "7f5911dc-1a3c-4804-ae9d-ba1a49489f05"}, "__new_primary_file_fasta_allfiles|F003D146__": {"src": "hda", "id": "4ba09e4c7e820325", "uuid": "b7ca9777-886a-4d44-80b3-0f22b32599e4"}, "__new_primary_file_fasta_allfiles|F003D150__": {"src": "hda", "id": "4b502439436afef0", "uuid": "8e9706d5-a945-4f8f-aba5-de510b8119b3"}, "__new_primary_file_fasta_allfiles|F003D148__": {"src": "hda", "id": "07513c86f9eaf925", "uuid": "c3b7831b-0952-490d-b3ff-48fd6c5bc7ad"}, "__new_primary_file_groups_allfiles|F003D006__": {"src": "hda", "id": "b8ddee589fe96732", "uuid": "9136e9e9-bc20-40b0-bb9e-dc7272bf5b98"}, "__new_primary_file_groups_allfiles|MOCK.GQY1XT001__": {"src": "hda", "id": "aa5ab7cb9672b48c", "uuid": "18aab93a-54c6-4717-a749-14ceabc00c88"}, "__new_primary_file_groups_allfiles|F003D000__": {"src": "hda", "id": "d315f401fdc9e7af", "uuid": "99a6609d-d016-4a6e-8bff-8c4571111985"}, "scrap_fasta": {"src": "hda", "id": "79155b801519f459", "uuid": "9de09840-7bff-4b6e-af2c-52d7172d1503"}, "__new_primary_file_groups_allfiles|F003D142__": {"src": "hda", "id": "36dd89515e463c86", "uuid": "cfb33f01-4d73-46d3-9848-f514af8cfad7"}, "__new_primary_file_groups_allfiles|F003D008__": {"src": "hda", "id": "2e557c77cd595683", "uuid": "bcc8a33a-86d6-4ecd-a23e-1f8eb4a8040b"}, "__new_primary_file_groups_allfiles|F003D144__": {"src": "hda", "id": "bfe62c56388a4748", "uuid": "6d1da124-ba81-4b9e-84b4-ac83784f3f32"}, "__new_primary_file_fasta_allfiles|F003D142__": {"src": "hda", "id": "243003f92d9128c2", "uuid": "53ea3497-76d0-4908-9fb9-b80eda9a0828"}, "groups_file": {"src": "hda", "id": "a311ddc8f53053e6", "uuid": "e71f7e82-b57f-4e26-84ba-014d41556be3"}, "__new_primary_file_groups_allfiles|F003D146__": {"src": "hda", "id": "1fa4683aa7c6ebfd", "uuid": "2b0440a5-336d-40ec-80e8-491d99e42613"}, "__new_primary_file_fasta_allfiles|MOCK.GQY1XT001__": {"src": "hda", "id": "f75e25c9cf037826", "uuid": "8549c722-de01-4b3a-ad29-26921945919d"}, "__new_primary_file_fasta_allfiles|F003D006__": {"src": "hda", "id": "2eea6ef74fb53b64", "uuid": "2bb4bc35-8d09-43e6-a22d-ef59ede42b06"}, "logfile": {"src": "hda", "id": "1068531668513817", "uuid": "02070c72-1ccf-43bd-a879-04b15cdd1620"}, "__new_primary_file_fasta_allfiles|F003D008__": {"src": "hda", "id": "6c4fef75f9db5bd6", "uuid": "35258638-f078-4add-9536-09f6ba7bdc1a"}, "__new_primary_file_fasta_allfiles|F003D144__": {"src": "hda", "id": "3d9f37b914175ba0", "uuid": "faf3408c-b6ba-4159-b170-84db1a530174"}, "__new_primary_file_groups_allfiles|F003D148__": {"src": "hda", "id": "a1997de0dca6b477", "uuid": "6c1d2479-1099-4698-ac70-0cd905f7d591"}, "__new_primary_file_fasta_allfiles|F003D000__": {"src": "hda", "id": "8f7d323b600d81af", "uuid": "842c8ab0-4095-4cc1-85b8-d1787e564ef4"}, "__new_primary_file_groups_allfiles|F003D150__": {"src": "hda", "id": "e9816ecc6e98b095", "uuid": "9f172ec0-1fb5-4f70-a274-46aa07c4dd3b"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > trim.seqs(fasta=fasta.dat,minlength=0,maxlength=0,maxambig=-1,maxhomop= \r0,keepfirst=0,removelast=0,oligos=oligo.oligos.dat,bdiffs=100,pdiffs=100,tdiffs= \r0,ldiffs=0,sdiffs=0,keepforward=false,allfiles=true,flip=false,logtransform=fals \re,checkorient=false,processors=1)\n\nUsing 1 processors.\n98\n\nGroup count: \nF003D000\t32\nF003D006\t1\nF003D008\t3\nF003D142\t7\nF003D144\t8\nF003D146\t4\nF003D148\t33\nF003D150\t1\nMOCK.GQY1XT001\t2\nTotal of all groups is 91\n\nOutput File Names: \nfasta.trim.fasta\nfasta.scrap.fasta\nfasta.MOCK.GQY1XT001.fasta\nfasta.F003D144.fasta\nfasta.F003D000.fasta\nfasta.F003D148.fasta\nfasta.F003D142.fasta\nfasta.F003D146.fasta\nfasta.F003D150.fasta\nfasta.F003D008.fasta\nfasta.F003D006.fasta\nfasta.groups\nfasta.F003D000.groups\nfasta.F003D006.groups\nfasta.F003D008.groups\nfasta.F003D142.groups\nfasta.F003D144.groups\nfasta.F003D146.groups\nfasta.F003D148.groups\nfasta.F003D150.groups\nfasta.MOCK.GQY1XT001.groups\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:42:30.447937", "stderr": "", "model_class": "Job", "params": {"count": "null", "oligo": "{\"__current_case__\": 1, \"add\": \"yes\", \"allfiles\": \"true\", \"bdiffs\": \"100\", \"keepforward\": \"false\", \"ldiffs\": \"0\", \"oligos\": {\"values\": [{\"id\": 1068250, \"src\": \"hda\"}]}, \"pdiffs\": \"100\", \"sdiffs\": \"0\", \"tdiffs\": \"0\"}", "checkorient": "\"false\"", "minlength": "\"0\"", "maxhomop": "\"0\"", "logtransform": "\"false\"", "dbkey": "\"?\"", "flip": "\"false\"", "qual": "{\"__current_case__\": 0, \"add2\": \"no\"}", "removelast": "\"0\"", "savelog": "\"true\"", "names": "null", "maxlength": "\"0\"", "maxambig": "\"-1\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "keepfirst": "\"0\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > trim.seqs(fasta=fasta.dat,minlength=0,maxlength=0,maxambig=-1,maxhomop= \r0,keepfirst=0,removelast=0,oligos=oligo.oligos.dat,bdiffs=100,pdiffs=100,tdiffs= \r0,ldiffs=0,sdiffs=0,keepforward=false,allfiles=true,flip=false,logtransform=fals \re,checkorient=false,processors=1)\n\nUsing 1 processors.\n98\n\nGroup count: \nF003D000\t32\nF003D006\t1\nF003D008\t3\nF003D142\t7\nF003D144\t8\nF003D146\t4\nF003D148\t33\nF003D150\t1\nMOCK.GQY1XT001\t2\nTotal of all groups is 91\n\nOutput File Names: \nfasta.trim.fasta\nfasta.scrap.fasta\nfasta.MOCK.GQY1XT001.fasta\nfasta.F003D144.fasta\nfasta.F003D000.fasta\nfasta.F003D148.fasta\nfasta.F003D142.fasta\nfasta.F003D146.fasta\nfasta.F003D150.fasta\nfasta.F003D008.fasta\nfasta.F003D006.fasta\nfasta.groups\nfasta.F003D000.groups\nfasta.F003D006.groups\nfasta.F003D008.groups\nfasta.F003D142.groups\nfasta.F003D144.groups\nfasta.F003D146.groups\nfasta.F003D148.groups\nfasta.F003D150.groups\nfasta.MOCK.GQY1XT001.groups\n\n\nmothur > quit\n", "job_messages": [], "id": "7cab70efe2f9c95b", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0", "time_seconds": 66.67790699005127, "inputs": {"qual|qfile": {"src": "hda", "id": "8b84c626f038f146"}, "fasta": {"src": "hda", "id": "31921f07c20f20e1"}, "maxhomop": "4", "savelog": true, "qual|add2": "yes"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0", "update_time": "2019-06-25T22:42:31.463934", "inputs": {"qfile": {"src": "hda", "id": "8b84c626f038f146", "uuid": "9f810dab-e3fd-400a-857e-f3a2c9fb3ebe"}, "fasta": {"src": "hda", "id": "31921f07c20f20e1", "uuid": "0a6edfd9-a86a-4650-bce6-7469f5c0be7f"}}, "outputs": {"trim_fasta": {"src": "hda", "id": "4450e24c44aebf86", "uuid": "eab5d8f5-2f40-4d99-b655-ed6d5b1e7bbb"}, "logfile": {"src": "hda", "id": "d511317f2b7a634f", "uuid": "8ccf583e-1fc0-42b3-9b7f-2e59d65da3c9"}, "scrap_qual": {"src": "hda", "id": "2ef6a7d6f14d8ff8", "uuid": "811d3b4e-3045-41cf-843e-284872970493"}, "scrap_fasta": {"src": "hda", "id": "f94ad378cb57234b", "uuid": "d27b41ba-7744-48fa-b4b9-94e91d85430d"}, "trim_qual": {"src": "hda", "id": "b05bcdad726e43c0", "uuid": "0e9accef-c448-40fd-80fd-1105639a810a"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > trim.seqs(fasta=fasta.dat,minlength=0,maxlength=0,maxambig=-1,maxhomop= \r4,keepfirst=0,removelast=0,qfile=qual.qfile.dat,qaverage=0,qthreshold=0,qwindowa \rverage=0,qwindowsize=50,rollaverage=0,qstepsize=1,qtrim=false,flip=false,logtran \rsform=false,checkorient=false,processors=1)\n\nUsing 1 processors.\n10\n\n\nOutput File Names: \nfasta.trim.fasta\nfasta.scrap.fasta\nfasta.trim.qual\nfasta.scrap.qual\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:42:17.076608", "stderr": "", "model_class": "Job", "params": {"count": "null", "oligo": "{\"__current_case__\": 0, \"add\": \"no\"}", "checkorient": "\"false\"", "minlength": "\"0\"", "maxhomop": "\"4\"", "logtransform": "\"false\"", "dbkey": "\"?\"", "flip": "\"false\"", "qual": "{\"__current_case__\": 1, \"add2\": \"yes\", \"qaverage\": \"0\", \"qfile\": {\"values\": [{\"id\": 1068253, \"src\": \"hda\"}]}, \"qstepsize\": \"1\", \"qthreshold\": \"0\", \"qtrim\": \"false\", \"qwindowaverage\": \"0\", \"qwindowsize\": \"50\", \"rollaverage\": \"0\"}", "removelast": "\"0\"", "savelog": "\"true\"", "names": "null", "maxlength": "\"0\"", "maxambig": "\"-1\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "keepfirst": "\"0\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > trim.seqs(fasta=fasta.dat,minlength=0,maxlength=0,maxambig=-1,maxhomop= \r4,keepfirst=0,removelast=0,qfile=qual.qfile.dat,qaverage=0,qthreshold=0,qwindowa \rverage=0,qwindowsize=50,rollaverage=0,qstepsize=1,qtrim=false,flip=false,logtran \rsform=false,checkorient=false,processors=1)\n\nUsing 1 processors.\n10\n\n\nOutput File Names: \nfasta.trim.fasta\nfasta.scrap.fasta\nfasta.trim.qual\nfasta.scrap.qual\n\n\nmothur > quit\n", "job_messages": [], "id": "6fb011f86344c995", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_trim_seqs/mothur_trim_seqs/1.39.5.0-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unifrac_weighted/mothur_unifrac_weighted/1.39.5.0", "time_seconds": 88.53189206123352, "inputs": {"tree": {"src": "hda", "id": "57fc7ce430151fde"}, "group": {"src": "hda", "id": "de6dc38c81a4ce06"}, "groups": ["A", "B", "C"], "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unifrac_weighted/mothur_unifrac_weighted/1.39.5.0", "update_time": "2019-06-25T22:56:07.947100", "inputs": {"group": {"src": "hda", "id": "de6dc38c81a4ce06", "uuid": "6b904d08-f76a-4a1b-b1a4-efc5391f913f"}, "tree": {"src": "hda", "id": "57fc7ce430151fde", "uuid": "0464cf64-ea53-4493-bc8d-948f336cdd63"}}, "outputs": {"logfile": {"src": "hda", "id": "6376ff2a54eaa3a5", "uuid": "37107ac1-9105-46d9-82ac-6e131426042d"}, "dist": {"src": "hda", "id": "5f152e32378984b0", "uuid": "51941ab8-df73-48b7-abe4-c992d77ffadc"}, "summary": {"src": "hda", "id": "42d0ba1a298b52a2", "uuid": "f8ba46e8-123f-427b-a8ec-d99865c803ca"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > unifrac.weighted(tree=tree.dat,group=group.dat,groups=A-B-C,iters=1000, \rrandom=false,distance=lt,root=false,processors=1)\n\nUsing 1 processors.\nTree#\tGroups\tWScore\t\n1\tA-B\t0.420804\n1\tA-C\t0.561036\n1\tB-C\t0.614747\nIt took 0 secs to run unifrac.weighted.\n\nOutput File Names: \ntree.datwsummary\ntree.dat1.weighted.phylip.dist\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:55:14.153672", "stderr": "", "model_class": "Job", "params": {"count": "null", "distance": "\"lt\"", "name": "null", "iters": "\"1000\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "random": "\"false\"", "dbkey": "\"?\"", "savelog": "\"true\"", "groups": "[\"A\", \"B\", \"C\"]", "subsampling": "{\"__current_case__\": 1, \"use\": \"no\"}", "root": "\"false\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > unifrac.weighted(tree=tree.dat,group=group.dat,groups=A-B-C,iters=1000, \rrandom=false,distance=lt,root=false,processors=1)\n\nUsing 1 processors.\nTree#\tGroups\tWScore\t\n1\tA-B\t0.420804\n1\tA-C\t0.561036\n1\tB-C\t0.614747\nIt took 0 secs to run unifrac.weighted.\n\nOutput File Names: \ntree.datwsummary\ntree.dat1.weighted.phylip.dist\n\n\nmothur > quit\n", "job_messages": [], "id": "76bb20fbcc1bd35b", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unifrac_weighted/mothur_unifrac_weighted/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unifrac_weighted/mothur_unifrac_weighted/1.39.5.0", "time_seconds": 119.2661521434784, "inputs": {"tree": {"src": "hda", "id": "57fc7ce430151fde"}, "random": true, "group": {"src": "hda", "id": "de6dc38c81a4ce06"}, "groups": ["A", "B", "C"], "savelog": true}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unifrac_weighted/mothur_unifrac_weighted/1.39.5.0", "update_time": "2019-06-25T22:56:16.166136", "inputs": {"group": {"src": "hda", "id": "de6dc38c81a4ce06", "uuid": "6b904d08-f76a-4a1b-b1a4-efc5391f913f"}, "tree": {"src": "hda", "id": "57fc7ce430151fde", "uuid": "0464cf64-ea53-4493-bc8d-948f336cdd63"}}, "outputs": {"dist": {"src": "hda", "id": "b0833bf5a546fc13", "uuid": "68dbb683-159c-47cf-8e08-eee14cce8760"}, "logfile": {"src": "hda", "id": "a807069adce7d228", "uuid": "926a1875-b700-4d32-96fd-aee0e3363155"}, "weighted": {"src": "hda", "id": "80e87c996e7ccbc5", "uuid": "68940b07-a341-47a6-ae5f-00fe05cc7230"}, "summary": {"src": "hda", "id": "f3f50d1918ef5683", "uuid": "31d5c7ad-aaec-41bf-b5a3-f4086a2851a4"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > unifrac.weighted(tree=tree.dat,group=group.dat,groups=A-B-C,iters=1000, \rrandom=true,distance=lt,root=false,processors=1)\n\nUsing 1 processors.\nTree#\tGroups\tWScore\tWSig\n1\tA-B\t0.420804\t<0.001\n1\tA-C\t0.561036\t<0.001\n1\tB-C\t0.614747\t<0.001\nIt took 7 secs to run unifrac.weighted.\n\nOutput File Names: \ntree.datwsummary\ntree.dat1.weighted\ntree.dat1.weighted.phylip.dist\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:55:27.347720", "stderr": "", "model_class": "Job", "params": {"count": "null", "distance": "\"lt\"", "name": "null", "iters": "\"1000\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "random": "\"true\"", "dbkey": "\"?\"", "savelog": "\"true\"", "groups": "[\"A\", \"B\", \"C\"]", "subsampling": "{\"__current_case__\": 1, \"use\": \"no\"}", "root": "\"false\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > unifrac.weighted(tree=tree.dat,group=group.dat,groups=A-B-C,iters=1000, \rrandom=true,distance=lt,root=false,processors=1)\n\nUsing 1 processors.\nTree#\tGroups\tWScore\tWSig\n1\tA-B\t0.420804\t<0.001\n1\tA-C\t0.561036\t<0.001\n1\tB-C\t0.614747\t<0.001\nIt took 7 secs to run unifrac.weighted.\n\nOutput File Names: \ntree.datwsummary\ntree.dat1.weighted\ntree.dat1.weighted.phylip.dist\n\n\nmothur > quit\n", "job_messages": [], "id": "783e348488d4bf32", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unifrac_weighted/mothur_unifrac_weighted/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unifrac_weighted/mothur_unifrac_weighted/1.39.5.0", "time_seconds": 111.81833696365356, "inputs": {"group": {"src": "hda", "id": "de6dc38c81a4ce06"}, "savelog": true, "groups": ["A", "B"], "tree": {"src": "hda", "id": "57fc7ce430151fde"}, "distance": "square"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unifrac_weighted/mothur_unifrac_weighted/1.39.5.0", "update_time": "2019-06-25T22:56:21.629856", "inputs": {"group": {"src": "hda", "id": "de6dc38c81a4ce06", "uuid": "6b904d08-f76a-4a1b-b1a4-efc5391f913f"}, "tree": {"src": "hda", "id": "57fc7ce430151fde", "uuid": "0464cf64-ea53-4493-bc8d-948f336cdd63"}}, "outputs": {"logfile": {"src": "hda", "id": "9859d9720522e327", "uuid": "0bfdcde6-09d1-45a5-a5a7-c768209fde26"}, "dist": {"src": "hda", "id": "e7cb8c94263d70e5", "uuid": "45426ad6-e028-4eb0-8b63-a76b05e0ea83"}, "summary": {"src": "hda", "id": "93a085087beba742", "uuid": "66529ed3-82ab-4886-9793-abd813fc3cf9"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > unifrac.weighted(tree=tree.dat,group=group.dat,groups=A-B,iters=1000,ra \rndom=false,distance=square,root=false,processors=1)\n\nUsing 1 processors.\nTree#\tGroups\tWScore\t\n1\tA-B\t0.420804\nIt took 0 secs to run unifrac.weighted.\n\nOutput File Names: \ntree.datwsummary\ntree.dat1.weighted.phylip.dist\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:55:35.116383", "stderr": "", "model_class": "Job", "params": {"count": "null", "distance": "\"square\"", "name": "null", "iters": "\"1000\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "random": "\"false\"", "dbkey": "\"?\"", "savelog": "\"true\"", "groups": "[\"A\", \"B\"]", "subsampling": "{\"__current_case__\": 1, \"use\": \"no\"}", "root": "\"false\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > unifrac.weighted(tree=tree.dat,group=group.dat,groups=A-B,iters=1000,ra \rndom=false,distance=square,root=false,processors=1)\n\nUsing 1 processors.\nTree#\tGroups\tWScore\t\n1\tA-B\t0.420804\nIt took 0 secs to run unifrac.weighted.\n\nOutput File Names: \ntree.datwsummary\ntree.dat1.weighted.phylip.dist\n\n\nmothur > quit\n", "job_messages": [], "id": "ed971e1d756b8ce0", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unifrac_weighted/mothur_unifrac_weighted/1.39.5.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unifrac_weighted/mothur_unifrac_weighted/1.39.5.0", "time_seconds": 175.88180589675903, "inputs": {"distance": "column", "group": {"src": "hda", "id": "de6dc38c81a4ce06"}, "tree": {"src": "hda", "id": "57fc7ce430151fde"}, "subsampling|subsample": "10", "savelog": true, "groups": ["A", "B", "C"], "subsampling|consensus": true, "subsampling|use": "yes"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unifrac_weighted/mothur_unifrac_weighted/1.39.5.0", "update_time": "2019-06-25T22:56:32.344658", "inputs": {"group": {"src": "hda", "id": "de6dc38c81a4ce06", "uuid": "6b904d08-f76a-4a1b-b1a4-efc5391f913f"}, "tree": {"src": "hda", "id": "57fc7ce430151fde", "uuid": "0464cf64-ea53-4493-bc8d-948f336cdd63"}}, "outputs": {"dist": {"src": "hda", "id": "67b0dd3c8cae336e", "uuid": "fac54552-ee29-4a5b-a64b-37de1d72c550"}, "cons_tree": {"src": "hda", "id": "bdea1949c37e13e5", "uuid": "2cd94051-b0cc-4b6e-8ef8-6db6e97b72e5"}, "summary": {"src": "hda", "id": "c3cf13e88c529716", "uuid": "61eb8be7-ccae-45c1-84de-599220102f3e"}, "all_tree": {"src": "hda", "id": "ff8fec2bce6fe8d9", "uuid": "9020a153-0876-4326-bd18-887df294d7fd"}, "ave_dist": {"src": "hda", "id": "14b354987c7e4b94", "uuid": "74209b7b-493f-4ddc-93b5-4316e87eadd1"}, "std_dist": {"src": "hda", "id": "1958a5aabe9b1183", "uuid": "d746ff8f-0d8d-4619-ac70-4926494dd6c1"}, "logfile": {"src": "hda", "id": "88c416542ff11688", "uuid": "bcb80c1c-571b-4b3e-aa41-35aa77828dd2"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > unifrac.weighted(tree=tree.dat,group=group.dat,groups=A-B-C,iters=1000, \rsubsample=10,consensus=true,distance=column,root=false,processors=1)\n\nUsing 1 processors.\n100\n200\n300\n400\n500\n600\n700\n800\n900\n1000\nTree#\tGroups\tWScore\t\n1\tA-B\t0.420804\n1\tA-C\t0.561036\n1\tB-C\t0.614747\nIt took 2 secs to run unifrac.weighted.\n\nOutput File Names: \ntree.datwsummary\ntree.dat1.weighted.ave.dist\ntree.dat1.weighted.std.dist\ntree.1.weighted.all.tre\ntree.1.weighted.cons.tre\ntree.dat1.weighted.column.dist\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:56:00.148799", "stderr": "", "model_class": "Job", "params": {"count": "null", "distance": "\"column\"", "name": "null", "iters": "\"1000\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "random": "\"false\"", "dbkey": "\"?\"", "savelog": "\"true\"", "groups": "[\"A\", \"B\", \"C\"]", "subsampling": "{\"__current_case__\": 0, \"consensus\": \"true\", \"subsample\": \"10\", \"use\": \"yes\"}", "root": "\"false\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\u001b[?1034h\nmothur > unifrac.weighted(tree=tree.dat,group=group.dat,groups=A-B-C,iters=1000, \rsubsample=10,consensus=true,distance=column,root=false,processors=1)\n\nUsing 1 processors.\n100\n200\n300\n400\n500\n600\n700\n800\n900\n1000\nTree#\tGroups\tWScore\t\n1\tA-B\t0.420804\n1\tA-C\t0.561036\n1\tB-C\t0.614747\nIt took 2 secs to run unifrac.weighted.\n\nOutput File Names: \ntree.datwsummary\ntree.dat1.weighted.ave.dist\ntree.dat1.weighted.std.dist\ntree.1.weighted.all.tre\ntree.1.weighted.cons.tre\ntree.dat1.weighted.column.dist\n\n\nmothur > quit\n", "job_messages": [], "id": "25090004b0af3124", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unifrac_weighted/mothur_unifrac_weighted/1.39.5.0-3", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unique_seqs/mothur_unique_seqs/1.39.5.0", "time_seconds": 93.91927909851074, "inputs": {"fasta": {"src": "hda", "id": "4adead3b0b850452"}, "savelog": true, "names": {"src": "hda", "id": "8fad1f53d918804d"}, "format": "name"}, "tool_version": "1.39.5.0", "output_problems": ["Dataset metadata verification for [file_ext] failed, expected [fasta] but found [data]. Dataset API value was [{u'accessible': True, u'type_id': u'dataset-1747071fc5d0fe73', u'file_name': u'/mnt/galaxy/files/000/926/dataset_926500.dat', u'resubmitted': False, u'create_time': u'2019-06-26T02:28:33.706697', u'creating_job': u'2d9d8954168ca73e', u'file_size': 66311, u'dataset_id': u'246b8c271cfb9aa9', u'id': u'1747071fc5d0fe73', u'misc_info': u'\\x1b[H\\x1b[2J\\n\\n\\n\\n\\n\\nmothur v.1.39.5\\nLast updated: 3/20/2017\\n\\nby\\nPatrick D. Schloss\\n\\nDepartment of Microbiology & Immunology\\nUniversity of Michigan\\nhttp://www.mothur.org\\n\\nWhen using, please cite:\\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-i', u'hda_ldda': u'hda', u'download_url': u'/api/histories/f840675b8d7f5485/contents/1747071fc5d0fe73/display', u'state': u'ok', u'display_types': [], u'display_apps': [], u'type': u'file', u'misc_blurb': u'data', u'peek': None, u'update_time': u'2019-06-26T02:29:17.667479', u'data_type': u'galaxy.datatypes.data.Data', u'tags': [], u'deleted': False, u'history_id': u'f840675b8d7f5485', u'meta_files': [], u'genome_build': u'?', u'hid': 1754, u'visualizations': [], u'file_ext': u'data', u'annotation': None, u'metadata_dbkey': u'?', u'history_content_type': u'dataset', u'name': u'Unique.seqs on data 1742 and data 1747: fasta', u'extension': u'data', u'visible': True, u'url': u'/api/histories/f840675b8d7f5485/contents/1747071fc5d0fe73', u'uuid': u'e6ff6cca-2295-4a6f-9add-9d7a0fd45327', u'model_class': u'HistoryDatasetAssociation', u'rerunnable': True, u'purged': False, u'api_type': u'file'}]."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unique_seqs/mothur_unique_seqs/1.39.5.0", "update_time": "2019-06-26T02:29:18.176913", "inputs": {"fasta": {"src": "hda", "id": "4adead3b0b850452", "uuid": "c518f933-6af9-4ac8-849c-9fedfec1d407"}, "names": {"src": "hda", "id": "8fad1f53d918804d", "uuid": "dc85c86b-de7c-4592-afcd-f59bcd3ce666"}}, "outputs": {"out_names": {"src": "hda", "id": "92d9f75c071f7011", "uuid": "39c361c2-5b12-4938-907e-8f32b740e16d"}, "logfile": {"src": "hda", "id": "883738bac89185ea", "uuid": "957e477e-4b63-4053-bed8-757b86812527"}, "out_fasta": {"src": "hda", "id": "1747071fc5d0fe73", "uuid": "e6ff6cca-2295-4a6f-9add-9d7a0fd45327"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > unique.seqs(name=names.dat,fasta=fasta.dat,format=name)\n98\t96\n\nOutput File Names: \nfasta.names\nfasta.unique.dat\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:28:34.303636", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "dbkey": "\"?\"", "format": "\"name\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > unique.seqs(name=names.dat,fasta=fasta.dat,format=name)\n98\t96\n\nOutput File Names: \nfasta.names\nfasta.unique.dat\n\n\nmothur > quit\n", "job_messages": [], "id": "2d9d8954168ca73e", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unique_seqs/mothur_unique_seqs/1.39.5.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unique_seqs/mothur_unique_seqs/1.39.5.0", "time_seconds": 95.98312497138977, "inputs": {"fasta": {"src": "hda", "id": "7b141905f79540b2"}, "savelog": true, "names": {"src": "hda", "id": "d9c3dcac38d30bb6"}}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unique_seqs/mothur_unique_seqs/1.39.5.0", "update_time": "2019-06-26T02:29:18.166031", "inputs": {"fasta": {"src": "hda", "id": "7b141905f79540b2", "uuid": "e47965d5-1068-4e5d-a817-5d7a2b68ae20"}, "names": {"src": "hda", "id": "d9c3dcac38d30bb6", "uuid": "7cf81f89-829c-4cd0-b950-06b338e805dd"}}, "outputs": {"out_count": {"src": "hda", "id": "0a036023ceeb3de7", "uuid": "18d94612-b13d-4970-a80c-8b90c6b04491"}, "logfile": {"src": "hda", "id": "9cb1813a5a11305b", "uuid": "d0c2dd44-e0e7-45da-9d8f-777f7b90b2ed"}, "out_fasta": {"src": "hda", "id": "bcb4d5aefb8f42f2", "uuid": "815cbf50-8eb7-4221-9464-9e6b480b4d49"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > unique.seqs(count=names.dat,fasta=fasta.dat,format=count)\n96\t96\n\nOutput File Names: \nfasta.count_table\nfasta.unique.dat\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:28:32.930894", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "dbkey": "\"?\"", "format": "\"count\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > unique.seqs(count=names.dat,fasta=fasta.dat,format=count)\n96\t96\n\nOutput File Names: \nfasta.count_table\nfasta.unique.dat\n\n\nmothur > quit\n", "job_messages": [], "id": "c5398a44bd633dd7", "job_stdout": null}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unique_seqs/mothur_unique_seqs/1.39.5.0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unique_seqs/mothur_unique_seqs/1.39.5.0", "time_seconds": 147.73980498313904, "inputs": {"fasta": {"src": "hda", "id": "4adead3b0b850452"}, "savelog": true, "format": "name"}, "tool_version": "1.39.5.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unique_seqs/mothur_unique_seqs/1.39.5.0", "update_time": "2019-06-26T02:30:37.296123", "inputs": {"fasta": {"src": "hda", "id": "4adead3b0b850452", "uuid": "c518f933-6af9-4ac8-849c-9fedfec1d407"}}, "outputs": {"out_names": {"src": "hda", "id": "ebe69cd29a408d52", "uuid": "d55165a1-43a0-443c-9143-0df8fe61a8a2"}, "logfile": {"src": "hda", "id": "33d1f95be127b250", "uuid": "718c3b42-0c72-40c0-b0bc-ba4ddce31ce3"}, "out_fasta": {"src": "hda", "id": "3aebfe5c89fc0239", "uuid": "9dea8be1-aed0-4793-8558-56d57e6a23e6"}}, "history_id": "f840675b8d7f5485", "stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > unique.seqs(fasta=fasta.dat,format=name)\n98\t96\n\nOutput File Names: \nfasta.names\nfasta.unique.dat\n\n\nmothur > quit\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:29:08.810052", "stderr": "", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "savelog": "\"true\"", "names": "null", "dbkey": "\"?\"", "format": "\"name\""}, "tool_stdout": "\u001b[H\u001b[2J\n\n\n\n\n\nmothur v.1.39.5\nLast updated: 3/20/2017\n\nby\nPatrick D. Schloss\n\nDepartment of Microbiology & Immunology\nUniversity of Michigan\nhttp://www.mothur.org\n\nWhen using, please cite:\nSchloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.\n\nDistributed under the GNU General Public License\n\nType 'help()' for information on the commands that are available\n\nFor questions and analysis support, please visit our forum at https://www.mothur.org/forum\n\nType 'quit()' to exit program\n\n\n\nmothur > unique.seqs(fasta=fasta.dat,format=name)\n98\t96\n\nOutput File Names: \nfasta.names\nfasta.unique.dat\n\n\nmothur > quit\n", "job_messages": [], "id": "0c74035225f6e701", "job_stdout": null}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/mothur_unique_seqs/mothur_unique_seqs/1.39.5.0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.0.2+galaxy0", "time_seconds": 128.21600103378296, "inputs": {"in|inputs_1|labels": "", "assembly|ref|r": {"src": "hda", "id": "7fd1874094092b80"}, "k_mer|k_mer_stats": "--k-mer-stats", "al|ambiguity_usage": "one", "al|ambiguity_score": "0.99", "in|inputs_0|input": {"src": "hda", "id": "8d49f1a721b6ef6e"}, "contig_thresholds": "0,1000", "al|fragmented_max_indent": "50", "al|fragmented": true, "assembly|type": "genome", "assembly|ref|use_ref": "true", "k_mer|k_mer_size": "101", "skip_unaligned_mis_contigs": true, "min_contig": "500", "genes|rna_finding": true, "scaffold_gap_max_size": "1000", "in|inputs_0|labels": "contig1", "al|use_all_alignments": true, "assembly|orga_type": "", "al|min_identity": "95.0", "unaligned_part_size": "500", "extensive_mis_size": "1000", "genes|conserved_genes_finding": true, "in|inputs_1|input": {"src": "hda", "id": "b68ef5d3dc7493d5"}, "al|upper_bound_assembly": true, "split_scaffolds": false, "in|custom": "true", "circos": true, "strict_NA": true, "assembly|ref|features": {"src": "hda", "id": "4079ab10269ad3f8"}, "large": true, "al|min_alignment": "65", "al|upper_bound_min_con": "2"}, "tool_version": "5.0.2+galaxy0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.0.2+galaxy0", "update_time": "2019-06-25T23:51:44.717537", "inputs": {"assembly|r": {"src": "hda", "id": "7fd1874094092b80", "uuid": "70d787cb-0212-47ce-a9ca-8ad78189350a"}, "in|inputs_1|input": {"src": "hda", "id": "b68ef5d3dc7493d5", "uuid": "a0da35d3-3266-40a1-81d5-db2e40bf5138"}, "assembly|features": {"src": "hda", "id": "4079ab10269ad3f8", "uuid": "5384e4a5-03a6-4b90-9652-029fd7fffd9e"}, "in|inputs_0|input": {"src": "hda", "id": "8d49f1a721b6ef6e", "uuid": "eb8b97df-f1fa-4877-8c15-8a0f700e0569"}}, "outputs": {"log": {"src": "hda", "id": "e137b1d769e7588e", "uuid": "8f9ba8a2-478f-43c4-8af1-5c75c895cec0"}, "kmers": {"src": "hda", "id": "1bcd8440576844c1", "uuid": "bb6d5c03-5747-4b84-82ba-3a1833d107e7"}, "report_pdf": {"src": "hda", "id": "c730e6f330d31575", "uuid": "3584cac2-bbbb-49d6-a146-773ce66f60a2"}, "quast_tabular": {"src": "hda", "id": "7bd42eac8d68f6c0", "uuid": "d533d525-5f76-4115-951b-f7c182f369b3"}, "report_html": {"src": "hda", "id": "4c4d1b87f0e030b0", "uuid": "177116f9-a584-42cd-abf7-03841ced9a0a"}, "mis_ass": {"src": "hda", "id": "7a7098541e3ab7d6", "uuid": "0a387169-903e-40e1-92f3-f879f4a9fd6a"}, "unalign": {"src": "hda", "id": "08943270a692378d", "uuid": "27fbef24-eafa-4f5b-9183-87968fc011f8"}}, "history_id": "f840675b8d7f5485", "stdout": "/mnt/galaxy/tool_dependencies/_conda/envs/__quast@5.0.2/bin/quast -o outputdir -r /mnt/galaxy/files/000/925/dataset_925718.dat --features /mnt/galaxy/files/000/925/dataset_925720.dat --min-contig 500 --threads 1 --labels contig1,contigs2_fna --large --k-mer-stats --k-mer-size 101 --circos --rna-finding --conserved-genes-finding --use-all-alignments --min-alignment 65 --min-identity 95.0 --ambiguity-usage one --fragmented --contig-thresholds 0,1000 --strict-NA --extensive-mis-size 1000 --scaffold-gap-max-size 1000 --unaligned-part-size 500 /mnt/galaxy/files/000/925/dataset_925713.dat /mnt/galaxy/files/000/925/dataset_925719.dat\n\nVersion: 5.0.2\n\nSystem information:\n  OS: Linux-4.15.0-48-generic-x86_64-with-debian-buster-sid (linux_64)\n  Python version: 3.5.5\n  CPUs number: 16\n\nStarted: 2019-06-26 09:50:27\n\nLogging to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/quast.log\n\nCWD: /mnt/galaxy/tmp/job_working_directory/000/561/561917/working\nMain parameters: \n  MODE: large, threads: 1, eukaryotic: true, minimum contig length: 500, minimum alignment length: 65, \\\n  ambiguity: one, use all alignments: true, threshold for extensive misassembly size: 1000\n\nReference:\n  /mnt/galaxy/files/000/925/dataset_925718.dat ==> dataset_925718\n\nContigs:\n  Pre-processing...\n  1  /mnt/galaxy/files/000/925/dataset_925713.dat ==> contig1\n  2  /mnt/galaxy/files/000/925/dataset_925719.dat ==> contigs2_fna\n\n2019-06-26 09:50:33\nRunning Basic statistics processor...\n  Reference genome:\n    dataset_925718.dat, length = 6650, num fragments = 1, GC % = 52.00\n  Contig files: \n    1  contig1\n    2  contigs2_fna\n  Calculating N50 and L50...\n    1  contig1, N50 = 3980, L50 = 1, Total length = 6710, GC % = 51.28, # N's per 100 kbp =  0.00\n    2  contigs2_fna, N50 = 6650, L50 = 1, Total length = 6650, GC % = 52.00, # N's per 100 kbp =  0.00\n  Drawing Nx plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/basic_stats/Nx_plot.pdf\n  Drawing NGx plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/basic_stats/NGx_plot.pdf\n  Drawing cumulative plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/basic_stats/cumulative_plot.pdf\n  Drawing GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/basic_stats/GC_content_plot.pdf\n  Drawing contig1 GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/basic_stats/contig1_GC_content_plot.pdf\n  Drawing contigs2_fna GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/basic_stats/contigs2_fna_GC_content_plot.pdf\nDone.\n\n2019-06-26 09:50:36\nRunning analysis based on unique 101-mers...\n  Running KMC on reference...\n  Analyzing assemblies completeness...\n    1  contig1\n    2  contigs2_fna\n  Analyzing assemblies correctness...\n    Downsampling k-mers...\n    1  contig1\n    2  contigs2_fna\n  Creating total report...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/k_mer_stats/kmers_report.txt, kmers_report.tsv, and kmers_report.tex\nDone.\n\n2019-06-26 09:50:52\nRunning Contig analyzer...\n  1  contig1\n  1  Logging to files /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/contigs_report_contig1.stdout and contigs_report_contig1.stderr...\n  1  Aligning contigs to the reference\n  1  Analysis is finished.\n  2  contigs2_fna\n  2  Logging to files /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/contigs_report_contigs2_fna.stdout and contigs_report_contigs2_fna.stderr...\n  2  Aligning contigs to the reference\n  2  Analysis is finished.\n  Creating total report...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/misassemblies_report.txt, misassemblies_report.tsv, and misassemblies_report.tex\n  Transposed version of total report...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/transposed_report_misassemblies.txt, transposed_report_misassemblies.tsv, and transposed_report_misassemblies.tex\n  Creating total report...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/unaligned_report.txt, unaligned_report.tsv, and unaligned_report.tex\n  Drawing misassemblies by types plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/misassemblies_plot.pdf\n  Drawing misassemblies FRCurve plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/misassemblies_frcurve_plot.pdf\nDone.\n\n2019-06-26 09:50:53\nRunning NA-NGA calculation...\n  1  contig1, Largest alignment = 2030, NA50 = 1610, NGA50 = 1610, LA50 = 2, LGA50 = 2\n  2  contigs2_fna, Largest alignment = 6650, NA50 = 6650, NGA50 = 6650, LA50 = 1, LGA50 = 1\n  Drawing cumulative plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/aligned_stats/cumulative_plot.pdf\n  Drawing NAx plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/aligned_stats/NAx_plot.pdf\n  Drawing NGAx plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/aligned_stats/NGAx_plot.pdf\nDone.\n\n2019-06-26 09:50:54\nRunning Genome analyzer...\n  NOTICE: No file with operons were provided. Use the -O option if you want to specify it.\n  Loaded 14 genomic features of type \"ANY\"\n  NOTICE: Reference name in file with genomic features of type \"ANY\" (NC_000913.3) does not match the name in the reference file (NC_000913.3_1_6650). QUAST will ignore this issue and count as if they match.\n  1  contig1\n  1  Analysis is finished.\n  2  contigs2_fna\n  2  Analysis is finished.\n  Drawing genomic features cumulative plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/genome_stats/features_cumulative_plot.pdf\n  Drawing genomic features FRCurve plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/genome_stats/features_frcurve_plot.pdf\n  Drawing # complete genomic features histogram...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/genome_stats/complete_features_histogram.pdf\n  Drawing Genome fraction, % histogram...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/genome_stats/genome_fraction_histogram.pdf\nDone.\n\nNOTICE: Genes are not predicted by default. Use --gene-finding or --glimmer option to enable it.\n\n2019-06-26 09:50:55\nRunning Barrnap...\nLogging to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/predicted_genes/barrnap.log...\n  1    Ribosomal RNA genes = 0\n  1    Predicted genes (GFF): /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/predicted_genes/contig1.rna.gff\n  2    Ribosomal RNA genes = 0\n  2    Predicted genes (GFF): /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/predicted_genes/contigs2_fna.rna.gff\nDone.\n\n2019-06-26 09:50:56\nRunning BUSCO...\nLogs and results will be saved under /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/busco_stats...\nDone.\n\n2019-06-26 09:51:12\nCreating large visual summaries...\nThis may take a while: press Ctrl-C to skip this step..\n  1 of 3: Creating Icarus viewers...\n  2 of 3: Creating Circos plot...\n  3 of 3: Creating PDF with all tables and plots...\nDone\n\n2019-06-26 09:51:36\nRESULTS:\n  Text versions of total report are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/report.txt, report.tsv, and report.tex\n  Text versions of transposed total report are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/transposed_report.txt, transposed_report.tsv, and transposed_report.tex\n  HTML version (interactive tables and plots) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/report.html\n  PDF version (tables and plots) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/report.pdf\n  Circos plot is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/circos/circos.png (legend is in legend.txt, configuration file is in circos.conf)\n  Icarus (contig browser) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/icarus.html\n  Log is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/quast.log\n\nFinished: 2019-06-26 09:51:36\nElapsed time: 0:01:08.422860\nNOTICEs: 3; WARNINGs: 0; non-fatal ERRORs: 0\n\nThank you for using QUAST!\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:50:16.999846", "stderr": "", "model_class": "Job", "params": {"in": "{\"__current_case__\": 0, \"custom\": \"true\", \"inputs\": [{\"__index__\": 0, \"input\": {\"values\": [{\"id\": 1068866, \"src\": \"hda\"}]}, \"labels\": \"contig1\"}, {\"__index__\": 1, \"input\": {\"values\": [{\"id\": 1068872, \"src\": \"hda\"}]}, \"labels\": \"\"}]}", "scaffold_gap_max_size": "\"1000\"", "split_scaffolds": "\"false\"", "assembly": "{\"__current_case__\": 0, \"orga_type\": \"\", \"ref\": {\"__current_case__\": 0, \"features\": {\"values\": [{\"id\": 1068873, \"src\": \"hda\"}]}, \"operons\": null, \"r\": {\"values\": [{\"id\": 1068871, \"src\": \"hda\"}]}, \"use_ref\": \"true\"}, \"type\": \"genome\"}", "circos": "\"true\"", "contig_thresholds": "\"0,1000\"", "strict_NA": "\"true\"", "genes": "{\"conserved_genes_finding\": \"true\", \"gene_finding\": {\"__current_case__\": 0, \"tool\": \"none\"}, \"rna_finding\": \"true\"}", "unaligned_part_size": "\"500\"", "al": "{\"ambiguity_score\": \"0.99\", \"ambiguity_usage\": \"one\", \"fragmented\": \"true\", \"fragmented_max_indent\": \"50\", \"min_alignment\": \"65\", \"min_identity\": \"95.0\", \"upper_bound_assembly\": \"true\", \"upper_bound_min_con\": \"2\", \"use_all_alignments\": \"true\"}", "dbkey": "\"?\"", "extensive_mis_size": "\"1000\"", "large": "\"true\"", "k_mer": "{\"__current_case__\": 0, \"k_mer_size\": \"101\", \"k_mer_stats\": \"--k-mer-stats\"}", "skip_unaligned_mis_contigs": "\"true\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "min_contig": "\"500\""}, "tool_stdout": "/mnt/galaxy/tool_dependencies/_conda/envs/__quast@5.0.2/bin/quast -o outputdir -r /mnt/galaxy/files/000/925/dataset_925718.dat --features /mnt/galaxy/files/000/925/dataset_925720.dat --min-contig 500 --threads 1 --labels contig1,contigs2_fna --large --k-mer-stats --k-mer-size 101 --circos --rna-finding --conserved-genes-finding --use-all-alignments --min-alignment 65 --min-identity 95.0 --ambiguity-usage one --fragmented --contig-thresholds 0,1000 --strict-NA --extensive-mis-size 1000 --scaffold-gap-max-size 1000 --unaligned-part-size 500 /mnt/galaxy/files/000/925/dataset_925713.dat /mnt/galaxy/files/000/925/dataset_925719.dat\n\nVersion: 5.0.2\n\nSystem information:\n  OS: Linux-4.15.0-48-generic-x86_64-with-debian-buster-sid (linux_64)\n  Python version: 3.5.5\n  CPUs number: 16\n\nStarted: 2019-06-26 09:50:27\n\nLogging to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/quast.log\n\nCWD: /mnt/galaxy/tmp/job_working_directory/000/561/561917/working\nMain parameters: \n  MODE: large, threads: 1, eukaryotic: true, minimum contig length: 500, minimum alignment length: 65, \\\n  ambiguity: one, use all alignments: true, threshold for extensive misassembly size: 1000\n\nReference:\n  /mnt/galaxy/files/000/925/dataset_925718.dat ==> dataset_925718\n\nContigs:\n  Pre-processing...\n  1  /mnt/galaxy/files/000/925/dataset_925713.dat ==> contig1\n  2  /mnt/galaxy/files/000/925/dataset_925719.dat ==> contigs2_fna\n\n2019-06-26 09:50:33\nRunning Basic statistics processor...\n  Reference genome:\n    dataset_925718.dat, length = 6650, num fragments = 1, GC % = 52.00\n  Contig files: \n    1  contig1\n    2  contigs2_fna\n  Calculating N50 and L50...\n    1  contig1, N50 = 3980, L50 = 1, Total length = 6710, GC % = 51.28, # N's per 100 kbp =  0.00\n    2  contigs2_fna, N50 = 6650, L50 = 1, Total length = 6650, GC % = 52.00, # N's per 100 kbp =  0.00\n  Drawing Nx plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/basic_stats/Nx_plot.pdf\n  Drawing NGx plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/basic_stats/NGx_plot.pdf\n  Drawing cumulative plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/basic_stats/cumulative_plot.pdf\n  Drawing GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/basic_stats/GC_content_plot.pdf\n  Drawing contig1 GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/basic_stats/contig1_GC_content_plot.pdf\n  Drawing contigs2_fna GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/basic_stats/contigs2_fna_GC_content_plot.pdf\nDone.\n\n2019-06-26 09:50:36\nRunning analysis based on unique 101-mers...\n  Running KMC on reference...\n  Analyzing assemblies completeness...\n    1  contig1\n    2  contigs2_fna\n  Analyzing assemblies correctness...\n    Downsampling k-mers...\n    1  contig1\n    2  contigs2_fna\n  Creating total report...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/k_mer_stats/kmers_report.txt, kmers_report.tsv, and kmers_report.tex\nDone.\n\n2019-06-26 09:50:52\nRunning Contig analyzer...\n  1  contig1\n  1  Logging to files /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/contigs_report_contig1.stdout and contigs_report_contig1.stderr...\n  1  Aligning contigs to the reference\n  1  Analysis is finished.\n  2  contigs2_fna\n  2  Logging to files /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/contigs_report_contigs2_fna.stdout and contigs_report_contigs2_fna.stderr...\n  2  Aligning contigs to the reference\n  2  Analysis is finished.\n  Creating total report...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/misassemblies_report.txt, misassemblies_report.tsv, and misassemblies_report.tex\n  Transposed version of total report...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/transposed_report_misassemblies.txt, transposed_report_misassemblies.tsv, and transposed_report_misassemblies.tex\n  Creating total report...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/unaligned_report.txt, unaligned_report.tsv, and unaligned_report.tex\n  Drawing misassemblies by types plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/misassemblies_plot.pdf\n  Drawing misassemblies FRCurve plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/contigs_reports/misassemblies_frcurve_plot.pdf\nDone.\n\n2019-06-26 09:50:53\nRunning NA-NGA calculation...\n  1  contig1, Largest alignment = 2030, NA50 = 1610, NGA50 = 1610, LA50 = 2, LGA50 = 2\n  2  contigs2_fna, Largest alignment = 6650, NA50 = 6650, NGA50 = 6650, LA50 = 1, LGA50 = 1\n  Drawing cumulative plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/aligned_stats/cumulative_plot.pdf\n  Drawing NAx plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/aligned_stats/NAx_plot.pdf\n  Drawing NGAx plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/aligned_stats/NGAx_plot.pdf\nDone.\n\n2019-06-26 09:50:54\nRunning Genome analyzer...\n  NOTICE: No file with operons were provided. Use the -O option if you want to specify it.\n  Loaded 14 genomic features of type \"ANY\"\n  NOTICE: Reference name in file with genomic features of type \"ANY\" (NC_000913.3) does not match the name in the reference file (NC_000913.3_1_6650). QUAST will ignore this issue and count as if they match.\n  1  contig1\n  1  Analysis is finished.\n  2  contigs2_fna\n  2  Analysis is finished.\n  Drawing genomic features cumulative plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/genome_stats/features_cumulative_plot.pdf\n  Drawing genomic features FRCurve plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/genome_stats/features_frcurve_plot.pdf\n  Drawing # complete genomic features histogram...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/genome_stats/complete_features_histogram.pdf\n  Drawing Genome fraction, % histogram...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/genome_stats/genome_fraction_histogram.pdf\nDone.\n\nNOTICE: Genes are not predicted by default. Use --gene-finding or --glimmer option to enable it.\n\n2019-06-26 09:50:55\nRunning Barrnap...\nLogging to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/predicted_genes/barrnap.log...\n  1    Ribosomal RNA genes = 0\n  1    Predicted genes (GFF): /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/predicted_genes/contig1.rna.gff\n  2    Ribosomal RNA genes = 0\n  2    Predicted genes (GFF): /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/predicted_genes/contigs2_fna.rna.gff\nDone.\n\n2019-06-26 09:50:56\nRunning BUSCO...\nLogs and results will be saved under /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/busco_stats...\nDone.\n\n2019-06-26 09:51:12\nCreating large visual summaries...\nThis may take a while: press Ctrl-C to skip this step..\n  1 of 3: Creating Icarus viewers...\n  2 of 3: Creating Circos plot...\n  3 of 3: Creating PDF with all tables and plots...\nDone\n\n2019-06-26 09:51:36\nRESULTS:\n  Text versions of total report are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/report.txt, report.tsv, and report.tex\n  Text versions of transposed total report are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/transposed_report.txt, transposed_report.tsv, and transposed_report.tex\n  HTML version (interactive tables and plots) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/report.html\n  PDF version (tables and plots) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/report.pdf\n  Circos plot is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/circos/circos.png (legend is in legend.txt, configuration file is in circos.conf)\n  Icarus (contig browser) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/icarus.html\n  Log is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561917/working/outputdir/quast.log\n\nFinished: 2019-06-26 09:51:36\nElapsed time: 0:01:08.422860\nNOTICEs: 3; WARNINGs: 0; non-fatal ERRORs: 0\n\nThank you for using QUAST!\n", "job_messages": [], "id": "f0a90e06696104fd", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.0.2+galaxy0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.0.2+galaxy0", "time_seconds": 49.1447389125824, "inputs": {"genes|rna_finding": false, "scaffold_gap_max_size": "1000", "al|use_all_alignments": false, "assembly|orga_type": "--eukaryote", "k_mer|k_mer_stats": "", "al|min_identity": "95.0", "unaligned_part_size": "500", "extensive_mis_size": "1000", "genes|conserved_genes_finding": false, "al|ambiguity_usage": "one", "al|ambiguity_score": "0.99", "al|upper_bound_assembly": false, "split_scaffolds": false, "in|custom": "false", "circos": false, "contig_thresholds": "0,1000, 500", "al|min_alignment": "65", "genes|gene_finding|tool": "none", "al|fragmented_max_indent": "50", "al|fragmented": false, "assembly|type": "genome", "large": false, "strict_NA": false, "assembly|ref|use_ref": "false", "in|inputs": [{"src": "hda", "id": "8d49f1a721b6ef6e"}, {"src": "hda", "id": "b68ef5d3dc7493d5"}], "al|upper_bound_min_con": "2", "skip_unaligned_mis_contigs": false, "min_contig": "500"}, "tool_version": "5.0.2+galaxy0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.0.2+galaxy0", "update_time": "2019-06-25T23:50:47.355294", "inputs": {"inputs2": {"src": "hda", "id": "b68ef5d3dc7493d5", "uuid": "a0da35d3-3266-40a1-81d5-db2e40bf5138"}, "inputs": {"src": "hda", "id": "8d49f1a721b6ef6e", "uuid": "eb8b97df-f1fa-4877-8c15-8a0f700e0569"}, "inputs1": {"src": "hda", "id": "8d49f1a721b6ef6e", "uuid": "eb8b97df-f1fa-4877-8c15-8a0f700e0569"}}, "outputs": {"quast_tabular": {"src": "hda", "id": "a4b41cf4fb542d9b", "uuid": "a078770b-3903-436f-ad7d-3b8e237d57b0"}, "report_pdf": {"src": "hda", "id": "95e8e590ad6dbb5f", "uuid": "fad8a398-1299-449b-acb7-e4bf7ff77d3e"}, "report_html": {"src": "hda", "id": "02ca7b01eeae0e18", "uuid": "9168f328-7d39-442f-8a13-a09f74a04017"}, "log": {"src": "hda", "id": "8adaba6d0d68208c", "uuid": "1af905a1-4637-4e03-b815-066427c34b1f"}}, "history_id": "f840675b8d7f5485", "stdout": "/mnt/galaxy/tool_dependencies/_conda/envs/__quast@5.0.2/bin/quast -o outputdir --eukaryote --min-contig 500 --threads 1 --labels contigs1_fna,contigs2_fna --min-alignment 65 --min-identity 95.0 --ambiguity-usage one --contig-thresholds 0,1000,500 --extensive-mis-size 1000 --scaffold-gap-max-size 1000 --unaligned-part-size 500 --skip-unaligned-mis-contigs /mnt/galaxy/files/000/925/dataset_925713.dat /mnt/galaxy/files/000/925/dataset_925719.dat\n\nVersion: 5.0.2\n\nSystem information:\n  OS: Linux-4.15.0-48-generic-x86_64-with-debian-buster-sid (linux_64)\n  Python version: 3.5.5\n  CPUs number: 16\n\nStarted: 2019-06-26 09:50:29\n\nLogging to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/quast.log\n\nCWD: /mnt/galaxy/tmp/job_working_directory/000/561/561920/working\nMain parameters: \n  MODE: default, threads: 1, eukaryotic: true, minimum contig length: 500, minimum alignment length: 65, \\\n  ambiguity: one, threshold for extensive misassembly size: 1000\n\nContigs:\n  Pre-processing...\n  1  /mnt/galaxy/files/000/925/dataset_925713.dat ==> contigs1_fna\n  2  /mnt/galaxy/files/000/925/dataset_925719.dat ==> contigs2_fna\n\n2019-06-26 09:50:33\nRunning Basic statistics processor...\n  Contig files: \n    1  contigs1_fna\n    2  contigs2_fna\n  Calculating N50 and L50...\n    1  contigs1_fna, N50 = 3980, L50 = 1, Total length = 6710, GC % = 51.28, # N's per 100 kbp =  0.00\n    2  contigs2_fna, N50 = 6650, L50 = 1, Total length = 6650, GC % = 52.00, # N's per 100 kbp =  0.00\n  Drawing Nx plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/basic_stats/Nx_plot.pdf\n  Drawing cumulative plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/basic_stats/cumulative_plot.pdf\n  Drawing GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/basic_stats/GC_content_plot.pdf\n  Drawing contigs1_fna GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/basic_stats/contigs1_fna_GC_content_plot.pdf\n  Drawing contigs2_fna GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/basic_stats/contigs2_fna_GC_content_plot.pdf\nDone.\n\nNOTICE: Genes are not predicted by default. Use --gene-finding or --glimmer option to enable it.\n\n2019-06-26 09:50:36\nCreating large visual summaries...\nThis may take a while: press Ctrl-C to skip this step..\n  1 of 2: Creating Icarus viewers...\n  2 of 2: Creating PDF with all tables and plots...\nDone\n\n2019-06-26 09:50:38\nRESULTS:\n  Text versions of total report are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/report.txt, report.tsv, and report.tex\n  Text versions of transposed total report are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/transposed_report.txt, transposed_report.tsv, and transposed_report.tex\n  HTML version (interactive tables and plots) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/report.html\n  PDF version (tables and plots) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/report.pdf\n  Icarus (contig browser) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/icarus.html\n  Log is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/quast.log\n\nFinished: 2019-06-26 09:50:38\nElapsed time: 0:00:08.266007\nNOTICEs: 1; WARNINGs: 0; non-fatal ERRORs: 0\n\nThank you for using QUAST!\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:50:21.926556", "stderr": "", "model_class": "Job", "params": {"in": "{\"__current_case__\": 1, \"custom\": \"false\", \"inputs\": {\"values\": [{\"id\": 1068866, \"src\": \"hda\"}, {\"id\": 1068872, \"src\": \"hda\"}]}}", "scaffold_gap_max_size": "\"1000\"", "split_scaffolds": "\"false\"", "assembly": "{\"__current_case__\": 0, \"orga_type\": \"--eukaryote\", \"ref\": {\"__current_case__\": 1, \"est_ref_size\": \"\", \"use_ref\": \"false\"}, \"type\": \"genome\"}", "circos": "\"false\"", "contig_thresholds": "\"0,1000, 500\"", "strict_NA": "\"false\"", "genes": "{\"conserved_genes_finding\": \"false\", \"gene_finding\": {\"__current_case__\": 0, \"tool\": \"none\"}, \"rna_finding\": \"false\"}", "unaligned_part_size": "\"500\"", "al": "{\"ambiguity_score\": \"0.99\", \"ambiguity_usage\": \"one\", \"fragmented\": \"false\", \"fragmented_max_indent\": \"50\", \"min_alignment\": \"65\", \"min_identity\": \"95.0\", \"upper_bound_assembly\": \"false\", \"upper_bound_min_con\": \"2\", \"use_all_alignments\": \"false\"}", "dbkey": "\"?\"", "extensive_mis_size": "\"1000\"", "large": "\"false\"", "k_mer": "{\"__current_case__\": 1, \"k_mer_stats\": \"\"}", "skip_unaligned_mis_contigs": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "min_contig": "\"500\""}, "tool_stdout": "/mnt/galaxy/tool_dependencies/_conda/envs/__quast@5.0.2/bin/quast -o outputdir --eukaryote --min-contig 500 --threads 1 --labels contigs1_fna,contigs2_fna --min-alignment 65 --min-identity 95.0 --ambiguity-usage one --contig-thresholds 0,1000,500 --extensive-mis-size 1000 --scaffold-gap-max-size 1000 --unaligned-part-size 500 --skip-unaligned-mis-contigs /mnt/galaxy/files/000/925/dataset_925713.dat /mnt/galaxy/files/000/925/dataset_925719.dat\n\nVersion: 5.0.2\n\nSystem information:\n  OS: Linux-4.15.0-48-generic-x86_64-with-debian-buster-sid (linux_64)\n  Python version: 3.5.5\n  CPUs number: 16\n\nStarted: 2019-06-26 09:50:29\n\nLogging to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/quast.log\n\nCWD: /mnt/galaxy/tmp/job_working_directory/000/561/561920/working\nMain parameters: \n  MODE: default, threads: 1, eukaryotic: true, minimum contig length: 500, minimum alignment length: 65, \\\n  ambiguity: one, threshold for extensive misassembly size: 1000\n\nContigs:\n  Pre-processing...\n  1  /mnt/galaxy/files/000/925/dataset_925713.dat ==> contigs1_fna\n  2  /mnt/galaxy/files/000/925/dataset_925719.dat ==> contigs2_fna\n\n2019-06-26 09:50:33\nRunning Basic statistics processor...\n  Contig files: \n    1  contigs1_fna\n    2  contigs2_fna\n  Calculating N50 and L50...\n    1  contigs1_fna, N50 = 3980, L50 = 1, Total length = 6710, GC % = 51.28, # N's per 100 kbp =  0.00\n    2  contigs2_fna, N50 = 6650, L50 = 1, Total length = 6650, GC % = 52.00, # N's per 100 kbp =  0.00\n  Drawing Nx plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/basic_stats/Nx_plot.pdf\n  Drawing cumulative plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/basic_stats/cumulative_plot.pdf\n  Drawing GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/basic_stats/GC_content_plot.pdf\n  Drawing contigs1_fna GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/basic_stats/contigs1_fna_GC_content_plot.pdf\n  Drawing contigs2_fna GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/basic_stats/contigs2_fna_GC_content_plot.pdf\nDone.\n\nNOTICE: Genes are not predicted by default. Use --gene-finding or --glimmer option to enable it.\n\n2019-06-26 09:50:36\nCreating large visual summaries...\nThis may take a while: press Ctrl-C to skip this step..\n  1 of 2: Creating Icarus viewers...\n  2 of 2: Creating PDF with all tables and plots...\nDone\n\n2019-06-26 09:50:38\nRESULTS:\n  Text versions of total report are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/report.txt, report.tsv, and report.tex\n  Text versions of transposed total report are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/transposed_report.txt, transposed_report.tsv, and transposed_report.tex\n  HTML version (interactive tables and plots) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/report.html\n  PDF version (tables and plots) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/report.pdf\n  Icarus (contig browser) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/icarus.html\n  Log is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561920/working/outputdir/quast.log\n\nFinished: 2019-06-26 09:50:38\nElapsed time: 0:00:08.266007\nNOTICEs: 1; WARNINGs: 0; non-fatal ERRORs: 0\n\nThank you for using QUAST!\n", "job_messages": [], "id": "9cdc1d1e0dbc81ed", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.0.2+galaxy0-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.0.2+galaxy0", "time_seconds": 42.486900806427, "inputs": {"genes|rna_finding": false, "scaffold_gap_max_size": "1000", "al|use_all_alignments": false, "k_mer|k_mer_stats": "", "al|min_identity": "95.0", "unaligned_part_size": "500", "extensive_mis_size": "1000", "genes|conserved_genes_finding": false, "assembly|ref|origin": "none", "al|ambiguity_usage": "one", "al|ambiguity_score": "0.99", "al|upper_bound_assembly": false, "split_scaffolds": false, "in|custom": "false", "circos": false, "contig_thresholds": "0,1000, 500", "al|min_alignment": "65", "genes|gene_finding|tool": "--mgm", "al|fragmented_max_indent": "50", "al|fragmented": false, "assembly|type": "metagenome", "large": false, "strict_NA": false, "in|inputs": {"src": "hda", "id": "0014c76f638eb50a"}, "al|upper_bound_min_con": "2", "skip_unaligned_mis_contigs": false, "min_contig": "500"}, "tool_version": "5.0.2+galaxy0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.0.2+galaxy0", "update_time": "2019-06-25T23:51:00.522706", "inputs": {"inputs": {"src": "hda", "id": "0014c76f638eb50a", "uuid": "b262a84f-7d37-41c8-a792-e3a48b67ac07"}}, "outputs": {"quast_tabular": {"src": "hda", "id": "b6a71d65506bfe24", "uuid": "94dabe53-6237-48c8-8d55-2a11563acb51"}, "report_pdf": {"src": "hda", "id": "e126fc15e8803933", "uuid": "117e330f-bba6-41b1-9a5e-9e060b269a23"}, "report_html": {"src": "hda", "id": "356d92f0d7726d95", "uuid": "1b52ee91-6939-4b98-97bd-6f3c8b402b09"}, "log": {"src": "hda", "id": "6057683463daea2a", "uuid": "21ca7079-0ae4-445a-bcc8-bec7a056a377"}}, "history_id": "f840675b8d7f5485", "stdout": "/mnt/galaxy/tool_dependencies/_conda/envs/__quast@5.0.2/opt/quast-5.0.2/metaquast.py -o outputdir --min-contig 500 --threads 1 --labels contigs3_fasta --mgm --min-alignment 65 --min-identity 95.0 --ambiguity-usage one --contig-thresholds 0,1000,500 --extensive-mis-size 1000 --scaffold-gap-max-size 1000 --unaligned-part-size 500 --skip-unaligned-mis-contigs /mnt/galaxy/files/000/925/dataset_925731.dat\n\nVersion: 5.0.2\n\nSystem information:\n  OS: Linux-4.15.0-48-generic-x86_64-with-debian-buster-sid (linux_64)\n  Python version: 3.5.5\n  CPUs number: 16\n\nStarted: 2019-06-26 09:50:39\n\nLogging to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/metaquast.log\n\nContigs:\n  Pre-processing...\n  /mnt/galaxy/files/000/925/dataset_925731.dat ==> contigs3_fasta\n\nNo references are provided, starting to search for reference genomes in SILVA 16S rRNA database and to download them from NCBI...\n\n2019-06-26 09:50:40\nRunning BlastN..\n  processing contigs3_fasta\n  BLAST results for contigs3_fasta are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/quast_downloaded_references/blast.res_contigs3_fasta...\n\nReference genomes are not found.\n\nNOTICE: No references are provided, starting regular QUAST with MetaGeneMark gene finder\n/mnt/galaxy/tool_dependencies/_conda/envs/__quast@5.0.2/opt/quast-5.0.2/quast.py --min-contig 500 --threads 1 --mgm --min-alignment 65 --min-identity 95.0 --ambiguity-usage one --contig-thresholds 0,1000,500 --extensive-mis-size 1000 --scaffold-gap-max-size 1000 --unaligned-part-size 500 --skip-unaligned-mis-contigs --mgm /mnt/galaxy/files/000/925/dataset_925731.dat -o /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir --labels contigs3_fasta\n\nVersion: 5.0.2\n\nSystem information:\n  OS: Linux-4.15.0-48-generic-x86_64-with-debian-buster-sid (linux_64)\n  Python version: 3.5.5\n  CPUs number: 16\n\nStarted: 2019-06-26 09:50:48\n\nLogging to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/quast.log\nNOTICE: Output directory already exists and looks like a QUAST output dir. Existing results can be reused (e.g. previously generated alignments)!\n\nCWD: /mnt/galaxy/tmp/job_working_directory/000/561/561929/working\nMain parameters: \n  MODE: meta, threads: 1, minimum contig length: 500, minimum alignment length: 65, ambiguity: one, \\\n  threshold for extensive misassembly size: 1000\n\nContigs:\n  Pre-processing...\n  /mnt/galaxy/files/000/925/dataset_925731.dat ==> contigs3_fasta\n\n2019-06-26 09:50:48\nRunning Basic statistics processor...\n  Contig files: \n    contigs3_fasta\n  Calculating N50 and L50...\n    contigs3_fasta, N50 = 38725, L50 = 12, Total length = 1197377, GC % = 42.28, # N's per 100 kbp =  0.00\n  Drawing Nx plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/basic_stats/Nx_plot.pdf\n  Drawing cumulative plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/basic_stats/cumulative_plot.pdf\n  Drawing GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/basic_stats/GC_content_plot.pdf\n  Drawing contigs3_fasta GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/basic_stats/contigs3_fasta_GC_content_plot.pdf\n  Drawing Coverage histogram (bin size: 1x)...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/basic_stats/coverage_histogram.pdf\n  Drawing contigs3_fasta coverage histogram (bin size: 1x)...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/basic_stats/contigs3_fasta_coverage_histogram.pdf\nDone.\n\n2019-06-26 09:50:50\nWARNING: GeneMark tool can't be started because of license limitations!\n\nNOTICE: Genes are not predicted by default. Use --gene-finding or --glimmer option to enable it.\n\n2019-06-26 09:50:51\nCreating large visual summaries...\nThis may take a while: press Ctrl-C to skip this step..\n  1 of 2: Creating Icarus viewers...\n  2 of 2: Creating PDF with all tables and plots...\nDone\n\n2019-06-26 09:50:51\nRESULTS:\n  Text versions of total report are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/report.txt, report.tsv, and report.tex\n  Text versions of transposed total report are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/transposed_report.txt, transposed_report.tsv, and transposed_report.tex\n  HTML version (interactive tables and plots) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/report.html\n  PDF version (tables and plots) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/report.pdf\n  Icarus (contig browser) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/icarus.html\n  Log is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/quast.log\n\nFinished: 2019-06-26 09:50:51\nElapsed time: 0:00:03.403182\nNOTICEs: 2; WARNINGs: 1; non-fatal ERRORs: 0\n\nThank you for using QUAST!\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T23:50:32.926481", "stderr": "", "model_class": "Job", "params": {"in": "{\"__current_case__\": 1, \"custom\": \"false\", \"inputs\": {\"values\": [{\"id\": 1068884, \"src\": \"hda\"}]}}", "scaffold_gap_max_size": "\"1000\"", "split_scaffolds": "\"false\"", "assembly": "{\"__current_case__\": 1, \"ref\": {\"__current_case__\": 3, \"origin\": \"none\"}, \"type\": \"metagenome\"}", "circos": "\"false\"", "contig_thresholds": "\"0,1000, 500\"", "strict_NA": "\"false\"", "genes": "{\"conserved_genes_finding\": \"false\", \"gene_finding\": {\"__current_case__\": 2, \"tool\": \"--mgm\"}, \"rna_finding\": \"false\"}", "unaligned_part_size": "\"500\"", "al": "{\"ambiguity_score\": \"0.99\", \"ambiguity_usage\": \"one\", \"fragmented\": \"false\", \"fragmented_max_indent\": \"50\", \"min_alignment\": \"65\", \"min_identity\": \"95.0\", \"upper_bound_assembly\": \"false\", \"upper_bound_min_con\": \"2\", \"use_all_alignments\": \"false\"}", "dbkey": "\"?\"", "extensive_mis_size": "\"1000\"", "large": "\"false\"", "k_mer": "{\"__current_case__\": 1, \"k_mer_stats\": \"\"}", "skip_unaligned_mis_contigs": "\"false\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "min_contig": "\"500\""}, "tool_stdout": "/mnt/galaxy/tool_dependencies/_conda/envs/__quast@5.0.2/opt/quast-5.0.2/metaquast.py -o outputdir --min-contig 500 --threads 1 --labels contigs3_fasta --mgm --min-alignment 65 --min-identity 95.0 --ambiguity-usage one --contig-thresholds 0,1000,500 --extensive-mis-size 1000 --scaffold-gap-max-size 1000 --unaligned-part-size 500 --skip-unaligned-mis-contigs /mnt/galaxy/files/000/925/dataset_925731.dat\n\nVersion: 5.0.2\n\nSystem information:\n  OS: Linux-4.15.0-48-generic-x86_64-with-debian-buster-sid (linux_64)\n  Python version: 3.5.5\n  CPUs number: 16\n\nStarted: 2019-06-26 09:50:39\n\nLogging to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/metaquast.log\n\nContigs:\n  Pre-processing...\n  /mnt/galaxy/files/000/925/dataset_925731.dat ==> contigs3_fasta\n\nNo references are provided, starting to search for reference genomes in SILVA 16S rRNA database and to download them from NCBI...\n\n2019-06-26 09:50:40\nRunning BlastN..\n  processing contigs3_fasta\n  BLAST results for contigs3_fasta are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/quast_downloaded_references/blast.res_contigs3_fasta...\n\nReference genomes are not found.\n\nNOTICE: No references are provided, starting regular QUAST with MetaGeneMark gene finder\n/mnt/galaxy/tool_dependencies/_conda/envs/__quast@5.0.2/opt/quast-5.0.2/quast.py --min-contig 500 --threads 1 --mgm --min-alignment 65 --min-identity 95.0 --ambiguity-usage one --contig-thresholds 0,1000,500 --extensive-mis-size 1000 --scaffold-gap-max-size 1000 --unaligned-part-size 500 --skip-unaligned-mis-contigs --mgm /mnt/galaxy/files/000/925/dataset_925731.dat -o /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir --labels contigs3_fasta\n\nVersion: 5.0.2\n\nSystem information:\n  OS: Linux-4.15.0-48-generic-x86_64-with-debian-buster-sid (linux_64)\n  Python version: 3.5.5\n  CPUs number: 16\n\nStarted: 2019-06-26 09:50:48\n\nLogging to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/quast.log\nNOTICE: Output directory already exists and looks like a QUAST output dir. Existing results can be reused (e.g. previously generated alignments)!\n\nCWD: /mnt/galaxy/tmp/job_working_directory/000/561/561929/working\nMain parameters: \n  MODE: meta, threads: 1, minimum contig length: 500, minimum alignment length: 65, ambiguity: one, \\\n  threshold for extensive misassembly size: 1000\n\nContigs:\n  Pre-processing...\n  /mnt/galaxy/files/000/925/dataset_925731.dat ==> contigs3_fasta\n\n2019-06-26 09:50:48\nRunning Basic statistics processor...\n  Contig files: \n    contigs3_fasta\n  Calculating N50 and L50...\n    contigs3_fasta, N50 = 38725, L50 = 12, Total length = 1197377, GC % = 42.28, # N's per 100 kbp =  0.00\n  Drawing Nx plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/basic_stats/Nx_plot.pdf\n  Drawing cumulative plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/basic_stats/cumulative_plot.pdf\n  Drawing GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/basic_stats/GC_content_plot.pdf\n  Drawing contigs3_fasta GC content plot...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/basic_stats/contigs3_fasta_GC_content_plot.pdf\n  Drawing Coverage histogram (bin size: 1x)...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/basic_stats/coverage_histogram.pdf\n  Drawing contigs3_fasta coverage histogram (bin size: 1x)...\n    saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/basic_stats/contigs3_fasta_coverage_histogram.pdf\nDone.\n\n2019-06-26 09:50:50\nWARNING: GeneMark tool can't be started because of license limitations!\n\nNOTICE: Genes are not predicted by default. Use --gene-finding or --glimmer option to enable it.\n\n2019-06-26 09:50:51\nCreating large visual summaries...\nThis may take a while: press Ctrl-C to skip this step..\n  1 of 2: Creating Icarus viewers...\n  2 of 2: Creating PDF with all tables and plots...\nDone\n\n2019-06-26 09:50:51\nRESULTS:\n  Text versions of total report are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/report.txt, report.tsv, and report.tex\n  Text versions of transposed total report are saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/transposed_report.txt, transposed_report.tsv, and transposed_report.tex\n  HTML version (interactive tables and plots) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/report.html\n  PDF version (tables and plots) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/report.pdf\n  Icarus (contig browser) is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/icarus.html\n  Log is saved to /mnt/galaxy/tmp/job_working_directory/000/561/561929/working/outputdir/quast.log\n\nFinished: 2019-06-26 09:50:51\nElapsed time: 0:00:03.403182\nNOTICEs: 2; WARNINGs: 1; non-fatal ERRORs: 0\n\nThank you for using QUAST!\n", "job_messages": [], "id": "7d5e036dad1fde80", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.0.2+galaxy0-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4", "time_seconds": 81.35840106010437, "inputs": {"library|lib_type": "paired", "library|R2": {"src": "hda", "id": "4a097e76c927d23f"}, "library|R1": {"src": "hda", "id": "7facf60919953e8c"}}, "tool_version": "1.0.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4", "update_time": "2019-06-25T23:08:50.559229", "inputs": {"R1": {"src": "hda", "id": "7facf60919953e8c", "uuid": "da32ae9d-e59e-41fa-96c9-44554930beed"}, "R2": {"src": "hda", "id": "4a097e76c927d23f", "uuid": "dda70009-fad5-4296-ba7f-017063eeb6b4"}}, "outputs": {"contigs": {"src": "hda", "id": "06bd88c5fd232423", "uuid": "d760d3df-f779-4549-9544-042fbf65b417"}, "shovill_std_log": {"src": "hda", "id": "1fb13ec96fdebb43", "uuid": "3b25dcbf-834d-4757-ac59-c0b29d714f0d"}, "contigs_graph": {"src": "hda", "id": "167b71981a6e18fc", "uuid": "6036d3e5-9197-4068-9e5c-b1614ee66ddf"}}, "history_id": "f840675b8d7f5485", "stdout": "[mash] Estimated genome size: 185278\n[mash] Estimated coverage:    8.02\n[mash] Writing to /tmp/XQRe8rEFZY/sketch.msh...\n[lighter] [2019-06-25 23:06:06] =============Start====================\n[lighter] [2019-06-25 23:06:06] Scanning the input files to infer alpha(sampling rate)\n[lighter] [2019-06-25 23:06:06] Average coverage is 20.207 and alpha is 0.346\n[lighter] [2019-06-25 23:06:06] Bad quality threshold is \".\"\n[lighter] [2019-06-25 23:06:07] Finish sampling kmers\n[lighter] [2019-06-25 23:06:07] Bloom filter A's false positive rate: 0.023199\n[lighter] [2019-06-25 23:06:08] Finish storing trusted kmers\n[lighter] [2019-06-25 23:06:08] Finish error correction\n[lighter] Processed 24960 reads:\n[lighter] \t13131 are error-free\n[lighter] \tCorrected 17777 bases(1.502832 corrections for reads with errors)\n[lighter] \tTrimmed 0 reads with average trimmed bases 0.000000\n[lighter] \tDiscard 0 reads\n[FLASH] Starting FLASH v1.2.11\n[FLASH] Fast Length Adjustment of SHort reads\n[FLASH]  \n[FLASH] Input files:\n[FLASH]     R1.cor.fq.gz\n[FLASH]     R2.cor.fq.gz\n[FLASH]  \n[FLASH] Output files:\n[FLASH]     ./flash.extendedFrags.fastq.gz\n[FLASH]     ./flash.notCombined_1.fastq.gz\n[FLASH]     ./flash.notCombined_2.fastq.gz\n[FLASH]     ./flash.hist\n[FLASH]     ./flash.histogram\n[FLASH]  \n[FLASH] Parameters:\n[FLASH]     Min overlap:           20\n[FLASH]     Max overlap:           150\n[FLASH]     Max mismatch density:  0.250000\n[FLASH]     Allow \"outie\" pairs:   false\n[FLASH]     Cap mismatch quals:    false\n[FLASH]     Combiner threads:      2\n[FLASH]     Input format:          FASTQ, phred_offset=33\n[FLASH]     Output format:         FASTQ, phred_offset=33, gzip\n[FLASH]  \n[FLASH] Starting reader and writer threads\n[FLASH] Starting 2 combiner threads\n[FLASH] Processed 12480 read pairs\n[FLASH]  \n[FLASH] Read combination statistics:\n[FLASH]     Total pairs:      12480\n[FLASH]     Combined pairs:   50\n[FLASH]     Uncombined pairs: 12430\n[FLASH]     Percent combined: 0.40%\n[FLASH]  \n[FLASH] Writing histogram files.\n[FLASH]  \n[FLASH] FLASH v1.2.11 complete!\n[FLASH] 0.873 seconds elapsed\n[spades] Command line: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py\t--pe1-1\t/mnt/pulsar/files/staging/561743/working/out/flash.notCombined_1.fastq.gz\t--pe1-2\t/mnt/pulsar/files/staging/561743/working/out/flash.notCombined_2.fastq.gz\t--only-assembler\t--threads\t2\t--memory\t4\t-o\t/mnt/pulsar/files/staging/561743/working/out/spades\t--tmp-dir\t/tmp\t-k\t31,51,71,91,111\t--pe1-m\t/mnt/pulsar/files/staging/561743/working/out/flash.extendedFrags.fastq.gz\t\n[spades] \n[spades] System information:\n[spades]   SPAdes version: 3.13.0\n[spades]   Python version: 3.6.7\n[spades]   OS: Linux-4.4.0-103-generic-x86_64-with-debian-stretch-sid\n[spades] \n[spades] Output dir: /mnt/pulsar/files/staging/561743/working/out/spades\n[spades] Mode: ONLY assembling (without read error correction)\n[spades] Debug mode is turned OFF\n[spades] \n[spades] Dataset parameters:\n[spades]   Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n[spades]   Reads:\n[spades]     Library number: 1, library type: paired-end\n[spades]       orientation: fr\n[spades]       left reads: ['/mnt/pulsar/files/staging/561743/working/out/flash.notCombined_1.fastq.gz']\n[spades]       right reads: ['/mnt/pulsar/files/staging/561743/working/out/flash.notCombined_2.fastq.gz']\n[spades]       interlaced reads: not specified\n[spades]       single reads: not specified\n[spades]       merged reads: ['/mnt/pulsar/files/staging/561743/working/out/flash.extendedFrags.fastq.gz']\n[spades] Assembly parameters:\n[spades]   k: [31, 51, 71, 91, 111]\n[spades]   Repeat resolution is enabled\n[spades]   Mismatch careful mode is turned OFF\n[spades]   MismatchCorrector will be SKIPPED\n[spades]   Coverage cutoff is turned OFF\n[spades] Other parameters:\n[spades]   Dir for temp files: /tmp\n[spades]   Threads: 2\n[spades]   Memory limit (in Gb): 4\n[spades] \n[spades] \n[spades] ======= SPAdes pipeline started. Log can be found here: /mnt/pulsar/files/staging/561743/working/out/spades/spades.log\n[spades] \n[spades] \n[spades] ===== Assembling started.\n[spades] \n[spades] \n[spades] == Running assembler: K31\n[spades] \n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /mnt/pulsar/files/staging/561743/working/out/spades/K31/configs/config.info\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 4 Gb\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from refs/heads/spades_3.13.0, git revision 8ea46659e9b2aca35444a808db550ac333006f8b\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/mnt/pulsar/files/staging/561743/working/out/spades/dataset.info) with K=31\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 2\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n[spades]   0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n[spades]   0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n[spades]   0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n[spades]   0:00:00.268    76M / 100M  INFO    General                 (binary_converter.hpp      : 117)   12430 reads written\n[spades]   0:00:00.276     4M / 100M  INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n[spades]   0:00:00.425   132M / 196M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n[spades]   0:00:00.425     4M / 196M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n[spades]   0:00:00.564   132M / 196M  INFO    General                 (binary_converter.hpp      : 117)   50 reads written\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (construction.cpp          : 111)   Max read length 280\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (construction.cpp          : 114)   Max read length without merged 150\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (construction.cpp          : 117)   Average read length 150.206\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 4 files using 2 threads. This might take a while.\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 4096\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 0.666016 Gb\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 16777216\n[spades]   0:00:00.966     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 289)   Processed 49820 reads\n[spades]   0:00:00.967     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n[spades]   0:00:00.967     8M / 1G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 49820 reads\n[spades]   0:00:00.967     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n[spades]   0:00:00.973     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 197027 kmers in total.\n[spades]   0:00:00.973     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n[spades]   0:00:00.975     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n[spades]   0:00:00.975     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n[spades]   0:00:00.975     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 32 files using 2 threads. This might take a while.\n[spades]   0:00:00.975     8M / 1G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 4096\n[spades]   0:00:00.975     8M / 1G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 0.665365 Gb\n[spades]   0:00:00.975     8M / 1G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 2097152\n[spades]   0:00:01.034     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 380)   Processed 197027 kmers\n[spades]   0:00:01.034     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 197027 kmers.\n[spades]   0:00:01.035     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n[spades]   0:00:01.045     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 196835 kmers in total.\n[spades]   0:00:01.046     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n[spades]   0:00:01.049     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n[spades]   0:00:01.106     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n[spades]   0:00:01.130     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 100088 bytes occupied (4.06789 bits per kmer).\n[spades]   0:00:01.130     8M / 1G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n[spades]   0:00:01.162     8M / 1G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n[spades]   0:00:01.162     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n[spades]   0:00:01.162     8M / 1G    INFO    General                 (construction.cpp          : 253)   Early tip clipper length bound set as (RL - K)\n[spades]   0:00:01.162     8M / 1G    INFO   Early tip clipping       (early_simplification.hpp  : 181)   Early tip clipping\n[spades]   0:00:01.231     8M / 1G    INFO   Early tip clipping       (early_simplification.hpp  : 184)   12085 32-mers were removed by early tip clipper\n[spades]   0:00:01.231     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n[spades]   0:00:01.231     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n[spades]   0:00:01.276     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 573 sequences extracted\n[spades]   0:00:01.302     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n[spades]   0:00:01.312     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n[spades]   0:00:01.313     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n[spades]   0:00:01.313     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n[spades]   0:00:01.313     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n[spades]   0:00:01.332     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 92400 bytes occupied (3.75177 bits per kmer).\n[spades]   0:00:01.333     8M / 1G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n[spades]   0:00:01.533     8M / 1G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n[spades]   0:00:01.554     8M / 1G    INFO    General                 (construction.cpp          : 464)   Processed 1146 edges\n[spades]   0:00:01.557     8M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n[spades]   0:00:01.557     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n[spades]   0:00:01.557     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 15\n[spades]   0:00:01.557     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 16. Coverage mad: 5.9304\n[spades]   0:00:01.557     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n[spades]   0:00:01.567     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n[spades]   0:00:01.595     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n[spades]   0:00:01.688     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n[spades]   0:00:01.914     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n[spades]   0:00:02.101     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 15.7343. Fitted coverage std. dev: 4.00668\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.999502\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 6\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 6\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 178202\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 15.7343\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 6\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0\n[spades]   0:00:02.102     8M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n[spades]   0:00:02.102     8M / 1G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n[spades]   0:00:02.102     8M / 1G    INFO   Simplification \n..\np   : 165)   Running Removing isolated edges\n[spades]   0:00:03.165    16M / 1G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 144 times\n[spades]   0:00:03.165    16M / 1G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n[spades]   0:00:03.165    16M / 1G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 5.33246\n[spades]   0:00:03.165    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n[spades]   0:00:03.166    16M / 1G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 506 kmers to process\n[spades]   0:00:03.166    16M / 1G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n[spades]   0:00:03.264    16M / 1G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n[spades]   0:00:03.265    16M / 1G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n[spades]   0:00:03.265    16M / 1G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n[spades]   0:00:03.265    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n[spades]   0:00:03.265    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /mnt/pulsar/files/staging/561743/working/out/spades//K111/assembly_graph_with_scaffolds.gfa\n[spades]   0:00:03.267    16M / 1G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /mnt/pulsar/files/staging/561743/working/out/spades//K111/before_rr.fasta\n[spades]   0:00:03.277    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /mnt/pulsar/files/staging/561743/working/out/spades//K111/assembly_graph.fastg\n[spades]   0:00:03.291    16M / 1G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /mnt/pulsar/files/staging/561743/working/out/spades//K111/simplified_contigs.fasta\n[spades]   0:00:03.298    16M / 1G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /mnt/pulsar/files/staging/561743/working/out/spades//K111/intermediate_contigs.fasta\n[spades]   0:00:03.311    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n[spades]   0:00:03.311    16M / 1G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 506 kmers to process\n[spades]   0:00:03.311    16M / 1G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n[spades]   0:00:03.311    16M / 1G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 58767\n[spades]   0:00:03.311    16M / 1G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n[spades]   0:00:03.311    16M / 1G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n[spades]   0:00:03.325    64M / 1G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n[spades]   0:00:03.416    64M / 1G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 12480 reads processed\n[spades]   0:00:04.755    64M / 1G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n[spades]   0:00:04.755    64M / 1G    INFO    General                 (pair_info_count.cpp       : 213)   8561 paired reads (68.5978% of all) aligned to long edges\n[spades]   0:00:04.756    16M / 1G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 399.557, deviation = 39.3652, left quantile = 349, right quantile = 449, read length = 150\n[spades]   0:00:04.807   208M / 1G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n[spades]   0:00:04.807   208M / 1G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n[spades]   0:00:04.849   208M / 1G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 12480 reads processed\n[spades]   0:00:04.849   208M / 1G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n[spades]   0:00:04.849   208M / 1G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n[spades]   0:00:04.850   208M / 1G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 349, right insert size quantile 449, filtering threshold 2, rounding threshold 0\n[spades]   0:00:04.856   220M / 1G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n[spades]   0:00:04.908   220M / 1G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 12480 reads processed\n[spades]   0:00:04.912    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n[spades]   0:00:04.912    16M / 1G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n[spades]   0:00:04.912    16M / 1G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n[spades]   0:00:04.912    16M / 1G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n[spades]   0:00:04.912    16M / 1G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n[spades]   0:00:04.912    16M / 1G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 68\n[spades]   0:00:04.912    16M / 1G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n[spades]   0:00:04.913    16M / 1G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n[spades]   0:00:04.913    16M / 1G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n[spades]   0:00:04.913    16M / 1G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n[spades]   0:00:04.913    16M / 1G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 1; contradictional = 0\n[spades]   0:00:04.914    16M / 1G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n[spades]   0:00:04.914    16M / 1G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n[spades]   0:00:04.914    16M / 1G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n[spades]   0:00:04.914    16M / 1G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n[spades]   0:00:04.914    16M / 1G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 30\n[spades]   0:00:04.914    16M / 1G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n[spades]   0:00:04.915    16M / 1G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n[spades]   0:00:04.915    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n[spades]   0:00:04.915    16M / 1G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n[spades]   0:00:04.915    16M / 1G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 5.33246\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 5.33246\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n[spades]   0:00:04.921    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 0 paths from 15 (0%)\n[spades]   0:00:04.921    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 2 paths from 15 (13%)\n[spades]   0:00:04.921    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 4 paths from 15 (26%)\n[spades]   0:00:04.922    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 6 paths from 15 (40%)\n[spades]   0:00:04.922    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 8 paths from 15 (53%)\n[spades]   0:00:04.923    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 10 paths from 15 (66%)\n[spades]   0:00:04.923    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 12 paths from 15 (80%)\n[spades]   0:00:04.924    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 14 paths from 15 (93%)\n[spades]   0:00:04.924    16M / 1G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n[spades]   0:00:04.924    16M / 1G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n[spades]   0:00:04.924    16M / 1G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n[spades]   0:00:04.924    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n[spades]   0:00:04.924    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n[spades]   0:00:04.924    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n[spades]   0:00:04.924    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n[spades]   0:00:04.925    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n[spades]   0:00:04.925    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n[spades]   0:00:04.925    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n[spades]   0:00:04.925    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n[spades]   0:00:04.925    16M / 1G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n[spades]   0:00:04.925    16M / 1G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n[spades]   0:00:04.925    16M / 1G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n[spades]   0:00:04.926    16M / 1G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n[spades]   0:00:04.926    16M / 1G    INFO    General                 (launcher.cpp              : 296)   Traversed 1 loops\n[spades]   0:00:04.926    16M / 1G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n[spades]   0:00:04.926    16M / 1G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n[spades]   0:00:04.926    16M / 1G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n[spades]   0:00:04.926    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n[spades]   0:00:04.926    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n[spades]   0:00:04.926    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n[spades]   0:00:04.926    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n[spades]   0:00:04.926    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n[spades]   0:00:04.927    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n[spades]   0:00:04.927    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n[spades]   0:00:04.927    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n[spades]   0:00:04.927    16M / 1G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n[spades]   0:00:04.927    16M / 1G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n[spades]   0:00:04.927    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n[spades]   0:00:04.927    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /mnt/pulsar/files/staging/561743/working/out/spades//K111/assembly_graph_with_scaffolds.gfa\n[spades]   0:00:04.934    16M / 1G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /mnt/pulsar/files/staging/561743/working/out/spades//K111/before_rr.fasta\n[spades]   0:00:04.946    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /mnt/pulsar/files/staging/561743/working/out/spades//K111/assembly_graph.fastg\n[spades]   0:00:04.964    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /mnt/pulsar/files/staging/561743/working/out/spades//K111/final_contigs.paths\n[spades]   0:00:04.978    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /mnt/pulsar/files/staging/561743/working/out/spades//K111/scaffolds.paths\n[spades]   0:00:05.001    16M / 1G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n[spades]   0:00:05.002     8M / 1G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 5 seconds\n[spades] \n[spades] ===== Assembling finished. Used k-mer sizes: 31, 51, 71, 91, 111 \n[spades] \n[spades]  * Assembled contigs are in /mnt/pulsar/files/staging/561743/working/out/spades/contigs.fasta\n[spades]  * Assembled scaffolds are in /mnt/pulsar/files/staging/561743/working/out/spades/scaffolds.fasta\n[spades]  * Assembly graph is in /mnt/pulsar/files/staging/561743/working/out/spades/assembly_graph.fastg\n[spades]  * Assembly graph in GFA format is in /mnt/pulsar/files/staging/561743/working/out/spades/assembly_graph_with_scaffolds.gfa\n[spades]  * Paths in the assembly graph corresponding to the contigs are in /mnt/pulsar/files/staging/561743/working/out/spades/contigs.paths\n[spades]  * Paths in the assembly graph corresponding to the scaffolds are in /mnt/pulsar/files/staging/561743/working/out/spades/scaffolds.paths\n[spades] \n[spades] ======= SPAdes pipeline finished.\n[spades] \n[spades] SPAdes log can be found here: /mnt/pulsar/files/staging/561743/working/out/spades/spades.log\n[spades] \n[spades] Thank you for using SPAdes!\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "[shovill] Hello ubuntu\n[shovill] You ran: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/shovill --outdir out --cpus 2 --ram 4 --R1 /mnt/pulsar/files/staging/561743/inputs/dataset_925458.dat --R2 /mnt/pulsar/files/staging/561743/inputs/dataset_925460.dat --namefmt contig%05d --depth 100 --nocorr --minlen 0 --mincov 2 --assembler spades\n[shovill] This is shovill 1.0.4\n[shovill] Written by Torsten Seemann\n[shovill] Homepage is https://github.com/tseemann/shovill\n[shovill] Operating system is linux\n[shovill] Perl version is v5.26.2\n[shovill] Machine has 4 CPU cores and 15.67 GB RAM\n[shovill] Using bwa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/bwa | Version: 0.7.17-r1188\n[shovill] Using flash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/flash | FLASH v1.2.11\n[shovill] Using java - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/java | openjdk version \"11.0.1\" 2018-10-16 LTS\n[shovill] Using lighter - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/lighter | Lighter v1.1.2\n[shovill] Using mash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/mash | 2.1\n[shovill] Using megahit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit | MEGAHIT v1.1.3\n[shovill] Using megahit_toolkit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit_toolkit | v1.1.3\n[shovill] Using pigz - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pigz | pigz 2.3.4\n[shovill] Using pilon - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pilon | Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500\n[shovill] Using samclip - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samclip | samclip 0.2\n[shovill] Using samtools - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samtools | Version: 1.9 (using htslib 1.9)\n[shovill] Using seqtk - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/seqtk | Version: 1.3-r106\n[shovill] Using skesa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/skesa | SKESA v.2.3.0\n[shovill] Using spades.py - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py | SPAdes v3.13.0\n[shovill] Using trimmomatic - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/trimmomatic | 0.39\n[shovill] Using velvetg - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velvetg | Version 1.2.10\n[shovill] Using velveth - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velveth | Version 1.2.10\n[shovill] Checking if spades supports new stitched read library option instead of --s2\n[shovill] Yes, it supports --pe1-m\n[shovill] Using tempdir: /tmp\n[shovill] Changing into folder: /mnt/pulsar/files/staging/561743/working/out\n[shovill] Collecting raw read statistics with 'seqtk'\n[shovill] Running: seqtk fqchk -q3 \\/mnt\\/pulsar\\/files\\/staging\\/561743\\/inputs\\/dataset_925458\\.dat >/tmp/fjVkDyjSBm 2>&1 | sed 's/^/[seqtk] /' | tee -a shovill.log\n[shovill] Read stats: avg_len = 150\n[shovill] Read stats: total_bp = 3744000\n[shovill] Read stats: min_len = 150\n[shovill] Read stats: max_len = 150\n[shovill] Estimating genome size with 'mash'\n[shovill] Running: mash sketch -o /tmp/XQRe8rEFZY/sketch -k 32 -m 3 -r \\/mnt\\/pulsar\\/files\\/staging\\/561743\\/inputs\\/dataset_925458\\.dat 2>&1 | sed 's/^/[mash] /' | tee -a shovill.log\n[shovill] Using genome size 185278 bp\n[shovill] Estimated sequencing depth: 20 x\n[shovill] No read depth reduction requested or necessary.\n[shovill] Appending -Xmx4g to _JAVA_OPTIONS\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561743\\/inputs\\/dataset_925458\\.dat R1.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561743\\/inputs\\/dataset_925460\\.dat R2.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Average read length looks like 150 bp\n[shovill] Automatically setting --minlen to 75\n[shovill] Setting k-mer range to (31 .. 112)\n[shovill] Estimated K-mers: 31 51 71 91 111 [kn=5, ks=20, kmin=31, kmax=112]\n[shovill] Using kmers: 31,51,71,91,111\n[shovill] Correcting reads with 'Lighter'\n[shovill] Running: lighter -od . -r R1.fq.gz -r R2.fq.gz -K 32 185278 -t 2 -maxcor 1 2>&1 | sed 's/^/[lighter] /' | tee -a shovill.log\n[shovill] Overlapping/stitcing PE reads with 'FLASH'\n[shovill] Running: flash -m 20 -M 150 -d . -o flash -z -t 2 R1.cor.fq.gz R2.cor.fq.gz 2>&1 | sed 's/^//' | tee -a shovill.log\n[shovill] Assembling reads with 'spades'\n[shovill] Running: spades.py --pe1-1 flash.notCombined_1.fastq.gz --pe1-2 flash.notCombined_2.fastq.gz --only-assembler --threads 2 --memory 4 -o spades --tmp-dir /tmp -k 31,51,71,91,111  --pe1-m flash.extendedFrags.fastq.gz 2>&1 | sed 's/^/[spades] /' | tee -a shovill.log\n[shovill] User supplied --nocorr, so not correcting contigs.\n[shovill] Assembly is 180578, estimated genome size was 185278 (-2.54%)\n[shovill] Using genome graph file 'spades/assembly_graph_with_scaffolds.gfa' => 'contigs.gfa'\n[shovill] Walltime used: 0 min 20 sec\n[shovill] Results in: /mnt/pulsar/files/staging/561743/working/out\n[shovill] Final assembly graph: /mnt/pulsar/files/staging/561743/working/out/contigs.gfa\n[shovill] Final assembly contigs: /mnt/pulsar/files/staging/561743/working/out/contigs.fa\n[shovill] It contains 10 (min=75) contigs totalling 180578 bp.\n[shovill] Have a suggestion for shovill? Tell me at https://github.com/tseemann/shovill/issues\n[shovill] Done.\n", "state": "ok", "create_time": "2019-06-25T23:08:06.735778", "stderr": "[shovill] Hello ubuntu\n[shovill] You ran: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/shovill --outdir out --cpus 2 --ram 4 --R1 /mnt/pulsar/files/staging/561743/inputs/dataset_925458.dat --R2 /mnt/pulsar/files/staging/561743/inputs/dataset_925460.dat --namefmt contig%05d --depth 100 --nocorr --minlen 0 --mincov 2 --assembler spades\n[shovill] This is shovill 1.0.4\n[shovill] Written by Torsten Seemann\n[shovill] Homepage is https://github.com/tseemann/shovill\n[shovill] Operating system is linux\n[shovill] Perl version is v5.26.2\n[shovill] Machine has 4 CPU cores and 15.67 GB RAM\n[shovill] Using bwa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/bwa | Version: 0.7.17-r1188\n[shovill] Using flash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/flash | FLASH v1.2.11\n[shovill] Using java - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/java | openjdk version \"11.0.1\" 2018-10-16 LTS\n[shovill] Using lighter - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/lighter | Lighter v1.1.2\n[shovill] Using mash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/mash | 2.1\n[shovill] Using megahit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit | MEGAHIT v1.1.3\n[shovill] Using megahit_toolkit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit_toolkit | v1.1.3\n[shovill] Using pigz - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pigz | pigz 2.3.4\n[shovill] Using pilon - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pilon | Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500\n[shovill] Using samclip - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samclip | samclip 0.2\n[shovill] Using samtools - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samtools | Version: 1.9 (using htslib 1.9)\n[shovill] Using seqtk - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/seqtk | Version: 1.3-r106\n[shovill] Using skesa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/skesa | SKESA v.2.3.0\n[shovill] Using spades.py - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py | SPAdes v3.13.0\n[shovill] Using trimmomatic - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/trimmomatic | 0.39\n[shovill] Using velvetg - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velvetg | Version 1.2.10\n[shovill] Using velveth - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velveth | Version 1.2.10\n[shovill] Checking if spades supports new stitched read library option instead of --s2\n[shovill] Yes, it supports --pe1-m\n[shovill] Using tempdir: /tmp\n[shovill] Changing into folder: /mnt/pulsar/files/staging/561743/working/out\n[shovill] Collecting raw read statistics with 'seqtk'\n[shovill] Running: seqtk fqchk -q3 \\/mnt\\/pulsar\\/files\\/staging\\/561743\\/inputs\\/dataset_925458\\.dat >/tmp/fjVkDyjSBm 2>&1 | sed 's/^/[seqtk] /' | tee -a shovill.log\n[shovill] Read stats: avg_len = 150\n[shovill] Read stats: total_bp = 3744000\n[shovill] Read stats: min_len = 150\n[shovill] Read stats: max_len = 150\n[shovill] Estimating genome size with 'mash'\n[shovill] Running: mash sketch -o /tmp/XQRe8rEFZY/sketch -k 32 -m 3 -r \\/mnt\\/pulsar\\/files\\/staging\\/561743\\/inputs\\/dataset_925458\\.dat 2>&1 | sed 's/^/[mash] /' | tee -a shovill.log\n[shovill] Using genome size 185278 bp\n[shovill] Estimated sequencing depth: 20 x\n[shovill] No read depth reduction requested or necessary.\n[shovill] Appending -Xmx4g to _JAVA_OPTIONS\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561743\\/inputs\\/dataset_925458\\.dat R1.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561743\\/inputs\\/dataset_925460\\.dat R2.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Average read length looks like 150 bp\n[shovill] Automatically setting --minlen to 75\n[shovill] Setting k-mer range to (31 .. 112)\n[shovill] Estimated K-mers: 31 51 71 91 111 [kn=5, ks=20, kmin=31, kmax=112]\n[shovill] Using kmers: 31,51,71,91,111\n[shovill] Correcting reads with 'Lighter'\n[shovill] Running: lighter -od . -r R1.fq.gz -r R2.fq.gz -K 32 185278 -t 2 -maxcor 1 2>&1 | sed 's/^/[lighter] /' | tee -a shovill.log\n[shovill] Overlapping/stitcing PE reads with 'FLASH'\n[shovill] Running: flash -m 20 -M 150 -d . -o flash -z -t 2 R1.cor.fq.gz R2.cor.fq.gz 2>&1 | sed 's/^//' | tee -a shovill.log\n[shovill] Assembling reads with 'spades'\n[shovill] Running: spades.py --pe1-1 flash.notCombined_1.fastq.gz --pe1-2 flash.notCombined_2.fastq.gz --only-assembler --threads 2 --memory 4 -o spades --tmp-dir /tmp -k 31,51,71,91,111  --pe1-m flash.extendedFrags.fastq.gz 2>&1 | sed 's/^/[spades] /' | tee -a shovill.log\n[shovill] User supplied --nocorr, so not correcting contigs.\n[shovill] Assembly is 180578, estimated genome size was 185278 (-2.54%)\n[shovill] Using genome graph file 'spades/assembly_graph_with_scaffolds.gfa' => 'contigs.gfa'\n[shovill] Walltime used: 0 min 20 sec\n[shovill] Results in: /mnt/pulsar/files/staging/561743/working/out\n[shovill] Final assembly graph: /mnt/pulsar/files/staging/561743/working/out/contigs.gfa\n[shovill] Final assembly contigs: /mnt/pulsar/files/staging/561743/working/out/contigs.fa\n[shovill] It contains 10 (min=75) contigs totalling 180578 bp.\n[shovill] Have a suggestion for shovill? Tell me at https://github.com/tseemann/shovill/issues\n[shovill] Done.\n", "model_class": "Job", "params": {"adv": "{\"depth\": \"100\", \"gsize\": \"\", \"kmers\": \"\", \"mincov\": \"2\", \"minlen\": \"0\", \"namefmt\": \"contig%05d\", \"nocorr\": \"true\", \"opts\": \"\"}", "trim": "\"false\"", "log": "\"true\"", "assembler": "\"spades\"", "library": "{\"R1\": {\"values\": [{\"id\": 1068606, \"src\": \"hda\"}]}, \"R2\": {\"values\": [{\"id\": 1068608, \"src\": \"hda\"}]}, \"__current_case__\": 0, \"lib_type\": \"paired\"}", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "[mash] Estimated genome size: 185278\n[mash] Estimated coverage:    8.02\n[mash] Writing to /tmp/XQRe8rEFZY/sketch.msh...\n[lighter] [2019-06-25 23:06:06] =============Start====================\n[lighter] [2019-06-25 23:06:06] Scanning the input files to infer alpha(sampling rate)\n[lighter] [2019-06-25 23:06:06] Average coverage is 20.207 and alpha is 0.346\n[lighter] [2019-06-25 23:06:06] Bad quality threshold is \".\"\n[lighter] [2019-06-25 23:06:07] Finish sampling kmers\n[lighter] [2019-06-25 23:06:07] Bloom filter A's false positive rate: 0.023199\n[lighter] [2019-06-25 23:06:08] Finish storing trusted kmers\n[lighter] [2019-06-25 23:06:08] Finish error correction\n[lighter] Processed 24960 reads:\n[lighter] \t13131 are error-free\n[lighter] \tCorrected 17777 bases(1.502832 corrections for reads with errors)\n[lighter] \tTrimmed 0 reads with average trimmed bases 0.000000\n[lighter] \tDiscard 0 reads\n[FLASH] Starting FLASH v1.2.11\n[FLASH] Fast Length Adjustment of SHort reads\n[FLASH]  \n[FLASH] Input files:\n[FLASH]     R1.cor.fq.gz\n[FLASH]     R2.cor.fq.gz\n[FLASH]  \n[FLASH] Output files:\n[FLASH]     ./flash.extendedFrags.fastq.gz\n[FLASH]     ./flash.notCombined_1.fastq.gz\n[FLASH]     ./flash.notCombined_2.fastq.gz\n[FLASH]     ./flash.hist\n[FLASH]     ./flash.histogram\n[FLASH]  \n[FLASH] Parameters:\n[FLASH]     Min overlap:           20\n[FLASH]     Max overlap:           150\n[FLASH]     Max mismatch density:  0.250000\n[FLASH]     Allow \"outie\" pairs:   false\n[FLASH]     Cap mismatch quals:    false\n[FLASH]     Combiner threads:      2\n[FLASH]     Input format:          FASTQ, phred_offset=33\n[FLASH]     Output format:         FASTQ, phred_offset=33, gzip\n[FLASH]  \n[FLASH] Starting reader and writer threads\n[FLASH] Starting 2 combiner threads\n[FLASH] Processed 12480 read pairs\n[FLASH]  \n[FLASH] Read combination statistics:\n[FLASH]     Total pairs:      12480\n[FLASH]     Combined pairs:   50\n[FLASH]     Uncombined pairs: 12430\n[FLASH]     Percent combined: 0.40%\n[FLASH]  \n[FLASH] Writing histogram files.\n[FLASH]  \n[FLASH] FLASH v1.2.11 complete!\n[FLASH] 0.873 seconds elapsed\n[spades] Command line: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py\t--pe1-1\t/mnt/pulsar/files/staging/561743/working/out/flash.notCombined_1.fastq.gz\t--pe1-2\t/mnt/pulsar/files/staging/561743/working/out/flash.notCombined_2.fastq.gz\t--only-assembler\t--threads\t2\t--memory\t4\t-o\t/mnt/pulsar/files/staging/561743/working/out/spades\t--tmp-dir\t/tmp\t-k\t31,51,71,91,111\t--pe1-m\t/mnt/pulsar/files/staging/561743/working/out/flash.extendedFrags.fastq.gz\t\n[spades] \n[spades] System information:\n[spades]   SPAdes version: 3.13.0\n[spades]   Python version: 3.6.7\n[spades]   OS: Linux-4.4.0-103-generic-x86_64-with-debian-stretch-sid\n[spades] \n[spades] Output dir: /mnt/pulsar/files/staging/561743/working/out/spades\n[spades] Mode: ONLY assembling (without read error correction)\n[spades] Debug mode is turned OFF\n[spades] \n[spades] Dataset parameters:\n[spades]   Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n[spades]   Reads:\n[spades]     Library number: 1, library type: paired-end\n[spades]       orientation: fr\n[spades]       left reads: ['/mnt/pulsar/files/staging/561743/working/out/flash.notCombined_1.fastq.gz']\n[spades]       right reads: ['/mnt/pulsar/files/staging/561743/working/out/flash.notCombined_2.fastq.gz']\n[spades]       interlaced reads: not specified\n[spades]       single reads: not specified\n[spades]       merged reads: ['/mnt/pulsar/files/staging/561743/working/out/flash.extendedFrags.fastq.gz']\n[spades] Assembly parameters:\n[spades]   k: [31, 51, 71, 91, 111]\n[spades]   Repeat resolution is enabled\n[spades]   Mismatch careful mode is turned OFF\n[spades]   MismatchCorrector will be SKIPPED\n[spades]   Coverage cutoff is turned OFF\n[spades] Other parameters:\n[spades]   Dir for temp files: /tmp\n[spades]   Threads: 2\n[spades]   Memory limit (in Gb): 4\n[spades] \n[spades] \n[spades] ======= SPAdes pipeline started. Log can be found here: /mnt/pulsar/files/staging/561743/working/out/spades/spades.log\n[spades] \n[spades] \n[spades] ===== Assembling started.\n[spades] \n[spades] \n[spades] == Running assembler: K31\n[spades] \n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /mnt/pulsar/files/staging/561743/working/out/spades/K31/configs/config.info\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 4 Gb\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from refs/heads/spades_3.13.0, git revision 8ea46659e9b2aca35444a808db550ac333006f8b\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/mnt/pulsar/files/staging/561743/working/out/spades/dataset.info) with K=31\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 2\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n[spades]   0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n[spades]   0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n[spades]   0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n[spades]   0:00:00.268    76M / 100M  INFO    General                 (binary_converter.hpp      : 117)   12430 reads written\n[spades]   0:00:00.276     4M / 100M  INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n[spades]   0:00:00.425   132M / 196M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n[spades]   0:00:00.425     4M / 196M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n[spades]   0:00:00.564   132M / 196M  INFO    General                 (binary_converter.hpp      : 117)   50 reads written\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (construction.cpp          : 111)   Max read length 280\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (construction.cpp          : 114)   Max read length without merged 150\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (construction.cpp          : 117)   Average read length 150.206\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 4 files using 2 threads. This might take a while.\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 4096\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 0.666016 Gb\n[spades]   0:00:00.636     4M / 196M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 16777216\n[spades]   0:00:00.966     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 289)   Processed 49820 reads\n[spades]   0:00:00.967     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n[spades]   0:00:00.967     8M / 1G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 49820 reads\n[spades]   0:00:00.967     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n[spades]   0:00:00.973     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 197027 kmers in total.\n[spades]   0:00:00.973     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n[spades]   0:00:00.975     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n[spades]   0:00:00.975     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n[spades]   0:00:00.975     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 32 files using 2 threads. This might take a while.\n[spades]   0:00:00.975     8M / 1G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 4096\n[spades]   0:00:00.975     8M / 1G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 0.665365 Gb\n[spades]   0:00:00.975     8M / 1G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 2097152\n[spades]   0:00:01.034     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 380)   Processed 197027 kmers\n[spades]   0:00:01.034     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 197027 kmers.\n[spades]   0:00:01.035     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n[spades]   0:00:01.045     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 196835 kmers in total.\n[spades]   0:00:01.046     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n[spades]   0:00:01.049     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n[spades]   0:00:01.106     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n[spades]   0:00:01.130     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 100088 bytes occupied (4.06789 bits per kmer).\n[spades]   0:00:01.130     8M / 1G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n[spades]   0:00:01.162     8M / 1G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n[spades]   0:00:01.162     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n[spades]   0:00:01.162     8M / 1G    INFO    General                 (construction.cpp          : 253)   Early tip clipper length bound set as (RL - K)\n[spades]   0:00:01.162     8M / 1G    INFO   Early tip clipping       (early_simplification.hpp  : 181)   Early tip clipping\n[spades]   0:00:01.231     8M / 1G    INFO   Early tip clipping       (early_simplification.hpp  : 184)   12085 32-mers were removed by early tip clipper\n[spades]   0:00:01.231     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n[spades]   0:00:01.231     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n[spades]   0:00:01.276     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 573 sequences extracted\n[spades]   0:00:01.302     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n[spades]   0:00:01.312     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n[spades]   0:00:01.313     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n[spades]   0:00:01.313     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n[spades]   0:00:01.313     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n[spades]   0:00:01.332     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 92400 bytes occupied (3.75177 bits per kmer).\n[spades]   0:00:01.333     8M / 1G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n[spades]   0:00:01.533     8M / 1G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n[spades]   0:00:01.554     8M / 1G    INFO    General                 (construction.cpp          : 464)   Processed 1146 edges\n[spades]   0:00:01.557     8M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n[spades]   0:00:01.557     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n[spades]   0:00:01.557     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 15\n[spades]   0:00:01.557     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 16. Coverage mad: 5.9304\n[spades]   0:00:01.557     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n[spades]   0:00:01.567     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n[spades]   0:00:01.595     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n[spades]   0:00:01.688     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n[spades]   0:00:01.914     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n[spades]   0:00:02.101     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 15.7343. Fitted coverage std. dev: 4.00668\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.999502\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 6\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 6\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 178202\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 15.7343\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 6\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0\n[spades]   0:00:02.102     8M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n[spades]   0:00:02.102     8M / 1G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n[spades]   0:00:02.102     8M / 1G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n[spades]   0:00:02.102     8M / 1G    INFO   Simplification \n..\np   : 165)   Running Removing isolated edges\n[spades]   0:00:03.165    16M / 1G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 144 times\n[spades]   0:00:03.165    16M / 1G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n[spades]   0:00:03.165    16M / 1G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 5.33246\n[spades]   0:00:03.165    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n[spades]   0:00:03.166    16M / 1G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 506 kmers to process\n[spades]   0:00:03.166    16M / 1G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n[spades]   0:00:03.264    16M / 1G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n[spades]   0:00:03.265    16M / 1G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n[spades]   0:00:03.265    16M / 1G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n[spades]   0:00:03.265    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n[spades]   0:00:03.265    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /mnt/pulsar/files/staging/561743/working/out/spades//K111/assembly_graph_with_scaffolds.gfa\n[spades]   0:00:03.267    16M / 1G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /mnt/pulsar/files/staging/561743/working/out/spades//K111/before_rr.fasta\n[spades]   0:00:03.277    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /mnt/pulsar/files/staging/561743/working/out/spades//K111/assembly_graph.fastg\n[spades]   0:00:03.291    16M / 1G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /mnt/pulsar/files/staging/561743/working/out/spades//K111/simplified_contigs.fasta\n[spades]   0:00:03.298    16M / 1G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /mnt/pulsar/files/staging/561743/working/out/spades//K111/intermediate_contigs.fasta\n[spades]   0:00:03.311    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n[spades]   0:00:03.311    16M / 1G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 506 kmers to process\n[spades]   0:00:03.311    16M / 1G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n[spades]   0:00:03.311    16M / 1G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 58767\n[spades]   0:00:03.311    16M / 1G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n[spades]   0:00:03.311    16M / 1G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n[spades]   0:00:03.325    64M / 1G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n[spades]   0:00:03.416    64M / 1G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 12480 reads processed\n[spades]   0:00:04.755    64M / 1G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n[spades]   0:00:04.755    64M / 1G    INFO    General                 (pair_info_count.cpp       : 213)   8561 paired reads (68.5978% of all) aligned to long edges\n[spades]   0:00:04.756    16M / 1G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 399.557, deviation = 39.3652, left quantile = 349, right quantile = 449, read length = 150\n[spades]   0:00:04.807   208M / 1G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n[spades]   0:00:04.807   208M / 1G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n[spades]   0:00:04.849   208M / 1G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 12480 reads processed\n[spades]   0:00:04.849   208M / 1G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n[spades]   0:00:04.849   208M / 1G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n[spades]   0:00:04.850   208M / 1G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 349, right insert size quantile 449, filtering threshold 2, rounding threshold 0\n[spades]   0:00:04.856   220M / 1G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n[spades]   0:00:04.908   220M / 1G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 12480 reads processed\n[spades]   0:00:04.912    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n[spades]   0:00:04.912    16M / 1G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n[spades]   0:00:04.912    16M / 1G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n[spades]   0:00:04.912    16M / 1G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n[spades]   0:00:04.912    16M / 1G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n[spades]   0:00:04.912    16M / 1G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 68\n[spades]   0:00:04.912    16M / 1G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n[spades]   0:00:04.913    16M / 1G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n[spades]   0:00:04.913    16M / 1G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n[spades]   0:00:04.913    16M / 1G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n[spades]   0:00:04.913    16M / 1G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 1; contradictional = 0\n[spades]   0:00:04.914    16M / 1G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n[spades]   0:00:04.914    16M / 1G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n[spades]   0:00:04.914    16M / 1G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n[spades]   0:00:04.914    16M / 1G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n[spades]   0:00:04.914    16M / 1G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 30\n[spades]   0:00:04.914    16M / 1G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n[spades]   0:00:04.915    16M / 1G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n[spades]   0:00:04.915    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n[spades]   0:00:04.915    16M / 1G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n[spades]   0:00:04.915    16M / 1G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 5.33246\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 5.33246\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n[spades]   0:00:04.920    16M / 1G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n[spades]   0:00:04.921    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 0 paths from 15 (0%)\n[spades]   0:00:04.921    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 2 paths from 15 (13%)\n[spades]   0:00:04.921    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 4 paths from 15 (26%)\n[spades]   0:00:04.922    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 6 paths from 15 (40%)\n[spades]   0:00:04.922    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 8 paths from 15 (53%)\n[spades]   0:00:04.923    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 10 paths from 15 (66%)\n[spades]   0:00:04.923    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 12 paths from 15 (80%)\n[spades]   0:00:04.924    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 14 paths from 15 (93%)\n[spades]   0:00:04.924    16M / 1G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n[spades]   0:00:04.924    16M / 1G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n[spades]   0:00:04.924    16M / 1G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n[spades]   0:00:04.924    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n[spades]   0:00:04.924    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n[spades]   0:00:04.924    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n[spades]   0:00:04.924    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n[spades]   0:00:04.925    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n[spades]   0:00:04.925    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n[spades]   0:00:04.925    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n[spades]   0:00:04.925    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n[spades]   0:00:04.925    16M / 1G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n[spades]   0:00:04.925    16M / 1G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n[spades]   0:00:04.925    16M / 1G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n[spades]   0:00:04.926    16M / 1G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n[spades]   0:00:04.926    16M / 1G    INFO    General                 (launcher.cpp              : 296)   Traversed 1 loops\n[spades]   0:00:04.926    16M / 1G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n[spades]   0:00:04.926    16M / 1G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n[spades]   0:00:04.926    16M / 1G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n[spades]   0:00:04.926    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n[spades]   0:00:04.926    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n[spades]   0:00:04.926    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n[spades]   0:00:04.926    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n[spades]   0:00:04.926    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n[spades]   0:00:04.927    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n[spades]   0:00:04.927    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n[spades]   0:00:04.927    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n[spades]   0:00:04.927    16M / 1G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n[spades]   0:00:04.927    16M / 1G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n[spades]   0:00:04.927    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n[spades]   0:00:04.927    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /mnt/pulsar/files/staging/561743/working/out/spades//K111/assembly_graph_with_scaffolds.gfa\n[spades]   0:00:04.934    16M / 1G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /mnt/pulsar/files/staging/561743/working/out/spades//K111/before_rr.fasta\n[spades]   0:00:04.946    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /mnt/pulsar/files/staging/561743/working/out/spades//K111/assembly_graph.fastg\n[spades]   0:00:04.964    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /mnt/pulsar/files/staging/561743/working/out/spades//K111/final_contigs.paths\n[spades]   0:00:04.978    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /mnt/pulsar/files/staging/561743/working/out/spades//K111/scaffolds.paths\n[spades]   0:00:05.001    16M / 1G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n[spades]   0:00:05.002     8M / 1G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 5 seconds\n[spades] \n[spades] ===== Assembling finished. Used k-mer sizes: 31, 51, 71, 91, 111 \n[spades] \n[spades]  * Assembled contigs are in /mnt/pulsar/files/staging/561743/working/out/spades/contigs.fasta\n[spades]  * Assembled scaffolds are in /mnt/pulsar/files/staging/561743/working/out/spades/scaffolds.fasta\n[spades]  * Assembly graph is in /mnt/pulsar/files/staging/561743/working/out/spades/assembly_graph.fastg\n[spades]  * Assembly graph in GFA format is in /mnt/pulsar/files/staging/561743/working/out/spades/assembly_graph_with_scaffolds.gfa\n[spades]  * Paths in the assembly graph corresponding to the contigs are in /mnt/pulsar/files/staging/561743/working/out/spades/contigs.paths\n[spades]  * Paths in the assembly graph corresponding to the scaffolds are in /mnt/pulsar/files/staging/561743/working/out/spades/scaffolds.paths\n[spades] \n[spades] ======= SPAdes pipeline finished.\n[spades] \n[spades] SPAdes log can be found here: /mnt/pulsar/files/staging/561743/working/out/spades/spades.log\n[spades] \n[spades] Thank you for using SPAdes!\n", "job_messages": [], "id": "1a459dd2f47be30c", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4", "time_seconds": 81.47581601142883, "inputs": {"trim": true, "adv|minlen": "0", "library|lib_type": "paired", "library|R2": {"src": "hda", "id": "4a097e76c927d23f"}, "library|R1": {"src": "hda", "id": "7facf60919953e8c"}, "adv|depth": "0", "adv|namefmt": "contig%03d", "adv|nocorr": false, "adv|mincov": "0"}, "tool_version": "1.0.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4", "update_time": "2019-06-25T23:08:55.125194", "inputs": {"R1": {"src": "hda", "id": "7facf60919953e8c", "uuid": "da32ae9d-e59e-41fa-96c9-44554930beed"}, "R2": {"src": "hda", "id": "4a097e76c927d23f", "uuid": "dda70009-fad5-4296-ba7f-017063eeb6b4"}}, "outputs": {"contigs": {"src": "hda", "id": "66b765878597a7b7", "uuid": "6495114e-00a5-43f9-89ab-277f72db7fb5"}, "shovill_std_log": {"src": "hda", "id": "92ac2476215dd997", "uuid": "2451d782-d7b6-4166-b329-4911faacecc6"}, "contigs_graph": {"src": "hda", "id": "12bd93f7bd1aaf43", "uuid": "68f58293-4733-4108-a84b-c4dab81d3e11"}}, "history_id": "f840675b8d7f5485", "stdout": "[mash] Estimated genome size: 185278\n[mash] Estimated coverage:    8.02\n[mash] Writing to /tmp/nz9ZCwJzPj/sketch.msh...\n[trimmomatic] Picked up _JAVA_OPTIONS:  -Xmx4g\n[trimmomatic] TrimmomaticPE: Started with arguments:\n[trimmomatic]  -threads 2 -phred33 /mnt/pulsar/files/staging/561742/inputs/dataset_925458.dat /mnt/pulsar/files/staging/561742/inputs/dataset_925460.dat R1.fq.gz /dev/null R2.fq.gz /dev/null ILLUMINACLIP:/mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/db/trimmomatic.fa:1:30:11 LEADING:3 TRAILING:3 MINLEN:30 TOPHRED33\n[trimmomatic] Using PrefixPair: 'AGATGTGTATAAGAGACAG' and 'AGATGTGTATAAGAGACAG'\n[trimmomatic] Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'\n[trimmomatic] Using Long Clipping Sequence: 'GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG'\n[trimmomatic] Using Long Clipping Sequence: 'TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCTCGTATGCCGTCTTCTGCTTG'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'\n[trimmomatic] Skipping duplicate Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAG'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'\n[trimmomatic] Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT'\n[trimmomatic] Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'\n[trimmomatic] Skipping duplicate Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'\n[trimmomatic] Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'\n[trimmomatic] Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'\n[trimmomatic] Using Long Clipping Sequence: 'CTGTCTCTTATACACATCTCCGAGCCCACGAGAC'\n[trimmomatic] Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'\n[trimmomatic] Using Long Clipping Sequence: 'CTGTCTCTTATACACATCTGACGCTGCCGACGA'\n[trimmomatic] Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'\n[trimmomatic] ILLUMINACLIP: Using 2 prefix pairs, 17 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences\n[trimmomatic] Input Read Pairs: 12480 Both Surviving: 12480 (100.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 0 (0.00%) Dropped: 0 (0.00%)\n[trimmomatic] TrimmomaticPE: Completed successfully\n[lighter] [2019-06-25 23:06:08] =============Start====================\n[lighter] [2019-06-25 23:06:08] Scanning the input files to infer alpha(sampling rate)\n[lighter] [2019-06-25 23:06:08] Average coverage is 20.207 and alpha is 0.346\n[lighter] [2019-06-25 23:06:08] Bad quality threshold is \".\"\n[lighter] [2019-06-25 23:06:09] Finish sampling kmers\n[lighter] [2019-06-25 23:06:09] Bloom filter A's false positive rate: 0.023210\n[lighter] [2019-06-25 23:06:10] Finish storing trusted kmers\n[lighter] [2019-06-25 23:06:10] Finish error correction\n[lighter] Processed 24960 reads:\n[lighter] \t13148 are error-free\n[lighter] \tCorrected 17731 bases(1.501101 corrections for reads with errors)\n[lighter] \tTrimmed 0 reads with average trimmed bases 0.000000\n[lighter] \tDiscard 0 reads\n[FLASH] Starting FLASH v1.2.11\n[FLASH] Fast Length Adjustment of SHort reads\n[FLASH]  \n[FLASH] Input files:\n[FLASH]     R1.cor.fq.gz\n[FLASH]     R2.cor.fq.gz\n[FLASH]  \n[FLASH] Output files:\n[FLASH]     ./flash.extendedFrags.fastq.gz\n[FLASH]     ./flash.notCombined_1.fastq.gz\n[FLASH]     ./flash.notCombined_2.fastq.gz\n[FLASH]     ./flash.hist\n[FLASH]     ./flash.histogram\n[FLASH]  \n[FLASH] Parameters:\n[FLASH]     Min overlap:           20\n[FLASH]     Max overlap:           150\n[FLASH]     Max mismatch density:  0.250000\n[FLASH]     Allow \"outie\" pairs:   false\n[FLASH]     Cap mismatch quals:    false\n[FLASH]     Combiner threads:      2\n[FLASH]     Input format:          FASTQ, phred_offset=33\n[FLASH]     Output format:         FASTQ, phred_offset=33, gzip\n[FLASH]  \n[FLASH] Starting reader and writer threads\n[FLASH] Starting 2 combiner threads\n[FLASH] Processed 12480 read pairs\n[FLASH]  \n[FLASH] Read combination statistics:\n[FLASH]     Total pairs:      12480\n[FLASH]     Combined pairs:   50\n[FLASH]     Uncombined pairs: 12430\n[FLASH]     Percent combined: 0.40%\n[FLASH]  \n[FLASH] Writing histogram files.\n[FLASH]  \n[FLASH] FLASH v1.2.11 complete!\n[FLASH] 0.765 seconds elapsed\n[spades] Command line: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py\t--pe1-1\t/mnt/pulsar/files/staging/561742/working/out/flash.notCombined_1.fastq.gz\t--pe1-2\t/mnt/pulsar/files/staging/561742/working/out/flash.notCombined_2.fastq.gz\t--only-assembler\t--threads\t2\t--memory\t4\t-o\t/mnt/pulsar/files/staging/561742/working/out/spades\t--tmp-dir\t/tmp\t-k\t31,51,71,91,111\t--pe1-m\t/mnt/pulsar/files/staging/561742/working/out/flash.extendedFrags.fastq.gz\t\n[spades] \n[spades] System information:\n[spades]   SPAdes version: 3.13.0\n[spades]   Python version: 3.6.7\n[spades]   OS: Linux-4.4.0-103-generic-x86_64-with-debian-stretch-sid\n[spades] \n[spades] Output dir: /mnt/pulsar/files/staging/561742/working/out/spades\n[spades] Mode: ONLY assembling (without read error correction)\n[spades] Debug mode is turned OFF\n[spades] \n[spades] Dataset parameters:\n[spades]   Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n[spades]   Reads:\n[spades]     Library number: 1, library type: paired-end\n[spades]       orientation: fr\n[spades]       left reads: ['/mnt/pulsar/files/staging/561742/working/out/flash.notCombined_1.fastq.gz']\n[spades]       right reads: ['/mnt/pulsar/files/staging/561742/working/out/flash.notCombined_2.fastq.gz']\n[spades]       interlaced reads: not specified\n[spades]       single reads: not specified\n[spades]       merged reads: ['/mnt/pulsar/files/staging/561742/working/out/flash.extendedFrags.fastq.gz']\n[spades] Assembly parameters:\n[spades]   k: [31, 51, 71, 91, 111]\n[spades]   Repeat resolution is enabled\n[spades]   Mismatch careful mode is turned OFF\n[spades]   MismatchCorrector will be SKIPPED\n[spades]   Coverage cutoff is turned OFF\n[spades] Other parameters:\n[spades]   Dir for temp files: /tmp\n[spades]   Threads: 2\n[spades]   Memory limit (in Gb): 4\n[spades] \n[spades] \n[spades] ======= SPAdes pipeline started. Log can be found here: /mnt/pulsar/files/staging/561742/working/out/spades/spades.log\n[spades] \n[spades] \n[spades] ===== Assembling started.\n[spades] \n[spades] \n[spades] == Running assembler: K31\n[spades] \n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /mnt/pulsar/files/staging/561742/working/out/spades/K31/configs/config.info\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 4 Gb\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from refs/heads/spades_3.13.0, git revision 8ea46659e9b2aca35444a808db550ac333006f8b\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/mnt/pulsar/files/staging/561742/working/out/spades/dataset.info) with K=31\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 2\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n[spades]   0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n[spades]   0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n[spades]   0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n[spades]   0:00:00.273    76M / 100M  INFO    General                 (binary_converter.hpp      : 117)   12430 reads written\n[spades]   0:00:00.281     4M / 100M  INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n[spades]   0:00:00.434   132M / 196M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n[spades]   0:00:00.435     4M / 196M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n[spades]   0:00:00.584   132M / 196M  INFO    General                 (binary_converter.hpp      : 117)   50 reads written\n[spades]   0:00:00.737     4M / 196M  INFO    General                 (construction.cpp          : 111)   Max read length 280\n[spades]   0:00:00.737     4M / 196M  INFO    General                 (construction.cpp          : 114)   Max read length without merged 150\n[spades]   0:00:00.737     4M / 196M  INFO    General                 (construction.cpp          : 117)   Average read length 150.203\n[spades]   0:00:00.737     4M / 196M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n[spades]   0:00:00.737     4M / 196M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 4 files using 2 threads. This might take a while.\n[spades]   0:00:00.738     4M / 196M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 4096\n[spades]   0:00:00.738     4M / 196M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 0.666016 Gb\n[spades]   0:00:00.738     4M / 196M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 16777216\n[spades]   0:00:01.011     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 289)   Processed 49820 reads\n[spades]   0:00:01.011     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n[spades]   0:00:01.012     8M / 1G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 49820 reads\n[spades]   0:00:01.012     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n[spades]   0:00:01.017     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 196976 kmers in total.\n[spades]   0:00:01.017     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n[spades]   0:00:01.018     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n[spades]   0:00:01.018     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n[spades]   0:00:01.018     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 32 files using 2 threads. This might take a while.\n[spades]   0:00:01.018     8M / 1G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 4096\n[spades]   0:00:01.018     8M / 1G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 0.665365 Gb\n[spades]   0:00:01.018     8M / 1G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 2097152\n[spades]   0:00:01.071     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 380)   Processed 196976 kmers\n[spades]   0:00:01.071     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 196976 kmers.\n[spades]   0:00:01.072     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n[spades]   0:00:01.081     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 196785 kmers in total.\n[spades]   0:00:01.081     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n[spades]   0:00:01.084     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n[spades]   0:00:01.144     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n[spades]   0:00:01.146     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 100064 bytes occupied (4.06795 bits per kmer).\n[spades]   0:00:01.146     8M / 1G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n[spades]   0:00:01.197     8M / 1G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n[spades]   0:00:01.197     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n[spades]   0:00:01.197     8M / 1G    INFO    General                 (construction.cpp          : 253)   Early tip clipper length bound set as (RL - K)\n[spades]   0:00:01.197     8M / 1G    INFO   Early tip clipping       (early_simplification.hpp  : 181)   Early tip clipping\n[spades]   0:00:01.265     8M / 1G    INFO   Early tip clipping       (early_simplification.hpp  : 184)   12066 32-mers were removed by early tip clipper\n[spades]   0:00:01.265     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n[spades]   0:00:01.265     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n[spades]   0:00:01.308     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 570 sequences extracted\n[spades]   0:00:01.333     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n[spades]   0:00:01.343     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n[spades]   0:00:01.344     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n[spades]   0:00:01.344     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n[spades]   0:00:01.344     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n[spades]   0:00:01.377     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 92376 bytes occupied (3.75177 bits per kmer).\n[spades]   0:00:01.377     8M / 1G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n[spades]   0:00:01.602     8M / 1G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n[spades]   0:00:01.624     8M / 1G    INFO    General                 (construction.cpp          : 464)   Processed 1140 edges\n[spades]   0:00:01.627     8M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n[spades]   0:00:01.627     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n[spades]   0:00:01.627     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-\n..\n1G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 5.33246\n[spades]   0:00:05.092    16M / 1G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 5.33246\n[spades]   0:00:05.092    16M / 1G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n[spades]   0:00:05.092    16M / 1G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n[spades]   0:00:05.092    16M / 1G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n[spades]   0:00:05.092    16M / 1G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n[spades]   0:00:05.092    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 0 paths from 15 (0%)\n[spades]   0:00:05.093    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 2 paths from 15 (13%)\n[spades]   0:00:05.093    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 4 paths from 15 (26%)\n[spades]   0:00:05.094    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 6 paths from 15 (40%)\n[spades]   0:00:05.094    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 8 paths from 15 (53%)\n[spades]   0:00:05.095    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 10 paths from 15 (66%)\n[spades]   0:00:05.095    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 12 paths from 15 (80%)\n[spades]   0:00:05.095    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 14 paths from 15 (93%)\n[spades]   0:00:05.095    16M / 1G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n[spades]   0:00:05.096    16M / 1G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n[spades]   0:00:05.096    16M / 1G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n[spades]   0:00:05.096    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n[spades]   0:00:05.096    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n[spades]   0:00:05.096    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n[spades]   0:00:05.096    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n[spades]   0:00:05.096    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n[spades]   0:00:05.096    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n[spades]   0:00:05.096    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n[spades]   0:00:05.096    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 296)   Traversed 1 loops\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n[spades]   0:00:05.098    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n[spades]   0:00:05.098    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n[spades]   0:00:05.098    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n[spades]   0:00:05.098    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n[spades]   0:00:05.098    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n[spades]   0:00:05.098    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n[spades]   0:00:05.098    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n[spades]   0:00:05.098    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n[spades]   0:00:05.098    16M / 1G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n[spades]   0:00:05.098    16M / 1G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n[spades]   0:00:05.098    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n[spades]   0:00:05.099    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /mnt/pulsar/files/staging/561742/working/out/spades//K111/assembly_graph_with_scaffolds.gfa\n[spades]   0:00:05.105    16M / 1G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /mnt/pulsar/files/staging/561742/working/out/spades//K111/before_rr.fasta\n[spades]   0:00:05.118    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /mnt/pulsar/files/staging/561742/working/out/spades//K111/assembly_graph.fastg\n[spades]   0:00:05.135    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /mnt/pulsar/files/staging/561742/working/out/spades//K111/final_contigs.paths\n[spades]   0:00:05.148    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /mnt/pulsar/files/staging/561742/working/out/spades//K111/scaffolds.paths\n[spades]   0:00:05.171    16M / 1G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n[spades]   0:00:05.172     8M / 1G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 5 seconds\n[spades] \n[spades] ===== Assembling finished. Used k-mer sizes: 31, 51, 71, 91, 111 \n[spades] \n[spades]  * Assembled contigs are in /mnt/pulsar/files/staging/561742/working/out/spades/contigs.fasta\n[spades]  * Assembled scaffolds are in /mnt/pulsar/files/staging/561742/working/out/spades/scaffolds.fasta\n[spades]  * Assembly graph is in /mnt/pulsar/files/staging/561742/working/out/spades/assembly_graph.fastg\n[spades]  * Assembly graph in GFA format is in /mnt/pulsar/files/staging/561742/working/out/spades/assembly_graph_with_scaffolds.gfa\n[spades]  * Paths in the assembly graph corresponding to the contigs are in /mnt/pulsar/files/staging/561742/working/out/spades/contigs.paths\n[spades]  * Paths in the assembly graph corresponding to the scaffolds are in /mnt/pulsar/files/staging/561742/working/out/spades/scaffolds.paths\n[spades] \n[spades] ======= SPAdes pipeline finished.\n[spades] \n[spades] SPAdes log can be found here: /mnt/pulsar/files/staging/561742/working/out/spades/spades.log\n[spades] \n[spades] Thank you for using SPAdes!\n[bwa-index] [bwa_index] Pack FASTA... 0.00 sec\n[bwa-index] [bwa_index] Construct BWT for the packed sequence...\n[bwa-index] [bwa_index] 0.03 seconds elapse.\n[bwa-index] [bwa_index] Update BWT... 0.00 sec\n[bwa-index] [bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa-index] [bwa_index] Construct SA from BWT and Occ... 0.02 sec\n[bwa-index] [main] Version: 0.7.17-r1188\n[bwa-index] [main] CMD: bwa index spades.fasta\n[bwa-index] [main] Real time: 0.114 sec; CPU: 0.052 sec\n[bwa+samtools-sort] [M::bwa_idx_load_from_disk] read 0 ALT contigs\n[bwa+samtools-sort] [samclip] samclip 0.2 by Torsten Seemann (@torstenseemann)\n[bwa+samtools-sort] [samclip] Loading: spades.fasta.fai\n[bwa+samtools-sort] [samclip] Found 10 sequences in spades.fasta.fai\n[bwa+samtools-sort] [M::process] read 24960 sequences (3743910 bp)...\n[bwa+samtools-sort] [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 12225, 0, 0)\n[bwa+samtools-sort] [M::mem_pestat] skip orientation FF as there are not enough pairs\n[bwa+samtools-sort] [M::mem_pestat] analyzing insert size distribution for orientation FR...\n[bwa+samtools-sort] [M::mem_pestat] (25, 50, 75) percentile: (372, 398, 425)\n[bwa+samtools-sort] [M::mem_pestat] low and high boundaries for computing mean and std.dev: (266, 531)\n[bwa+samtools-sort] [M::mem_pestat] mean and std.dev: (398.36, 39.55)\n[bwa+samtools-sort] [M::mem_pestat] low and high boundaries for proper pairs: (213, 584)\n[bwa+samtools-sort] [M::mem_pestat] skip orientation RF as there are not enough pairs\n[bwa+samtools-sort] [M::mem_pestat] skip orientation RR as there are not enough pairs\n[bwa+samtools-sort] [M::mem_process_seqs] Processed 24960 reads in 1.096 CPU sec, 0.551 real sec\n[bwa+samtools-sort] [main] Version: 0.7.17-r1188\n[bwa+samtools-sort] [main] CMD: bwa mem -v 3 -x intractg -t 2 spades.fasta R1.fq.gz R2.fq.gz\n[bwa+samtools-sort] [main] Real time: 0.695 sec; CPU: 1.172 sec\n[bwa+samtools-sort] [samclip] Total SAM records 24960, removed 329, allowed 1551, passed 24631\n[bwa+samtools-sort] [samclip] Header contained 11 lines\n[bwa+samtools-sort] [samclip] Done.\n[pilon] Picked up _JAVA_OPTIONS:  -Xmx4g\n[pilon] Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500\n[pilon] Genome: spades.fasta\n[pilon] Fixing snps, indels\n[pilon] Input genome size: 180578\n[pilon] Processing NODE_8_length_645_cov_4.279026:1-645\n[pilon] Processing NODE_7_length_790_cov_27.273932:1-790\n[pilon] NODE_8_length_645_cov_4.279026:1-645 log:\n[pilon] frags shovill.bam: coverage 6\n[pilon] Total Reads: 58, Coverage: 6, minDepth: 5\n[pilon] Confirmed 443 of 645 bases (68.68%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_8_length_645_cov_4.279026:1-645\n[pilon] Processing NODE_3_length_35158_cov_5.133250:1-35158\n[pilon] NODE_7_length_790_cov_27.273932:1-790 log:\n[pilon] frags shovill.bam: coverage 52\n[pilon] Total Reads: 464, Coverage: 52, minDepth: 13\n[pilon] Confirmed 707 of 790 bases (89.49%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_7_length_790_cov_27.273932:1-790\n[pilon] Processing NODE_5_length_4778_cov_10.593958:1-4778\n[pilon] NODE_5_length_4778_cov_10.593958:1-4778 log:\n[pilon] frags shovill.bam: coverage 32\n[pilon] Total Reads: 1257, Coverage: 32, minDepth: 8\n[pilon] Confirmed 4630 of 4778 bases (96.90%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_5_length_4778_cov_10.593958:1-4778\n[pilon] Processing NODE_10_length_197_cov_3.034884:1-197\n[pilon] NODE_10_length_197_cov_3.034884:1-197 log:\n[pilon] frags shovill.bam: coverage 0\n[pilon] Total Reads: 0, Coverage: 0, minDepth: 5\n[pilon] Confirmed 0 of 197 bases (0.00%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_10_length_197_cov_3.034884:1-197\n[pilon] Processing NODE_4_length_5981_cov_5.456729:1-5981\n[pilon] NODE_4_length_5981_cov_5.456729:1-5981 log:\n[pilon] frags shovill.bam: coverage 17\n[pilon] Total Reads: 816, Coverage: 17, minDepth: 5\n[pilon] Confirmed 5785 of 5981 bases (96.72%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_4_length_5981_cov_5.456729:1-5981\n[pilon] Processing NODE_6_length_816_cov_4.953191:1-816\n[pilon] NODE_6_length_816_cov_4.953191:1-816 log:\n[pilon] frags shovill.bam: coverage 10\n[pilon] Total Reads: 101, Coverage: 10, minDepth: 5\n[pilon] Confirmed 696 of 816 bases (85.29%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_6_length_816_cov_4.953191:1-816\n[pilon] Processing NODE_9_length_203_cov_2.282609:1-203\n[pilon] NODE_9_length_203_cov_2.282609:1-203 log:\n[pilon] frags shovill.bam: coverage 0\n[pilon] Total Reads: 0, Coverage: 0, minDepth: 5\n[pilon] Confirmed 0 of 203 bases (0.00%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_9_length_203_cov_2.282609:1-203\n[pilon] Processing NODE_1_length_73132_cov_5.060613:1-73132\n[pilon] NODE_3_length_35158_cov_5.133250:1-35158 log:\n[pilon] frags shovill.bam: coverage 17\n[pilon] Total Reads: 4641, Coverage: 17, minDepth: 5\n[pilon] Confirmed 34879 of 35158 bases (99.21%)\n[pilon] Corrected 1 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_3_length_35158_cov_5.133250:1-35158\n[pilon] NODE_1_length_73132_cov_5.060613:1-73132 log:\n[pilon] frags shovill.bam: coverage 17\n[pilon] Total Reads: 9521, Coverage: 17, minDepth: 5\n[pilon] Confirmed 72943 of 73132 bases (99.74%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_1_length_73132_cov_5.060613:1-73132\n[pilon] Processing NODE_2_length_58878_cov_5.127538:1-58878\n[pilon] NODE_2_length_58878_cov_5.127538:1-58878 log:\n[pilon] frags shovill.bam: coverage 17\n[pilon] Total Reads: 7773, Coverage: 17, minDepth: 5\n[pilon] Confirmed 58707 of 58878 bases (99.71%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_2_length_58878_cov_5.127538:1-58878\n[pilon] Writing NODE_1_length_73132_cov_5.060613:1-73132 changes to pilon.changes\n[pilon] Writing updated NODE_1_length_73132_cov_5.060613_pilon to pilon.fasta\n[pilon] Writing NODE_2_length_58878_cov_5.127538:1-58878 changes to pilon.changes\n[pilon] Writing updated NODE_2_length_58878_cov_5.127538_pilon to pilon.fasta\n[pilon] Writing NODE_3_length_35158_cov_5.133250:1-35158 changes to pilon.changes\n[pilon] Writing updated NODE_3_length_35158_cov_5.133250_pilon to pilon.fasta\n[pilon] Writing NODE_4_length_5981_cov_5.456729:1-5981 changes to pilon.changes\n[pilon] Writing updated NODE_4_length_5981_cov_5.456729_pilon to pilon.fasta\n[pilon] Writing NODE_5_length_4778_cov_10.593958:1-4778 changes to pilon.changes\n[pilon] Writing updated NODE_5_length_4778_cov_10.593958_pilon to pilon.fasta\n[pilon] Writing NODE_6_length_816_cov_4.953191:1-816 changes to pilon.changes\n[pilon] Writing updated NODE_6_length_816_cov_4.953191_pilon to pilon.fasta\n[pilon] Writing NODE_7_length_790_cov_27.273932:1-790 changes to pilon.changes\n[pilon] Writing updated NODE_7_length_790_cov_27.273932_pilon to pilon.fasta\n[pilon] Writing NODE_8_length_645_cov_4.279026:1-645 changes to pilon.changes\n[pilon] Writing updated NODE_8_length_645_cov_4.279026_pilon to pilon.fasta\n[pilon] Writing NODE_9_length_203_cov_2.282609:1-203 changes to pilon.changes\n[pilon] Writing updated NODE_9_length_203_cov_2.282609_pilon to pilon.fasta\n[pilon] Writing NODE_10_length_197_cov_3.034884:1-197 changes to pilon.changes\n[pilon] Writing updated NODE_10_length_197_cov_3.034884_pilon to pilon.fasta\n[pilon] Mean frags coverage: 17\n[pilon] Mean total coverage: 17\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "[shovill] Hello ubuntu\n[shovill] You ran: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/shovill --outdir out --cpus 2 --ram 4 --R1 /mnt/pulsar/files/staging/561742/inputs/dataset_925458.dat --R2 /mnt/pulsar/files/staging/561742/inputs/dataset_925460.dat --trim --namefmt contig%03d --depth 0 --minlen 0 --mincov 0 --assembler spades\n[shovill] This is shovill 1.0.4\n[shovill] Written by Torsten Seemann\n[shovill] Homepage is https://github.com/tseemann/shovill\n[shovill] Operating system is linux\n[shovill] Perl version is v5.26.2\n[shovill] Machine has 4 CPU cores and 15.67 GB RAM\n[shovill] Using bwa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/bwa | Version: 0.7.17-r1188\n[shovill] Using flash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/flash | FLASH v1.2.11\n[shovill] Using java - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/java | openjdk version \"11.0.1\" 2018-10-16 LTS\n[shovill] Using lighter - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/lighter | Lighter v1.1.2\n[shovill] Using mash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/mash | 2.1\n[shovill] Using megahit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit | MEGAHIT v1.1.3\n[shovill] Using megahit_toolkit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit_toolkit | v1.1.3\n[shovill] Using pigz - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pigz | pigz 2.3.4\n[shovill] Using pilon - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pilon | Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500\n[shovill] Using samclip - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samclip | samclip 0.2\n[shovill] Using samtools - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samtools | Version: 1.9 (using htslib 1.9)\n[shovill] Using seqtk - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/seqtk | Version: 1.3-r106\n[shovill] Using skesa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/skesa | SKESA v.2.3.0\n[shovill] Using spades.py - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py | SPAdes v3.13.0\n[shovill] Using trimmomatic - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/trimmomatic | 0.39\n[shovill] Using velvetg - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velvetg | Version 1.2.10\n[shovill] Using velveth - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velveth | Version 1.2.10\n[shovill] Checking if spades supports new stitched read library option instead of --s2\n[shovill] Yes, it supports --pe1-m\n[shovill] Using tempdir: /tmp\n[shovill] Changing into folder: /mnt/pulsar/files/staging/561742/working/out\n[shovill] Collecting raw read statistics with 'seqtk'\n[shovill] Running: seqtk fqchk -q3 \\/mnt\\/pulsar\\/files\\/staging\\/561742\\/inputs\\/dataset_925458\\.dat >/tmp/qqy52MTuLQ 2>&1 | sed 's/^/[seqtk] /' | tee -a shovill.log\n[shovill] Read stats: min_len = 150\n[shovill] Read stats: total_bp = 3744000\n[shovill] Read stats: avg_len = 150\n[shovill] Read stats: max_len = 150\n[shovill] Estimating genome size with 'mash'\n[shovill] Running: mash sketch -o /tmp/nz9ZCwJzPj/sketch -k 32 -m 3 -r \\/mnt\\/pulsar\\/files\\/staging\\/561742\\/inputs\\/dataset_925458\\.dat 2>&1 | sed 's/^/[mash] /' | tee -a shovill.log\n[shovill] Using genome size 185278 bp\n[shovill] Estimated sequencing depth: 20 x\n[shovill] No read depth reduction requested or necessary.\n[shovill] Appending -Xmx4g to _JAVA_OPTIONS\n[shovill] Trimming reads\n[shovill] Running: trimmomatic PE -threads 2 -phred33 \\/mnt\\/pulsar\\/files\\/staging\\/561742\\/inputs\\/dataset_925458\\.dat \\/mnt\\/pulsar\\/files\\/staging\\/561742\\/inputs\\/dataset_925460\\.dat R1.fq.gz /dev/null R2.fq.gz /dev/null ILLUMINACLIP:/mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/db/trimmomatic.fa:1:30:11 LEADING:3 TRAILING:3 MINLEN:30 TOPHRED33 2>&1 | sed 's/^/[trimmomatic] /' | tee -a shovill.log\n[shovill] Average read length looks like 150 bp\n[shovill] Automatically setting --minlen to 75\n[shovill] Setting k-mer range to (31 .. 112)\n[shovill] Estimated K-mers: 31 51 71 91 111 [kn=5, ks=20, kmin=31, kmax=112]\n[shovill] Using kmers: 31,51,71,91,111\n[shovill] Correcting reads with 'Lighter'\n[shovill] Running: lighter -od . -r R1.fq.gz -r R2.fq.gz -K 32 185278 -t 2 -maxcor 1 2>&1 | sed 's/^/[lighter] /' | tee -a shovill.log\n[shovill] Overlapping/stitcing PE reads with 'FLASH'\n[shovill] Running: flash -m 20 -M 150 -d . -o flash -z -t 2 R1.cor.fq.gz R2.cor.fq.gz 2>&1 | sed 's/^//' | tee -a shovill.log\n[shovill] Assembling reads with 'spades'\n[shovill] Running: spades.py --pe1-1 flash.notCombined_1.fastq.gz --pe1-2 flash.notCombined_2.fastq.gz --only-assembler --threads 2 --memory 4 -o spades --tmp-dir /tmp -k 31,51,71,91,111  --pe1-m flash.extendedFrags.fastq.gz 2>&1 | sed 's/^/[spades] /' | tee -a shovill.log\n[shovill] Checking for assembly errors in spades.fasta\n[shovill] Running: bwa index spades.fasta 2>&1 | sed 's/^/[bwa-index] /' | tee -a shovill.log\n[shovill] Running: samtools faidx spades.fasta 2>&1 | sed 's/^/[faidx] /' | tee -a shovill.log\n[shovill] Running: (bwa mem -v 3 -x intractg -t 2 spades.fasta R1.fq.gz R2.fq.gz | samclip --ref spades.fasta.fai | samtools sort --threads 1 -m 2048m --reference spades.fasta -T /tmp/samtools.9969 -o shovill.bam) 2>&1 | sed 's/^/[bwa+samtools-sort] /' | tee -a shovill.log\n[shovill] Running: samtools index shovill.bam 2>&1 | sed 's/^/[samtools-index] /' | tee -a shovill.log\n[shovill] Correcting errors in spades.fasta\n[shovill] Running: pilon --genome spades.fasta --frags shovill.bam --minmq 60 --minqual 3 --fix bases --output pilon --threads 2 --changes --mindepth 0.25 2>&1 | sed 's/^/[pilon] /' | tee -a shovill.log\n[shovill] Repaired 1 contigs from spades.fasta at 1 positions.\n[shovill] Assembly is 180578, estimated genome size was 185278 (-2.54%)\n[shovill] Using genome graph file 'spades/assembly_graph_with_scaffolds.gfa' => 'contigs.gfa'\n[shovill] Walltime used: 0 min 29 sec\n[shovill] Results in: /mnt/pulsar/files/staging/561742/working/out\n[shovill] Final assembly graph: /mnt/pulsar/files/staging/561742/working/out/contigs.gfa\n[shovill] Final assembly contigs: /mnt/pulsar/files/staging/561742/working/out/contigs.fa\n[shovill] It contains 10 (min=75) contigs totalling 180578 bp.\n[shovill] A shovel will move more dirt than a spade.\n[shovill] Done.\n", "state": "ok", "create_time": "2019-06-25T23:08:04.441452", "stderr": "[shovill] Hello ubuntu\n[shovill] You ran: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/shovill --outdir out --cpus 2 --ram 4 --R1 /mnt/pulsar/files/staging/561742/inputs/dataset_925458.dat --R2 /mnt/pulsar/files/staging/561742/inputs/dataset_925460.dat --trim --namefmt contig%03d --depth 0 --minlen 0 --mincov 0 --assembler spades\n[shovill] This is shovill 1.0.4\n[shovill] Written by Torsten Seemann\n[shovill] Homepage is https://github.com/tseemann/shovill\n[shovill] Operating system is linux\n[shovill] Perl version is v5.26.2\n[shovill] Machine has 4 CPU cores and 15.67 GB RAM\n[shovill] Using bwa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/bwa | Version: 0.7.17-r1188\n[shovill] Using flash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/flash | FLASH v1.2.11\n[shovill] Using java - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/java | openjdk version \"11.0.1\" 2018-10-16 LTS\n[shovill] Using lighter - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/lighter | Lighter v1.1.2\n[shovill] Using mash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/mash | 2.1\n[shovill] Using megahit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit | MEGAHIT v1.1.3\n[shovill] Using megahit_toolkit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit_toolkit | v1.1.3\n[shovill] Using pigz - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pigz | pigz 2.3.4\n[shovill] Using pilon - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pilon | Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500\n[shovill] Using samclip - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samclip | samclip 0.2\n[shovill] Using samtools - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samtools | Version: 1.9 (using htslib 1.9)\n[shovill] Using seqtk - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/seqtk | Version: 1.3-r106\n[shovill] Using skesa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/skesa | SKESA v.2.3.0\n[shovill] Using spades.py - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py | SPAdes v3.13.0\n[shovill] Using trimmomatic - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/trimmomatic | 0.39\n[shovill] Using velvetg - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velvetg | Version 1.2.10\n[shovill] Using velveth - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velveth | Version 1.2.10\n[shovill] Checking if spades supports new stitched read library option instead of --s2\n[shovill] Yes, it supports --pe1-m\n[shovill] Using tempdir: /tmp\n[shovill] Changing into folder: /mnt/pulsar/files/staging/561742/working/out\n[shovill] Collecting raw read statistics with 'seqtk'\n[shovill] Running: seqtk fqchk -q3 \\/mnt\\/pulsar\\/files\\/staging\\/561742\\/inputs\\/dataset_925458\\.dat >/tmp/qqy52MTuLQ 2>&1 | sed 's/^/[seqtk] /' | tee -a shovill.log\n[shovill] Read stats: min_len = 150\n[shovill] Read stats: total_bp = 3744000\n[shovill] Read stats: avg_len = 150\n[shovill] Read stats: max_len = 150\n[shovill] Estimating genome size with 'mash'\n[shovill] Running: mash sketch -o /tmp/nz9ZCwJzPj/sketch -k 32 -m 3 -r \\/mnt\\/pulsar\\/files\\/staging\\/561742\\/inputs\\/dataset_925458\\.dat 2>&1 | sed 's/^/[mash] /' | tee -a shovill.log\n[shovill] Using genome size 185278 bp\n[shovill] Estimated sequencing depth: 20 x\n[shovill] No read depth reduction requested or necessary.\n[shovill] Appending -Xmx4g to _JAVA_OPTIONS\n[shovill] Trimming reads\n[shovill] Running: trimmomatic PE -threads 2 -phred33 \\/mnt\\/pulsar\\/files\\/staging\\/561742\\/inputs\\/dataset_925458\\.dat \\/mnt\\/pulsar\\/files\\/staging\\/561742\\/inputs\\/dataset_925460\\.dat R1.fq.gz /dev/null R2.fq.gz /dev/null ILLUMINACLIP:/mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/db/trimmomatic.fa:1:30:11 LEADING:3 TRAILING:3 MINLEN:30 TOPHRED33 2>&1 | sed 's/^/[trimmomatic] /' | tee -a shovill.log\n[shovill] Average read length looks like 150 bp\n[shovill] Automatically setting --minlen to 75\n[shovill] Setting k-mer range to (31 .. 112)\n[shovill] Estimated K-mers: 31 51 71 91 111 [kn=5, ks=20, kmin=31, kmax=112]\n[shovill] Using kmers: 31,51,71,91,111\n[shovill] Correcting reads with 'Lighter'\n[shovill] Running: lighter -od . -r R1.fq.gz -r R2.fq.gz -K 32 185278 -t 2 -maxcor 1 2>&1 | sed 's/^/[lighter] /' | tee -a shovill.log\n[shovill] Overlapping/stitcing PE reads with 'FLASH'\n[shovill] Running: flash -m 20 -M 150 -d . -o flash -z -t 2 R1.cor.fq.gz R2.cor.fq.gz 2>&1 | sed 's/^//' | tee -a shovill.log\n[shovill] Assembling reads with 'spades'\n[shovill] Running: spades.py --pe1-1 flash.notCombined_1.fastq.gz --pe1-2 flash.notCombined_2.fastq.gz --only-assembler --threads 2 --memory 4 -o spades --tmp-dir /tmp -k 31,51,71,91,111  --pe1-m flash.extendedFrags.fastq.gz 2>&1 | sed 's/^/[spades] /' | tee -a shovill.log\n[shovill] Checking for assembly errors in spades.fasta\n[shovill] Running: bwa index spades.fasta 2>&1 | sed 's/^/[bwa-index] /' | tee -a shovill.log\n[shovill] Running: samtools faidx spades.fasta 2>&1 | sed 's/^/[faidx] /' | tee -a shovill.log\n[shovill] Running: (bwa mem -v 3 -x intractg -t 2 spades.fasta R1.fq.gz R2.fq.gz | samclip --ref spades.fasta.fai | samtools sort --threads 1 -m 2048m --reference spades.fasta -T /tmp/samtools.9969 -o shovill.bam) 2>&1 | sed 's/^/[bwa+samtools-sort] /' | tee -a shovill.log\n[shovill] Running: samtools index shovill.bam 2>&1 | sed 's/^/[samtools-index] /' | tee -a shovill.log\n[shovill] Correcting errors in spades.fasta\n[shovill] Running: pilon --genome spades.fasta --frags shovill.bam --minmq 60 --minqual 3 --fix bases --output pilon --threads 2 --changes --mindepth 0.25 2>&1 | sed 's/^/[pilon] /' | tee -a shovill.log\n[shovill] Repaired 1 contigs from spades.fasta at 1 positions.\n[shovill] Assembly is 180578, estimated genome size was 185278 (-2.54%)\n[shovill] Using genome graph file 'spades/assembly_graph_with_scaffolds.gfa' => 'contigs.gfa'\n[shovill] Walltime used: 0 min 29 sec\n[shovill] Results in: /mnt/pulsar/files/staging/561742/working/out\n[shovill] Final assembly graph: /mnt/pulsar/files/staging/561742/working/out/contigs.gfa\n[shovill] Final assembly contigs: /mnt/pulsar/files/staging/561742/working/out/contigs.fa\n[shovill] It contains 10 (min=75) contigs totalling 180578 bp.\n[shovill] A shovel will move more dirt than a spade.\n[shovill] Done.\n", "model_class": "Job", "params": {"adv": "{\"depth\": \"0\", \"gsize\": \"\", \"kmers\": \"\", \"mincov\": \"0\", \"minlen\": \"0\", \"namefmt\": \"contig%03d\", \"nocorr\": \"false\", \"opts\": \"\"}", "trim": "\"true\"", "log": "\"true\"", "assembler": "\"spades\"", "library": "{\"R1\": {\"values\": [{\"id\": 1068606, \"src\": \"hda\"}]}, \"R2\": {\"values\": [{\"id\": 1068608, \"src\": \"hda\"}]}, \"__current_case__\": 0, \"lib_type\": \"paired\"}", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "[mash] Estimated genome size: 185278\n[mash] Estimated coverage:    8.02\n[mash] Writing to /tmp/nz9ZCwJzPj/sketch.msh...\n[trimmomatic] Picked up _JAVA_OPTIONS:  -Xmx4g\n[trimmomatic] TrimmomaticPE: Started with arguments:\n[trimmomatic]  -threads 2 -phred33 /mnt/pulsar/files/staging/561742/inputs/dataset_925458.dat /mnt/pulsar/files/staging/561742/inputs/dataset_925460.dat R1.fq.gz /dev/null R2.fq.gz /dev/null ILLUMINACLIP:/mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/db/trimmomatic.fa:1:30:11 LEADING:3 TRAILING:3 MINLEN:30 TOPHRED33\n[trimmomatic] Using PrefixPair: 'AGATGTGTATAAGAGACAG' and 'AGATGTGTATAAGAGACAG'\n[trimmomatic] Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'\n[trimmomatic] Using Long Clipping Sequence: 'GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG'\n[trimmomatic] Using Long Clipping Sequence: 'TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCTCGTATGCCGTCTTCTGCTTG'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'\n[trimmomatic] Skipping duplicate Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAG'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'\n[trimmomatic] Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'\n[trimmomatic] Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT'\n[trimmomatic] Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'\n[trimmomatic] Skipping duplicate Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'\n[trimmomatic] Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'\n[trimmomatic] Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'\n[trimmomatic] Using Long Clipping Sequence: 'CTGTCTCTTATACACATCTCCGAGCCCACGAGAC'\n[trimmomatic] Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'\n[trimmomatic] Using Long Clipping Sequence: 'CTGTCTCTTATACACATCTGACGCTGCCGACGA'\n[trimmomatic] Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'\n[trimmomatic] ILLUMINACLIP: Using 2 prefix pairs, 17 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences\n[trimmomatic] Input Read Pairs: 12480 Both Surviving: 12480 (100.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 0 (0.00%) Dropped: 0 (0.00%)\n[trimmomatic] TrimmomaticPE: Completed successfully\n[lighter] [2019-06-25 23:06:08] =============Start====================\n[lighter] [2019-06-25 23:06:08] Scanning the input files to infer alpha(sampling rate)\n[lighter] [2019-06-25 23:06:08] Average coverage is 20.207 and alpha is 0.346\n[lighter] [2019-06-25 23:06:08] Bad quality threshold is \".\"\n[lighter] [2019-06-25 23:06:09] Finish sampling kmers\n[lighter] [2019-06-25 23:06:09] Bloom filter A's false positive rate: 0.023210\n[lighter] [2019-06-25 23:06:10] Finish storing trusted kmers\n[lighter] [2019-06-25 23:06:10] Finish error correction\n[lighter] Processed 24960 reads:\n[lighter] \t13148 are error-free\n[lighter] \tCorrected 17731 bases(1.501101 corrections for reads with errors)\n[lighter] \tTrimmed 0 reads with average trimmed bases 0.000000\n[lighter] \tDiscard 0 reads\n[FLASH] Starting FLASH v1.2.11\n[FLASH] Fast Length Adjustment of SHort reads\n[FLASH]  \n[FLASH] Input files:\n[FLASH]     R1.cor.fq.gz\n[FLASH]     R2.cor.fq.gz\n[FLASH]  \n[FLASH] Output files:\n[FLASH]     ./flash.extendedFrags.fastq.gz\n[FLASH]     ./flash.notCombined_1.fastq.gz\n[FLASH]     ./flash.notCombined_2.fastq.gz\n[FLASH]     ./flash.hist\n[FLASH]     ./flash.histogram\n[FLASH]  \n[FLASH] Parameters:\n[FLASH]     Min overlap:           20\n[FLASH]     Max overlap:           150\n[FLASH]     Max mismatch density:  0.250000\n[FLASH]     Allow \"outie\" pairs:   false\n[FLASH]     Cap mismatch quals:    false\n[FLASH]     Combiner threads:      2\n[FLASH]     Input format:          FASTQ, phred_offset=33\n[FLASH]     Output format:         FASTQ, phred_offset=33, gzip\n[FLASH]  \n[FLASH] Starting reader and writer threads\n[FLASH] Starting 2 combiner threads\n[FLASH] Processed 12480 read pairs\n[FLASH]  \n[FLASH] Read combination statistics:\n[FLASH]     Total pairs:      12480\n[FLASH]     Combined pairs:   50\n[FLASH]     Uncombined pairs: 12430\n[FLASH]     Percent combined: 0.40%\n[FLASH]  \n[FLASH] Writing histogram files.\n[FLASH]  \n[FLASH] FLASH v1.2.11 complete!\n[FLASH] 0.765 seconds elapsed\n[spades] Command line: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py\t--pe1-1\t/mnt/pulsar/files/staging/561742/working/out/flash.notCombined_1.fastq.gz\t--pe1-2\t/mnt/pulsar/files/staging/561742/working/out/flash.notCombined_2.fastq.gz\t--only-assembler\t--threads\t2\t--memory\t4\t-o\t/mnt/pulsar/files/staging/561742/working/out/spades\t--tmp-dir\t/tmp\t-k\t31,51,71,91,111\t--pe1-m\t/mnt/pulsar/files/staging/561742/working/out/flash.extendedFrags.fastq.gz\t\n[spades] \n[spades] System information:\n[spades]   SPAdes version: 3.13.0\n[spades]   Python version: 3.6.7\n[spades]   OS: Linux-4.4.0-103-generic-x86_64-with-debian-stretch-sid\n[spades] \n[spades] Output dir: /mnt/pulsar/files/staging/561742/working/out/spades\n[spades] Mode: ONLY assembling (without read error correction)\n[spades] Debug mode is turned OFF\n[spades] \n[spades] Dataset parameters:\n[spades]   Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n[spades]   Reads:\n[spades]     Library number: 1, library type: paired-end\n[spades]       orientation: fr\n[spades]       left reads: ['/mnt/pulsar/files/staging/561742/working/out/flash.notCombined_1.fastq.gz']\n[spades]       right reads: ['/mnt/pulsar/files/staging/561742/working/out/flash.notCombined_2.fastq.gz']\n[spades]       interlaced reads: not specified\n[spades]       single reads: not specified\n[spades]       merged reads: ['/mnt/pulsar/files/staging/561742/working/out/flash.extendedFrags.fastq.gz']\n[spades] Assembly parameters:\n[spades]   k: [31, 51, 71, 91, 111]\n[spades]   Repeat resolution is enabled\n[spades]   Mismatch careful mode is turned OFF\n[spades]   MismatchCorrector will be SKIPPED\n[spades]   Coverage cutoff is turned OFF\n[spades] Other parameters:\n[spades]   Dir for temp files: /tmp\n[spades]   Threads: 2\n[spades]   Memory limit (in Gb): 4\n[spades] \n[spades] \n[spades] ======= SPAdes pipeline started. Log can be found here: /mnt/pulsar/files/staging/561742/working/out/spades/spades.log\n[spades] \n[spades] \n[spades] ===== Assembling started.\n[spades] \n[spades] \n[spades] == Running assembler: K31\n[spades] \n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /mnt/pulsar/files/staging/561742/working/out/spades/K31/configs/config.info\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 4 Gb\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from refs/heads/spades_3.13.0, git revision 8ea46659e9b2aca35444a808db550ac333006f8b\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/mnt/pulsar/files/staging/561742/working/out/spades/dataset.info) with K=31\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 2\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n[spades]   0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n[spades]   0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n[spades]   0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n[spades]   0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n[spades]   0:00:00.273    76M / 100M  INFO    General                 (binary_converter.hpp      : 117)   12430 reads written\n[spades]   0:00:00.281     4M / 100M  INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n[spades]   0:00:00.434   132M / 196M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n[spades]   0:00:00.435     4M / 196M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n[spades]   0:00:00.584   132M / 196M  INFO    General                 (binary_converter.hpp      : 117)   50 reads written\n[spades]   0:00:00.737     4M / 196M  INFO    General                 (construction.cpp          : 111)   Max read length 280\n[spades]   0:00:00.737     4M / 196M  INFO    General                 (construction.cpp          : 114)   Max read length without merged 150\n[spades]   0:00:00.737     4M / 196M  INFO    General                 (construction.cpp          : 117)   Average read length 150.203\n[spades]   0:00:00.737     4M / 196M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n[spades]   0:00:00.737     4M / 196M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 4 files using 2 threads. This might take a while.\n[spades]   0:00:00.738     4M / 196M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 4096\n[spades]   0:00:00.738     4M / 196M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 0.666016 Gb\n[spades]   0:00:00.738     4M / 196M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 16777216\n[spades]   0:00:01.011     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 289)   Processed 49820 reads\n[spades]   0:00:01.011     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n[spades]   0:00:01.012     8M / 1G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 49820 reads\n[spades]   0:00:01.012     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n[spades]   0:00:01.017     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 196976 kmers in total.\n[spades]   0:00:01.017     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n[spades]   0:00:01.018     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n[spades]   0:00:01.018     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n[spades]   0:00:01.018     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 32 files using 2 threads. This might take a while.\n[spades]   0:00:01.018     8M / 1G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 4096\n[spades]   0:00:01.018     8M / 1G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 0.665365 Gb\n[spades]   0:00:01.018     8M / 1G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 2097152\n[spades]   0:00:01.071     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 380)   Processed 196976 kmers\n[spades]   0:00:01.071     1G / 1G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 196976 kmers.\n[spades]   0:00:01.072     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n[spades]   0:00:01.081     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 196785 kmers in total.\n[spades]   0:00:01.081     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n[spades]   0:00:01.084     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n[spades]   0:00:01.144     8M / 1G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n[spades]   0:00:01.146     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 100064 bytes occupied (4.06795 bits per kmer).\n[spades]   0:00:01.146     8M / 1G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n[spades]   0:00:01.197     8M / 1G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n[spades]   0:00:01.197     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n[spades]   0:00:01.197     8M / 1G    INFO    General                 (construction.cpp          : 253)   Early tip clipper length bound set as (RL - K)\n[spades]   0:00:01.197     8M / 1G    INFO   Early tip clipping       (early_simplification.hpp  : 181)   Early tip clipping\n[spades]   0:00:01.265     8M / 1G    INFO   Early tip clipping       (early_simplification.hpp  : 184)   12066 32-mers were removed by early tip clipper\n[spades]   0:00:01.265     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n[spades]   0:00:01.265     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n[spades]   0:00:01.308     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 570 sequences extracted\n[spades]   0:00:01.333     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n[spades]   0:00:01.343     8M / 1G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n[spades]   0:00:01.344     8M / 1G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n[spades]   0:00:01.344     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n[spades]   0:00:01.344     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n[spades]   0:00:01.377     8M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 92376 bytes occupied (3.75177 bits per kmer).\n[spades]   0:00:01.377     8M / 1G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n[spades]   0:00:01.602     8M / 1G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n[spades]   0:00:01.624     8M / 1G    INFO    General                 (construction.cpp          : 464)   Processed 1140 edges\n[spades]   0:00:01.627     8M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n[spades]   0:00:01.627     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n[spades]   0:00:01.627     8M / 1G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-\n..\n1G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 5.33246\n[spades]   0:00:05.092    16M / 1G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 5.33246\n[spades]   0:00:05.092    16M / 1G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n[spades]   0:00:05.092    16M / 1G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n[spades]   0:00:05.092    16M / 1G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n[spades]   0:00:05.092    16M / 1G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n[spades]   0:00:05.092    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 0 paths from 15 (0%)\n[spades]   0:00:05.093    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 2 paths from 15 (13%)\n[spades]   0:00:05.093    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 4 paths from 15 (26%)\n[spades]   0:00:05.094    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 6 paths from 15 (40%)\n[spades]   0:00:05.094    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 8 paths from 15 (53%)\n[spades]   0:00:05.095    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 10 paths from 15 (66%)\n[spades]   0:00:05.095    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 12 paths from 15 (80%)\n[spades]   0:00:05.095    16M / 1G    INFO    General                 (path_extender.hpp         : 885)   Processed 14 paths from 15 (93%)\n[spades]   0:00:05.095    16M / 1G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n[spades]   0:00:05.096    16M / 1G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n[spades]   0:00:05.096    16M / 1G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n[spades]   0:00:05.096    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n[spades]   0:00:05.096    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n[spades]   0:00:05.096    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n[spades]   0:00:05.096    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n[spades]   0:00:05.096    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n[spades]   0:00:05.096    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n[spades]   0:00:05.096    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n[spades]   0:00:05.096    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 296)   Traversed 1 loops\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n[spades]   0:00:05.097    16M / 1G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n[spades]   0:00:05.098    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n[spades]   0:00:05.098    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n[spades]   0:00:05.098    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n[spades]   0:00:05.098    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n[spades]   0:00:05.098    16M / 1G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n[spades]   0:00:05.098    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n[spades]   0:00:05.098    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n[spades]   0:00:05.098    16M / 1G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n[spades]   0:00:05.098    16M / 1G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n[spades]   0:00:05.098    16M / 1G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n[spades]   0:00:05.098    16M / 1G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n[spades]   0:00:05.099    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /mnt/pulsar/files/staging/561742/working/out/spades//K111/assembly_graph_with_scaffolds.gfa\n[spades]   0:00:05.105    16M / 1G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /mnt/pulsar/files/staging/561742/working/out/spades//K111/before_rr.fasta\n[spades]   0:00:05.118    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /mnt/pulsar/files/staging/561742/working/out/spades//K111/assembly_graph.fastg\n[spades]   0:00:05.135    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /mnt/pulsar/files/staging/561742/working/out/spades//K111/final_contigs.paths\n[spades]   0:00:05.148    16M / 1G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /mnt/pulsar/files/staging/561742/working/out/spades//K111/scaffolds.paths\n[spades]   0:00:05.171    16M / 1G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n[spades]   0:00:05.172     8M / 1G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 5 seconds\n[spades] \n[spades] ===== Assembling finished. Used k-mer sizes: 31, 51, 71, 91, 111 \n[spades] \n[spades]  * Assembled contigs are in /mnt/pulsar/files/staging/561742/working/out/spades/contigs.fasta\n[spades]  * Assembled scaffolds are in /mnt/pulsar/files/staging/561742/working/out/spades/scaffolds.fasta\n[spades]  * Assembly graph is in /mnt/pulsar/files/staging/561742/working/out/spades/assembly_graph.fastg\n[spades]  * Assembly graph in GFA format is in /mnt/pulsar/files/staging/561742/working/out/spades/assembly_graph_with_scaffolds.gfa\n[spades]  * Paths in the assembly graph corresponding to the contigs are in /mnt/pulsar/files/staging/561742/working/out/spades/contigs.paths\n[spades]  * Paths in the assembly graph corresponding to the scaffolds are in /mnt/pulsar/files/staging/561742/working/out/spades/scaffolds.paths\n[spades] \n[spades] ======= SPAdes pipeline finished.\n[spades] \n[spades] SPAdes log can be found here: /mnt/pulsar/files/staging/561742/working/out/spades/spades.log\n[spades] \n[spades] Thank you for using SPAdes!\n[bwa-index] [bwa_index] Pack FASTA... 0.00 sec\n[bwa-index] [bwa_index] Construct BWT for the packed sequence...\n[bwa-index] [bwa_index] 0.03 seconds elapse.\n[bwa-index] [bwa_index] Update BWT... 0.00 sec\n[bwa-index] [bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa-index] [bwa_index] Construct SA from BWT and Occ... 0.02 sec\n[bwa-index] [main] Version: 0.7.17-r1188\n[bwa-index] [main] CMD: bwa index spades.fasta\n[bwa-index] [main] Real time: 0.114 sec; CPU: 0.052 sec\n[bwa+samtools-sort] [M::bwa_idx_load_from_disk] read 0 ALT contigs\n[bwa+samtools-sort] [samclip] samclip 0.2 by Torsten Seemann (@torstenseemann)\n[bwa+samtools-sort] [samclip] Loading: spades.fasta.fai\n[bwa+samtools-sort] [samclip] Found 10 sequences in spades.fasta.fai\n[bwa+samtools-sort] [M::process] read 24960 sequences (3743910 bp)...\n[bwa+samtools-sort] [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 12225, 0, 0)\n[bwa+samtools-sort] [M::mem_pestat] skip orientation FF as there are not enough pairs\n[bwa+samtools-sort] [M::mem_pestat] analyzing insert size distribution for orientation FR...\n[bwa+samtools-sort] [M::mem_pestat] (25, 50, 75) percentile: (372, 398, 425)\n[bwa+samtools-sort] [M::mem_pestat] low and high boundaries for computing mean and std.dev: (266, 531)\n[bwa+samtools-sort] [M::mem_pestat] mean and std.dev: (398.36, 39.55)\n[bwa+samtools-sort] [M::mem_pestat] low and high boundaries for proper pairs: (213, 584)\n[bwa+samtools-sort] [M::mem_pestat] skip orientation RF as there are not enough pairs\n[bwa+samtools-sort] [M::mem_pestat] skip orientation RR as there are not enough pairs\n[bwa+samtools-sort] [M::mem_process_seqs] Processed 24960 reads in 1.096 CPU sec, 0.551 real sec\n[bwa+samtools-sort] [main] Version: 0.7.17-r1188\n[bwa+samtools-sort] [main] CMD: bwa mem -v 3 -x intractg -t 2 spades.fasta R1.fq.gz R2.fq.gz\n[bwa+samtools-sort] [main] Real time: 0.695 sec; CPU: 1.172 sec\n[bwa+samtools-sort] [samclip] Total SAM records 24960, removed 329, allowed 1551, passed 24631\n[bwa+samtools-sort] [samclip] Header contained 11 lines\n[bwa+samtools-sort] [samclip] Done.\n[pilon] Picked up _JAVA_OPTIONS:  -Xmx4g\n[pilon] Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500\n[pilon] Genome: spades.fasta\n[pilon] Fixing snps, indels\n[pilon] Input genome size: 180578\n[pilon] Processing NODE_8_length_645_cov_4.279026:1-645\n[pilon] Processing NODE_7_length_790_cov_27.273932:1-790\n[pilon] NODE_8_length_645_cov_4.279026:1-645 log:\n[pilon] frags shovill.bam: coverage 6\n[pilon] Total Reads: 58, Coverage: 6, minDepth: 5\n[pilon] Confirmed 443 of 645 bases (68.68%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_8_length_645_cov_4.279026:1-645\n[pilon] Processing NODE_3_length_35158_cov_5.133250:1-35158\n[pilon] NODE_7_length_790_cov_27.273932:1-790 log:\n[pilon] frags shovill.bam: coverage 52\n[pilon] Total Reads: 464, Coverage: 52, minDepth: 13\n[pilon] Confirmed 707 of 790 bases (89.49%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_7_length_790_cov_27.273932:1-790\n[pilon] Processing NODE_5_length_4778_cov_10.593958:1-4778\n[pilon] NODE_5_length_4778_cov_10.593958:1-4778 log:\n[pilon] frags shovill.bam: coverage 32\n[pilon] Total Reads: 1257, Coverage: 32, minDepth: 8\n[pilon] Confirmed 4630 of 4778 bases (96.90%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_5_length_4778_cov_10.593958:1-4778\n[pilon] Processing NODE_10_length_197_cov_3.034884:1-197\n[pilon] NODE_10_length_197_cov_3.034884:1-197 log:\n[pilon] frags shovill.bam: coverage 0\n[pilon] Total Reads: 0, Coverage: 0, minDepth: 5\n[pilon] Confirmed 0 of 197 bases (0.00%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_10_length_197_cov_3.034884:1-197\n[pilon] Processing NODE_4_length_5981_cov_5.456729:1-5981\n[pilon] NODE_4_length_5981_cov_5.456729:1-5981 log:\n[pilon] frags shovill.bam: coverage 17\n[pilon] Total Reads: 816, Coverage: 17, minDepth: 5\n[pilon] Confirmed 5785 of 5981 bases (96.72%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_4_length_5981_cov_5.456729:1-5981\n[pilon] Processing NODE_6_length_816_cov_4.953191:1-816\n[pilon] NODE_6_length_816_cov_4.953191:1-816 log:\n[pilon] frags shovill.bam: coverage 10\n[pilon] Total Reads: 101, Coverage: 10, minDepth: 5\n[pilon] Confirmed 696 of 816 bases (85.29%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_6_length_816_cov_4.953191:1-816\n[pilon] Processing NODE_9_length_203_cov_2.282609:1-203\n[pilon] NODE_9_length_203_cov_2.282609:1-203 log:\n[pilon] frags shovill.bam: coverage 0\n[pilon] Total Reads: 0, Coverage: 0, minDepth: 5\n[pilon] Confirmed 0 of 203 bases (0.00%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_9_length_203_cov_2.282609:1-203\n[pilon] Processing NODE_1_length_73132_cov_5.060613:1-73132\n[pilon] NODE_3_length_35158_cov_5.133250:1-35158 log:\n[pilon] frags shovill.bam: coverage 17\n[pilon] Total Reads: 4641, Coverage: 17, minDepth: 5\n[pilon] Confirmed 34879 of 35158 bases (99.21%)\n[pilon] Corrected 1 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_3_length_35158_cov_5.133250:1-35158\n[pilon] NODE_1_length_73132_cov_5.060613:1-73132 log:\n[pilon] frags shovill.bam: coverage 17\n[pilon] Total Reads: 9521, Coverage: 17, minDepth: 5\n[pilon] Confirmed 72943 of 73132 bases (99.74%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_1_length_73132_cov_5.060613:1-73132\n[pilon] Processing NODE_2_length_58878_cov_5.127538:1-58878\n[pilon] NODE_2_length_58878_cov_5.127538:1-58878 log:\n[pilon] frags shovill.bam: coverage 17\n[pilon] Total Reads: 7773, Coverage: 17, minDepth: 5\n[pilon] Confirmed 58707 of 58878 bases (99.71%)\n[pilon] Corrected 0 snps; 0 ambiguous bases; corrected 0 small insertions totaling 0 bases, 0 small deletions totaling 0 bases\n[pilon] Finished processing NODE_2_length_58878_cov_5.127538:1-58878\n[pilon] Writing NODE_1_length_73132_cov_5.060613:1-73132 changes to pilon.changes\n[pilon] Writing updated NODE_1_length_73132_cov_5.060613_pilon to pilon.fasta\n[pilon] Writing NODE_2_length_58878_cov_5.127538:1-58878 changes to pilon.changes\n[pilon] Writing updated NODE_2_length_58878_cov_5.127538_pilon to pilon.fasta\n[pilon] Writing NODE_3_length_35158_cov_5.133250:1-35158 changes to pilon.changes\n[pilon] Writing updated NODE_3_length_35158_cov_5.133250_pilon to pilon.fasta\n[pilon] Writing NODE_4_length_5981_cov_5.456729:1-5981 changes to pilon.changes\n[pilon] Writing updated NODE_4_length_5981_cov_5.456729_pilon to pilon.fasta\n[pilon] Writing NODE_5_length_4778_cov_10.593958:1-4778 changes to pilon.changes\n[pilon] Writing updated NODE_5_length_4778_cov_10.593958_pilon to pilon.fasta\n[pilon] Writing NODE_6_length_816_cov_4.953191:1-816 changes to pilon.changes\n[pilon] Writing updated NODE_6_length_816_cov_4.953191_pilon to pilon.fasta\n[pilon] Writing NODE_7_length_790_cov_27.273932:1-790 changes to pilon.changes\n[pilon] Writing updated NODE_7_length_790_cov_27.273932_pilon to pilon.fasta\n[pilon] Writing NODE_8_length_645_cov_4.279026:1-645 changes to pilon.changes\n[pilon] Writing updated NODE_8_length_645_cov_4.279026_pilon to pilon.fasta\n[pilon] Writing NODE_9_length_203_cov_2.282609:1-203 changes to pilon.changes\n[pilon] Writing updated NODE_9_length_203_cov_2.282609_pilon to pilon.fasta\n[pilon] Writing NODE_10_length_197_cov_3.034884:1-197 changes to pilon.changes\n[pilon] Writing updated NODE_10_length_197_cov_3.034884_pilon to pilon.fasta\n[pilon] Mean frags coverage: 17\n[pilon] Mean total coverage: 17\n", "job_messages": [], "id": "119edd4fd170f2a2", "job_stdout": null}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4-1", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4", "time_seconds": 38.66725397109985, "inputs": {"library|lib_type": "paired", "assembler": "megahit", "library|R2": {"src": "hda", "id": "0a990de853a62cee"}, "library|R1": {"src": "hda", "id": "2e5a64347926230e"}}, "tool_version": "1.0.4", "output_problems": ["Job in error state.", "Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4", "update_time": "2019-06-25T23:10:32.862507", "inputs": {"R1": {"src": "hda", "id": "2e5a64347926230e", "uuid": "97b000aa-0bef-421f-a92f-06aa1cd5aca0"}, "R2": {"src": "hda", "id": "0a990de853a62cee", "uuid": "d279bda2-6022-4148-ba03-c192125b4de0"}}, "outputs": {"contigs": {"src": "hda", "id": "55227e2d91a9c70c", "uuid": "85b54749-2baa-4993-ad78-9f13505a3d00"}, "shovill_std_log": {"src": "hda", "id": "3986894f10789df8", "uuid": "e918e0d5-8091-454a-adba-8b2f2033d482"}, "contigs_graph": {"src": "hda", "id": "eab955eef57d624a", "uuid": "d53e12e7-441b-405b-a174-84c712ee10b0"}}, "history_id": "f840675b8d7f5485", "stdout": "[mash] Estimated genome size: 185278\n[mash] Estimated coverage:    8.02\n[mash] Writing to /tmp/hoIaQ5YY9x/sketch.msh...\n[lighter] [2019-06-25 23:08:05] =============Start====================\n[lighter] [2019-06-25 23:08:05] Scanning the input files to infer alpha(sampling rate)\n[lighter] [2019-06-25 23:08:05] Average coverage is 20.207 and alpha is 0.346\n[lighter] [2019-06-25 23:08:05] Bad quality threshold is \".\"\n[lighter] [2019-06-25 23:08:06] Finish sampling kmers\n[lighter] [2019-06-25 23:08:06] Bloom filter A's false positive rate: 0.023199\n[lighter] [2019-06-25 23:08:06] Finish storing trusted kmers\n[lighter] [2019-06-25 23:08:07] Finish error correction\n[lighter] Processed 24960 reads:\n[lighter] \t13131 are error-free\n[lighter] \tCorrected 17777 bases(1.502832 corrections for reads with errors)\n[lighter] \tTrimmed 0 reads with average trimmed bases 0.000000\n[lighter] \tDiscard 0 reads\n[FLASH] Starting FLASH v1.2.11\n[FLASH] Fast Length Adjustment of SHort reads\n[FLASH]  \n[FLASH] Input files:\n[FLASH]     R1.cor.fq.gz\n[FLASH]     R2.cor.fq.gz\n[FLASH]  \n[FLASH] Output files:\n[FLASH]     ./flash.extendedFrags.fastq.gz\n[FLASH]     ./flash.notCombined_1.fastq.gz\n[FLASH]     ./flash.notCombined_2.fastq.gz\n[FLASH]     ./flash.hist\n[FLASH]     ./flash.histogram\n[FLASH]  \n[FLASH] Parameters:\n[FLASH]     Min overlap:           20\n[FLASH]     Max overlap:           150\n[FLASH]     Max mismatch density:  0.250000\n[FLASH]     Allow \"outie\" pairs:   false\n[FLASH]     Cap mismatch quals:    false\n[FLASH]     Combiner threads:      2\n[FLASH]     Input format:          FASTQ, phred_offset=33\n[FLASH]     Output format:         FASTQ, phred_offset=33, gzip\n[FLASH]  \n[FLASH] Starting reader and writer threads\n[FLASH] Starting 2 combiner threads\n[FLASH] Processed 12480 read pairs\n[FLASH]  \n[FLASH] Read combination statistics:\n[FLASH]     Total pairs:      12480\n[FLASH]     Combined pairs:   50\n[FLASH]     Uncombined pairs: 12430\n[FLASH]     Percent combined: 0.40%\n[FLASH]  \n[FLASH] Writing histogram files.\n[FLASH]  \n[FLASH] FLASH v1.2.11 complete!\n[FLASH] 0.709 seconds elapsed\n[megahit] MEGAHIT v1.1.3\n[megahit] --- [Tue Jun 25 23:08:08 2019] Start assembly. Number of CPU threads 2 ---\n[megahit] --- [Tue Jun 25 23:08:08 2019] Available memory: 16826757120, used: 4000000000\n[megahit] --- [Tue Jun 25 23:08:08 2019] Converting reads to binaries ---\n[megahit] b'    [read_lib_functions-inl.h  : 209]     Lib 0 (flash.notCombined_1.fastq.gz,flash.notCombined_2.fastq.gz): pe, 24860 reads, 150 max length'\n[megahit] b'    [read_lib_functions-inl.h  : 209]     Lib 1 (flash.extendedFrags.fastq.gz): se, 50 reads, 280 max length'\n[megahit] b'    [utils.h                   : 126]     Real: 0.0975\\tuser: 0.0240\\tsys: 0.0000\\tmaxrss: 7868'\n[megahit] --- [Tue Jun 25 23:08:08 2019] k list: 31,51,71,91,111 ---\n[megahit] --- [Tue Jun 25 23:08:08 2019] Extracting solid (k+1)-mers for k = 31 ---\n[megahit] --- [Tue Jun 25 23:08:08 2019] Building graph for k = 31 ---\n[megahit] --- [Tue Jun 25 23:08:09 2019] Assembling contigs from SdBG for k = 31 ---\n[megahit] --- [Tue Jun 25 23:08:09 2019] Local assembling k = 31 ---\n[megahit] --- [Tue Jun 25 23:08:10 2019] Extracting iterative edges from k = 31 to 51 ---\n[megahit] --- [Tue Jun 25 23:08:10 2019] Building graph for k = 51 ---\n[megahit] --- [Tue Jun 25 23:08:10 2019] Assembling contigs from SdBG for k = 51 ---\n[megahit] --- [Tue Jun 25 23:08:11 2019] Local assembling k = 51 ---\n[megahit] --- [Tue Jun 25 23:08:11 2019] Extracting iterative edges from k = 51 to 71 ---\n[megahit] --- [Tue Jun 25 23:08:11 2019] Building graph for k = 71 ---\n[megahit] --- [Tue Jun 25 23:08:11 2019] Assembling contigs from SdBG for k = 71 ---\n[megahit] --- [Tue Jun 25 23:08:12 2019] Local assembling k = 71 ---\n[megahit] --- [Tue Jun 25 23:08:12 2019] Extracting iterative edges from k = 71 to 91 ---\n[megahit] --- [Tue Jun 25 23:08:12 2019] Building graph for k = 91 ---\n[megahit] --- [Tue Jun 25 23:08:12 2019] Assembling contigs from SdBG for k = 91 ---\n[megahit] --- [Tue Jun 25 23:08:13 2019] Local assembling k = 91 ---\n[megahit] --- [Tue Jun 25 23:08:13 2019] Extracting iterative edges from k = 91 to 111 ---\n[megahit] --- [Tue Jun 25 23:08:13 2019] Building graph for k = 111 ---\n[megahit] --- [Tue Jun 25 23:08:13 2019] Assembling contigs from SdBG for k = 111 ---\n[megahit] --- [Tue Jun 25 23:08:14 2019] Merging to output final contigs ---\n[megahit] --- [STAT] 39 contigs, total 184390 bp, min 113 bp, max 62390 bp, avg 4728 bp, N50 44526 bp\n[megahit] --- [Tue Jun 25 23:08:14 2019] ALL DONE. Time elapsed: 5.947897 seconds ---\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "[shovill] Hello ubuntu\n[shovill] You ran: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/shovill --outdir out --cpus 2 --ram 4 --R1 /mnt/pulsar/files/staging/561748/inputs/dataset_925469.dat --R2 /mnt/pulsar/files/staging/561748/inputs/dataset_925471.dat --namefmt contig%05d --depth 100 --nocorr --minlen 0 --mincov 2 --assembler megahit\n[shovill] This is shovill 1.0.4\n[shovill] Written by Torsten Seemann\n[shovill] Homepage is https://github.com/tseemann/shovill\n[shovill] Operating system is linux\n[shovill] Perl version is v5.26.2\n[shovill] Machine has 4 CPU cores and 15.67 GB RAM\n[shovill] Using bwa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/bwa | Version: 0.7.17-r1188\n[shovill] Using flash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/flash | FLASH v1.2.11\n[shovill] Using java - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/java | openjdk version \"11.0.1\" 2018-10-16 LTS\n[shovill] Using lighter - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/lighter | Lighter v1.1.2\n[shovill] Using mash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/mash | 2.1\n[shovill] Using megahit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit | MEGAHIT v1.1.3\n[shovill] Using megahit_toolkit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit_toolkit | v1.1.3\n[shovill] Using pigz - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pigz | pigz 2.3.4\n[shovill] Using pilon - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pilon | Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500\n[shovill] Using samclip - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samclip | samclip 0.2\n[shovill] Using samtools - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samtools | Version: 1.9 (using htslib 1.9)\n[shovill] Using seqtk - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/seqtk | Version: 1.3-r106\n[shovill] Using skesa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/skesa | SKESA v.2.3.0\n[shovill] Using spades.py - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py | SPAdes v3.13.0\n[shovill] Using trimmomatic - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/trimmomatic | 0.39\n[shovill] Using velvetg - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velvetg | Version 1.2.10\n[shovill] Using velveth - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velveth | Version 1.2.10\n[shovill] Using tempdir: /tmp\n[shovill] Changing into folder: /mnt/pulsar/files/staging/561748/working/out\n[shovill] Collecting raw read statistics with 'seqtk'\n[shovill] Running: seqtk fqchk -q3 \\/mnt\\/pulsar\\/files\\/staging\\/561748\\/inputs\\/dataset_925469\\.dat >/tmp/Gf19cqn8Lx 2>&1 | sed 's/^/[seqtk] /' | tee -a shovill.log\n[shovill] Read stats: max_len = 150\n[shovill] Read stats: min_len = 150\n[shovill] Read stats: total_bp = 3744000\n[shovill] Read stats: avg_len = 150\n[shovill] Estimating genome size with 'mash'\n[shovill] Running: mash sketch -o /tmp/hoIaQ5YY9x/sketch -k 32 -m 3 -r \\/mnt\\/pulsar\\/files\\/staging\\/561748\\/inputs\\/dataset_925469\\.dat 2>&1 | sed 's/^/[mash] /' | tee -a shovill.log\n[shovill] Using genome size 185278 bp\n[shovill] Estimated sequencing depth: 20 x\n[shovill] No read depth reduction requested or necessary.\n[shovill] Appending -Xmx4g to _JAVA_OPTIONS\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561748\\/inputs\\/dataset_925469\\.dat R1.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561748\\/inputs\\/dataset_925471\\.dat R2.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Average read length looks like 150 bp\n[shovill] Automatically setting --minlen to 75\n[shovill] Setting k-mer range to (31 .. 112)\n[shovill] Estimated K-mers: 31 51 71 91 111 [kn=5, ks=20, kmin=31, kmax=112]\n[shovill] Using kmers: 31,51,71,91,111\n[shovill] Correcting reads with 'Lighter'\n[shovill] Running: lighter -od . -r R1.fq.gz -r R2.fq.gz -K 32 185278 -t 2 -maxcor 1 2>&1 | sed 's/^/[lighter] /' | tee -a shovill.log\n[shovill] Overlapping/stitcing PE reads with 'FLASH'\n[shovill] Running: flash -m 20 -M 150 -d . -o flash -z -t 2 R1.cor.fq.gz R2.cor.fq.gz 2>&1 | sed 's/^//' | tee -a shovill.log\n[shovill] Assembling reads with 'megahit'\n[shovill] Running: megahit -1 flash.notCombined_1.fastq.gz -2 flash.notCombined_2.fastq.gz --k-list 31,51,71,91,111 -m 4000000000 -t 2 -o megahit --tmp-dir /tmp --min-contig-len 1  -r flash.extendedFrags.fastq.gz 2>&1 | sed 's/^/[megahit] /' | tee -a shovill.log\n[shovill] Generating genome graph from K=111\n[shovill] Running: megahit_toolkit contig2fastg 111 megahit/intermediate_contigs/k111.contigs.fa > megahit/contigs.fastg 2>&1 | sed 's/^/[megahit_toolkit] /' | tee -a shovill.log\n[shovill] User supplied --nocorr, so not correcting contigs.\n[shovill] Removing low coverage contig (< 2 x): k111_21_flag=1_multi=1.0000_len=235\n[shovill] Removing low coverage contig (< 2 x): k111_28_flag=1_multi=1.0000_len=181\n[shovill] Assembly is 183974, estimated genome size was 185278 (-0.70%)\n[shovill] Using genome graph file 'megahit/contigs.fastg' => 'contigs.fastg'\n[shovill] Walltime used: 0 min 10 sec\n[shovill] Results in: /mnt/pulsar/files/staging/561748/working/out\n[shovill] Final assembly graph: /mnt/pulsar/files/staging/561748/working/out/contigs.fastg\n[shovill] Final assembly contigs: /mnt/pulsar/files/staging/561748/working/out/contigs.fa\n[shovill] It contains 37 (min=75) contigs totalling 183974 bp.\n[shovill] If you know your genome size, use --gsize to skip the estimation step\n[shovill] Done.\n", "state": "error", "create_time": "2019-06-25T23:10:08.566254", "stderr": "[shovill] Hello ubuntu\n[shovill] You ran: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/shovill --outdir out --cpus 2 --ram 4 --R1 /mnt/pulsar/files/staging/561748/inputs/dataset_925469.dat --R2 /mnt/pulsar/files/staging/561748/inputs/dataset_925471.dat --namefmt contig%05d --depth 100 --nocorr --minlen 0 --mincov 2 --assembler megahit\n[shovill] This is shovill 1.0.4\n[shovill] Written by Torsten Seemann\n[shovill] Homepage is https://github.com/tseemann/shovill\n[shovill] Operating system is linux\n[shovill] Perl version is v5.26.2\n[shovill] Machine has 4 CPU cores and 15.67 GB RAM\n[shovill] Using bwa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/bwa | Version: 0.7.17-r1188\n[shovill] Using flash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/flash | FLASH v1.2.11\n[shovill] Using java - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/java | openjdk version \"11.0.1\" 2018-10-16 LTS\n[shovill] Using lighter - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/lighter | Lighter v1.1.2\n[shovill] Using mash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/mash | 2.1\n[shovill] Using megahit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit | MEGAHIT v1.1.3\n[shovill] Using megahit_toolkit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit_toolkit | v1.1.3\n[shovill] Using pigz - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pigz | pigz 2.3.4\n[shovill] Using pilon - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pilon | Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500\n[shovill] Using samclip - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samclip | samclip 0.2\n[shovill] Using samtools - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samtools | Version: 1.9 (using htslib 1.9)\n[shovill] Using seqtk - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/seqtk | Version: 1.3-r106\n[shovill] Using skesa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/skesa | SKESA v.2.3.0\n[shovill] Using spades.py - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py | SPAdes v3.13.0\n[shovill] Using trimmomatic - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/trimmomatic | 0.39\n[shovill] Using velvetg - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velvetg | Version 1.2.10\n[shovill] Using velveth - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velveth | Version 1.2.10\n[shovill] Using tempdir: /tmp\n[shovill] Changing into folder: /mnt/pulsar/files/staging/561748/working/out\n[shovill] Collecting raw read statistics with 'seqtk'\n[shovill] Running: seqtk fqchk -q3 \\/mnt\\/pulsar\\/files\\/staging\\/561748\\/inputs\\/dataset_925469\\.dat >/tmp/Gf19cqn8Lx 2>&1 | sed 's/^/[seqtk] /' | tee -a shovill.log\n[shovill] Read stats: max_len = 150\n[shovill] Read stats: min_len = 150\n[shovill] Read stats: total_bp = 3744000\n[shovill] Read stats: avg_len = 150\n[shovill] Estimating genome size with 'mash'\n[shovill] Running: mash sketch -o /tmp/hoIaQ5YY9x/sketch -k 32 -m 3 -r \\/mnt\\/pulsar\\/files\\/staging\\/561748\\/inputs\\/dataset_925469\\.dat 2>&1 | sed 's/^/[mash] /' | tee -a shovill.log\n[shovill] Using genome size 185278 bp\n[shovill] Estimated sequencing depth: 20 x\n[shovill] No read depth reduction requested or necessary.\n[shovill] Appending -Xmx4g to _JAVA_OPTIONS\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561748\\/inputs\\/dataset_925469\\.dat R1.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561748\\/inputs\\/dataset_925471\\.dat R2.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Average read length looks like 150 bp\n[shovill] Automatically setting --minlen to 75\n[shovill] Setting k-mer range to (31 .. 112)\n[shovill] Estimated K-mers: 31 51 71 91 111 [kn=5, ks=20, kmin=31, kmax=112]\n[shovill] Using kmers: 31,51,71,91,111\n[shovill] Correcting reads with 'Lighter'\n[shovill] Running: lighter -od . -r R1.fq.gz -r R2.fq.gz -K 32 185278 -t 2 -maxcor 1 2>&1 | sed 's/^/[lighter] /' | tee -a shovill.log\n[shovill] Overlapping/stitcing PE reads with 'FLASH'\n[shovill] Running: flash -m 20 -M 150 -d . -o flash -z -t 2 R1.cor.fq.gz R2.cor.fq.gz 2>&1 | sed 's/^//' | tee -a shovill.log\n[shovill] Assembling reads with 'megahit'\n[shovill] Running: megahit -1 flash.notCombined_1.fastq.gz -2 flash.notCombined_2.fastq.gz --k-list 31,51,71,91,111 -m 4000000000 -t 2 -o megahit --tmp-dir /tmp --min-contig-len 1  -r flash.extendedFrags.fastq.gz 2>&1 | sed 's/^/[megahit] /' | tee -a shovill.log\n[shovill] Generating genome graph from K=111\n[shovill] Running: megahit_toolkit contig2fastg 111 megahit/intermediate_contigs/k111.contigs.fa > megahit/contigs.fastg 2>&1 | sed 's/^/[megahit_toolkit] /' | tee -a shovill.log\n[shovill] User supplied --nocorr, so not correcting contigs.\n[shovill] Removing low coverage contig (< 2 x): k111_21_flag=1_multi=1.0000_len=235\n[shovill] Removing low coverage contig (< 2 x): k111_28_flag=1_multi=1.0000_len=181\n[shovill] Assembly is 183974, estimated genome size was 185278 (-0.70%)\n[shovill] Using genome graph file 'megahit/contigs.fastg' => 'contigs.fastg'\n[shovill] Walltime used: 0 min 10 sec\n[shovill] Results in: /mnt/pulsar/files/staging/561748/working/out\n[shovill] Final assembly graph: /mnt/pulsar/files/staging/561748/working/out/contigs.fastg\n[shovill] Final assembly contigs: /mnt/pulsar/files/staging/561748/working/out/contigs.fa\n[shovill] It contains 37 (min=75) contigs totalling 183974 bp.\n[shovill] If you know your genome size, use --gsize to skip the estimation step\n[shovill] Done.\n", "model_class": "Job", "params": {"adv": "{\"depth\": \"100\", \"gsize\": \"\", \"kmers\": \"\", \"mincov\": \"2\", \"minlen\": \"0\", \"namefmt\": \"contig%05d\", \"nocorr\": \"true\", \"opts\": \"\"}", "trim": "\"false\"", "log": "\"true\"", "assembler": "\"megahit\"", "library": "{\"R1\": {\"values\": [{\"id\": 1068617, \"src\": \"hda\"}]}, \"R2\": {\"values\": [{\"id\": 1068619, \"src\": \"hda\"}]}, \"__current_case__\": 0, \"lib_type\": \"paired\"}", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "[mash] Estimated genome size: 185278\n[mash] Estimated coverage:    8.02\n[mash] Writing to /tmp/hoIaQ5YY9x/sketch.msh...\n[lighter] [2019-06-25 23:08:05] =============Start====================\n[lighter] [2019-06-25 23:08:05] Scanning the input files to infer alpha(sampling rate)\n[lighter] [2019-06-25 23:08:05] Average coverage is 20.207 and alpha is 0.346\n[lighter] [2019-06-25 23:08:05] Bad quality threshold is \".\"\n[lighter] [2019-06-25 23:08:06] Finish sampling kmers\n[lighter] [2019-06-25 23:08:06] Bloom filter A's false positive rate: 0.023199\n[lighter] [2019-06-25 23:08:06] Finish storing trusted kmers\n[lighter] [2019-06-25 23:08:07] Finish error correction\n[lighter] Processed 24960 reads:\n[lighter] \t13131 are error-free\n[lighter] \tCorrected 17777 bases(1.502832 corrections for reads with errors)\n[lighter] \tTrimmed 0 reads with average trimmed bases 0.000000\n[lighter] \tDiscard 0 reads\n[FLASH] Starting FLASH v1.2.11\n[FLASH] Fast Length Adjustment of SHort reads\n[FLASH]  \n[FLASH] Input files:\n[FLASH]     R1.cor.fq.gz\n[FLASH]     R2.cor.fq.gz\n[FLASH]  \n[FLASH] Output files:\n[FLASH]     ./flash.extendedFrags.fastq.gz\n[FLASH]     ./flash.notCombined_1.fastq.gz\n[FLASH]     ./flash.notCombined_2.fastq.gz\n[FLASH]     ./flash.hist\n[FLASH]     ./flash.histogram\n[FLASH]  \n[FLASH] Parameters:\n[FLASH]     Min overlap:           20\n[FLASH]     Max overlap:           150\n[FLASH]     Max mismatch density:  0.250000\n[FLASH]     Allow \"outie\" pairs:   false\n[FLASH]     Cap mismatch quals:    false\n[FLASH]     Combiner threads:      2\n[FLASH]     Input format:          FASTQ, phred_offset=33\n[FLASH]     Output format:         FASTQ, phred_offset=33, gzip\n[FLASH]  \n[FLASH] Starting reader and writer threads\n[FLASH] Starting 2 combiner threads\n[FLASH] Processed 12480 read pairs\n[FLASH]  \n[FLASH] Read combination statistics:\n[FLASH]     Total pairs:      12480\n[FLASH]     Combined pairs:   50\n[FLASH]     Uncombined pairs: 12430\n[FLASH]     Percent combined: 0.40%\n[FLASH]  \n[FLASH] Writing histogram files.\n[FLASH]  \n[FLASH] FLASH v1.2.11 complete!\n[FLASH] 0.709 seconds elapsed\n[megahit] MEGAHIT v1.1.3\n[megahit] --- [Tue Jun 25 23:08:08 2019] Start assembly. Number of CPU threads 2 ---\n[megahit] --- [Tue Jun 25 23:08:08 2019] Available memory: 16826757120, used: 4000000000\n[megahit] --- [Tue Jun 25 23:08:08 2019] Converting reads to binaries ---\n[megahit] b'    [read_lib_functions-inl.h  : 209]     Lib 0 (flash.notCombined_1.fastq.gz,flash.notCombined_2.fastq.gz): pe, 24860 reads, 150 max length'\n[megahit] b'    [read_lib_functions-inl.h  : 209]     Lib 1 (flash.extendedFrags.fastq.gz): se, 50 reads, 280 max length'\n[megahit] b'    [utils.h                   : 126]     Real: 0.0975\\tuser: 0.0240\\tsys: 0.0000\\tmaxrss: 7868'\n[megahit] --- [Tue Jun 25 23:08:08 2019] k list: 31,51,71,91,111 ---\n[megahit] --- [Tue Jun 25 23:08:08 2019] Extracting solid (k+1)-mers for k = 31 ---\n[megahit] --- [Tue Jun 25 23:08:08 2019] Building graph for k = 31 ---\n[megahit] --- [Tue Jun 25 23:08:09 2019] Assembling contigs from SdBG for k = 31 ---\n[megahit] --- [Tue Jun 25 23:08:09 2019] Local assembling k = 31 ---\n[megahit] --- [Tue Jun 25 23:08:10 2019] Extracting iterative edges from k = 31 to 51 ---\n[megahit] --- [Tue Jun 25 23:08:10 2019] Building graph for k = 51 ---\n[megahit] --- [Tue Jun 25 23:08:10 2019] Assembling contigs from SdBG for k = 51 ---\n[megahit] --- [Tue Jun 25 23:08:11 2019] Local assembling k = 51 ---\n[megahit] --- [Tue Jun 25 23:08:11 2019] Extracting iterative edges from k = 51 to 71 ---\n[megahit] --- [Tue Jun 25 23:08:11 2019] Building graph for k = 71 ---\n[megahit] --- [Tue Jun 25 23:08:11 2019] Assembling contigs from SdBG for k = 71 ---\n[megahit] --- [Tue Jun 25 23:08:12 2019] Local assembling k = 71 ---\n[megahit] --- [Tue Jun 25 23:08:12 2019] Extracting iterative edges from k = 71 to 91 ---\n[megahit] --- [Tue Jun 25 23:08:12 2019] Building graph for k = 91 ---\n[megahit] --- [Tue Jun 25 23:08:12 2019] Assembling contigs from SdBG for k = 91 ---\n[megahit] --- [Tue Jun 25 23:08:13 2019] Local assembling k = 91 ---\n[megahit] --- [Tue Jun 25 23:08:13 2019] Extracting iterative edges from k = 91 to 111 ---\n[megahit] --- [Tue Jun 25 23:08:13 2019] Building graph for k = 111 ---\n[megahit] --- [Tue Jun 25 23:08:13 2019] Assembling contigs from SdBG for k = 111 ---\n[megahit] --- [Tue Jun 25 23:08:14 2019] Merging to output final contigs ---\n[megahit] --- [STAT] 39 contigs, total 184390 bp, min 113 bp, max 62390 bp, avg 4728 bp, N50 44526 bp\n[megahit] --- [Tue Jun 25 23:08:14 2019] ALL DONE. Time elapsed: 5.947897 seconds ---\n", "job_messages": null, "id": "482da719d6c62472", "job_stdout": null}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4-2", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4", "time_seconds": 65.01019501686096, "inputs": {"library|lib_type": "paired", "assembler": "skesa", "library|R2": {"src": "hda", "id": "0a990de853a62cee"}, "library|R1": {"src": "hda", "id": "2e5a64347926230e"}}, "tool_version": "1.0.4", "output_problems": ["Job in error state.", "Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4", "update_time": "2019-06-25T23:11:01.519461", "inputs": {"R1": {"src": "hda", "id": "2e5a64347926230e", "uuid": "97b000aa-0bef-421f-a92f-06aa1cd5aca0"}, "R2": {"src": "hda", "id": "0a990de853a62cee", "uuid": "d279bda2-6022-4148-ba03-c192125b4de0"}}, "outputs": {"contigs": {"src": "hda", "id": "abfa6233d584826c", "uuid": "26a4be06-9835-43ab-9b8e-0721303d8f65"}, "shovill_std_log": {"src": "hda", "id": "12eaae5a84d0e22d", "uuid": "8ea456d8-d890-45b2-a313-fb5e89f15436"}, "contigs_graph": {"src": "hda", "id": "b27ee7ed749e606a", "uuid": "6832f065-c21d-4470-b29e-e71182708cc3"}}, "history_id": "f840675b8d7f5485", "stdout": "[mash] Estimated genome size: 185278\n[mash] Estimated coverage:    8.02\n[mash] Writing to /tmp/E5jLyI1rck/sketch.msh...\n[lighter] [2019-06-25 23:08:07] =============Start====================\n[lighter] [2019-06-25 23:08:07] Scanning the input files to infer alpha(sampling rate)\n[lighter] [2019-06-25 23:08:07] Average coverage is 20.207 and alpha is 0.346\n[lighter] [2019-06-25 23:08:07] Bad quality threshold is \".\"\n[lighter] [2019-06-25 23:08:08] Finish sampling kmers\n[lighter] [2019-06-25 23:08:08] Bloom filter A's false positive rate: 0.023199\n[lighter] [2019-06-25 23:08:08] Finish storing trusted kmers\n[lighter] [2019-06-25 23:08:09] Finish error correction\n[lighter] Processed 24960 reads:\n[lighter] \t13131 are error-free\n[lighter] \tCorrected 17777 bases(1.502832 corrections for reads with errors)\n[lighter] \tTrimmed 0 reads with average trimmed bases 0.000000\n[lighter] \tDiscard 0 reads\n[FLASH] Starting FLASH v1.2.11\n[FLASH] Fast Length Adjustment of SHort reads\n[FLASH]  \n[FLASH] Input files:\n[FLASH]     R1.cor.fq.gz\n[FLASH]     R2.cor.fq.gz\n[FLASH]  \n[FLASH] Output files:\n[FLASH]     ./flash.extendedFrags.fastq.gz\n[FLASH]     ./flash.notCombined_1.fastq.gz\n[FLASH]     ./flash.notCombined_2.fastq.gz\n[FLASH]     ./flash.hist\n[FLASH]     ./flash.histogram\n[FLASH]  \n[FLASH] Parameters:\n[FLASH]     Min overlap:           20\n[FLASH]     Max overlap:           150\n[FLASH]     Max mismatch density:  0.250000\n[FLASH]     Allow \"outie\" pairs:   false\n[FLASH]     Cap mismatch quals:    false\n[FLASH]     Combiner threads:      2\n[FLASH]     Input format:          FASTQ, phred_offset=33\n[FLASH]     Output format:         FASTQ, phred_offset=33, gzip\n[FLASH]  \n[FLASH] Starting reader and writer threads\n[FLASH] Starting 2 combiner threads\n[FLASH] Processed 12480 read pairs\n[FLASH]  \n[FLASH] Read combination statistics:\n[FLASH]     Total pairs:      12480\n[FLASH]     Combined pairs:   50\n[FLASH]     Uncombined pairs: 12430\n[FLASH]     Percent combined: 0.40%\n[FLASH]  \n[FLASH] Writing histogram files.\n[FLASH]  \n[FLASH] FLASH v1.2.11 complete!\n[FLASH] 0.749 seconds elapsed\n[skesa] skesa --gz --fastq flash.extendedFrags.fastq.gz --fastq flash.notCombined_1.fastq.gz,flash.notCombined_2.fastq.gz --use_paired_ends --contigs_out skesa.fasta --min_contig 1 --memory 4 --cores 2 --vector_percent 1 \n[skesa] \n[skesa] WARNING: option --gz is deprecated - gzipped files are now recognized automatically\n[skesa] Total mates: 24910 Paired reads: 12430\n[skesa] Reads acquired in  0.185263s wall, 0.180000s user + 0.000000s system = 0.180000s CPU (97.2%)\n[skesa] Adapters clip is disabled\n[skesa] \n[skesa] Kmer len: 21\n[skesa] Raw kmers: 3243442 Memory needed (GB): 0.0622741 Memory available (GB): 1.99793 1 cycle(s) will be performed\n[skesa] Distinct kmers: 178949\n[skesa] Kmer count in  0.378910s wall, 0.660000s user + 0.030000s system = 0.690000s CPU (182.1%)\n[skesa] Uniq kmers merging in  0.004222s wall, 0.000000s user + 0.010000s system = 0.010000s CPU (236.9%)\n[skesa] Kmers branching in  0.135058s wall, 0.220000s user + 0.000000s system = 0.220000s CPU (162.9%)\n[skesa] \n[skesa] Average read length: 150\n[skesa] Genome size estimate: 164404\n[skesa] \n[skesa] Kmer: 21 Graph size: 178949 Contigs in: 0\n[skesa] Valley: 3\n[skesa] \n[skesa] Mark used kmers in  0.000001s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers in multiple/single contigs: 0 0\n[skesa] Fragments before: 36 177953\n[skesa] Fragments after: 31 177953\n[skesa] New seeds: 24\n[skesa] New seeds in  0.108855s wall, 0.210000s user + 0.010000s system = 0.220000s CPU (202.1%)\n[skesa] Fragments before: 48 1008\n[skesa] Fragments after: 48 1008\n[skesa] Connectors: 0 Extenders: 48\n[skesa] Connections and extensions in  0.039663s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (176.5%)\n[skesa] Contigs out: 24 Genome: 177024 N50: 16051 L50: 4\n[skesa] Assembled in  0.149549s wall, 0.280000s user + 0.010000s system = 0.290000s CPU (193.9%)\n[skesa] \n[skesa] \n[skesa] Kmer len: 73\n[skesa] Raw kmers: 1948122 Memory needed (GB): 0.0748079 Memory available (GB): 1.99489 1 cycle(s) will be performed\n[skesa] Distinct kmers: 179085\n[skesa] Kmer count in  0.296805s wall, 0.490000s user + 0.060000s system = 0.550000s CPU (185.3%)\n[skesa] Uniq kmers merging in  0.007412s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] \n[skesa] Average count: 16.7675 Max kmer: 73\n[skesa] Connected: 12092 ambiguously connected: 253 from 12430 mate pairs\n[skesa] Connect pairs in  28.989682s wall, 48.930000s user + 0.110000s system = 49.040000s CPU (169.2%)\n[skesa] \n[skesa] N50 for inserts: 403\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 2608\n[skesa] Reads for connection: 1650\n[skesa] Internal reads: 219\n[skesa] Reads cleaned in  0.074596s wall, 0.140000s user + 0.000000s system = 0.140000s CPU (187.7%)\n[skesa] \n[skesa] Kmer len: 25\n[skesa] Raw kmers: 331609 Memory needed (GB): 0.00636689 Memory available (GB): 1.99676 1 cycle(s) will be performed\n[skesa] Distinct kmers: 19730\n[skesa] Kmer count in  0.036542s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (82.1%)\n[skesa] Uniq kmers merging in  0.000695s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.011057s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (180.9%)\n[skesa] Kmer: 25 Graph size: 19730 Contigs in: 24\n[skesa] Valley: 5\n[skesa] \n[skesa] Mark used kmers in  0.018599s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (161.3%)\n[skesa] Kmers in multiple/single contigs: 0 17141\n[skesa] Fragments before: 46 1630\n[skesa] Fragments after: 46 1630\n[skesa] New seeds: 0\n[skesa] New seeds in  0.011195s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (178.6%)\n[skesa] Fragments before: 48 1273\n[skesa] Fragments after: 43 1273\n[skesa] Connectors: 5 Extenders: 38\n[skesa] Connections and extensions in  0.039310s wall, 0.060000s user + 0.000000s system = 0.060000s CPU (152.6%)\n[skesa] Contigs out: 19 Genome: 177238 N50: 18868 L50: 4\n[skesa] Assembled in  0.069380s wall, 0.110000s user + 0.000000s system = 0.110000s CPU (158.5%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 2262\n[skesa] Reads for connection: 1450\n[skesa] Internal reads: 178\n[skesa] Reads cleaned in  0.050966s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (196.2%)\n[skesa] \n[skesa] Kmer len: 31\n[skesa] Raw kmers: 274441 Memory needed (GB): 0.00526927 Memory available (GB): 1.99645 1 cycle(s) will be performed\n[skesa] Distinct kmers: 16399\n[skesa] Kmer count in  0.032142s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (93.3%)\n[skesa] Uniq kmers merging in  0.000757s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.009539s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (104.8%)\n[skesa] Kmer: 31 Graph size: 16399 Contigs in: 19\n[skesa] Valley: 5\n[skesa] \n[skesa] Mark used kmers in  0.018752s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (213.3%)\n[skesa] Kmers in multiple/single contigs: 0 13931\n[skesa] Fragments before: 37 1641\n[skesa] Fragments after: 35 1641\n[skesa] New seeds: 1\n[skesa] New seeds in  0.008632s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (115.9%)\n[skesa] Fragments before: 39 1294\n[skesa] Fragments after: 38 1294\n[skesa] Connectors: 1 Extenders: 37\n[skesa] Connections and extensions in  0.038121s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (183.6%)\n[skesa] Contigs out: 19 Genome: 177747 N50: 18868 L50: 4\n[skesa] Assembled in  0.065754s wall, 0.120000s user + 0.000000s system = 0.120000s CPU (182.5%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 2190\n[skesa] Reads for connection: 1376\n[skesa] Internal reads: 186\n[skesa] Reads cleaned in  0.059913s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (166.9%)\n[skesa] \n[skesa] Kmer len: 37\n[skesa] Raw kmers: 252661 Memory needed (GB): 0.00727664 Memory available (GB): 1.99617 1 cycle(s) will be performed\n[skesa] Distinct kmers: 15819\n[skesa] Kmer count in  0.044025s wall, 0.050000s user + 0.010000s system = 0.060000s CPU (136.3%)\n[skesa] Uniq kmers merging in  0.000784s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.011067s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (180.7%)\n[skesa] Kmer: 37 Graph size: 15819 Contigs in: 19\n[skesa] Valley: 5\n[skesa] \n[skesa] Mark used kmers in  0.025714s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (155.6%)\n[skesa] Kmers in multiple/single contigs: 0 13695\n[skesa] Fragments before: 34 1428\n[skesa] Fragments after: 32 1428\n[skesa] New seeds: 0\n[skesa] New seeds in  0.008314s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (120.3%)\n[skesa] Fragments before: 37 1235\n[skesa] Fragments after: 33 1235\n[skesa] Connectors: 4 Extenders: 29\n[skesa] Connections and extensions in  0.043011s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (162.8%)\n[skesa] Contigs out: 15 Genome: 177925 N50: 30361 L50: 3\n[skesa] Assembled in  0.077258s wall, 0.120000s user + 0.000000s system = 0.120000s CPU (155.3%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1930\n[skesa] Reads for connection: 1188\n[skesa] Internal reads: 171\n[skesa] Reads cleaned in  0.058052s wall, 0.090000s user + 0.000000s system = 0.090000s CPU (155.0%)\n[skesa] \n[skesa] Kmer len: 41\n[skesa] Raw kmers: 215072 Memory needed (GB): 0.00619407 Memory available (GB): 1.99579 1 cycle(s) will be performed\n[skesa] Distinct kmers: 13278\n[skesa] Kmer count in  0.032438s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (92.5%)\n[skesa] Uniq kmers merging in  0.000715s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.008345s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (239.7%)\n[skesa] Kmer: 41 Graph size: 13278 Contigs in: 15\n[skesa] Valley: 5\n[skesa] \n[skesa] Mark used kmers in  0.022150s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (180.6%)\n[skesa] Kmers in multiple/single contigs: 0 11426\n[skesa] Fragments before: 26 1324\n[skesa] Fragments after: 25 1324\n[skesa] New seeds: 1\n[skesa] New seeds in  0.007975s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Fragments before: 32 1191\n[skesa] Fragments after: 29 1191\n[skesa] Connectors: 3 Extenders: 26\n[skesa] Connections and extensions in  0.042294s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (165.5%)\n[skesa] Contigs out: 13 Genome: 178287 N50: 36501 L50: 2\n[skesa] Assembled in  0.072583s wall, 0.110000s user + 0.000000s system = 0.110000s CPU (151.6%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1676\n[skesa] Reads for connection: 1010\n[skesa] Internal reads: 153\n[skesa] Reads cleaned in  0.060354s wall, 0.090000s user + 0.010000s system = 0.100000s CPU (165.7%)\n[skesa] \n[skesa] Kmer len: 47\n[skesa] Raw kmers: 177076 Memory needed (GB): 0.00509979 Memory available (GB): 1.99548 1 cycle(s) will be performed\n[skesa] Distinct kmers: 10881\n[skesa] Kmer count in  0.024187s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (82.7%)\n[skesa] Uniq kmers merging in  0.000626s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.007203s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (138.8%)\n[skesa] Kmer: 47 Graph size: 10881 Contigs in: 13\n[skesa] Valley: 5\n[skesa] \n[skesa] Mark used kmers in  0.023463s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (170.5%)\n[skesa] Kmers in multiple/single contigs: 0 9365\n[skesa] Fragments before: 21 1066\n[skesa] Fragments after: 21 1066\n[skesa] New seeds: 0\n[skesa] New seeds in  0.005144s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (194.4%)\n[skesa] Fragments before: 25 985\n[skesa] Fragments after: 23 985\n[skesa] Connectors: 2 Extenders: 21\n[skesa] Connections and extensions in  0.040900s wall, 0.060000s user + 0.000000s system = 0.060000s CPU (146.7%)\n[skesa] Contigs out: 11 Genome: 178407 N50: 58941 L50: 2\n[skesa] Assembled in  0.069670s wall, 0.110000s user + 0.000000s system = 0.110000s CPU (157.9%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1522\n[skesa] Reads for connection: 906\n[skesa] Internal reads: 143\n[skesa] Reads cleaned in  0.058122s wall, 0.080000s user + 0.010000s system = 0.090000s CPU (154.8%)\n[skesa] \n[skesa] Kmer len: 51\n[skesa] Raw kmers: 154972 Memory needed (GB): 0.00446319 Memory available (GB): 1.99522 1 cycle(s) will be performed\n[skesa] Distinct kmers: 9413\n[skesa] Kmer count in  0.019684s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (101.6%)\n[skesa] Uniq kmers merging in  0.000528s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.005905s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (169.4%)\n[skesa] Kmer: 51 Graph size: 9413 Contigs in: 11\n[skesa] Valley: 10\n[skesa] \n[skesa] Mark used kmers in  0.022288s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (179.5%)\n[skesa] Kmers in multiple/single contigs: 0 8077\n[skesa] Fragments before: 21 953\n[skesa] Fragments after: 20 953\n[skesa] New seeds: 0\n[skesa] New seeds in  0.004485s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Fragments before: 21 817\n[skesa] Fragments after: 21 817\n[skesa] Connectors: 0 Extenders: 21\n[skesa] Connections and extensions in  0.045776s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (152.9%)\n[skesa] Contigs out: 11 Genome: 178407 N50: 58941 L50: 2\n[skesa] Assembled in  0.072724s wall, 0.110000s user + 0.000000s system = 0.110000s CPU (151.3%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1522\n[skesa] Reads for connection: 906\n[skesa] Internal reads: 143\n[skesa] Reads cleaned in  0.054946s wall, 0.090000s user + 0.000000s system = 0.090000s CPU (163.8%)\n[skesa] \n[skesa] Kmer len: 57\n[skesa] Raw kmers: 145840 Memory needed (GB): 0.00420019 Memory available (GB): 1.99498 1 cycle(s) will be performed\n[skesa] Distinct kmers: 9362\n[skesa] Kmer count in  0.019250s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (103.9%)\n[skesa] Uniq kmers merging in  0.000482s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.006869s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (145.6%)\n[skesa] Kmer: 57 Graph size: 9362 Contigs in: 11\n[skesa] Valley: 5\n[skesa] \n[skesa] Mark used kmers in  0.023393s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (171.0%)\n[skesa] Kmers in multiple/single contigs: 0 7933\n[skesa] Fragments before: 20 1012\n[skesa] Fragments after: 19 1012\n[skesa] New seeds: 0\n[skesa] New seeds in  0.004195s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Fragments before: 21 921\n[skesa] Fragments after: 21 921\n[skesa] Connectors: 0 Extenders: 21\n[skesa] Connections and extensions in  0.037902s wall, 0.060000s user + 0.000000s system = 0.060000s CPU (158.3%)\n[skesa] Contigs out: 11 Genome: 178445 N50: 58941 L50: 2\n[skesa] Assembled in  0.065681s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (152.3%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1522\n[skesa] Reads for connection: 902\n[skesa] Internal reads: 145\n[skesa] Reads cleaned in  0.053837s wall, 0.090000s user + 0.000000s system = 0.090000s CPU (167.2%)\n[skesa] \n[skesa] Kmer len: 63\n[skesa] Raw kmers: 136708 Memory needed (GB): 0.00393719 Memory available (GB): 1.99475 1 cycle(s) will be performed\n[skesa] Distinct kmers: 9294\n[skesa] Kmer count in  0.017263s wall, 0.000000s user + 0.010000s system = 0.010000s CPU (57.9%)\n[skesa] Uniq kmers merging in  0.000591s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.005852s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmer: 63 Graph size: 9294 Contigs in: 11\n[skesa] Valley: 0\n[skesa] \n[skesa] Mark used kmers in  0.021818s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (183.3%)\n[skesa] Kmers in multiple/single contigs: 0 7818\n[skesa] Fragments before: 23 1176\n[skesa] Fragments after: 22 1176\n[skesa] New seeds: 0\n[skesa] New seeds in  0.004669s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (214.2%)\n[skesa] Fragments before: 21 959\n[skesa] Fragments after: 21 959\n[skesa] Connectors: 0 Extenders: 21\n[skesa] Connections and extensions in  0.037210s wall, 0.060000s user + 0.000000s system = 0.060000s CPU (161.2%)\n[skesa] Contigs out: 11 Genome: 178445 N50: 58941 L50: 2\n[skesa] Assembled in  0.063832s wall, 0.110000s user + 0.000000s system = 0.110000s CPU (172.3%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1522\n[skesa] Reads for connection: 902\n[skesa] Internal reads: 145\n[skesa] Reads cleaned in  0.052433s wall, 0.080000s user + 0.000000s system = 0.080000s CPU (152.6%)\n[skesa] \n[skesa] Kmer len: 67\n[skesa] Raw kmers: 130620 Memory needed (GB): 0.00501581 Memory available (GB): 1.99451 1 cycle(s) will be performed\n[skesa] Distinct kmers: 9237\n[skesa] Kmer count in  0.020254s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (98.7%)\n[skesa] Uniq kmers merging in  0.000550s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.007099s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (140.9%)\n[skesa] Kmer: 67 Graph size: 9237 Contigs in: 11\n[skesa] Valley: 0\n[skesa] \n[skesa] Mark used kmers in  0.031555s wall, 0.050000s user + 0.010000s system = 0.060000s CPU (190.1%)\n[skesa] Kmers in multiple/single contigs: 0 7713\n[skesa] Fragments before: 23 1220\n[skesa] Fragments after: 22 1220\n[skesa] New seeds: 0\n[skesa] New seeds in  0.004767s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (209.8%)\n[skesa] Fragments before: 21 999\n[skesa] Fragments after: 21 999\n[skesa] Connectors: 0 Extenders: 21\n[skesa] Connections and extensions in  0.041317s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (169.4%)\n[skesa] Contigs out: 11 Genome: 178445 N50: 58941 L50: 2\n[skesa] Assembled in  0.077806s wall, 0.130000s user + 0.010000s system = 0.140000s CPU (179.9%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1522\n[skesa] Reads for connection: 902\n[skesa] Internal reads: 145\n[skesa] Reads cleaned in  0.063874s wall, 0.090000s user + 0.000000s system = 0.090000s CPU (140.9%)\n[skesa] \n[skesa] Kmer len: 73\n[skesa] Raw kmers: 121488 Memory needed (GB): 0.00466514 Memory available (GB): 1.99421 1 cycle(s) will be performed\n[skesa] Distinct kmers: 9132\n[skesa] Kmer count in  0.016310s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (122.6%)\n[skesa] Uniq kmers merging in  0.000601s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.006395s wall, 0.010000s user + 0.010000s system = 0.020000s CPU (312.7%)\n[skesa] Kmer: 73 Graph size: 9132 Contigs in: 11\n[skesa] Valley: 0\n[skesa] \n[skesa] Mark used kmers in  0.023738s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (168.5%)\n[skesa] Kmers in multiple/single contigs: 0 7538\n[skesa] Fragments before: 22 1286\n[skesa] Fragments after: 22 1286\n[skesa] New seeds: 0\n[skesa] New seeds in  0.004454s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Fragments before: 21 1059\n[skesa] Fragments after: 21 1059\n[skesa] Connectors: 0 Extenders: 21\n[skesa] Connections and extensions in  0.039677s wall, 0.060000s user + 0.000000s system = 0.060000s CPU (151.2%)\n[skesa] Contigs out: 11 Genome: 178445 N50: 58941 L50: 2\n[skesa] Assembled in  0.068000s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (147.1%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1522\n[skesa] Reads for connection: 902\n[skesa] Internal reads: 145\n[skesa] Reads cleaned in  0.059117s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (169.2%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 21\n[skesa] Connected: 386 ambiguously connected: 57 from 451 mate pairs\n[skesa] Connect pairs in  0.909242s wall, 1.760000s user + 0.000000s system = 1.760000s CPU (193.6%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 25\n[skesa] Connected: 0 ambiguously connected: 57 from 57 mate pairs\n[skesa] Connect pairs in  0.023145s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (172.8%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 31\n[skesa] Connected: 18 ambiguously connected: 39 from 57 mate pairs\n[skesa] Connect pairs in  0.044174s wall, 0.080000s user + 0.000000s system = 0.080000s CPU (181.1%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 37\n[skesa] Connected: 0 ambiguously connected: 39 from 39 mate pairs\n[skesa] Connect pairs in  0.016516s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (181.6%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 41\n[skesa] Connected: 6 ambiguously connected: 33 from 39 mate pairs\n[skesa] Connect pairs in  0.035976s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (194.6%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 47\n[skesa] Connected: 10 ambiguously connected: 23 from 33 mate pairs\n[skesa] Connect pairs in  0.020079s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (149.4%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 51\n[skesa] Connected: 0 ambiguously connected: 23 from 23 mate pairs\n[skesa] Connect pairs in  0.013292s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (150.5%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 57\n[skesa] Connected: 10 ambiguously connected: 13 from 23 mate pairs\n[skesa] Connect pairs in  0.023955s wall, 0.030000s user + 0.010000s system = 0.040000s CPU (167.0%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 63\n[skesa] Connected: 0 ambiguously connected: 13 from 13 mate pairs\n[skesa] Connect pairs in  0.008536s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (234.3%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 67\n[skesa] Connected: 0 ambiguously connected: 13 from 13 mate pairs\n[skesa] Connect pairs in  0.010213s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (97.9%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 73\n[skesa] Connected: 0 ambiguously connected: 13 from 13 mate pairs\n[skesa] Connect pairs in  0.011209s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (178.4%)\n[skesa] Totally connected: 430\n[skesa] Added notconnected: 26\n[skesa] \n[skesa] Kmer len: 91\n[skesa] Raw kmers: 221822 Memory needed (GB): 0.00851796 Memory available (GB): 1.99388 1 cycle(s) will be performed\n[skesa] Distinct kmers: 8759\n[skesa] Kmer count in  0.033517s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (119.3%)\n[skesa] Uniq kmers merging in  0.000639s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.006154s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (162.5%)\n[skesa] Kmer: 91 Graph size: 8759 Contigs in: 11\n[skesa] Valley: 9\n[skesa] \n[skesa] Mark used kmers in  0.024705s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (161.9%)\n[skesa] Kmers in multiple/single contigs: 0 7091\n[skesa] Fragments before: 18 1410\n[skesa] Fragments after: 16 1410\n[skesa] New seeds: 0\n[skesa] New seeds in  0.003981s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Fragments before: 21 1484\n[skesa] Fragments after: 19 1484\n[skesa] Connectors: 2 Extenders: 17\n[skesa] Connections and extensions in  0.040754s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (171.8%)\n[skesa] Contigs out: 9 Genome: 178751 N50: 59057 L50: 2\n[skesa] Assembled in  0.069570s wall, 0.110000s user + 0.000000s system = 0.110000s CPU (158.1%)\n[skesa] \n[skesa] \n[skesa] Kmer len: 247\n[skesa] Raw kmers: 128066 Memory needed (GB): 0.0110649 Memory available (GB): 1.99359 1 cycle(s) will be performed\n[skesa] Distinct kmers: 8135\n[skesa] Kmer count in  0.031617s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (94.9%)\n[skesa] Uniq kmers merging in  0.000940s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.009203s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (108.7%)\n[skesa] Kmer: 247 Graph size: 8135 Contigs in: 9\n[skesa] Valley: 6\n[skesa] \n[skesa] Mark used kmers in  0.035897s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (195.0%)\n[skesa] Kmers in multiple/single contigs: 0 5263\n[skesa] Fragments before: 15 2302\n[skesa] Fragments after: 13 2302\n[skesa] New seeds: 0\n[skesa] New seeds in  0.008473s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (118.0%)\n[skesa] Fragments before: 15 2134\n[skesa] Fragments after: 15 2134\n[skesa] Connectors: 0 Extenders: 15\n[skesa] Connections and extensions in  0.051413s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (136.2%)\n[skesa] Contigs out: 8 Genome: 178773 N50: 59057 L50: 2\n[skesa] Assembled in  0.095939s wall, 0.150000s user + 0.000000s system = 0.150000s CPU (156.3%)\n[skesa] \n[skesa] \n[skesa] Kmer len: 403\n[skesa] Raw kmers: 38087 Memory needed (GB): 0.00511889 Memory available (GB): 1.993 1 cycle(s) will be performed\n[skesa] Distinct kmers: 6331\n[skesa] Kmer count in  0.013001s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (76.9%)\n[skesa] Uniq kmers merging in  0.000555s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.009269s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (215.8%)\n[skesa] Kmer: 403 Graph size: 6331 Contigs in: 8\n[skesa] Valley: 0\n[skesa] \n[skesa] Mark used kmers in  0.046468s wall, 0.080000s user + 0.000000s system = 0.080000s CPU (172.2%)\n[skesa] Kmers in multiple/single contigs: 0 2831\n[skesa] Fragments before: 11 1588\n[skesa] Fragments after: 10 1588\n[skesa] New seeds: 0\n[skesa] New seeds in  0.007365s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (135.8%)\n[skesa] Fragments before: 11 1588\n[skesa] Fragments after: 10 1588\n[skesa] Connectors: 1 Extenders: 9\n[skesa] Connections and extensions in  0.055376s wall, 0.060000s user + 0.010000s system = 0.070000s CPU (126.4%)\n[skesa] Contigs out: 7 Genome: 178795 N50: 59057 L50: 2\n[skesa] Assembled in  0.109325s wall, 0.150000s user + 0.010000s system = 0.160000s CPU (146.4%)\n[skesa] \n[skesa] DONE\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "[shovill] Hello ubuntu\n[shovill] You ran: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/shovill --outdir out --cpus 2 --ram 4 --R1 /mnt/pulsar/files/staging/561749/inputs/dataset_925469.dat --R2 /mnt/pulsar/files/staging/561749/inputs/dataset_925471.dat --namefmt contig%05d --depth 100 --nocorr --minlen 0 --mincov 2 --assembler skesa\n[shovill] This is shovill 1.0.4\n[shovill] Written by Torsten Seemann\n[shovill] Homepage is https://github.com/tseemann/shovill\n[shovill] Operating system is linux\n[shovill] Perl version is v5.26.2\n[shovill] Machine has 4 CPU cores and 15.67 GB RAM\n[shovill] Using bwa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/bwa | Version: 0.7.17-r1188\n[shovill] Using flash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/flash | FLASH v1.2.11\n[shovill] Using java - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/java | openjdk version \"11.0.1\" 2018-10-16 LTS\n[shovill] Using lighter - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/lighter | Lighter v1.1.2\n[shovill] Using mash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/mash | 2.1\n[shovill] Using megahit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit | MEGAHIT v1.1.3\n[shovill] Using megahit_toolkit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit_toolkit | v1.1.3\n[shovill] Using pigz - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pigz | pigz 2.3.4\n[shovill] Using pilon - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pilon | Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500\n[shovill] Using samclip - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samclip | samclip 0.2\n[shovill] Using samtools - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samtools | Version: 1.9 (using htslib 1.9)\n[shovill] Using seqtk - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/seqtk | Version: 1.3-r106\n[shovill] Using skesa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/skesa | SKESA v.2.3.0\n[shovill] Using spades.py - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py | SPAdes v3.13.0\n[shovill] Using trimmomatic - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/trimmomatic | 0.39\n[shovill] Using velvetg - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velvetg | Version 1.2.10\n[shovill] Using velveth - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velveth | Version 1.2.10\n[shovill] Using tempdir: /tmp\n[shovill] Changing into folder: /mnt/pulsar/files/staging/561749/working/out\n[shovill] Collecting raw read statistics with 'seqtk'\n[shovill] Running: seqtk fqchk -q3 \\/mnt\\/pulsar\\/files\\/staging\\/561749\\/inputs\\/dataset_925469\\.dat >/tmp/j_yV00dEf9 2>&1 | sed 's/^/[seqtk] /' | tee -a shovill.log\n[shovill] Read stats: min_len = 150\n[shovill] Read stats: avg_len = 150\n[shovill] Read stats: total_bp = 3744000\n[shovill] Read stats: max_len = 150\n[shovill] Estimating genome size with 'mash'\n[shovill] Running: mash sketch -o /tmp/E5jLyI1rck/sketch -k 32 -m 3 -r \\/mnt\\/pulsar\\/files\\/staging\\/561749\\/inputs\\/dataset_925469\\.dat 2>&1 | sed 's/^/[mash] /' | tee -a shovill.log\n[shovill] Using genome size 185278 bp\n[shovill] Estimated sequencing depth: 20 x\n[shovill] No read depth reduction requested or necessary.\n[shovill] Appending -Xmx4g to _JAVA_OPTIONS\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561749\\/inputs\\/dataset_925469\\.dat R1.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561749\\/inputs\\/dataset_925471\\.dat R2.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Average read length looks like 150 bp\n[shovill] Automatically setting --minlen to 75\n[shovill] Setting k-mer range to (31 .. 112)\n[shovill] Estimated K-mers: 31 51 71 91 111 [kn=5, ks=20, kmin=31, kmax=112]\n[shovill] Using kmers: 31,51,71,91,111\n[shovill] Correcting reads with 'Lighter'\n[shovill] Running: lighter -od . -r R1.fq.gz -r R2.fq.gz -K 32 185278 -t 2 -maxcor 1 2>&1 | sed 's/^/[lighter] /' | tee -a shovill.log\n[shovill] Overlapping/stitcing PE reads with 'FLASH'\n[shovill] Running: flash -m 20 -M 150 -d . -o flash -z -t 2 R1.cor.fq.gz R2.cor.fq.gz 2>&1 | sed 's/^//' | tee -a shovill.log\n[shovill] Assembling reads with 'skesa'\n[shovill] Running: skesa --gz  --fastq flash.extendedFrags.fastq.gz --fastq flash.notCombined_1.fastq.gz,flash.notCombined_2.fastq.gz --use_paired_ends --contigs_out skesa.fasta --min_contig 1 --memory 4 --cores 2 --vector_percent 1 2>&1 | sed 's/^/[skesa] /' | tee -a shovill.log\n[shovill] User supplied --nocorr, so not correcting contigs.\n[shovill] Assembly is 178795, estimated genome size was 185278 (-3.50%)\n[shovill] Note: skesa does not produce a graph file\n[shovill] Walltime used: 0 min 38 sec\n[shovill] Results in: /mnt/pulsar/files/staging/561749/working/out\n[shovill] Final assembly contigs: /mnt/pulsar/files/staging/561749/working/out/contigs.fa\n[shovill] It contains 7 (min=75) contigs totalling 178795 bp.\n[shovill] A shovel will move more dirt than a spade.\n[shovill] Done.\n", "state": "error", "create_time": "2019-06-25T23:10:12.027212", "stderr": "[shovill] Hello ubuntu\n[shovill] You ran: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/shovill --outdir out --cpus 2 --ram 4 --R1 /mnt/pulsar/files/staging/561749/inputs/dataset_925469.dat --R2 /mnt/pulsar/files/staging/561749/inputs/dataset_925471.dat --namefmt contig%05d --depth 100 --nocorr --minlen 0 --mincov 2 --assembler skesa\n[shovill] This is shovill 1.0.4\n[shovill] Written by Torsten Seemann\n[shovill] Homepage is https://github.com/tseemann/shovill\n[shovill] Operating system is linux\n[shovill] Perl version is v5.26.2\n[shovill] Machine has 4 CPU cores and 15.67 GB RAM\n[shovill] Using bwa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/bwa | Version: 0.7.17-r1188\n[shovill] Using flash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/flash | FLASH v1.2.11\n[shovill] Using java - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/java | openjdk version \"11.0.1\" 2018-10-16 LTS\n[shovill] Using lighter - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/lighter | Lighter v1.1.2\n[shovill] Using mash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/mash | 2.1\n[shovill] Using megahit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit | MEGAHIT v1.1.3\n[shovill] Using megahit_toolkit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit_toolkit | v1.1.3\n[shovill] Using pigz - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pigz | pigz 2.3.4\n[shovill] Using pilon - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pilon | Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500\n[shovill] Using samclip - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samclip | samclip 0.2\n[shovill] Using samtools - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samtools | Version: 1.9 (using htslib 1.9)\n[shovill] Using seqtk - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/seqtk | Version: 1.3-r106\n[shovill] Using skesa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/skesa | SKESA v.2.3.0\n[shovill] Using spades.py - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py | SPAdes v3.13.0\n[shovill] Using trimmomatic - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/trimmomatic | 0.39\n[shovill] Using velvetg - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velvetg | Version 1.2.10\n[shovill] Using velveth - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velveth | Version 1.2.10\n[shovill] Using tempdir: /tmp\n[shovill] Changing into folder: /mnt/pulsar/files/staging/561749/working/out\n[shovill] Collecting raw read statistics with 'seqtk'\n[shovill] Running: seqtk fqchk -q3 \\/mnt\\/pulsar\\/files\\/staging\\/561749\\/inputs\\/dataset_925469\\.dat >/tmp/j_yV00dEf9 2>&1 | sed 's/^/[seqtk] /' | tee -a shovill.log\n[shovill] Read stats: min_len = 150\n[shovill] Read stats: avg_len = 150\n[shovill] Read stats: total_bp = 3744000\n[shovill] Read stats: max_len = 150\n[shovill] Estimating genome size with 'mash'\n[shovill] Running: mash sketch -o /tmp/E5jLyI1rck/sketch -k 32 -m 3 -r \\/mnt\\/pulsar\\/files\\/staging\\/561749\\/inputs\\/dataset_925469\\.dat 2>&1 | sed 's/^/[mash] /' | tee -a shovill.log\n[shovill] Using genome size 185278 bp\n[shovill] Estimated sequencing depth: 20 x\n[shovill] No read depth reduction requested or necessary.\n[shovill] Appending -Xmx4g to _JAVA_OPTIONS\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561749\\/inputs\\/dataset_925469\\.dat R1.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561749\\/inputs\\/dataset_925471\\.dat R2.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Average read length looks like 150 bp\n[shovill] Automatically setting --minlen to 75\n[shovill] Setting k-mer range to (31 .. 112)\n[shovill] Estimated K-mers: 31 51 71 91 111 [kn=5, ks=20, kmin=31, kmax=112]\n[shovill] Using kmers: 31,51,71,91,111\n[shovill] Correcting reads with 'Lighter'\n[shovill] Running: lighter -od . -r R1.fq.gz -r R2.fq.gz -K 32 185278 -t 2 -maxcor 1 2>&1 | sed 's/^/[lighter] /' | tee -a shovill.log\n[shovill] Overlapping/stitcing PE reads with 'FLASH'\n[shovill] Running: flash -m 20 -M 150 -d . -o flash -z -t 2 R1.cor.fq.gz R2.cor.fq.gz 2>&1 | sed 's/^//' | tee -a shovill.log\n[shovill] Assembling reads with 'skesa'\n[shovill] Running: skesa --gz  --fastq flash.extendedFrags.fastq.gz --fastq flash.notCombined_1.fastq.gz,flash.notCombined_2.fastq.gz --use_paired_ends --contigs_out skesa.fasta --min_contig 1 --memory 4 --cores 2 --vector_percent 1 2>&1 | sed 's/^/[skesa] /' | tee -a shovill.log\n[shovill] User supplied --nocorr, so not correcting contigs.\n[shovill] Assembly is 178795, estimated genome size was 185278 (-3.50%)\n[shovill] Note: skesa does not produce a graph file\n[shovill] Walltime used: 0 min 38 sec\n[shovill] Results in: /mnt/pulsar/files/staging/561749/working/out\n[shovill] Final assembly contigs: /mnt/pulsar/files/staging/561749/working/out/contigs.fa\n[shovill] It contains 7 (min=75) contigs totalling 178795 bp.\n[shovill] A shovel will move more dirt than a spade.\n[shovill] Done.\n", "model_class": "Job", "params": {"adv": "{\"depth\": \"100\", \"gsize\": \"\", \"kmers\": \"\", \"mincov\": \"2\", \"minlen\": \"0\", \"namefmt\": \"contig%05d\", \"nocorr\": \"true\", \"opts\": \"\"}", "trim": "\"false\"", "log": "\"true\"", "assembler": "\"skesa\"", "library": "{\"R1\": {\"values\": [{\"id\": 1068617, \"src\": \"hda\"}]}, \"R2\": {\"values\": [{\"id\": 1068619, \"src\": \"hda\"}]}, \"__current_case__\": 0, \"lib_type\": \"paired\"}", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "[mash] Estimated genome size: 185278\n[mash] Estimated coverage:    8.02\n[mash] Writing to /tmp/E5jLyI1rck/sketch.msh...\n[lighter] [2019-06-25 23:08:07] =============Start====================\n[lighter] [2019-06-25 23:08:07] Scanning the input files to infer alpha(sampling rate)\n[lighter] [2019-06-25 23:08:07] Average coverage is 20.207 and alpha is 0.346\n[lighter] [2019-06-25 23:08:07] Bad quality threshold is \".\"\n[lighter] [2019-06-25 23:08:08] Finish sampling kmers\n[lighter] [2019-06-25 23:08:08] Bloom filter A's false positive rate: 0.023199\n[lighter] [2019-06-25 23:08:08] Finish storing trusted kmers\n[lighter] [2019-06-25 23:08:09] Finish error correction\n[lighter] Processed 24960 reads:\n[lighter] \t13131 are error-free\n[lighter] \tCorrected 17777 bases(1.502832 corrections for reads with errors)\n[lighter] \tTrimmed 0 reads with average trimmed bases 0.000000\n[lighter] \tDiscard 0 reads\n[FLASH] Starting FLASH v1.2.11\n[FLASH] Fast Length Adjustment of SHort reads\n[FLASH]  \n[FLASH] Input files:\n[FLASH]     R1.cor.fq.gz\n[FLASH]     R2.cor.fq.gz\n[FLASH]  \n[FLASH] Output files:\n[FLASH]     ./flash.extendedFrags.fastq.gz\n[FLASH]     ./flash.notCombined_1.fastq.gz\n[FLASH]     ./flash.notCombined_2.fastq.gz\n[FLASH]     ./flash.hist\n[FLASH]     ./flash.histogram\n[FLASH]  \n[FLASH] Parameters:\n[FLASH]     Min overlap:           20\n[FLASH]     Max overlap:           150\n[FLASH]     Max mismatch density:  0.250000\n[FLASH]     Allow \"outie\" pairs:   false\n[FLASH]     Cap mismatch quals:    false\n[FLASH]     Combiner threads:      2\n[FLASH]     Input format:          FASTQ, phred_offset=33\n[FLASH]     Output format:         FASTQ, phred_offset=33, gzip\n[FLASH]  \n[FLASH] Starting reader and writer threads\n[FLASH] Starting 2 combiner threads\n[FLASH] Processed 12480 read pairs\n[FLASH]  \n[FLASH] Read combination statistics:\n[FLASH]     Total pairs:      12480\n[FLASH]     Combined pairs:   50\n[FLASH]     Uncombined pairs: 12430\n[FLASH]     Percent combined: 0.40%\n[FLASH]  \n[FLASH] Writing histogram files.\n[FLASH]  \n[FLASH] FLASH v1.2.11 complete!\n[FLASH] 0.749 seconds elapsed\n[skesa] skesa --gz --fastq flash.extendedFrags.fastq.gz --fastq flash.notCombined_1.fastq.gz,flash.notCombined_2.fastq.gz --use_paired_ends --contigs_out skesa.fasta --min_contig 1 --memory 4 --cores 2 --vector_percent 1 \n[skesa] \n[skesa] WARNING: option --gz is deprecated - gzipped files are now recognized automatically\n[skesa] Total mates: 24910 Paired reads: 12430\n[skesa] Reads acquired in  0.185263s wall, 0.180000s user + 0.000000s system = 0.180000s CPU (97.2%)\n[skesa] Adapters clip is disabled\n[skesa] \n[skesa] Kmer len: 21\n[skesa] Raw kmers: 3243442 Memory needed (GB): 0.0622741 Memory available (GB): 1.99793 1 cycle(s) will be performed\n[skesa] Distinct kmers: 178949\n[skesa] Kmer count in  0.378910s wall, 0.660000s user + 0.030000s system = 0.690000s CPU (182.1%)\n[skesa] Uniq kmers merging in  0.004222s wall, 0.000000s user + 0.010000s system = 0.010000s CPU (236.9%)\n[skesa] Kmers branching in  0.135058s wall, 0.220000s user + 0.000000s system = 0.220000s CPU (162.9%)\n[skesa] \n[skesa] Average read length: 150\n[skesa] Genome size estimate: 164404\n[skesa] \n[skesa] Kmer: 21 Graph size: 178949 Contigs in: 0\n[skesa] Valley: 3\n[skesa] \n[skesa] Mark used kmers in  0.000001s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers in multiple/single contigs: 0 0\n[skesa] Fragments before: 36 177953\n[skesa] Fragments after: 31 177953\n[skesa] New seeds: 24\n[skesa] New seeds in  0.108855s wall, 0.210000s user + 0.010000s system = 0.220000s CPU (202.1%)\n[skesa] Fragments before: 48 1008\n[skesa] Fragments after: 48 1008\n[skesa] Connectors: 0 Extenders: 48\n[skesa] Connections and extensions in  0.039663s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (176.5%)\n[skesa] Contigs out: 24 Genome: 177024 N50: 16051 L50: 4\n[skesa] Assembled in  0.149549s wall, 0.280000s user + 0.010000s system = 0.290000s CPU (193.9%)\n[skesa] \n[skesa] \n[skesa] Kmer len: 73\n[skesa] Raw kmers: 1948122 Memory needed (GB): 0.0748079 Memory available (GB): 1.99489 1 cycle(s) will be performed\n[skesa] Distinct kmers: 179085\n[skesa] Kmer count in  0.296805s wall, 0.490000s user + 0.060000s system = 0.550000s CPU (185.3%)\n[skesa] Uniq kmers merging in  0.007412s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] \n[skesa] Average count: 16.7675 Max kmer: 73\n[skesa] Connected: 12092 ambiguously connected: 253 from 12430 mate pairs\n[skesa] Connect pairs in  28.989682s wall, 48.930000s user + 0.110000s system = 49.040000s CPU (169.2%)\n[skesa] \n[skesa] N50 for inserts: 403\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 2608\n[skesa] Reads for connection: 1650\n[skesa] Internal reads: 219\n[skesa] Reads cleaned in  0.074596s wall, 0.140000s user + 0.000000s system = 0.140000s CPU (187.7%)\n[skesa] \n[skesa] Kmer len: 25\n[skesa] Raw kmers: 331609 Memory needed (GB): 0.00636689 Memory available (GB): 1.99676 1 cycle(s) will be performed\n[skesa] Distinct kmers: 19730\n[skesa] Kmer count in  0.036542s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (82.1%)\n[skesa] Uniq kmers merging in  0.000695s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.011057s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (180.9%)\n[skesa] Kmer: 25 Graph size: 19730 Contigs in: 24\n[skesa] Valley: 5\n[skesa] \n[skesa] Mark used kmers in  0.018599s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (161.3%)\n[skesa] Kmers in multiple/single contigs: 0 17141\n[skesa] Fragments before: 46 1630\n[skesa] Fragments after: 46 1630\n[skesa] New seeds: 0\n[skesa] New seeds in  0.011195s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (178.6%)\n[skesa] Fragments before: 48 1273\n[skesa] Fragments after: 43 1273\n[skesa] Connectors: 5 Extenders: 38\n[skesa] Connections and extensions in  0.039310s wall, 0.060000s user + 0.000000s system = 0.060000s CPU (152.6%)\n[skesa] Contigs out: 19 Genome: 177238 N50: 18868 L50: 4\n[skesa] Assembled in  0.069380s wall, 0.110000s user + 0.000000s system = 0.110000s CPU (158.5%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 2262\n[skesa] Reads for connection: 1450\n[skesa] Internal reads: 178\n[skesa] Reads cleaned in  0.050966s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (196.2%)\n[skesa] \n[skesa] Kmer len: 31\n[skesa] Raw kmers: 274441 Memory needed (GB): 0.00526927 Memory available (GB): 1.99645 1 cycle(s) will be performed\n[skesa] Distinct kmers: 16399\n[skesa] Kmer count in  0.032142s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (93.3%)\n[skesa] Uniq kmers merging in  0.000757s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.009539s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (104.8%)\n[skesa] Kmer: 31 Graph size: 16399 Contigs in: 19\n[skesa] Valley: 5\n[skesa] \n[skesa] Mark used kmers in  0.018752s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (213.3%)\n[skesa] Kmers in multiple/single contigs: 0 13931\n[skesa] Fragments before: 37 1641\n[skesa] Fragments after: 35 1641\n[skesa] New seeds: 1\n[skesa] New seeds in  0.008632s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (115.9%)\n[skesa] Fragments before: 39 1294\n[skesa] Fragments after: 38 1294\n[skesa] Connectors: 1 Extenders: 37\n[skesa] Connections and extensions in  0.038121s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (183.6%)\n[skesa] Contigs out: 19 Genome: 177747 N50: 18868 L50: 4\n[skesa] Assembled in  0.065754s wall, 0.120000s user + 0.000000s system = 0.120000s CPU (182.5%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 2190\n[skesa] Reads for connection: 1376\n[skesa] Internal reads: 186\n[skesa] Reads cleaned in  0.059913s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (166.9%)\n[skesa] \n[skesa] Kmer len: 37\n[skesa] Raw kmers: 252661 Memory needed (GB): 0.00727664 Memory available (GB): 1.99617 1 cycle(s) will be performed\n[skesa] Distinct kmers: 15819\n[skesa] Kmer count in  0.044025s wall, 0.050000s user + 0.010000s system = 0.060000s CPU (136.3%)\n[skesa] Uniq kmers merging in  0.000784s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.011067s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (180.7%)\n[skesa] Kmer: 37 Graph size: 15819 Contigs in: 19\n[skesa] Valley: 5\n[skesa] \n[skesa] Mark used kmers in  0.025714s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (155.6%)\n[skesa] Kmers in multiple/single contigs: 0 13695\n[skesa] Fragments before: 34 1428\n[skesa] Fragments after: 32 1428\n[skesa] New seeds: 0\n[skesa] New seeds in  0.008314s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (120.3%)\n[skesa] Fragments before: 37 1235\n[skesa] Fragments after: 33 1235\n[skesa] Connectors: 4 Extenders: 29\n[skesa] Connections and extensions in  0.043011s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (162.8%)\n[skesa] Contigs out: 15 Genome: 177925 N50: 30361 L50: 3\n[skesa] Assembled in  0.077258s wall, 0.120000s user + 0.000000s system = 0.120000s CPU (155.3%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1930\n[skesa] Reads for connection: 1188\n[skesa] Internal reads: 171\n[skesa] Reads cleaned in  0.058052s wall, 0.090000s user + 0.000000s system = 0.090000s CPU (155.0%)\n[skesa] \n[skesa] Kmer len: 41\n[skesa] Raw kmers: 215072 Memory needed (GB): 0.00619407 Memory available (GB): 1.99579 1 cycle(s) will be performed\n[skesa] Distinct kmers: 13278\n[skesa] Kmer count in  0.032438s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (92.5%)\n[skesa] Uniq kmers merging in  0.000715s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.008345s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (239.7%)\n[skesa] Kmer: 41 Graph size: 13278 Contigs in: 15\n[skesa] Valley: 5\n[skesa] \n[skesa] Mark used kmers in  0.022150s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (180.6%)\n[skesa] Kmers in multiple/single contigs: 0 11426\n[skesa] Fragments before: 26 1324\n[skesa] Fragments after: 25 1324\n[skesa] New seeds: 1\n[skesa] New seeds in  0.007975s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Fragments before: 32 1191\n[skesa] Fragments after: 29 1191\n[skesa] Connectors: 3 Extenders: 26\n[skesa] Connections and extensions in  0.042294s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (165.5%)\n[skesa] Contigs out: 13 Genome: 178287 N50: 36501 L50: 2\n[skesa] Assembled in  0.072583s wall, 0.110000s user + 0.000000s system = 0.110000s CPU (151.6%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1676\n[skesa] Reads for connection: 1010\n[skesa] Internal reads: 153\n[skesa] Reads cleaned in  0.060354s wall, 0.090000s user + 0.010000s system = 0.100000s CPU (165.7%)\n[skesa] \n[skesa] Kmer len: 47\n[skesa] Raw kmers: 177076 Memory needed (GB): 0.00509979 Memory available (GB): 1.99548 1 cycle(s) will be performed\n[skesa] Distinct kmers: 10881\n[skesa] Kmer count in  0.024187s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (82.7%)\n[skesa] Uniq kmers merging in  0.000626s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.007203s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (138.8%)\n[skesa] Kmer: 47 Graph size: 10881 Contigs in: 13\n[skesa] Valley: 5\n[skesa] \n[skesa] Mark used kmers in  0.023463s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (170.5%)\n[skesa] Kmers in multiple/single contigs: 0 9365\n[skesa] Fragments before: 21 1066\n[skesa] Fragments after: 21 1066\n[skesa] New seeds: 0\n[skesa] New seeds in  0.005144s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (194.4%)\n[skesa] Fragments before: 25 985\n[skesa] Fragments after: 23 985\n[skesa] Connectors: 2 Extenders: 21\n[skesa] Connections and extensions in  0.040900s wall, 0.060000s user + 0.000000s system = 0.060000s CPU (146.7%)\n[skesa] Contigs out: 11 Genome: 178407 N50: 58941 L50: 2\n[skesa] Assembled in  0.069670s wall, 0.110000s user + 0.000000s system = 0.110000s CPU (157.9%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1522\n[skesa] Reads for connection: 906\n[skesa] Internal reads: 143\n[skesa] Reads cleaned in  0.058122s wall, 0.080000s user + 0.010000s system = 0.090000s CPU (154.8%)\n[skesa] \n[skesa] Kmer len: 51\n[skesa] Raw kmers: 154972 Memory needed (GB): 0.00446319 Memory available (GB): 1.99522 1 cycle(s) will be performed\n[skesa] Distinct kmers: 9413\n[skesa] Kmer count in  0.019684s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (101.6%)\n[skesa] Uniq kmers merging in  0.000528s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.005905s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (169.4%)\n[skesa] Kmer: 51 Graph size: 9413 Contigs in: 11\n[skesa] Valley: 10\n[skesa] \n[skesa] Mark used kmers in  0.022288s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (179.5%)\n[skesa] Kmers in multiple/single contigs: 0 8077\n[skesa] Fragments before: 21 953\n[skesa] Fragments after: 20 953\n[skesa] New seeds: 0\n[skesa] New seeds in  0.004485s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Fragments before: 21 817\n[skesa] Fragments after: 21 817\n[skesa] Connectors: 0 Extenders: 21\n[skesa] Connections and extensions in  0.045776s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (152.9%)\n[skesa] Contigs out: 11 Genome: 178407 N50: 58941 L50: 2\n[skesa] Assembled in  0.072724s wall, 0.110000s user + 0.000000s system = 0.110000s CPU (151.3%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1522\n[skesa] Reads for connection: 906\n[skesa] Internal reads: 143\n[skesa] Reads cleaned in  0.054946s wall, 0.090000s user + 0.000000s system = 0.090000s CPU (163.8%)\n[skesa] \n[skesa] Kmer len: 57\n[skesa] Raw kmers: 145840 Memory needed (GB): 0.00420019 Memory available (GB): 1.99498 1 cycle(s) will be performed\n[skesa] Distinct kmers: 9362\n[skesa] Kmer count in  0.019250s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (103.9%)\n[skesa] Uniq kmers merging in  0.000482s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.006869s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (145.6%)\n[skesa] Kmer: 57 Graph size: 9362 Contigs in: 11\n[skesa] Valley: 5\n[skesa] \n[skesa] Mark used kmers in  0.023393s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (171.0%)\n[skesa] Kmers in multiple/single contigs: 0 7933\n[skesa] Fragments before: 20 1012\n[skesa] Fragments after: 19 1012\n[skesa] New seeds: 0\n[skesa] New seeds in  0.004195s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Fragments before: 21 921\n[skesa] Fragments after: 21 921\n[skesa] Connectors: 0 Extenders: 21\n[skesa] Connections and extensions in  0.037902s wall, 0.060000s user + 0.000000s system = 0.060000s CPU (158.3%)\n[skesa] Contigs out: 11 Genome: 178445 N50: 58941 L50: 2\n[skesa] Assembled in  0.065681s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (152.3%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1522\n[skesa] Reads for connection: 902\n[skesa] Internal reads: 145\n[skesa] Reads cleaned in  0.053837s wall, 0.090000s user + 0.000000s system = 0.090000s CPU (167.2%)\n[skesa] \n[skesa] Kmer len: 63\n[skesa] Raw kmers: 136708 Memory needed (GB): 0.00393719 Memory available (GB): 1.99475 1 cycle(s) will be performed\n[skesa] Distinct kmers: 9294\n[skesa] Kmer count in  0.017263s wall, 0.000000s user + 0.010000s system = 0.010000s CPU (57.9%)\n[skesa] Uniq kmers merging in  0.000591s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.005852s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmer: 63 Graph size: 9294 Contigs in: 11\n[skesa] Valley: 0\n[skesa] \n[skesa] Mark used kmers in  0.021818s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (183.3%)\n[skesa] Kmers in multiple/single contigs: 0 7818\n[skesa] Fragments before: 23 1176\n[skesa] Fragments after: 22 1176\n[skesa] New seeds: 0\n[skesa] New seeds in  0.004669s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (214.2%)\n[skesa] Fragments before: 21 959\n[skesa] Fragments after: 21 959\n[skesa] Connectors: 0 Extenders: 21\n[skesa] Connections and extensions in  0.037210s wall, 0.060000s user + 0.000000s system = 0.060000s CPU (161.2%)\n[skesa] Contigs out: 11 Genome: 178445 N50: 58941 L50: 2\n[skesa] Assembled in  0.063832s wall, 0.110000s user + 0.000000s system = 0.110000s CPU (172.3%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1522\n[skesa] Reads for connection: 902\n[skesa] Internal reads: 145\n[skesa] Reads cleaned in  0.052433s wall, 0.080000s user + 0.000000s system = 0.080000s CPU (152.6%)\n[skesa] \n[skesa] Kmer len: 67\n[skesa] Raw kmers: 130620 Memory needed (GB): 0.00501581 Memory available (GB): 1.99451 1 cycle(s) will be performed\n[skesa] Distinct kmers: 9237\n[skesa] Kmer count in  0.020254s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (98.7%)\n[skesa] Uniq kmers merging in  0.000550s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.007099s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (140.9%)\n[skesa] Kmer: 67 Graph size: 9237 Contigs in: 11\n[skesa] Valley: 0\n[skesa] \n[skesa] Mark used kmers in  0.031555s wall, 0.050000s user + 0.010000s system = 0.060000s CPU (190.1%)\n[skesa] Kmers in multiple/single contigs: 0 7713\n[skesa] Fragments before: 23 1220\n[skesa] Fragments after: 22 1220\n[skesa] New seeds: 0\n[skesa] New seeds in  0.004767s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (209.8%)\n[skesa] Fragments before: 21 999\n[skesa] Fragments after: 21 999\n[skesa] Connectors: 0 Extenders: 21\n[skesa] Connections and extensions in  0.041317s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (169.4%)\n[skesa] Contigs out: 11 Genome: 178445 N50: 58941 L50: 2\n[skesa] Assembled in  0.077806s wall, 0.130000s user + 0.010000s system = 0.140000s CPU (179.9%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1522\n[skesa] Reads for connection: 902\n[skesa] Internal reads: 145\n[skesa] Reads cleaned in  0.063874s wall, 0.090000s user + 0.000000s system = 0.090000s CPU (140.9%)\n[skesa] \n[skesa] Kmer len: 73\n[skesa] Raw kmers: 121488 Memory needed (GB): 0.00466514 Memory available (GB): 1.99421 1 cycle(s) will be performed\n[skesa] Distinct kmers: 9132\n[skesa] Kmer count in  0.016310s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (122.6%)\n[skesa] Uniq kmers merging in  0.000601s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.006395s wall, 0.010000s user + 0.010000s system = 0.020000s CPU (312.7%)\n[skesa] Kmer: 73 Graph size: 9132 Contigs in: 11\n[skesa] Valley: 0\n[skesa] \n[skesa] Mark used kmers in  0.023738s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (168.5%)\n[skesa] Kmers in multiple/single contigs: 0 7538\n[skesa] Fragments before: 22 1286\n[skesa] Fragments after: 22 1286\n[skesa] New seeds: 0\n[skesa] New seeds in  0.004454s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Fragments before: 21 1059\n[skesa] Fragments after: 21 1059\n[skesa] Connectors: 0 Extenders: 21\n[skesa] Connections and extensions in  0.039677s wall, 0.060000s user + 0.000000s system = 0.060000s CPU (151.2%)\n[skesa] Contigs out: 11 Genome: 178445 N50: 58941 L50: 2\n[skesa] Assembled in  0.068000s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (147.1%)\n[skesa] \n[skesa] Seed kmers: 0\n[skesa] Cleaned reads: 1522\n[skesa] Reads for connection: 902\n[skesa] Internal reads: 145\n[skesa] Reads cleaned in  0.059117s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (169.2%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 21\n[skesa] Connected: 386 ambiguously connected: 57 from 451 mate pairs\n[skesa] Connect pairs in  0.909242s wall, 1.760000s user + 0.000000s system = 1.760000s CPU (193.6%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 25\n[skesa] Connected: 0 ambiguously connected: 57 from 57 mate pairs\n[skesa] Connect pairs in  0.023145s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (172.8%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 31\n[skesa] Connected: 18 ambiguously connected: 39 from 57 mate pairs\n[skesa] Connect pairs in  0.044174s wall, 0.080000s user + 0.000000s system = 0.080000s CPU (181.1%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 37\n[skesa] Connected: 0 ambiguously connected: 39 from 39 mate pairs\n[skesa] Connect pairs in  0.016516s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (181.6%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 41\n[skesa] Connected: 6 ambiguously connected: 33 from 39 mate pairs\n[skesa] Connect pairs in  0.035976s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (194.6%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 47\n[skesa] Connected: 10 ambiguously connected: 23 from 33 mate pairs\n[skesa] Connect pairs in  0.020079s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (149.4%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 51\n[skesa] Connected: 0 ambiguously connected: 23 from 23 mate pairs\n[skesa] Connect pairs in  0.013292s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (150.5%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 57\n[skesa] Connected: 10 ambiguously connected: 13 from 23 mate pairs\n[skesa] Connect pairs in  0.023955s wall, 0.030000s user + 0.010000s system = 0.040000s CPU (167.0%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 63\n[skesa] Connected: 0 ambiguously connected: 13 from 13 mate pairs\n[skesa] Connect pairs in  0.008536s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (234.3%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 67\n[skesa] Connected: 0 ambiguously connected: 13 from 13 mate pairs\n[skesa] Connect pairs in  0.010213s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (97.9%)\n[skesa] \n[skesa] Connecting mate pairs using kmer length: 73\n[skesa] Connected: 0 ambiguously connected: 13 from 13 mate pairs\n[skesa] Connect pairs in  0.011209s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (178.4%)\n[skesa] Totally connected: 430\n[skesa] Added notconnected: 26\n[skesa] \n[skesa] Kmer len: 91\n[skesa] Raw kmers: 221822 Memory needed (GB): 0.00851796 Memory available (GB): 1.99388 1 cycle(s) will be performed\n[skesa] Distinct kmers: 8759\n[skesa] Kmer count in  0.033517s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (119.3%)\n[skesa] Uniq kmers merging in  0.000639s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.006154s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (162.5%)\n[skesa] Kmer: 91 Graph size: 8759 Contigs in: 11\n[skesa] Valley: 9\n[skesa] \n[skesa] Mark used kmers in  0.024705s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (161.9%)\n[skesa] Kmers in multiple/single contigs: 0 7091\n[skesa] Fragments before: 18 1410\n[skesa] Fragments after: 16 1410\n[skesa] New seeds: 0\n[skesa] New seeds in  0.003981s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Fragments before: 21 1484\n[skesa] Fragments after: 19 1484\n[skesa] Connectors: 2 Extenders: 17\n[skesa] Connections and extensions in  0.040754s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (171.8%)\n[skesa] Contigs out: 9 Genome: 178751 N50: 59057 L50: 2\n[skesa] Assembled in  0.069570s wall, 0.110000s user + 0.000000s system = 0.110000s CPU (158.1%)\n[skesa] \n[skesa] \n[skesa] Kmer len: 247\n[skesa] Raw kmers: 128066 Memory needed (GB): 0.0110649 Memory available (GB): 1.99359 1 cycle(s) will be performed\n[skesa] Distinct kmers: 8135\n[skesa] Kmer count in  0.031617s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (94.9%)\n[skesa] Uniq kmers merging in  0.000940s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.009203s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (108.7%)\n[skesa] Kmer: 247 Graph size: 8135 Contigs in: 9\n[skesa] Valley: 6\n[skesa] \n[skesa] Mark used kmers in  0.035897s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (195.0%)\n[skesa] Kmers in multiple/single contigs: 0 5263\n[skesa] Fragments before: 15 2302\n[skesa] Fragments after: 13 2302\n[skesa] New seeds: 0\n[skesa] New seeds in  0.008473s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (118.0%)\n[skesa] Fragments before: 15 2134\n[skesa] Fragments after: 15 2134\n[skesa] Connectors: 0 Extenders: 15\n[skesa] Connections and extensions in  0.051413s wall, 0.070000s user + 0.000000s system = 0.070000s CPU (136.2%)\n[skesa] Contigs out: 8 Genome: 178773 N50: 59057 L50: 2\n[skesa] Assembled in  0.095939s wall, 0.150000s user + 0.000000s system = 0.150000s CPU (156.3%)\n[skesa] \n[skesa] \n[skesa] Kmer len: 403\n[skesa] Raw kmers: 38087 Memory needed (GB): 0.00511889 Memory available (GB): 1.993 1 cycle(s) will be performed\n[skesa] Distinct kmers: 6331\n[skesa] Kmer count in  0.013001s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (76.9%)\n[skesa] Uniq kmers merging in  0.000555s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n[skesa] Kmers branching in  0.009269s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (215.8%)\n[skesa] Kmer: 403 Graph size: 6331 Contigs in: 8\n[skesa] Valley: 0\n[skesa] \n[skesa] Mark used kmers in  0.046468s wall, 0.080000s user + 0.000000s system = 0.080000s CPU (172.2%)\n[skesa] Kmers in multiple/single contigs: 0 2831\n[skesa] Fragments before: 11 1588\n[skesa] Fragments after: 10 1588\n[skesa] New seeds: 0\n[skesa] New seeds in  0.007365s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (135.8%)\n[skesa] Fragments before: 11 1588\n[skesa] Fragments after: 10 1588\n[skesa] Connectors: 1 Extenders: 9\n[skesa] Connections and extensions in  0.055376s wall, 0.060000s user + 0.010000s system = 0.070000s CPU (126.4%)\n[skesa] Contigs out: 7 Genome: 178795 N50: 59057 L50: 2\n[skesa] Assembled in  0.109325s wall, 0.150000s user + 0.010000s system = 0.160000s CPU (146.4%)\n[skesa] \n[skesa] DONE\n", "job_messages": null, "id": "6f4ed7e3537a271a", "job_stdout": null}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4-3", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4", "time_seconds": 27.259841918945312, "inputs": {"library|lib_type": "paired", "assembler": "velvet", "library|R2": {"src": "hda", "id": "aa82fa21b9b2dc69"}, "library|R1": {"src": "hda", "id": "9ca91e91801b65d7"}}, "tool_version": "1.0.4", "output_problems": ["Job in error state.", "Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4", "update_time": "2019-06-25T23:11:49.195248", "inputs": {"R1": {"src": "hda", "id": "9ca91e91801b65d7", "uuid": "6d3f6c89-5e44-415f-9fa6-cc5a601159da"}, "R2": {"src": "hda", "id": "aa82fa21b9b2dc69", "uuid": "0ec23dfd-4287-4128-bab2-147ad7a3dae2"}}, "outputs": {"contigs": {"src": "hda", "id": "7037e03bc46064dc", "uuid": "2ed8d838-eeb5-493d-9c23-229ebe9973fd"}, "shovill_std_log": {"src": "hda", "id": "f34d10247dc2058e", "uuid": "6b0943d7-701a-420a-bad9-35ec0f22825a"}, "contigs_graph": {"src": "hda", "id": "7db38599c469f0f3", "uuid": "17111a50-63a5-4d42-bd80-4d7233a2e17a"}}, "history_id": "f840675b8d7f5485", "stdout": "[mash] Estimated genome size: 185278\n[mash] Estimated coverage:    8.02\n[mash] Writing to /tmp/cGA0eVVsRT/sketch.msh...\n[lighter] [2019-06-25 23:09:27] =============Start====================\n[lighter] [2019-06-25 23:09:27] Scanning the input files to infer alpha(sampling rate)\n[lighter] [2019-06-25 23:09:27] Average coverage is 20.207 and alpha is 0.346\n[lighter] [2019-06-25 23:09:27] Bad quality threshold is \".\"\n[lighter] [2019-06-25 23:09:28] Finish sampling kmers\n[lighter] [2019-06-25 23:09:28] Bloom filter A's false positive rate: 0.023199\n[lighter] [2019-06-25 23:09:28] Finish storing trusted kmers\n[lighter] [2019-06-25 23:09:28] Finish error correction\n[lighter] Processed 24960 reads:\n[lighter] \t13131 are error-free\n[lighter] \tCorrected 17777 bases(1.502832 corrections for reads with errors)\n[lighter] \tTrimmed 0 reads with average trimmed bases 0.000000\n[lighter] \tDiscard 0 reads\n[FLASH] Starting FLASH v1.2.11\n[FLASH] Fast Length Adjustment of SHort reads\n[FLASH]  \n[FLASH] Input files:\n[FLASH]     R1.cor.fq.gz\n[FLASH]     R2.cor.fq.gz\n[FLASH]  \n[FLASH] Output files:\n[FLASH]     ./flash.extendedFrags.fastq.gz\n[FLASH]     ./flash.notCombined_1.fastq.gz\n[FLASH]     ./flash.notCombined_2.fastq.gz\n[FLASH]     ./flash.hist\n[FLASH]     ./flash.histogram\n[FLASH]  \n[FLASH] Parameters:\n[FLASH]     Min overlap:           20\n[FLASH]     Max overlap:           150\n[FLASH]     Max mismatch density:  0.250000\n[FLASH]     Allow \"outie\" pairs:   false\n[FLASH]     Cap mismatch quals:    false\n[FLASH]     Combiner threads:      2\n[FLASH]     Input format:          FASTQ, phred_offset=33\n[FLASH]     Output format:         FASTQ, phred_offset=33, gzip\n[FLASH]  \n[FLASH] Starting reader and writer threads\n[FLASH] Starting 2 combiner threads\n[FLASH] Processed 12480 read pairs\n[FLASH]  \n[FLASH] Read combination statistics:\n[FLASH]     Total pairs:      12480\n[FLASH]     Combined pairs:   50\n[FLASH]     Uncombined pairs: 12430\n[FLASH]     Percent combined: 0.40%\n[FLASH]  \n[FLASH] Writing histogram files.\n[FLASH]  \n[FLASH] FLASH v1.2.11 complete!\n[FLASH] 0.690 seconds elapsed\n[velveth] [0.000000] Reading file 'flash.notCombined_1.fastq.gz' using 'pigz' as FastQ\n[velveth] [0.002330] Reading file 'flash.notCombined_2.fastq.gz' using 'pigz' as FastQ\n[velveth] [0.104064] 24860 sequences found in total in the paired sequence files\n[velveth] [0.104065] Done\n[velveth] [0.106018] Reading file 'flash.extendedFrags.fastq.gz' using 'pigz' as FastQ\n[velveth] [0.106299] 50 sequences found\n[velveth] [0.106300] Done\n[velveth] [0.153500] Reading CNY read set file velvet/CnyUnifiedSeq\n[velveth] [0.153633] 24910 sequences found\n[velveth] [0.156682] Done\n[velveth] [0.156684] 24910 sequences in total.\n[velveth] [0.157608] Writing into roadmap file velvet/Roadmaps...\n[velveth] [0.157633] Inputting sequences...\n[velveth] [0.157799] Inputting sequence 0 / 24910\n[velveth] [0.324456]  === Sequences loaded in 0.166835 s\n[velveth] [0.339023] Done inputting sequences\n[velveth] [0.339026] Destroying splay table\n[velveth] [0.340602] Splay table destroyed\n[velvetg] [0.000001] Reading roadmap file velvet/Roadmaps\n[velvetg] [0.038726] 24910 roadmaps read\n[velvetg] [0.038986] Reading CNY read set file velvet/CnyUnifiedSeq\n[velvetg] [0.039083] 24910 sequences found\n[velvetg] [0.041821] Done\n[velvetg] [0.041869] Creating insertion markers\n[velvetg] [0.044863] Ordering insertion markers\n[velvetg] [0.050875] Counting preNodes\n[velvetg] [0.053062] 43367 preNodes counted, creating them now\n[velvetg] [0.125677] Adjusting marker info...\n[velvetg] [0.128224] Connecting preNodes\n[velvetg] [0.146777] Cleaning up memory\n[velvetg] [0.146841] Done creating preGraph\n[velvetg] [0.146850] Concatenation...\n[velvetg] [0.156421] Renumbering preNodes\n[velvetg] [0.156422] Initial preNode count 43367\n[velvetg] [0.156680] Destroyed 42932 preNodes\n[velvetg] [0.156680] Concatenation over!\n[velvetg] [0.156681] Clipping short tips off preGraph\n[velvetg] [0.156728] Concatenation...\n[velvetg] [0.157478] Renumbering preNodes\n[velvetg] [0.157479] Initial preNode count 435\n[velvetg] [0.157486] Destroyed 319 preNodes\n[velvetg] [0.157487] Concatenation over!\n[velvetg] [0.157487] 160 tips cut off\n[velvetg] [0.157487] 116 nodes left\n[velvetg] [0.158176] Writing into pregraph file velvet/PreGraph...\n[velvetg] [0.174126] Reading pre-graph file velvet/PreGraph\n[velvetg] [0.174169] Graph has 116 nodes and 24910 sequences\n[velvetg] [0.179320] Scanning pre-graph file velvet/PreGraph for k-mers\n[velvetg] [0.183037] 181430 kmers found\n[velvetg] [0.195721] Sorting kmer occurence table ... \n[velvetg] [0.240207] Sorting done.\n[velvetg] [0.240209] Computing acceleration table... \n[velvetg] [0.260185] Computing offsets... \n[velvetg] [0.261642] Ghost Threading through reads 0 / 24910\n[velvetg] [0.364320]  === Ghost-Threaded in 0.102751 s\n[velvetg] [0.364326] Threading through reads 0 / 24910\n[velvetg] [0.534816]  === Threaded in 0.170493 s\n[velvetg] [0.536803] Correcting graph with cutoff 0.200000\n[velvetg] [0.536831] Determining eligible starting points\n[velvetg] [0.536903] Done listing starting nodes\n[velvetg] [0.536903] Initializing todo lists\n[velvetg] [0.536909] Done with initilization\n[velvetg] [0.536909] Activating arc lookup table\n[velvetg] [0.536913] Done activating arc lookup table\n[velvetg] [0.538119] Concatenation...\n[velvetg] [0.538122] Renumbering nodes\n[velvetg] [0.538123] Initial node count 116\n[velvetg] [0.538125] Removed 18 null nodes\n[velvetg] [0.538125] Concatenation over!\n[velvetg] [0.538125] Clipping short tips off graph, drastic\n[velvetg] [0.538127] Concatenation...\n[velvetg] [0.538129] Renumbering nodes\n[velvetg] [0.538129] Initial node count 98\n[velvetg] [0.538129] Removed 0 null nodes\n[velvetg] [0.538130] Concatenation over!\n[velvetg] [0.538130] 98 nodes left\n[velvetg] [0.538873] Writing into graph file velvet/Graph2...\n[velvetg] [0.571078] Measuring median coverage depth...\n[velvetg] [0.571121] Median coverage depth = 10.642214\n[velvetg] [0.575719] Removing contigs with coverage < 5.321107...\n[velvetg] [0.575737] Concatenation...\n[velvetg] [0.576425] Renumbering nodes\n[velvetg] [0.576426] Initial node count 98\n[velvetg] [0.576427] Removed 82 null nodes\n[velvetg] [0.576427] Concatenation over!\n[velvetg] [0.576428] Concatenation...\n[velvetg] [0.576428] Renumbering nodes\n[velvetg] [0.576428] Initial node count 16\n[velvetg] [0.576429] Removed 0 null nodes\n[velvetg] [0.576429] Concatenation over!\n[velvetg] [0.576430] Clipping short tips off graph, drastic\n[velvetg] [0.576431] Concatenation...\n[velvetg] [0.576431] Renumbering nodes\n[velvetg] [0.576431] Initial node count 16\n[velvetg] [0.576432] Removed 0 null nodes\n[velvetg] [0.576432] Concatenation over!\n[velvetg] [0.576432] 16 nodes left\n[velvetg] [0.576433] Read coherency...\n[velvetg] [0.576433] Identifying unique nodes\n[velvetg] [0.576434] Done, 11 unique nodes counted\n[velvetg] [0.576435] Trimming read tips\n[velvetg] [0.576435] Renumbering nodes\n[velvetg] [0.576436] Initial node count 16\n[velvetg] [0.576436] Removed 0 null nodes\n[velvetg] [0.576436] Confronted to 0 multiple hits and 0 null over 0\n[velvetg] [0.576437] Read coherency over!\n[velvetg] [0.576532] Starting pebble resolution...\n[velvetg] [0.576625] Computing read to node mapping array sizes\n[velvetg] [0.576957] Computing read to node mappings\n[velvetg] [0.577519] Estimating library insert lengths...\n[velvetg] [0.579012] Paired-end library 1 has length: 399, sample standard deviation: 39\n[velvetg] [0.579014] Done\n[velvetg] [0.579014] Computing direct node to node mappings\n[velvetg] [0.579395] Scaffolding node 0\n[velvetg] [0.579458]  === Nodes Scaffolded in 0.000443 s\n[velvetg] [0.579636] Preparing to correct graph with cutoff 0.200000\n[velvetg] [0.582112] Cleaning memory\n[velvetg] [0.582114] Deactivating local correction settings\n[velvetg] [0.582119] Pebble done.\n[velvetg] [0.582119] Starting pebble resolution...\n[velvetg] [0.582210] Computing read to node mapping array sizes\n[velvetg] [0.582658] Computing read to node mappings\n[velvetg] [0.583074] Estimating library insert lengths...\n[velvetg] [0.584560] Paired-end library 1 has length: 399, sample standard deviation: 39\n[velvetg] [0.584562] Done\n[velvetg] [0.584563] Computing direct node to node mappings\n[velvetg] [0.584834] Scaffolding node 0\n[velvetg] [0.584851]  === Nodes Scaffolded in 0.000287 s\n[velvetg] [0.584942] Preparing to correct graph with cutoff 0.200000\n[velvetg] [0.584962] Cleaning memory\n[velvetg] [0.584963] Deactivating local correction settings\n[velvetg] [0.584967] Pebble done.\n[velvetg] [0.584968] Concatenation...\n[velvetg] [0.584969] Renumbering nodes\n[velvetg] [0.584969] Initial node count 16\n[velvetg] [0.584970] Removed 7 null nodes\n[velvetg] [0.584971] Concatenation over!\n[velvetg] [0.584971] Removing reference contigs with coverage < 5.321107...\n[velvetg] [0.584972] Concatenation...\n[velvetg] [0.584973] Renumbering nodes\n[velvetg] [0.584973] Initial node count 9\n[velvetg] [0.584973] Removed 0 null nodes\n[velvetg] [0.584974] Concatenation over!\n[velvetg] [0.585633] Writing contigs into velvet/contigs.fa...\n[velvetg] [0.608383] Writing into stats file velvet/stats.txt...\n[velvetg] [0.613688] Writing into graph file velvet/LastGraph...\n[velvetg] [0.645821] Estimated Coverage = 10.642214\n[velvetg] [0.645825] Estimated Coverage cutoff = 5.321107\n[velvetg] Final graph has 9 nodes and n50 of 132602, max 132602, total 179409, using 24896/24910 reads\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "[shovill] Hello ubuntu\n[shovill] You ran: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/shovill --outdir out --cpus 2 --ram 4 --R1 /mnt/pulsar/files/staging/561754/inputs/dataset_925478.dat --R2 /mnt/pulsar/files/staging/561754/inputs/dataset_925479.dat --namefmt contig%05d --depth 100 --nocorr --minlen 0 --mincov 2 --assembler velvet\n[shovill] This is shovill 1.0.4\n[shovill] Written by Torsten Seemann\n[shovill] Homepage is https://github.com/tseemann/shovill\n[shovill] Operating system is linux\n[shovill] Perl version is v5.26.2\n[shovill] Machine has 4 CPU cores and 15.67 GB RAM\n[shovill] Using bwa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/bwa | Version: 0.7.17-r1188\n[shovill] Using flash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/flash | FLASH v1.2.11\n[shovill] Using java - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/java | openjdk version \"11.0.1\" 2018-10-16 LTS\n[shovill] Using lighter - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/lighter | Lighter v1.1.2\n[shovill] Using mash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/mash | 2.1\n[shovill] Using megahit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit | MEGAHIT v1.1.3\n[shovill] Using megahit_toolkit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit_toolkit | v1.1.3\n[shovill] Using pigz - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pigz | pigz 2.3.4\n[shovill] Using pilon - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pilon | Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500\n[shovill] Using samclip - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samclip | samclip 0.2\n[shovill] Using samtools - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samtools | Version: 1.9 (using htslib 1.9)\n[shovill] Using seqtk - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/seqtk | Version: 1.3-r106\n[shovill] Using skesa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/skesa | SKESA v.2.3.0\n[shovill] Using spades.py - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py | SPAdes v3.13.0\n[shovill] Using trimmomatic - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/trimmomatic | 0.39\n[shovill] Using velvetg - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velvetg | Version 1.2.10\n[shovill] Using velveth - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velveth | Version 1.2.10\n[shovill] Using tempdir: /tmp\n[shovill] Changing into folder: /mnt/pulsar/files/staging/561754/working/out\n[shovill] Collecting raw read statistics with 'seqtk'\n[shovill] Running: seqtk fqchk -q3 \\/mnt\\/pulsar\\/files\\/staging\\/561754\\/inputs\\/dataset_925478\\.dat >/tmp/f5phRvgfNB 2>&1 | sed 's/^/[seqtk] /' | tee -a shovill.log\n[shovill] Read stats: max_len = 150\n[shovill] Read stats: total_bp = 3744000\n[shovill] Read stats: min_len = 150\n[shovill] Read stats: avg_len = 150\n[shovill] Estimating genome size with 'mash'\n[shovill] Running: mash sketch -o /tmp/cGA0eVVsRT/sketch -k 32 -m 3 -r \\/mnt\\/pulsar\\/files\\/staging\\/561754\\/inputs\\/dataset_925478\\.dat 2>&1 | sed 's/^/[mash] /' | tee -a shovill.log\n[shovill] Using genome size 185278 bp\n[shovill] Estimated sequencing depth: 20 x\n[shovill] No read depth reduction requested or necessary.\n[shovill] Appending -Xmx4g to _JAVA_OPTIONS\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561754\\/inputs\\/dataset_925478\\.dat R1.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561754\\/inputs\\/dataset_925479\\.dat R2.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Average read length looks like 150 bp\n[shovill] Automatically setting --minlen to 75\n[shovill] Setting k-mer range to (31 .. 112)\n[shovill] Estimated K-mers: 31 51 71 91 111 [kn=5, ks=20, kmin=31, kmax=112]\n[shovill] Using kmers: 31,51,71,91,111\n[shovill] Correcting reads with 'Lighter'\n[shovill] Running: lighter -od . -r R1.fq.gz -r R2.fq.gz -K 32 185278 -t 2 -maxcor 1 2>&1 | sed 's/^/[lighter] /' | tee -a shovill.log\n[shovill] Overlapping/stitcing PE reads with 'FLASH'\n[shovill] Running: flash -m 20 -M 150 -d . -o flash -z -t 2 R1.cor.fq.gz R2.cor.fq.gz 2>&1 | sed 's/^//' | tee -a shovill.log\n[shovill] Assembling reads with 'velvet'\n[shovill] Using K=71 for velveth\n[shovill] Running: OMP_NUM_THREADS=2 velveth velvet 71 -create_binary -shortPaired -fmtAuto -separate flash.notCombined_1.fastq.gz flash.notCombined_2.fastq.gz  -short2 -fmtAuto flash.extendedFrags.fastq.gz 2>&1 | sed 's/^/[velveth] /' | tee -a shovill.log\n[shovill] Running: OMP_NUM_THREADS=2 velvetg velvet -exp_cov auto -cov_cutoff auto -scaffolding yes 2>&1 | sed 's/^/[velvetg] /' | tee -a shovill.log\n[shovill] User supplied --nocorr, so not correcting contigs.\n[shovill] Assembly is 179967, estimated genome size was 185278 (-2.87%)\n[shovill] Using genome graph file 'velvet/contigs.LastGraph' => 'contigs.LastGraph'\n[shovill] Walltime used: 0 min 5 sec\n[shovill] Results in: /mnt/pulsar/files/staging/561754/working/out\n[shovill] Final assembly graph: /mnt/pulsar/files/staging/561754/working/out/contigs.LastGraph\n[shovill] Final assembly contigs: /mnt/pulsar/files/staging/561754/working/out/contigs.fa\n[shovill] It contains 8 (min=75) contigs totalling 179967 bp.\n[shovill] Use Bandage to inspect the .gfa/.fastg assembly graph: https://rrwick.github.io/Bandage/\n[shovill] Done.\n", "state": "error", "create_time": "2019-06-25T23:11:28.882001", "stderr": "[shovill] Hello ubuntu\n[shovill] You ran: /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/shovill --outdir out --cpus 2 --ram 4 --R1 /mnt/pulsar/files/staging/561754/inputs/dataset_925478.dat --R2 /mnt/pulsar/files/staging/561754/inputs/dataset_925479.dat --namefmt contig%05d --depth 100 --nocorr --minlen 0 --mincov 2 --assembler velvet\n[shovill] This is shovill 1.0.4\n[shovill] Written by Torsten Seemann\n[shovill] Homepage is https://github.com/tseemann/shovill\n[shovill] Operating system is linux\n[shovill] Perl version is v5.26.2\n[shovill] Machine has 4 CPU cores and 15.67 GB RAM\n[shovill] Using bwa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/bwa | Version: 0.7.17-r1188\n[shovill] Using flash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/flash | FLASH v1.2.11\n[shovill] Using java - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/java | openjdk version \"11.0.1\" 2018-10-16 LTS\n[shovill] Using lighter - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/lighter | Lighter v1.1.2\n[shovill] Using mash - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/mash | 2.1\n[shovill] Using megahit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit | MEGAHIT v1.1.3\n[shovill] Using megahit_toolkit - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/megahit_toolkit | v1.1.3\n[shovill] Using pigz - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pigz | pigz 2.3.4\n[shovill] Using pilon - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/pilon | Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500\n[shovill] Using samclip - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samclip | samclip 0.2\n[shovill] Using samtools - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/samtools | Version: 1.9 (using htslib 1.9)\n[shovill] Using seqtk - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/seqtk | Version: 1.3-r106\n[shovill] Using skesa - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/skesa | SKESA v.2.3.0\n[shovill] Using spades.py - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/spades.py | SPAdes v3.13.0\n[shovill] Using trimmomatic - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/trimmomatic | 0.39\n[shovill] Using velvetg - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velvetg | Version 1.2.10\n[shovill] Using velveth - /mnt/pulsar/server/dependencies/_conda/envs/__shovill@1.0.4/bin/velveth | Version 1.2.10\n[shovill] Using tempdir: /tmp\n[shovill] Changing into folder: /mnt/pulsar/files/staging/561754/working/out\n[shovill] Collecting raw read statistics with 'seqtk'\n[shovill] Running: seqtk fqchk -q3 \\/mnt\\/pulsar\\/files\\/staging\\/561754\\/inputs\\/dataset_925478\\.dat >/tmp/f5phRvgfNB 2>&1 | sed 's/^/[seqtk] /' | tee -a shovill.log\n[shovill] Read stats: max_len = 150\n[shovill] Read stats: total_bp = 3744000\n[shovill] Read stats: min_len = 150\n[shovill] Read stats: avg_len = 150\n[shovill] Estimating genome size with 'mash'\n[shovill] Running: mash sketch -o /tmp/cGA0eVVsRT/sketch -k 32 -m 3 -r \\/mnt\\/pulsar\\/files\\/staging\\/561754\\/inputs\\/dataset_925478\\.dat 2>&1 | sed 's/^/[mash] /' | tee -a shovill.log\n[shovill] Using genome size 185278 bp\n[shovill] Estimated sequencing depth: 20 x\n[shovill] No read depth reduction requested or necessary.\n[shovill] Appending -Xmx4g to _JAVA_OPTIONS\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561754\\/inputs\\/dataset_925478\\.dat R1.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Running: ln -sf \\/mnt\\/pulsar\\/files\\/staging\\/561754\\/inputs\\/dataset_925479\\.dat R2.fq.gz 2>&1 | sed 's/^/[ln] /' | tee -a shovill.log\n[shovill] Average read length looks like 150 bp\n[shovill] Automatically setting --minlen to 75\n[shovill] Setting k-mer range to (31 .. 112)\n[shovill] Estimated K-mers: 31 51 71 91 111 [kn=5, ks=20, kmin=31, kmax=112]\n[shovill] Using kmers: 31,51,71,91,111\n[shovill] Correcting reads with 'Lighter'\n[shovill] Running: lighter -od . -r R1.fq.gz -r R2.fq.gz -K 32 185278 -t 2 -maxcor 1 2>&1 | sed 's/^/[lighter] /' | tee -a shovill.log\n[shovill] Overlapping/stitcing PE reads with 'FLASH'\n[shovill] Running: flash -m 20 -M 150 -d . -o flash -z -t 2 R1.cor.fq.gz R2.cor.fq.gz 2>&1 | sed 's/^//' | tee -a shovill.log\n[shovill] Assembling reads with 'velvet'\n[shovill] Using K=71 for velveth\n[shovill] Running: OMP_NUM_THREADS=2 velveth velvet 71 -create_binary -shortPaired -fmtAuto -separate flash.notCombined_1.fastq.gz flash.notCombined_2.fastq.gz  -short2 -fmtAuto flash.extendedFrags.fastq.gz 2>&1 | sed 's/^/[velveth] /' | tee -a shovill.log\n[shovill] Running: OMP_NUM_THREADS=2 velvetg velvet -exp_cov auto -cov_cutoff auto -scaffolding yes 2>&1 | sed 's/^/[velvetg] /' | tee -a shovill.log\n[shovill] User supplied --nocorr, so not correcting contigs.\n[shovill] Assembly is 179967, estimated genome size was 185278 (-2.87%)\n[shovill] Using genome graph file 'velvet/contigs.LastGraph' => 'contigs.LastGraph'\n[shovill] Walltime used: 0 min 5 sec\n[shovill] Results in: /mnt/pulsar/files/staging/561754/working/out\n[shovill] Final assembly graph: /mnt/pulsar/files/staging/561754/working/out/contigs.LastGraph\n[shovill] Final assembly contigs: /mnt/pulsar/files/staging/561754/working/out/contigs.fa\n[shovill] It contains 8 (min=75) contigs totalling 179967 bp.\n[shovill] Use Bandage to inspect the .gfa/.fastg assembly graph: https://rrwick.github.io/Bandage/\n[shovill] Done.\n", "model_class": "Job", "params": {"adv": "{\"depth\": \"100\", \"gsize\": \"\", \"kmers\": \"\", \"mincov\": \"2\", \"minlen\": \"0\", \"namefmt\": \"contig%05d\", \"nocorr\": \"true\", \"opts\": \"\"}", "trim": "\"false\"", "log": "\"true\"", "assembler": "\"velvet\"", "library": "{\"R1\": {\"values\": [{\"id\": 1068626, \"src\": \"hda\"}]}, \"R2\": {\"values\": [{\"id\": 1068627, \"src\": \"hda\"}]}, \"__current_case__\": 0, \"lib_type\": \"paired\"}", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "[mash] Estimated genome size: 185278\n[mash] Estimated coverage:    8.02\n[mash] Writing to /tmp/cGA0eVVsRT/sketch.msh...\n[lighter] [2019-06-25 23:09:27] =============Start====================\n[lighter] [2019-06-25 23:09:27] Scanning the input files to infer alpha(sampling rate)\n[lighter] [2019-06-25 23:09:27] Average coverage is 20.207 and alpha is 0.346\n[lighter] [2019-06-25 23:09:27] Bad quality threshold is \".\"\n[lighter] [2019-06-25 23:09:28] Finish sampling kmers\n[lighter] [2019-06-25 23:09:28] Bloom filter A's false positive rate: 0.023199\n[lighter] [2019-06-25 23:09:28] Finish storing trusted kmers\n[lighter] [2019-06-25 23:09:28] Finish error correction\n[lighter] Processed 24960 reads:\n[lighter] \t13131 are error-free\n[lighter] \tCorrected 17777 bases(1.502832 corrections for reads with errors)\n[lighter] \tTrimmed 0 reads with average trimmed bases 0.000000\n[lighter] \tDiscard 0 reads\n[FLASH] Starting FLASH v1.2.11\n[FLASH] Fast Length Adjustment of SHort reads\n[FLASH]  \n[FLASH] Input files:\n[FLASH]     R1.cor.fq.gz\n[FLASH]     R2.cor.fq.gz\n[FLASH]  \n[FLASH] Output files:\n[FLASH]     ./flash.extendedFrags.fastq.gz\n[FLASH]     ./flash.notCombined_1.fastq.gz\n[FLASH]     ./flash.notCombined_2.fastq.gz\n[FLASH]     ./flash.hist\n[FLASH]     ./flash.histogram\n[FLASH]  \n[FLASH] Parameters:\n[FLASH]     Min overlap:           20\n[FLASH]     Max overlap:           150\n[FLASH]     Max mismatch density:  0.250000\n[FLASH]     Allow \"outie\" pairs:   false\n[FLASH]     Cap mismatch quals:    false\n[FLASH]     Combiner threads:      2\n[FLASH]     Input format:          FASTQ, phred_offset=33\n[FLASH]     Output format:         FASTQ, phred_offset=33, gzip\n[FLASH]  \n[FLASH] Starting reader and writer threads\n[FLASH] Starting 2 combiner threads\n[FLASH] Processed 12480 read pairs\n[FLASH]  \n[FLASH] Read combination statistics:\n[FLASH]     Total pairs:      12480\n[FLASH]     Combined pairs:   50\n[FLASH]     Uncombined pairs: 12430\n[FLASH]     Percent combined: 0.40%\n[FLASH]  \n[FLASH] Writing histogram files.\n[FLASH]  \n[FLASH] FLASH v1.2.11 complete!\n[FLASH] 0.690 seconds elapsed\n[velveth] [0.000000] Reading file 'flash.notCombined_1.fastq.gz' using 'pigz' as FastQ\n[velveth] [0.002330] Reading file 'flash.notCombined_2.fastq.gz' using 'pigz' as FastQ\n[velveth] [0.104064] 24860 sequences found in total in the paired sequence files\n[velveth] [0.104065] Done\n[velveth] [0.106018] Reading file 'flash.extendedFrags.fastq.gz' using 'pigz' as FastQ\n[velveth] [0.106299] 50 sequences found\n[velveth] [0.106300] Done\n[velveth] [0.153500] Reading CNY read set file velvet/CnyUnifiedSeq\n[velveth] [0.153633] 24910 sequences found\n[velveth] [0.156682] Done\n[velveth] [0.156684] 24910 sequences in total.\n[velveth] [0.157608] Writing into roadmap file velvet/Roadmaps...\n[velveth] [0.157633] Inputting sequences...\n[velveth] [0.157799] Inputting sequence 0 / 24910\n[velveth] [0.324456]  === Sequences loaded in 0.166835 s\n[velveth] [0.339023] Done inputting sequences\n[velveth] [0.339026] Destroying splay table\n[velveth] [0.340602] Splay table destroyed\n[velvetg] [0.000001] Reading roadmap file velvet/Roadmaps\n[velvetg] [0.038726] 24910 roadmaps read\n[velvetg] [0.038986] Reading CNY read set file velvet/CnyUnifiedSeq\n[velvetg] [0.039083] 24910 sequences found\n[velvetg] [0.041821] Done\n[velvetg] [0.041869] Creating insertion markers\n[velvetg] [0.044863] Ordering insertion markers\n[velvetg] [0.050875] Counting preNodes\n[velvetg] [0.053062] 43367 preNodes counted, creating them now\n[velvetg] [0.125677] Adjusting marker info...\n[velvetg] [0.128224] Connecting preNodes\n[velvetg] [0.146777] Cleaning up memory\n[velvetg] [0.146841] Done creating preGraph\n[velvetg] [0.146850] Concatenation...\n[velvetg] [0.156421] Renumbering preNodes\n[velvetg] [0.156422] Initial preNode count 43367\n[velvetg] [0.156680] Destroyed 42932 preNodes\n[velvetg] [0.156680] Concatenation over!\n[velvetg] [0.156681] Clipping short tips off preGraph\n[velvetg] [0.156728] Concatenation...\n[velvetg] [0.157478] Renumbering preNodes\n[velvetg] [0.157479] Initial preNode count 435\n[velvetg] [0.157486] Destroyed 319 preNodes\n[velvetg] [0.157487] Concatenation over!\n[velvetg] [0.157487] 160 tips cut off\n[velvetg] [0.157487] 116 nodes left\n[velvetg] [0.158176] Writing into pregraph file velvet/PreGraph...\n[velvetg] [0.174126] Reading pre-graph file velvet/PreGraph\n[velvetg] [0.174169] Graph has 116 nodes and 24910 sequences\n[velvetg] [0.179320] Scanning pre-graph file velvet/PreGraph for k-mers\n[velvetg] [0.183037] 181430 kmers found\n[velvetg] [0.195721] Sorting kmer occurence table ... \n[velvetg] [0.240207] Sorting done.\n[velvetg] [0.240209] Computing acceleration table... \n[velvetg] [0.260185] Computing offsets... \n[velvetg] [0.261642] Ghost Threading through reads 0 / 24910\n[velvetg] [0.364320]  === Ghost-Threaded in 0.102751 s\n[velvetg] [0.364326] Threading through reads 0 / 24910\n[velvetg] [0.534816]  === Threaded in 0.170493 s\n[velvetg] [0.536803] Correcting graph with cutoff 0.200000\n[velvetg] [0.536831] Determining eligible starting points\n[velvetg] [0.536903] Done listing starting nodes\n[velvetg] [0.536903] Initializing todo lists\n[velvetg] [0.536909] Done with initilization\n[velvetg] [0.536909] Activating arc lookup table\n[velvetg] [0.536913] Done activating arc lookup table\n[velvetg] [0.538119] Concatenation...\n[velvetg] [0.538122] Renumbering nodes\n[velvetg] [0.538123] Initial node count 116\n[velvetg] [0.538125] Removed 18 null nodes\n[velvetg] [0.538125] Concatenation over!\n[velvetg] [0.538125] Clipping short tips off graph, drastic\n[velvetg] [0.538127] Concatenation...\n[velvetg] [0.538129] Renumbering nodes\n[velvetg] [0.538129] Initial node count 98\n[velvetg] [0.538129] Removed 0 null nodes\n[velvetg] [0.538130] Concatenation over!\n[velvetg] [0.538130] 98 nodes left\n[velvetg] [0.538873] Writing into graph file velvet/Graph2...\n[velvetg] [0.571078] Measuring median coverage depth...\n[velvetg] [0.571121] Median coverage depth = 10.642214\n[velvetg] [0.575719] Removing contigs with coverage < 5.321107...\n[velvetg] [0.575737] Concatenation...\n[velvetg] [0.576425] Renumbering nodes\n[velvetg] [0.576426] Initial node count 98\n[velvetg] [0.576427] Removed 82 null nodes\n[velvetg] [0.576427] Concatenation over!\n[velvetg] [0.576428] Concatenation...\n[velvetg] [0.576428] Renumbering nodes\n[velvetg] [0.576428] Initial node count 16\n[velvetg] [0.576429] Removed 0 null nodes\n[velvetg] [0.576429] Concatenation over!\n[velvetg] [0.576430] Clipping short tips off graph, drastic\n[velvetg] [0.576431] Concatenation...\n[velvetg] [0.576431] Renumbering nodes\n[velvetg] [0.576431] Initial node count 16\n[velvetg] [0.576432] Removed 0 null nodes\n[velvetg] [0.576432] Concatenation over!\n[velvetg] [0.576432] 16 nodes left\n[velvetg] [0.576433] Read coherency...\n[velvetg] [0.576433] Identifying unique nodes\n[velvetg] [0.576434] Done, 11 unique nodes counted\n[velvetg] [0.576435] Trimming read tips\n[velvetg] [0.576435] Renumbering nodes\n[velvetg] [0.576436] Initial node count 16\n[velvetg] [0.576436] Removed 0 null nodes\n[velvetg] [0.576436] Confronted to 0 multiple hits and 0 null over 0\n[velvetg] [0.576437] Read coherency over!\n[velvetg] [0.576532] Starting pebble resolution...\n[velvetg] [0.576625] Computing read to node mapping array sizes\n[velvetg] [0.576957] Computing read to node mappings\n[velvetg] [0.577519] Estimating library insert lengths...\n[velvetg] [0.579012] Paired-end library 1 has length: 399, sample standard deviation: 39\n[velvetg] [0.579014] Done\n[velvetg] [0.579014] Computing direct node to node mappings\n[velvetg] [0.579395] Scaffolding node 0\n[velvetg] [0.579458]  === Nodes Scaffolded in 0.000443 s\n[velvetg] [0.579636] Preparing to correct graph with cutoff 0.200000\n[velvetg] [0.582112] Cleaning memory\n[velvetg] [0.582114] Deactivating local correction settings\n[velvetg] [0.582119] Pebble done.\n[velvetg] [0.582119] Starting pebble resolution...\n[velvetg] [0.582210] Computing read to node mapping array sizes\n[velvetg] [0.582658] Computing read to node mappings\n[velvetg] [0.583074] Estimating library insert lengths...\n[velvetg] [0.584560] Paired-end library 1 has length: 399, sample standard deviation: 39\n[velvetg] [0.584562] Done\n[velvetg] [0.584563] Computing direct node to node mappings\n[velvetg] [0.584834] Scaffolding node 0\n[velvetg] [0.584851]  === Nodes Scaffolded in 0.000287 s\n[velvetg] [0.584942] Preparing to correct graph with cutoff 0.200000\n[velvetg] [0.584962] Cleaning memory\n[velvetg] [0.584963] Deactivating local correction settings\n[velvetg] [0.584967] Pebble done.\n[velvetg] [0.584968] Concatenation...\n[velvetg] [0.584969] Renumbering nodes\n[velvetg] [0.584969] Initial node count 16\n[velvetg] [0.584970] Removed 7 null nodes\n[velvetg] [0.584971] Concatenation over!\n[velvetg] [0.584971] Removing reference contigs with coverage < 5.321107...\n[velvetg] [0.584972] Concatenation...\n[velvetg] [0.584973] Renumbering nodes\n[velvetg] [0.584973] Initial node count 9\n[velvetg] [0.584973] Removed 0 null nodes\n[velvetg] [0.584974] Concatenation over!\n[velvetg] [0.585633] Writing contigs into velvet/contigs.fa...\n[velvetg] [0.608383] Writing into stats file velvet/stats.txt...\n[velvetg] [0.613688] Writing into graph file velvet/LastGraph...\n[velvetg] [0.645821] Estimated Coverage = 10.642214\n[velvetg] [0.645825] Estimated Coverage cutoff = 5.321107\n[velvetg] Final graph has 9 nodes and n50 of 132602, max 132602, total 179409, using 24896/24910 reads\n", "job_messages": null, "id": "a8e8c8932ed1b215", "job_stdout": null}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/shovill/shovill/1.0.4-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3", "time_seconds": 72.4290361404419, "inputs": {"input|input_select": "accession_number", "outputformat": "fastqsanger", "input|accession": "SRR044777", "adv|skip_technical": true}, "tool_version": "2.9.1.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3", "update_time": "2019-06-25T21:57:03.372633", "inputs": {}, "outputs": {"output_accession": {"src": "hda", "id": "1f398f8949dd4c1c", "uuid": "87b2a3fe-34d1-4b35-b992-4c6c6fa3c939"}}, "history_id": "f840675b8d7f5485", "stdout": "Fixed default configuration\n\n2019-06-25T21:56:46 prefetch.2.9.1: 1) Downloading 'SRR044777'...\n2019-06-25T21:56:46 prefetch.2.9.1:  Downloading via https...\n2019-06-25T21:56:51 prefetch.2.9.1: 1) 'SRR044777' was downloaded successfully\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "Rejected 23646 READS because of filtering out non-biological READS\nRead 7882 spots for SRR044777\nWritten 7882 spots for SRR044777\n", "state": "ok", "create_time": "2019-06-25T21:56:32.157871", "stderr": "Rejected 23646 READS because of filtering out non-biological READS\nRead 7882 spots for SRR044777\nWritten 7882 spots for SRR044777\n", "model_class": "Job", "params": {"adv": "{\"alignments\": \"both\", \"clip\": \"false\", \"matepairDist\": \"\", \"maxID\": \"\", \"minID\": \"\", \"minlen\": \"\", \"readfilter\": \"\", \"region\": \"\", \"skip_technical\": \"true\", \"split\": \"true\", \"spotgroups\": \"\"}", "input": "{\"__current_case__\": 0, \"accession\": \"SRR044777\", \"input_select\": \"accession_number\"}", "outputformat": "\"fastqsanger\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "Fixed default configuration\n\n2019-06-25T21:56:46 prefetch.2.9.1: 1) Downloading 'SRR044777'...\n2019-06-25T21:56:46 prefetch.2.9.1:  Downloading via https...\n2019-06-25T21:56:51 prefetch.2.9.1: 1) 'SRR044777' was downloaded successfully\n", "job_messages": [], "id": "274048096eb090f8", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3", "time_seconds": 72.49317407608032, "inputs": {"input|input_select": "accession_number", "outputformat": "fastqsanger.gz", "input|accession": "SRR925743", "adv|maxID": "5"}, "tool_version": "2.9.1.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3", "update_time": "2019-06-25T21:57:22.925199", "inputs": {}, "outputs": {"output_accession": {"src": "hda", "id": "e6577f69a35b79d3", "uuid": "769d8d1e-b914-4743-8ac6-d9af4ae489dc"}}, "history_id": "f840675b8d7f5485", "stdout": "Fixed default configuration\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "Read 5 spots for SRR925743\nWritten 5 spots for SRR925743\n", "state": "ok", "create_time": "2019-06-25T21:56:32.204417", "stderr": "Read 5 spots for SRR925743\nWritten 5 spots for SRR925743\n", "model_class": "Job", "params": {"adv": "{\"alignments\": \"both\", \"clip\": \"false\", \"matepairDist\": \"\", \"maxID\": \"5\", \"minID\": \"\", \"minlen\": \"\", \"readfilter\": \"\", \"region\": \"\", \"skip_technical\": \"false\", \"split\": \"true\", \"spotgroups\": \"\"}", "input": "{\"__current_case__\": 0, \"accession\": \"SRR925743\", \"input_select\": \"accession_number\"}", "outputformat": "\"fastqsanger.gz\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "Fixed default configuration\n", "job_messages": [], "id": "519fe837503b7836", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3", "time_seconds": 66.37924003601074, "inputs": {"input|input_select": "accession_number", "outputformat": "fastqsanger", "input|accession": "SRR925743", "adv|maxID": "5"}, "tool_version": "2.9.1.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3", "update_time": "2019-06-25T21:57:42.005846", "inputs": {}, "outputs": {"output_accession": {"src": "hda", "id": "9e9c16c5b238fe6b", "uuid": "b9aba877-d733-43c0-8a92-ed7c4cc81dd5"}}, "history_id": "f840675b8d7f5485", "stdout": "Fixed default configuration\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "Read 5 spots for SRR925743\nWritten 5 spots for SRR925743\n", "state": "ok", "create_time": "2019-06-25T21:56:53.193386", "stderr": "Read 5 spots for SRR925743\nWritten 5 spots for SRR925743\n", "model_class": "Job", "params": {"adv": "{\"alignments\": \"both\", \"clip\": \"false\", \"matepairDist\": \"\", \"maxID\": \"5\", \"minID\": \"\", \"minlen\": \"\", \"readfilter\": \"\", \"region\": \"\", \"skip_technical\": \"false\", \"split\": \"true\", \"spotgroups\": \"\"}", "input": "{\"__current_case__\": 0, \"accession\": \"SRR925743\", \"input_select\": \"accession_number\"}", "outputformat": "\"fastqsanger\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "Fixed default configuration\n", "job_messages": [], "id": "003bac2903353f59", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3", "time_seconds": 41.197372913360596, "inputs": {"input|input_select": "file_list", "outputformat": "fastqsanger", "input|file_list": {"src": "hda", "id": "801beabae7d9cbab"}, "adv|maxID": "5"}, "tool_version": "2.9.1.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3", "update_time": "2019-06-25T21:58:21.698239", "inputs": {"file_list": {"src": "hda", "id": "801beabae7d9cbab", "uuid": "b2e72765-ff17-49ae-90fa-27978c93e58b"}}, "outputs": {"__new_primary_file_list_paired|DRR015708:reverse__": {"src": "hda", "id": "a9f972aad47402bd", "uuid": "6ed99f07-7207-4379-aee1-6363015d2d03"}, "__new_primary_file_list_paired|DRR015708:forward__": {"src": "hda", "id": "64aaafa8e48448cd", "uuid": "ff38ff51-3c96-4a03-ab4f-6a91ad93c9b2"}}, "history_id": "f840675b8d7f5485", "stdout": "Fixed default configuration\nRead 5 spots for DRR015708\nWritten 5 spots for DRR015708\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:57:56.541109", "stderr": "", "model_class": "Job", "params": {"adv": "{\"alignments\": \"both\", \"clip\": \"false\", \"matepairDist\": \"\", \"maxID\": \"5\", \"minID\": \"\", \"minlen\": \"\", \"readfilter\": \"\", \"region\": \"\", \"skip_technical\": \"false\", \"split\": \"true\", \"spotgroups\": \"\"}", "input": "{\"__current_case__\": 2, \"file_list\": {\"values\": [{\"id\": 1067333, \"src\": \"hda\"}]}, \"input_select\": \"file_list\"}", "outputformat": "\"fastqsanger\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "Fixed default configuration\nRead 5 spots for DRR015708\nWritten 5 spots for DRR015708\n", "job_messages": [], "id": "0a6c3b4993e1e9ba", "job_stdout": ""}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3", "time_seconds": 67.83887004852295, "inputs": {"input|input_select": "file_list", "outputformat": "fastqsanger", "input|file_list": {"src": "hda", "id": "dd7a373160057b03"}, "adv|maxID": "5"}, "tool_version": "2.9.1.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3", "update_time": "2019-06-25T21:58:31.973066", "inputs": {"file_list": {"src": "hda", "id": "dd7a373160057b03", "uuid": "ab217d54-02e1-4bbe-a73b-6f22425afcc0"}}, "outputs": {"__new_primary_file_list_paired|ERR027433:forward__": {"src": "hda", "id": "c0690220e3cf3a64", "uuid": "b9965f52-4c69-4429-b24c-481357cb9ddd"}, "__new_primary_file_list_paired|ERR027433:reverse__": {"src": "hda", "id": "7023c1c9ea817de8", "uuid": "d5147fe2-e8c5-4926-b281-19ac0764a5c2"}}, "history_id": "f840675b8d7f5485", "stdout": "Fixed default configuration\nRejected 5 READS because READLEN < 1\nRead 5 spots for ERR027433\nWritten 5 spots for ERR027433\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:57:56.302802", "stderr": "", "model_class": "Job", "params": {"adv": "{\"alignments\": \"both\", \"clip\": \"false\", \"matepairDist\": \"\", \"maxID\": \"5\", \"minID\": \"\", \"minlen\": \"\", \"readfilter\": \"\", \"region\": \"\", \"skip_technical\": \"false\", \"split\": \"true\", \"spotgroups\": \"\"}", "input": "{\"__current_case__\": 2, \"file_list\": {\"values\": [{\"id\": 1067331, \"src\": \"hda\"}]}, \"input_select\": \"file_list\"}", "outputformat": "\"fastqsanger\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "Fixed default configuration\nRejected 5 READS because READLEN < 1\nRead 5 spots for ERR027433\nWritten 5 spots for ERR027433\n", "job_messages": [], "id": "d5bd73caf569fb44", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3", "time_seconds": 39.21898293495178, "inputs": {"input|input_select": "file_list", "outputformat": "fastqsanger", "input|file_list": {"src": "hda", "id": "e8888f5ee7577fce"}, "adv|maxID": "5"}, "tool_version": "2.9.1.3", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3", "update_time": "2019-06-25T21:58:29.617369", "inputs": {"file_list": {"src": "hda", "id": "e8888f5ee7577fce", "uuid": "40ffb0ac-288f-4fe3-8eaa-54379703aad7"}}, "outputs": {"__new_primary_file_output_collection|SRR1993644__": {"src": "hda", "id": "dee287cb691a51cb", "uuid": "667ec52c-cc0c-49f9-9899-4d2811ae30b7"}}, "history_id": "f840675b8d7f5485", "stdout": "Fixed default configuration\nRejected 5 READS because READLEN < 1\nRead 5 spots for SRR1993644\nWritten 5 spots for SRR1993644\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:57:56.617010", "stderr": "", "model_class": "Job", "params": {"adv": "{\"alignments\": \"both\", \"clip\": \"false\", \"matepairDist\": \"\", \"maxID\": \"5\", \"minID\": \"\", \"minlen\": \"\", \"readfilter\": \"\", \"region\": \"\", \"skip_technical\": \"false\", \"split\": \"true\", \"spotgroups\": \"\"}", "input": "{\"__current_case__\": 2, \"file_list\": {\"values\": [{\"id\": 1067332, \"src\": \"hda\"}]}, \"input_select\": \"file_list\"}", "outputformat": "\"fastqsanger\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "Fixed default configuration\nRejected 5 READS because READLEN < 1\nRead 5 spots for SRR1993644\nWritten 5 spots for SRR1993644\n", "job_messages": [], "id": "bdcf0a872e57c34b", "job_stdout": ""}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/fastq_dump/2.9.1.3-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/sam_dump/2.9.1.4", "time_seconds": 125.60780906677246, "inputs": {"input|input_select": "accession_number", "outputformat": "sam", "input|accession": "SRR925743", "adv|region": "17:41243452-41277500"}, "tool_version": "2.9.1.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/sam_dump/2.9.1.4", "update_time": "2019-06-25T21:58:45.517193", "inputs": {}, "outputs": {"output_accession": {"src": "hda", "id": "bba60d54eb057cbc", "uuid": "efbd4d7d-9410-4e1b-a9df-76aa72b4939c"}}, "history_id": "f840675b8d7f5485", "stdout": "Fixed default configuration\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:57:39.912276", "stderr": "", "model_class": "Job", "params": {"adv": "{\"alignments\": \"both\", \"matepairDist\": \"\", \"minMapq\": \"\", \"primary\": \"no\", \"region\": \"17:41243452-41277500\"}", "input": "{\"__current_case__\": 0, \"accession\": \"SRR925743\", \"input_select\": \"accession_number\"}", "outputformat": "\"sam\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "Fixed default configuration\n", "job_messages": [], "id": "9e695aae438996a2", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/sam_dump/2.9.1.4-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/sra_pileup/2.9.1.2", "time_seconds": 73.35411095619202, "inputs": {"input|input_select": "accession_number", "input|accession": "SRR925743", "adv|region": "17:41243452-41277500"}, "tool_version": "2.9.1.2", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/sra_pileup/2.9.1.2", "update_time": "2019-06-25T21:58:39.355131", "inputs": {}, "outputs": {"output_accession": {"src": "hda", "id": "6e5c13cad9df0ca8", "uuid": "8da7bdef-0e46-45ce-b214-52dd5f870328"}}, "history_id": "f840675b8d7f5485", "stdout": "Fixed default configuration\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T21:57:39.639251", "stderr": "", "model_class": "Job", "params": {"adv": "{\"minMapq\": \"\", \"region\": \"17:41243452-41277500\"}", "input": "{\"__current_case__\": 1, \"accession\": \"SRR925743\", \"input_select\": \"accession_number\"}", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "Fixed default configuration\n", "job_messages": [], "id": "2ece8419c59ee6db", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/sra_tools/sra_pileup/2.9.1.2-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "time_seconds": 72.68215489387512, "inputs": {"input_bam": {"src": "hda", "id": "c41dc43259af92fb"}}, "tool_version": "1.3.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "update_time": "2019-06-25T22:39:31.188654", "inputs": {"input_bam": {"src": "hda", "id": "c41dc43259af92fb", "uuid": "244b527d-37fc-492c-ac6f-fe897318651f"}}, "outputs": {"output_gtf": {"src": "hda", "id": "0071c2379ffb15c7", "uuid": "16af2ea6-d7bb-4533-9265-90c6695577a9"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:38:38.650102", "stderr": "", "model_class": "Job", "params": {"adv": "{\"abundance_estimation\": \"false\", \"bdist\": \"50\", \"bundle_fraction\": \"0.95\", \"disable_trimming\": \"false\", \"fraction\": \"0.15\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"2\", \"min_tlen\": \"200\", \"multi_mapping\": \"false\", \"name_prefix\": \"\", \"omit_sequences\": \"\"}", "rna_strandness": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "guide": "{\"__current_case__\": 0, \"use_guide\": \"no\"}", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "2461b52499fd26fd", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "time_seconds": 46.29157280921936, "inputs": {"input_bam": {"src": "hda", "id": "9c7342f82212f00f"}, "adv|fraction": "0.17"}, "tool_version": "1.3.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "update_time": "2019-06-25T22:39:47.976055", "inputs": {"input_bam": {"src": "hda", "id": "9c7342f82212f00f", "uuid": "df1428c1-5924-4a54-9eff-fc09c164293c"}}, "outputs": {"output_gtf": {"src": "hda", "id": "5cb265063d3a27f0", "uuid": "8c946f24-fda0-4746-a6c0-6cdf06a01ddd"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:39:21.229558", "stderr": "", "model_class": "Job", "params": {"adv": "{\"abundance_estimation\": \"false\", \"bdist\": \"50\", \"bundle_fraction\": \"0.95\", \"disable_trimming\": \"false\", \"fraction\": \"0.17\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"2\", \"min_tlen\": \"200\", \"multi_mapping\": \"false\", \"name_prefix\": \"\", \"omit_sequences\": \"\"}", "rna_strandness": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "guide": "{\"__current_case__\": 0, \"use_guide\": \"no\"}", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "00744510e9dd0168", "job_stdout": null}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "time_seconds": 31.91044306755066, "inputs": {"guide|guide_source|ref_hist": {"src": "hda", "id": "9d40e33e4003cb7f"}, "input_bam": {"src": "hda", "id": "9c7342f82212f00f"}, "guide|guide_source|guide_gff_select": "history", "guide|use_guide": "yes"}, "tool_version": "1.3.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "update_time": "2019-06-25T22:39:48.263445", "inputs": {"guide|ref_hist": {"src": "hda", "id": "9d40e33e4003cb7f", "uuid": "5b36f76a-abbb-41e7-bb59-068ceb5ddd2e"}, "input_bam": {"src": "hda", "id": "9c7342f82212f00f", "uuid": "df1428c1-5924-4a54-9eff-fc09c164293c"}}, "outputs": {"output_gtf": {"src": "hda", "id": "390dd9c221b6e82b", "uuid": "11e5cb3e-4d76-4532-aaa7-414db2dc69e5"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:39:28.410407", "stderr": "", "model_class": "Job", "params": {"adv": "{\"abundance_estimation\": \"false\", \"bdist\": \"50\", \"bundle_fraction\": \"0.95\", \"disable_trimming\": \"false\", \"fraction\": \"0.15\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"2\", \"min_tlen\": \"200\", \"multi_mapping\": \"false\", \"name_prefix\": \"\", \"omit_sequences\": \"\"}", "rna_strandness": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "guide": "{\"__current_case__\": 1, \"coverage_file\": \"false\", \"guide_source\": {\"__current_case__\": 1, \"guide_gff_select\": \"history\", \"ref_hist\": {\"values\": [{\"id\": 1068187, \"src\": \"hda\"}]}}, \"input_estimation\": \"false\", \"special_outputs\": {\"__current_case__\": 2, \"special_outputs_select\": \"no\"}, \"use_guide\": \"yes\"}", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "4d71ff2dbefeb21a", "job_stdout": null}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "time_seconds": 45.35021901130676, "inputs": {"guide|guide_source|ref_hist": {"src": "hda", "id": "5c782f0dfa2c0e42"}, "guide|use_guide": "yes", "input_bam": {"src": "hda", "id": "cbd3e278ef2c14e7"}, "guide|guide_source|guide_gff_select": "history", "adv|fraction": "0.17"}, "tool_version": "1.3.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "update_time": "2019-06-25T22:40:13.591872", "inputs": {"guide|ref_hist": {"src": "hda", "id": "5c782f0dfa2c0e42", "uuid": "e613c35d-8e5e-4a92-bec7-a1df9353ef6c"}, "input_bam": {"src": "hda", "id": "cbd3e278ef2c14e7", "uuid": "bc5567ce-51df-431f-968e-a1e08145177f"}}, "outputs": {"output_gtf": {"src": "hda", "id": "e84efd118bc6ed44", "uuid": "f7fbe60c-6bcc-4835-aa6a-670274afea28"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:39:43.384501", "stderr": "", "model_class": "Job", "params": {"adv": "{\"abundance_estimation\": \"false\", \"bdist\": \"50\", \"bundle_fraction\": \"0.95\", \"disable_trimming\": \"false\", \"fraction\": \"0.17\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"2\", \"min_tlen\": \"200\", \"multi_mapping\": \"false\", \"name_prefix\": \"\", \"omit_sequences\": \"\"}", "rna_strandness": "\"\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "guide": "{\"__current_case__\": 1, \"coverage_file\": \"false\", \"guide_source\": {\"__current_case__\": 1, \"guide_gff_select\": \"history\", \"ref_hist\": {\"values\": [{\"id\": 1068198, \"src\": \"hda\"}]}}, \"input_estimation\": \"false\", \"special_outputs\": {\"__current_case__\": 2, \"special_outputs_select\": \"no\"}, \"use_guide\": \"yes\"}", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "0443932910eed802", "job_stdout": null}, "test_index": 3}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4-3", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "time_seconds": 127.50860214233398, "inputs": {"guide|guide_source|guide_gff_select": "history", "guide|guide_source|ref_hist": {"src": "hda", "id": "ca70f76038765d92"}, "input_bam": {"src": "hda", "id": "efdae395fea855bb"}, "guide|special_outputs|special_outputs_select": "ballgown", "guide|coverage_file": true, "guide|use_guide": "yes"}, "tool_version": "1.3.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "update_time": "2019-06-25T22:40:43.247110", "inputs": {"guide|ref_hist": {"src": "hda", "id": "ca70f76038765d92", "uuid": "873a24cf-dad9-45b7-b618-f19a4b62cc3c"}, "input_bam": {"src": "hda", "id": "efdae395fea855bb", "uuid": "e03ff2d9-c8c6-4f4a-a59a-8daefdf1907e"}}, "outputs": {"transcript_expression": {"src": "hda", "id": "872a1488cc2eaf00", "uuid": "140cea13-9f2d-4846-8532-68f71f91de00"}, "output_gtf": {"src": "hda", "id": "7c9a2cdbddb9bbfb", "uuid": "29dff88f-a902-46bc-b313-d1d2a5a66ba8"}, "exon_transcript_mapping": {"src": "hda", "id": "f0781cafcf3c35d8", "uuid": "09237412-464c-42e8-a095-3a8b94e8eafa"}, "intron_transcript_mapping": {"src": "hda", "id": "fd03062238c31abd", "uuid": "df986eb6-fedb-478b-a3b7-29ee73ab3897"}, "coverage": {"src": "hda", "id": "b4499c535808fb81", "uuid": "f47987de-69c1-4b60-b958-e98756df333d"}, "intron_expression": {"src": "hda", "id": "c2a0598cd905e85f", "uuid": "3a9dfbc5-74b6-4c4b-8f7b-14453cce6591"}, "exon_expression": {"src": "hda", "id": "6509a2543db0bcd9", "uuid": "765fb0fe-5c86-4e9a-be93-9bd0f160be68"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:40:03.745911", "stderr": "", "model_class": "Job", "params": {"adv": "{\"abundance_estimation\": \"false\", \"bdist\": \"50\", \"bundle_fraction\": \"0.95\", \"disable_trimming\": \"false\", \"fraction\": \"0.15\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"2\", \"min_tlen\": \"200\", \"multi_mapping\": \"false\", \"name_prefix\": \"\", \"omit_sequences\": \"\"}", "rna_strandness": "\"\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/hg38.len\"", "guide": "{\"__current_case__\": 1, \"coverage_file\": \"true\", \"guide_source\": {\"__current_case__\": 1, \"guide_gff_select\": \"history\", \"ref_hist\": {\"values\": [{\"id\": 1068201, \"src\": \"hda\"}]}}, \"input_estimation\": \"false\", \"special_outputs\": {\"__current_case__\": 0, \"special_outputs_select\": \"ballgown\"}, \"use_guide\": \"yes\"}", "dbkey": "\"hg38\""}, "tool_stdout": "", "job_messages": [], "id": "253caba801c61aa3", "job_stdout": null}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4-4", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "time_seconds": 42.22495102882385, "inputs": {"guide|input_estimation": true, "guide|guide_source|guide_gff_select": "history", "guide|coverage_file": true, "guide|special_outputs|special_outputs_select": "deseq2", "guide|special_outputs|clustering": true, "guide|use_guide": "yes", "guide|guide_source|ref_hist": {"src": "hda", "id": "ca70f76038765d92"}, "input_bam": {"src": "hda", "id": "efdae395fea855bb"}}, "tool_version": "1.3.4", "output_problems": ["Job in error state.", "Job in error state.", "Job in error state.", "Job in error state.", "Job in error state.", "Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "update_time": "2019-06-25T22:40:41.923250", "inputs": {"guide|ref_hist": {"src": "hda", "id": "ca70f76038765d92", "uuid": "873a24cf-dad9-45b7-b618-f19a4b62cc3c"}, "input_bam": {"src": "hda", "id": "efdae395fea855bb", "uuid": "e03ff2d9-c8c6-4f4a-a59a-8daefdf1907e"}}, "outputs": {"output_gtf": {"src": "hda", "id": "4dd09b97c28aca1a", "uuid": "9e83e58d-2bb9-4ca6-8206-6414563f039c"}, "transcript_counts": {"src": "hda", "id": "8188eada70747d35", "uuid": "6af08eb5-6358-4232-bcef-53842b135539"}, "legend": {"src": "hda", "id": "00dc047dcca434e1", "uuid": "f0af7fbe-deb6-4c84-b9ee-383bb1f98276"}, "coverage": {"src": "hda", "id": "efa31bcc6bb31734", "uuid": "55554993-fc33-42de-ae27-1252ad931270"}, "gene_counts": {"src": "hda", "id": "e63b811527738362", "uuid": "9b2b2b9d-2f9e-4552-8d92-84ed0835d04c"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "error", "create_time": "2019-06-25T22:40:14.438475", "stderr": "", "model_class": "Job", "params": {"adv": "{\"abundance_estimation\": \"false\", \"bdist\": \"50\", \"bundle_fraction\": \"0.95\", \"disable_trimming\": \"false\", \"fraction\": \"0.15\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"2\", \"min_tlen\": \"200\", \"multi_mapping\": \"false\", \"name_prefix\": \"\", \"omit_sequences\": \"\"}", "rna_strandness": "\"\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/hg38.len\"", "guide": "{\"__current_case__\": 1, \"coverage_file\": \"true\", \"guide_source\": {\"__current_case__\": 1, \"guide_gff_select\": \"history\", \"ref_hist\": {\"values\": [{\"id\": 1068201, \"src\": \"hda\"}]}}, \"input_estimation\": \"true\", \"special_outputs\": {\"__current_case__\": 1, \"clustering\": \"true\", \"key\": \"\", \"read_length\": \"75\", \"special_outputs_select\": \"deseq2\", \"string\": \"\"}, \"use_guide\": \"yes\"}", "dbkey": "\"hg38\""}, "tool_stdout": "", "job_messages": null, "id": "a3ff751bd39013e4", "job_stdout": null}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "time_seconds": 133.6345398426056, "inputs": {"adv|abundance_estimation": true, "guide|guide_source|guide_gff_select": "history", "guide|guide_source|ref_hist": {"src": "hda", "id": "61ff78758aabddc0"}, "guide|use_guide": "yes", "input_bam": {"src": "hda", "id": "efdae395fea855bb"}, "adv|fraction": "0.17"}, "tool_version": "1.3.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "update_time": "2019-06-25T22:41:26.546386", "inputs": {"guide|ref_hist": {"src": "hda", "id": "61ff78758aabddc0", "uuid": "9c65d586-db73-4313-b262-997108112aad"}, "input_bam": {"src": "hda", "id": "efdae395fea855bb", "uuid": "e03ff2d9-c8c6-4f4a-a59a-8daefdf1907e"}}, "outputs": {"output_gtf": {"src": "hda", "id": "191f166d5ba06603", "uuid": "9a4156e5-a210-4dea-8323-d4385f17696a"}, "gene_abundance_estimation": {"src": "hda", "id": "2803e6d2fbe3efe0", "uuid": "2165646b-2b47-4376-86d4-96d46a16fb38"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:40:17.456260", "stderr": "", "model_class": "Job", "params": {"adv": "{\"abundance_estimation\": \"true\", \"bdist\": \"50\", \"bundle_fraction\": \"0.95\", \"disable_trimming\": \"false\", \"fraction\": \"0.17\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"2\", \"min_tlen\": \"200\", \"multi_mapping\": \"false\", \"name_prefix\": \"\", \"omit_sequences\": \"\"}", "rna_strandness": "\"\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/hg38.len\"", "guide": "{\"__current_case__\": 1, \"coverage_file\": \"false\", \"guide_source\": {\"__current_case__\": 1, \"guide_gff_select\": \"history\", \"ref_hist\": {\"values\": [{\"id\": 1068224, \"src\": \"hda\"}]}}, \"input_estimation\": \"false\", \"special_outputs\": {\"__current_case__\": 2, \"special_outputs_select\": \"no\"}, \"use_guide\": \"yes\"}", "dbkey": "\"hg38\""}, "tool_stdout": "", "job_messages": [], "id": "c00ed070d786bc34", "job_stdout": null}, "test_index": 6}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4-6", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "time_seconds": 72.4114511013031, "inputs": {"guide|guide_source|ref_hist": {"src": "hda", "id": "61ff78758aabddc0"}, "guide|use_guide": "yes", "input_bam": {"src": "hda", "id": "efdae395fea855bb"}, "guide|guide_source|guide_gff_select": "history", "adv|fraction": "0.15"}, "tool_version": "1.3.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "update_time": "2019-06-25T22:41:29.185624", "inputs": {"guide|ref_hist": {"src": "hda", "id": "61ff78758aabddc0", "uuid": "9c65d586-db73-4313-b262-997108112aad"}, "input_bam": {"src": "hda", "id": "efdae395fea855bb", "uuid": "e03ff2d9-c8c6-4f4a-a59a-8daefdf1907e"}}, "outputs": {"output_gtf": {"src": "hda", "id": "e472dc1a57271095", "uuid": "6f2cbf22-cf9f-492a-ae6e-eceacb85ea84"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:40:30.598962", "stderr": "", "model_class": "Job", "params": {"adv": "{\"abundance_estimation\": \"false\", \"bdist\": \"50\", \"bundle_fraction\": \"0.95\", \"disable_trimming\": \"false\", \"fraction\": \"0.15\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"2\", \"min_tlen\": \"200\", \"multi_mapping\": \"false\", \"name_prefix\": \"\", \"omit_sequences\": \"\"}", "rna_strandness": "\"\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/hg38.len\"", "guide": "{\"__current_case__\": 1, \"coverage_file\": \"false\", \"guide_source\": {\"__current_case__\": 1, \"guide_gff_select\": \"history\", \"ref_hist\": {\"values\": [{\"id\": 1068224, \"src\": \"hda\"}]}}, \"input_estimation\": \"false\", \"special_outputs\": {\"__current_case__\": 2, \"special_outputs_select\": \"no\"}, \"use_guide\": \"yes\"}", "dbkey": "\"hg38\""}, "tool_stdout": "", "job_messages": [], "id": "44d56fd1586a6dac", "job_stdout": null}, "test_index": 7}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4-7", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4", "time_seconds": 1.6428039073944092, "inputs": {"guide|use_guide": "yes", "input_bam": {"src": "hda", "id": "efdae395fea855bb"}, "guide|guide_source|guide_gff_select": "cached", "adv|fraction": "0.15"}, "tool_version": "1.3.4", "test_index": 8, "execution_problem": "Error creating a job for these tool inputs - parameter 'ref_builtin': an invalid option (None) was selected, please verify"}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/1.3.4-8", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie_merge/1.3.4", "time_seconds": 31.88629412651062, "inputs": {"input_gtf": [{"src": "hda", "id": "8ed0c1c9f31c5fe6"}, {"src": "hda", "id": "9f95c5009ae2b689"}, {"src": "hda", "id": "90705ecf286b0f51"}, {"src": "hda", "id": "1febc0989c40ff05"}], "guide_gff": {"src": "hda", "id": "61ff78758aabddc0"}}, "tool_version": "1.3.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie_merge/1.3.4", "update_time": "2019-06-25T22:41:28.338749", "inputs": {"input_gtf4": {"src": "hda", "id": "1febc0989c40ff05", "uuid": "454f2523-5471-4fcd-9a47-5a1141d7eeb9"}, "input_gtf2": {"src": "hda", "id": "9f95c5009ae2b689", "uuid": "cafdc2e0-c56a-472d-a761-7af2091f1fe8"}, "input_gtf3": {"src": "hda", "id": "90705ecf286b0f51", "uuid": "e139a4f8-29f8-458b-815b-817c8aeaa249"}, "input_gtf1": {"src": "hda", "id": "8ed0c1c9f31c5fe6", "uuid": "048e89a8-3c90-4664-a07a-bc56a2252c4e"}, "guide_gff": {"src": "hda", "id": "61ff78758aabddc0", "uuid": "9c65d586-db73-4313-b262-997108112aad"}, "input_gtf": {"src": "hda", "id": "8ed0c1c9f31c5fe6", "uuid": "048e89a8-3c90-4664-a07a-bc56a2252c4e"}}, "outputs": {"out_gtf": {"src": "hda", "id": "242b3bcd65a47a7e", "uuid": "1adf5006-d59a-457a-befb-fb105430fefd"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:41:09.965685", "stderr": "", "model_class": "Job", "params": {"keep_introns": "\"false\"", "min_iso": "\"0.01\"", "min_fpkm": "\"1.0\"", "min_len": "\"50\"", "dbkey": "\"?\"", "min_tpm": "\"1.0\"", "min_cov": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "gap_len": "\"250\""}, "tool_stdout": "", "job_messages": [], "id": "62b4d13ebf1ec224", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie_merge/1.3.4-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie_merge/1.3.4", "time_seconds": 45.77089977264404, "inputs": {"input_gtf": [{"src": "hda", "id": "e8e06af053586602"}, {"src": "hda", "id": "2f99d82c7d663085"}], "guide_gff": {"src": "hda", "id": "3137c2647bb4e463"}}, "tool_version": "1.3.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie_merge/1.3.4", "update_time": "2019-06-25T22:41:11.691611", "inputs": {"guide_gff": {"src": "hda", "id": "3137c2647bb4e463", "uuid": "f7986153-e3a1-4867-b0c1-0f43fb5fbdb1"}, "input_gtf2": {"src": "hda", "id": "2f99d82c7d663085", "uuid": "db2edc4d-a572-4c89-aace-ae5358e7c093"}, "input_gtf": {"src": "hda", "id": "e8e06af053586602", "uuid": "1115ea4c-bbd8-4408-98a7-b5af5904272f"}, "input_gtf1": {"src": "hda", "id": "e8e06af053586602", "uuid": "1115ea4c-bbd8-4408-98a7-b5af5904272f"}}, "outputs": {"out_gtf": {"src": "hda", "id": "b4685b8be7cee263", "uuid": "c244e98b-882e-47f3-9e2c-a1e2ea3085ab"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:40:43.581337", "stderr": "", "model_class": "Job", "params": {"keep_introns": "\"false\"", "min_iso": "\"0.01\"", "min_fpkm": "\"1.0\"", "min_len": "\"50\"", "dbkey": "\"?\"", "min_tpm": "\"1.0\"", "min_cov": "\"0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "gap_len": "\"250\""}, "tool_stdout": "", "job_messages": [], "id": "4110ba1a07f490c7", "job_stdout": ""}, "test_index": 1}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie_merge/1.3.4-1", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie_merge/1.3.4", "time_seconds": 31.296540021896362, "inputs": {"input_gtf": [{"src": "hda", "id": "e8e06af053586602"}, {"src": "hda", "id": "2f99d82c7d663085"}]}, "tool_version": "1.3.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie_merge/1.3.4", "update_time": "2019-06-25T22:41:32.103110", "inputs": {"input_gtf2": {"src": "hda", "id": "2f99d82c7d663085", "uuid": "db2edc4d-a572-4c89-aace-ae5358e7c093"}, "input_gtf": {"src": "hda", "id": "e8e06af053586602", "uuid": "1115ea4c-bbd8-4408-98a7-b5af5904272f"}, "input_gtf1": {"src": "hda", "id": "e8e06af053586602", "uuid": "1115ea4c-bbd8-4408-98a7-b5af5904272f"}}, "outputs": {"out_gtf": {"src": "hda", "id": "785d08e673f9f4ba", "uuid": "22c4f657-6e71-4a84-a666-8bc075930bf8"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-25T22:41:16.433659", "stderr": "", "model_class": "Job", "params": {"keep_introns": "\"false\"", "min_iso": "\"0.01\"", "min_fpkm": "\"1.0\"", "min_len": "\"50\"", "dbkey": "\"?\"", "guide_gff": "null", "min_cov": "\"0\"", "min_tpm": "\"1.0\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "gap_len": "\"250\""}, "tool_stdout": "", "job_messages": [], "id": "e1e311824e7e1bb4", "job_stdout": ""}, "test_index": 2}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie_merge/1.3.4-2", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/trinity/trinity/2.8.4", "time_seconds": 118.23563194274902, "inputs": {"pool|inputs|strand|is_strand_specific": true, "pool|pool_mode": "No", "pool|inputs|strand|library_type": "RF", "pool|inputs|paired_or_single": "unmerged_paired_collection", "pool|inputs|pair_input": {"src": "hdca", "id": "a70c1119225d34df"}, "norm": true}, "tool_version": "2.8.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/trinity/trinity/2.8.4", "update_time": "2019-06-25T22:08:57.330981", "inputs": {"pool|pair_input1": {"src": "hda", "id": "90705cf42c589f65", "uuid": "fd1ca3a2-47eb-4780-9af6-023d98a7ad7b"}, "pool|pair_input2": {"src": "hda", "id": "db207226a45b01cc", "uuid": "beefb988-b02d-495b-b522-0fc84b017334"}}, "outputs": {"assembled_transcripts": {"src": "hda", "id": "6ffa2a40751e6304", "uuid": "64fd69f9-10df-433c-aced-f1646b602440"}, "gene_to_trans": {"src": "hda", "id": "832ac3e1c67afc31", "uuid": "78f379ec-8739-4591-b251-3f3c9932e1ec"}}, "history_id": "f840675b8d7f5485", "stdout": "\n\n     ______  ____   ____  ____   ____  ______  __ __\n    |      ||    \\ |    ||    \\ |    ||      ||  |  |\n    |      ||  D  ) |  | |  _  | |  | |      ||  |  |\n    |_|  |_||    /  |  | |  |  | |  | |_|  |_||  ~  |\n      |  |  |    \\  |  | |  |  | |  |   |  |  |___, |\n      |  |  |  .  \\ |  | |  |  | |  |   |  |  |     |\n      |__|  |__|\\_||____||__|__||____|  |__|  |____/\n\n    Trinity-v2.8.4\n\n\n\nLeft read files: $VAR1 = [\n          '/mnt/pulsar/files/staging/561071/inputs/dataset_924386.dat'\n        ];\nRight read files: $VAR1 = [\n          '/mnt/pulsar/files/staging/561071/inputs/dataset_924387.dat'\n        ];\n\n\n\n********************************************************************\n** Warning, Trinity cannot determine which version of Java is being used.  Version 1.8 is required. \n\nAttempting to continue in 30 seconds\n********************************************************************\n\n\nTuesday, June 25, 2019: 22:08:36\tCMD: java -Xmx64m -XX:ParallelGCThreads=2  -jar /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/ExitTester.jar 0\nTuesday, June 25, 2019: 22:08:37\tCMD: java -Xmx4g -XX:ParallelGCThreads=2  -jar /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/ExitTester.jar 1\nTuesday, June 25, 2019: 22:08:37\tCMD: mkdir -p /mnt/pulsar/files/staging/561071/working/trinity_out_dir\nTuesday, June 25, 2019: 22:08:37\tCMD: mkdir -p /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis\n\n\n----------------------------------------------------------------------------------\n-------------- Trinity Phase 1: Clustering of RNA-Seq Reads  ---------------------\n----------------------------------------------------------------------------------\n\n---------------------------------------------------------------\n------------ In silico Read Normalization ---------------------\n-- (Removing Excess Reads Beyond 200 Coverage --\n---------------------------------------------------------------\n\n# running normalization on reads: $VAR1 = [\n          [\n            '/mnt/pulsar/files/staging/561071/inputs/dataset_924386.dat'\n          ],\n          [\n            '/mnt/pulsar/files/staging/561071/inputs/dataset_924387.dat'\n          ]\n        ];\n\n\nTuesday, June 25, 2019: 22:08:37\tCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/insilico_read_normalization.pl --seqType fq --JM 1G  --max_cov 200 --min_cov 1 --CPU 8 --output /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization   --max_pct_stdev 10000  --SS_lib_type RF  --left /mnt/pulsar/files/staging/561071/inputs/dataset_924386.dat --right /mnt/pulsar/files/staging/561071/inputs/dataset_924387.dat --pairs_together --PARALLEL_STATS  \nConverting input files. (both directions in parallel)CMD: seqtk-trinity seq -r -A /mnt/pulsar/files/staging/561071/inputs/dataset_924386.dat >> left.fa\nCMD: seqtk-trinity seq -A /mnt/pulsar/files/staging/561071/inputs/dataset_924387.dat >> right.fa\nCMD finished (0 seconds)\nCMD finished (0 seconds)\nCMD: touch left.fa.ok\nCMD finished (0 seconds)\nCMD: touch right.fa.ok\nCMD finished (0 seconds)\nDone converting input files.CMD: cat left.fa right.fa > both.fa\nCMD finished (0 seconds)\nCMD: touch both.fa.ok\n-------------------------------------------\n----------- Jellyfish  --------------------\n-- (building a k-mer catalog from reads) --\n-------------------------------------------\n\nCMD finished (0 seconds)\nCMD: jellyfish count -t 8 -m 25 -s 100000000  both.fa\nCMD finished (1 seconds)\nCMD: jellyfish histo -t 8 -o jellyfish.K25.min2.kmers.fa.histo mer_counts.jf\nCMD finished (0 seconds)\nCMD: jellyfish dump -L 2 mer_counts.jf > jellyfish.K25.min2.kmers.fa\nCMD finished (0 seconds)\nCMD: touch jellyfish.K25.min2.kmers.fa.success\nCMD finished (0 seconds)\nCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/..//Inchworm/bin/fastaToKmerCoverageStats --reads left.fa --kmers jellyfish.K25.min2.kmers.fa --kmer_size 25  --num_threads 4  > left.fa.K25.stats\nCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/..//Inchworm/bin/fastaToKmerCoverageStats --reads right.fa --kmers jellyfish.K25.min2.kmers.fa --kmer_size 25  --num_threads 4  > right.fa.K25.stats\n-reading Kmer occurrences...\n-reading Kmer occurrences...\n\n done parsing 2541 Kmers, 2541 added, taking 0 seconds.\n\n done parsing 2541 Kmers, 2541 added, taking 0 seconds.\nSTATS_GENERATION_TIME: 0 seconds.\nSTATS_GENERATION_TIME: 0 seconds.\nCMD finished (0 seconds)\nCMD finished (0 seconds)\nCMD: touch left.fa.K25.stats.ok\nCMD finished (0 seconds)\nCMD: touch right.fa.K25.stats.ok\n-sorting each stats file by read name.\nCMD finished (0 seconds)\nCMD: /usr/bin/sort --parallel=8 -k5,5 -T . -S 1G left.fa.K25.stats > left.fa.K25.stats.sort\nCMD: /usr/bin/sort --parallel=8 -k5,5 -T . -S 1G right.fa.K25.stats > right.fa.K25.stats.sort\nCMD finished (0 seconds)\nCMD finished (0 seconds)\nCMD: touch left.fa.K25.stats.sort.ok\nCMD finished (0 seconds)\nCMD: touch right.fa.K25.stats.sort.ok\nCMD finished (0 seconds)\nCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/..//util/support_scripts//nbkc_merge_left_right_stats.pl --left left.fa.K25.stats.sort --right right.fa.K25.stats.sort --sorted > pairs.K25.stats\n-opening left.fa.K25.stats.sort\n-opening right.fa.K25.stats.sort\n-done opening files.\nCMD finished (0 seconds)\nCMD: touch pairs.K25.stats.ok\nCMD finished (0 seconds)\nCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/..//util/support_scripts//nbkc_normalize.pl --stats_file pairs.K25.stats --max_cov 200  --min_cov 1 --max_pct_stdev 10000 > pairs.K25.stats.C200.pctSD10000.accs\n100 / 100 = 100.00% reads selected during normalization.\n0 / 100 = 0.00% reads discarded as likely aberrant based on coverage profiles.\n0 / 100 = 0.00% reads missing kmer coverage (N chars included?).\n0 / 100 = 0.00% reads discarded as below minimum coverage threshold=1\nCMD finished (0 seconds)\nCMD: touch pairs.K25.stats.C200.pctSD10000.accs.ok\nCMD finished (0 seconds)\nCMD: touch /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/dataset_924386.dat.normalized_K25_maxC200_minC1_pctSD10000.fq.ok\nCMD finished (0 seconds)\nCMD: touch /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/dataset_924387.dat.normalized_K25_maxC200_minC1_pctSD10000.fq.ok\nCMD finished (0 seconds)\nCMD: ln -sf /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/dataset_924386.dat.normalized_K25_maxC200_minC1_pctSD10000.fq left.norm.fq\nCMD finished (0 seconds)\nCMD: ln -sf /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/dataset_924387.dat.normalized_K25_maxC200_minC1_pctSD10000.fq right.norm.fq\n-removing tmp dir /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/tmp_normalized_reads\nCMD finished (0 seconds)\n\n\nNormalization complete. See outputs: \n\t/mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/dataset_924386.dat.normalized_K25_maxC200_minC1_pctSD10000.fq\n\t/mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/dataset_924387.dat.normalized_K25_maxC200_minC1_pctSD10000.fq\nTuesday, June 25, 2019: 22:08:38\tCMD: touch /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/normalization.ok\nConverting input files. (in parallel)Tuesday, June 25, 2019: 22:08:38\tCMD: cat /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/left.norm.fq | seqtk-trinity seq -r -A - >> left.fa\nTuesday, June 25, 2019: 22:08:38\tCMD: cat /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/right.norm.fq | seqtk-trinity seq -A - >> right.fa\nTuesday, June 25, 2019: 22:08:38\tCMD: touch left.fa.ok\nTuesday, June 25, 2019: 22:08:38\tCMD: touch right.fa.ok\nTuesday, June 25, 2019: 22:08:38\tCMD: touch left.fa.ok right.fa.ok\nTuesday, June 25, 2019: 22:08:38\tCMD: cat left.fa right.fa > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa\nTuesday, June 25, 2019: 22:08:38\tCMD: touch /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa.ok\n-------------------------------------------\n----------- Jellyfish  --------------------\n-- (building a k-mer catalog from reads) --\n-------------------------------------------\n\n* Running CMD: jellyfish count -t 8 -m 25 -s 100000000  /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa\n* Running CMD: jellyfish dump -L 1 mer_counts.jf > jellyfish.kmers.fa\n* Running CMD: jellyfish histo -t 8 -o jellyfish.kmers.fa.histo mer_counts.jf\n----------------------------------------------\n--------------- Inchworm ---------------------\n-- (Linear contig construction from k-mers) --\n----------------------------------------------\n\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/Inchworm/bin//inchworm --kmers jellyfish.kmers.fa --run_inchworm -K 25 -L 25 --monitor 1   --num_threads 6  --PARALLEL_IWORM  > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa.tmp\n* Running CMD: mv /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa.tmp /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa\nTuesday, June 25, 2019: 22:08:38\tCMD: touch /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa.finished\n--------------------------------------------------------\n-------------------- Chrysalis -------------------------\n-- (Contig Clustering & de Bruijn Graph Construction) --\n--------------------------------------------------------\n\ninchworm_target: /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa\nbowite_reads_fa: /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa\nchrysalis_reads_fa: /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/filter_iworm_by_min_length_or_cov.pl /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa 100 10 > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/inchworm.K25.L25.fa.min100\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/bin/bowtie2-build --threads 8 -o 3 /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/inchworm.K25.L25.fa.min100 /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/inchworm.K25.L25.fa.min100 1>/dev/null\n* Running CMD: bash -c \" set -o pipefail;/mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/bin/bowtie2 --local -k 2 --no-unal --threads 8 -f --score-min G,20,8 -x /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/inchworm.K25.L25.fa.min100 /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa  | samtools view -@ 8 -F4 -Sb - | samtools sort -m 67108864 -@ 8 -no - - > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm.bowtie.nameSorted.bam\" \n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/scaffold_iworm_contigs.pl /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm.bowtie.nameSorted.bam /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_scaffolds.txt\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/Chrysalis/bin/GraphFromFasta -i /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa -r /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa -min_contig_length 200 -min_glue 2 -glue_factor 0.05 -min_iso_ratio 0.05 -t 8 -k 24 -kk 48  -strand  -scaffolding /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_scaffolds.txt  > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_cluster_welds_graph.txt\n* Running CMD: /usr/bin/sort --parallel=8 -T . -S 1G  -k9,9gr /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_cluster_welds_graph.txt > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_cluster_welds_graph.txt.sorted\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/annotate_chrysalis_welds_with_iworm_names.pl /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_cluster_welds_graph.txt.sorted > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_cluster_welds_graph.txt.sorted.wIwormNames\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/Chrysalis/bin/BubbleUpClustering -i /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa  -weld_graph /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_cluster_welds_graph.txt.sorted -min_contig_length 200 -max_cluster_size 25  > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/GraphFromIwormFasta.out\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/Chrysalis/bin/CreateIwormFastaBundle -i /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/GraphFromIwormFasta.out -o /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/bundled_iworm_contigs.fasta -min 200\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/Chrysalis/bin/ReadsToTranscripts -i /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa -f /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/bundled_iworm_contigs.fasta -o /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/readsToComponents.out -t 8 -max_mem_reads 50000000  -strand \n* Running CMD: /usr/bin/sort --parallel=8 -T . -S 1G -k 1,1n /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/readsToComponents.out > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/readsToComponents.out.sort\nTuesday, June 25, 2019: 22:08:40\tCMD: mkdir -p /mnt/pulsar/files/staging/561071/working/trinity_out_dir/read_partitions/Fb_0/CBin_0\nTuesday, June 25, 2019: 22:08:40\tCMD: touch /mnt/pulsar/files/staging/561071/working/trinity_out_dir/partitioned_reads.files.list.ok\nTuesday, June 25, 2019: 22:08:40\tCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/write_partitioned_trinity_cmds.pl --reads_list_file /mnt/pulsar/files/staging/561071/working/trinity_out_dir/partitioned_reads.files.list --CPU 1 --max_memory 1G  --run_as_paired  --SS_lib_type F  --seqType fa --trinity_complete --full_cleanup  --no_version_check  --min_contig_length  200  --min_kmer_cov  1  --bflyHeapSpaceMax  1G --bfly_opts \"-V 10 --stderr\"  > recursive_trinity.cmds\nTuesday, June 25, 2019: 22:08:40\tCMD: touch recursive_trinity.cmds.ok\nTuesday, June 25, 2019: 22:08:40\tCMD: touch recursive_trinity.cmds.ok\n\n\n--------------------------------------------------------------------------------\n------------ Trinity Phase 2: Assembling Clusters of Reads ---------------------\n------- (involving the Inchworm, Chrysalis, Butterfly trifecta ) ---------------\n--------------------------------------------------------------------------------\n\nTuesday, June 25, 2019: 22:08:40\tCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/trinity-plugins/BIN/ParaFly -c recursive_trinity.cmds -CPU 8 -v -shuffle \nNumber of Commands: 9\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\n\rsucceeded(1)   11.1111% completed.    Possible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\n\rsucceeded(2)   22.2222% completed.    *****  PairPath Counts *****\n*****  PairPath Counts *****\nNode: 257 has 1 pairpaths stored:\n\tPairPath [_paths=[[257], []]] has read support: 11\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 873 has 1 pairpaths stored:\n\tPairPath [_paths=[[873, 874], []]] has read support: 1\n\nNode: 257 has 1 pairpaths stored:\n\tPairPath [_paths=[[257], []]] has read support: 11\n\nNode: 874 has 1 pairpaths stored:\n\tPairPath [_paths=[[874], []]] has read support: 1\n## Total number of pairpaths: 1\n\n## Total number of pairpaths: 2\n*****  PairPath Counts *****\nNode: 873 has 1 pairpaths stored:\n\tPairPath [_paths=[[873, 874], []]] has read support: 1\n\nNode: 874 has 1 pairpaths stored:\n\tPairPath [_paths=[[874], []]] has read support: 1\n\n## Total number of pairpaths: 2\n*****  PairPath Counts *****\nNode: 218 has 1 pairpaths stored:\n\tPairPath [_paths=[[218], []]] has read support: 12\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 218 has 1 pairpaths stored:\n\tPairPath [_paths=[[218], []]] has read support: 12\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 875 has 2 pairpaths stored:\n\tPairPath [_paths=[[875, 876], []]] has read support: 1\n\tPairPath [_paths=[[875], []]] has read support: 1\n\nNode: 876 has 1 pairpaths stored:\n\tPairPath [_paths=[[876], []]] has read support: 1\n\n## Total number of pairpaths: 3\n*****  PairPath Counts *****\nNode: 875 has 2 pairpaths stored:\n\tPairPath [_paths=[[875, 876], []]] has read support: 1\n\tPairPath [_paths=[[875], []]] has read support: 1\n\nNode: 876 has 1 pairpaths stored:\n\tPairPath [_paths=[[876], []]] has read support: 1\n\n## Total number of pairpaths: 3\n*****  PairPath Counts *****\nNode: 339 has 1 pairpaths stored:\n\tPairPath [_paths=[[339], []]] has read support: 8\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 339 has 1 pairpaths stored:\n\tPairPath [_paths=[[339], []]] has read support: 8\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 194 has 1 pairpaths stored:\n\tPairPath [_paths=[[194], []]] has read support: 7\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 194 has 1 pairpaths stored:\n\tPairPath [_paths=[[194], []]] has read support: 7\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 593 has 1 pairpaths stored:\n\tPairPath [_paths=[[593], []]] has read support: 13\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 593 has 1 pairpaths stored:\n\tPairPath [_paths=[[593], []]] has read support: 13\n\n## Total number of pairpaths: 1\n\rsucceeded(3)   33.3333% completed.    \rsucceeded(4)   44.4444% completed.    \rsucceeded(5)   55.5556% completed.    \rsucceeded(6)   66.6667% completed.    \rsucceeded(7)   77.7778% completed.    \rsucceeded(8)   88.8889% completed.    *****  PairPath Counts *****\nNode: 180 has 1 pairpaths stored:\n\tPairPath [_paths=[[180], []]] has read support: 7\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 180 has 1 pairpaths stored:\n\tPairPath [_paths=[[180], []]] has read support: 7\n\n## Total number of pairpaths: 1\n\rsucceeded(9)   100% completed.    \n\nAll commands completed successfully. :-)\n\n\n\n** Harvesting all assembled transcripts into a single multi-fasta file...\n\nTuesday, June 25, 2019: 22:08:45\tCMD: find /mnt/pulsar/files/staging/561071/working/trinity_out_dir/read_partitions/ -name '*inity.fasta'  | /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/partitioned_trinity_aggregator.pl --token_prefix TRINITY_DN --output_prefix /mnt/pulsar/files/staging/561071/working/trinity_out_dir/Trinity.tmp\n-relocating Trinity.tmp.fasta to /mnt/pulsar/files/staging/561071/working/trinity_out_dir/Trinity.fasta\nTuesday, June 25, 2019: 22:08:45\tCMD: mv Trinity.tmp.fasta /mnt/pulsar/files/staging/561071/working/trinity_out_dir/Trinity.fasta\nTuesday, June 25, 2019: 22:08:45\tCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/get_Trinity_gene_to_trans_map.pl /mnt/pulsar/files/staging/561071/working/trinity_out_dir/Trinity.fasta > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/Trinity.fasta.gene_trans_map\n\n\n###################################################################\nTrinity assemblies are written to /mnt/pulsar/files/staging/561071/working/trinity_out_dir/Trinity.fasta\n###################################################################\n\n\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "Possible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/bin/Trinity line 46.\n", "state": "ok", "create_time": "2019-06-25T22:08:01.889932", "stderr": "Possible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/bin/Trinity line 46.\n", "model_class": "Job", "params": {"dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "norm": "\"true\"", "pool": "{\"__current_case__\": 1, \"inputs\": {\"__current_case__\": 1, \"jaccard_clip\": \"false\", \"pair_input\": {\"values\": [{\"id\": 9604, \"src\": \"hdca\"}]}, \"paired_or_single\": \"unmerged_paired_collection\", \"strand\": {\"__current_case__\": 1, \"is_strand_specific\": \"true\", \"library_type\": \"RF\"}}, \"pool_mode\": \"No\"}", "additional_params": "{\"guided\": {\"__current_case__\": 0, \"is_guided\": \"no\"}, \"long_reads\": null, \"min_contig_length\": \"200\", \"min_kmer_cov\": \"1\"}"}, "tool_stdout": "\n\n     ______  ____   ____  ____   ____  ______  __ __\n    |      ||    \\ |    ||    \\ |    ||      ||  |  |\n    |      ||  D  ) |  | |  _  | |  | |      ||  |  |\n    |_|  |_||    /  |  | |  |  | |  | |_|  |_||  ~  |\n      |  |  |    \\  |  | |  |  | |  |   |  |  |___, |\n      |  |  |  .  \\ |  | |  |  | |  |   |  |  |     |\n      |__|  |__|\\_||____||__|__||____|  |__|  |____/\n\n    Trinity-v2.8.4\n\n\n\nLeft read files: $VAR1 = [\n          '/mnt/pulsar/files/staging/561071/inputs/dataset_924386.dat'\n        ];\nRight read files: $VAR1 = [\n          '/mnt/pulsar/files/staging/561071/inputs/dataset_924387.dat'\n        ];\n\n\n\n********************************************************************\n** Warning, Trinity cannot determine which version of Java is being used.  Version 1.8 is required. \n\nAttempting to continue in 30 seconds\n********************************************************************\n\n\nTuesday, June 25, 2019: 22:08:36\tCMD: java -Xmx64m -XX:ParallelGCThreads=2  -jar /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/ExitTester.jar 0\nTuesday, June 25, 2019: 22:08:37\tCMD: java -Xmx4g -XX:ParallelGCThreads=2  -jar /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/ExitTester.jar 1\nTuesday, June 25, 2019: 22:08:37\tCMD: mkdir -p /mnt/pulsar/files/staging/561071/working/trinity_out_dir\nTuesday, June 25, 2019: 22:08:37\tCMD: mkdir -p /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis\n\n\n----------------------------------------------------------------------------------\n-------------- Trinity Phase 1: Clustering of RNA-Seq Reads  ---------------------\n----------------------------------------------------------------------------------\n\n---------------------------------------------------------------\n------------ In silico Read Normalization ---------------------\n-- (Removing Excess Reads Beyond 200 Coverage --\n---------------------------------------------------------------\n\n# running normalization on reads: $VAR1 = [\n          [\n            '/mnt/pulsar/files/staging/561071/inputs/dataset_924386.dat'\n          ],\n          [\n            '/mnt/pulsar/files/staging/561071/inputs/dataset_924387.dat'\n          ]\n        ];\n\n\nTuesday, June 25, 2019: 22:08:37\tCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/insilico_read_normalization.pl --seqType fq --JM 1G  --max_cov 200 --min_cov 1 --CPU 8 --output /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization   --max_pct_stdev 10000  --SS_lib_type RF  --left /mnt/pulsar/files/staging/561071/inputs/dataset_924386.dat --right /mnt/pulsar/files/staging/561071/inputs/dataset_924387.dat --pairs_together --PARALLEL_STATS  \nConverting input files. (both directions in parallel)CMD: seqtk-trinity seq -r -A /mnt/pulsar/files/staging/561071/inputs/dataset_924386.dat >> left.fa\nCMD: seqtk-trinity seq -A /mnt/pulsar/files/staging/561071/inputs/dataset_924387.dat >> right.fa\nCMD finished (0 seconds)\nCMD finished (0 seconds)\nCMD: touch left.fa.ok\nCMD finished (0 seconds)\nCMD: touch right.fa.ok\nCMD finished (0 seconds)\nDone converting input files.CMD: cat left.fa right.fa > both.fa\nCMD finished (0 seconds)\nCMD: touch both.fa.ok\n-------------------------------------------\n----------- Jellyfish  --------------------\n-- (building a k-mer catalog from reads) --\n-------------------------------------------\n\nCMD finished (0 seconds)\nCMD: jellyfish count -t 8 -m 25 -s 100000000  both.fa\nCMD finished (1 seconds)\nCMD: jellyfish histo -t 8 -o jellyfish.K25.min2.kmers.fa.histo mer_counts.jf\nCMD finished (0 seconds)\nCMD: jellyfish dump -L 2 mer_counts.jf > jellyfish.K25.min2.kmers.fa\nCMD finished (0 seconds)\nCMD: touch jellyfish.K25.min2.kmers.fa.success\nCMD finished (0 seconds)\nCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/..//Inchworm/bin/fastaToKmerCoverageStats --reads left.fa --kmers jellyfish.K25.min2.kmers.fa --kmer_size 25  --num_threads 4  > left.fa.K25.stats\nCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/..//Inchworm/bin/fastaToKmerCoverageStats --reads right.fa --kmers jellyfish.K25.min2.kmers.fa --kmer_size 25  --num_threads 4  > right.fa.K25.stats\n-reading Kmer occurrences...\n-reading Kmer occurrences...\n\n done parsing 2541 Kmers, 2541 added, taking 0 seconds.\n\n done parsing 2541 Kmers, 2541 added, taking 0 seconds.\nSTATS_GENERATION_TIME: 0 seconds.\nSTATS_GENERATION_TIME: 0 seconds.\nCMD finished (0 seconds)\nCMD finished (0 seconds)\nCMD: touch left.fa.K25.stats.ok\nCMD finished (0 seconds)\nCMD: touch right.fa.K25.stats.ok\n-sorting each stats file by read name.\nCMD finished (0 seconds)\nCMD: /usr/bin/sort --parallel=8 -k5,5 -T . -S 1G left.fa.K25.stats > left.fa.K25.stats.sort\nCMD: /usr/bin/sort --parallel=8 -k5,5 -T . -S 1G right.fa.K25.stats > right.fa.K25.stats.sort\nCMD finished (0 seconds)\nCMD finished (0 seconds)\nCMD: touch left.fa.K25.stats.sort.ok\nCMD finished (0 seconds)\nCMD: touch right.fa.K25.stats.sort.ok\nCMD finished (0 seconds)\nCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/..//util/support_scripts//nbkc_merge_left_right_stats.pl --left left.fa.K25.stats.sort --right right.fa.K25.stats.sort --sorted > pairs.K25.stats\n-opening left.fa.K25.stats.sort\n-opening right.fa.K25.stats.sort\n-done opening files.\nCMD finished (0 seconds)\nCMD: touch pairs.K25.stats.ok\nCMD finished (0 seconds)\nCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/..//util/support_scripts//nbkc_normalize.pl --stats_file pairs.K25.stats --max_cov 200  --min_cov 1 --max_pct_stdev 10000 > pairs.K25.stats.C200.pctSD10000.accs\n100 / 100 = 100.00% reads selected during normalization.\n0 / 100 = 0.00% reads discarded as likely aberrant based on coverage profiles.\n0 / 100 = 0.00% reads missing kmer coverage (N chars included?).\n0 / 100 = 0.00% reads discarded as below minimum coverage threshold=1\nCMD finished (0 seconds)\nCMD: touch pairs.K25.stats.C200.pctSD10000.accs.ok\nCMD finished (0 seconds)\nCMD: touch /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/dataset_924386.dat.normalized_K25_maxC200_minC1_pctSD10000.fq.ok\nCMD finished (0 seconds)\nCMD: touch /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/dataset_924387.dat.normalized_K25_maxC200_minC1_pctSD10000.fq.ok\nCMD finished (0 seconds)\nCMD: ln -sf /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/dataset_924386.dat.normalized_K25_maxC200_minC1_pctSD10000.fq left.norm.fq\nCMD finished (0 seconds)\nCMD: ln -sf /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/dataset_924387.dat.normalized_K25_maxC200_minC1_pctSD10000.fq right.norm.fq\n-removing tmp dir /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/tmp_normalized_reads\nCMD finished (0 seconds)\n\n\nNormalization complete. See outputs: \n\t/mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/dataset_924386.dat.normalized_K25_maxC200_minC1_pctSD10000.fq\n\t/mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/dataset_924387.dat.normalized_K25_maxC200_minC1_pctSD10000.fq\nTuesday, June 25, 2019: 22:08:38\tCMD: touch /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/normalization.ok\nConverting input files. (in parallel)Tuesday, June 25, 2019: 22:08:38\tCMD: cat /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/left.norm.fq | seqtk-trinity seq -r -A - >> left.fa\nTuesday, June 25, 2019: 22:08:38\tCMD: cat /mnt/pulsar/files/staging/561071/working/trinity_out_dir/insilico_read_normalization/right.norm.fq | seqtk-trinity seq -A - >> right.fa\nTuesday, June 25, 2019: 22:08:38\tCMD: touch left.fa.ok\nTuesday, June 25, 2019: 22:08:38\tCMD: touch right.fa.ok\nTuesday, June 25, 2019: 22:08:38\tCMD: touch left.fa.ok right.fa.ok\nTuesday, June 25, 2019: 22:08:38\tCMD: cat left.fa right.fa > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa\nTuesday, June 25, 2019: 22:08:38\tCMD: touch /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa.ok\n-------------------------------------------\n----------- Jellyfish  --------------------\n-- (building a k-mer catalog from reads) --\n-------------------------------------------\n\n* Running CMD: jellyfish count -t 8 -m 25 -s 100000000  /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa\n* Running CMD: jellyfish dump -L 1 mer_counts.jf > jellyfish.kmers.fa\n* Running CMD: jellyfish histo -t 8 -o jellyfish.kmers.fa.histo mer_counts.jf\n----------------------------------------------\n--------------- Inchworm ---------------------\n-- (Linear contig construction from k-mers) --\n----------------------------------------------\n\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/Inchworm/bin//inchworm --kmers jellyfish.kmers.fa --run_inchworm -K 25 -L 25 --monitor 1   --num_threads 6  --PARALLEL_IWORM  > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa.tmp\n* Running CMD: mv /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa.tmp /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa\nTuesday, June 25, 2019: 22:08:38\tCMD: touch /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa.finished\n--------------------------------------------------------\n-------------------- Chrysalis -------------------------\n-- (Contig Clustering & de Bruijn Graph Construction) --\n--------------------------------------------------------\n\ninchworm_target: /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa\nbowite_reads_fa: /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa\nchrysalis_reads_fa: /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/filter_iworm_by_min_length_or_cov.pl /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa 100 10 > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/inchworm.K25.L25.fa.min100\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/bin/bowtie2-build --threads 8 -o 3 /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/inchworm.K25.L25.fa.min100 /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/inchworm.K25.L25.fa.min100 1>/dev/null\n* Running CMD: bash -c \" set -o pipefail;/mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/bin/bowtie2 --local -k 2 --no-unal --threads 8 -f --score-min G,20,8 -x /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/inchworm.K25.L25.fa.min100 /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa  | samtools view -@ 8 -F4 -Sb - | samtools sort -m 67108864 -@ 8 -no - - > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm.bowtie.nameSorted.bam\" \n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/scaffold_iworm_contigs.pl /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm.bowtie.nameSorted.bam /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_scaffolds.txt\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/Chrysalis/bin/GraphFromFasta -i /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa -r /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa -min_contig_length 200 -min_glue 2 -glue_factor 0.05 -min_iso_ratio 0.05 -t 8 -k 24 -kk 48  -strand  -scaffolding /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_scaffolds.txt  > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_cluster_welds_graph.txt\n* Running CMD: /usr/bin/sort --parallel=8 -T . -S 1G  -k9,9gr /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_cluster_welds_graph.txt > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_cluster_welds_graph.txt.sorted\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/annotate_chrysalis_welds_with_iworm_names.pl /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_cluster_welds_graph.txt.sorted > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_cluster_welds_graph.txt.sorted.wIwormNames\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/Chrysalis/bin/BubbleUpClustering -i /mnt/pulsar/files/staging/561071/working/trinity_out_dir/inchworm.K25.L25.fa  -weld_graph /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/iworm_cluster_welds_graph.txt.sorted -min_contig_length 200 -max_cluster_size 25  > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/GraphFromIwormFasta.out\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/Chrysalis/bin/CreateIwormFastaBundle -i /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/GraphFromIwormFasta.out -o /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/bundled_iworm_contigs.fasta -min 200\n* Running CMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/Chrysalis/bin/ReadsToTranscripts -i /mnt/pulsar/files/staging/561071/working/trinity_out_dir/both.fa -f /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/bundled_iworm_contigs.fasta -o /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/readsToComponents.out -t 8 -max_mem_reads 50000000  -strand \n* Running CMD: /usr/bin/sort --parallel=8 -T . -S 1G -k 1,1n /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/readsToComponents.out > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/chrysalis/readsToComponents.out.sort\nTuesday, June 25, 2019: 22:08:40\tCMD: mkdir -p /mnt/pulsar/files/staging/561071/working/trinity_out_dir/read_partitions/Fb_0/CBin_0\nTuesday, June 25, 2019: 22:08:40\tCMD: touch /mnt/pulsar/files/staging/561071/working/trinity_out_dir/partitioned_reads.files.list.ok\nTuesday, June 25, 2019: 22:08:40\tCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/write_partitioned_trinity_cmds.pl --reads_list_file /mnt/pulsar/files/staging/561071/working/trinity_out_dir/partitioned_reads.files.list --CPU 1 --max_memory 1G  --run_as_paired  --SS_lib_type F  --seqType fa --trinity_complete --full_cleanup  --no_version_check  --min_contig_length  200  --min_kmer_cov  1  --bflyHeapSpaceMax  1G --bfly_opts \"-V 10 --stderr\"  > recursive_trinity.cmds\nTuesday, June 25, 2019: 22:08:40\tCMD: touch recursive_trinity.cmds.ok\nTuesday, June 25, 2019: 22:08:40\tCMD: touch recursive_trinity.cmds.ok\n\n\n--------------------------------------------------------------------------------\n------------ Trinity Phase 2: Assembling Clusters of Reads ---------------------\n------- (involving the Inchworm, Chrysalis, Butterfly trifecta ) ---------------\n--------------------------------------------------------------------------------\n\nTuesday, June 25, 2019: 22:08:40\tCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/trinity-plugins/BIN/ParaFly -c recursive_trinity.cmds -CPU 8 -v -shuffle \nNumber of Commands: 9\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\nPossible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\n\rsucceeded(1)   11.1111% completed.    Possible unintended interpolation of @2 in string at /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/../../Trinity line 46.\n\rsucceeded(2)   22.2222% completed.    *****  PairPath Counts *****\n*****  PairPath Counts *****\nNode: 257 has 1 pairpaths stored:\n\tPairPath [_paths=[[257], []]] has read support: 11\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 873 has 1 pairpaths stored:\n\tPairPath [_paths=[[873, 874], []]] has read support: 1\n\nNode: 257 has 1 pairpaths stored:\n\tPairPath [_paths=[[257], []]] has read support: 11\n\nNode: 874 has 1 pairpaths stored:\n\tPairPath [_paths=[[874], []]] has read support: 1\n## Total number of pairpaths: 1\n\n## Total number of pairpaths: 2\n*****  PairPath Counts *****\nNode: 873 has 1 pairpaths stored:\n\tPairPath [_paths=[[873, 874], []]] has read support: 1\n\nNode: 874 has 1 pairpaths stored:\n\tPairPath [_paths=[[874], []]] has read support: 1\n\n## Total number of pairpaths: 2\n*****  PairPath Counts *****\nNode: 218 has 1 pairpaths stored:\n\tPairPath [_paths=[[218], []]] has read support: 12\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 218 has 1 pairpaths stored:\n\tPairPath [_paths=[[218], []]] has read support: 12\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 875 has 2 pairpaths stored:\n\tPairPath [_paths=[[875, 876], []]] has read support: 1\n\tPairPath [_paths=[[875], []]] has read support: 1\n\nNode: 876 has 1 pairpaths stored:\n\tPairPath [_paths=[[876], []]] has read support: 1\n\n## Total number of pairpaths: 3\n*****  PairPath Counts *****\nNode: 875 has 2 pairpaths stored:\n\tPairPath [_paths=[[875, 876], []]] has read support: 1\n\tPairPath [_paths=[[875], []]] has read support: 1\n\nNode: 876 has 1 pairpaths stored:\n\tPairPath [_paths=[[876], []]] has read support: 1\n\n## Total number of pairpaths: 3\n*****  PairPath Counts *****\nNode: 339 has 1 pairpaths stored:\n\tPairPath [_paths=[[339], []]] has read support: 8\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 339 has 1 pairpaths stored:\n\tPairPath [_paths=[[339], []]] has read support: 8\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 194 has 1 pairpaths stored:\n\tPairPath [_paths=[[194], []]] has read support: 7\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 194 has 1 pairpaths stored:\n\tPairPath [_paths=[[194], []]] has read support: 7\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 593 has 1 pairpaths stored:\n\tPairPath [_paths=[[593], []]] has read support: 13\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 593 has 1 pairpaths stored:\n\tPairPath [_paths=[[593], []]] has read support: 13\n\n## Total number of pairpaths: 1\n\rsucceeded(3)   33.3333% completed.    \rsucceeded(4)   44.4444% completed.    \rsucceeded(5)   55.5556% completed.    \rsucceeded(6)   66.6667% completed.    \rsucceeded(7)   77.7778% completed.    \rsucceeded(8)   88.8889% completed.    *****  PairPath Counts *****\nNode: 180 has 1 pairpaths stored:\n\tPairPath [_paths=[[180], []]] has read support: 7\n\n## Total number of pairpaths: 1\n*****  PairPath Counts *****\nNode: 180 has 1 pairpaths stored:\n\tPairPath [_paths=[[180], []]] has read support: 7\n\n## Total number of pairpaths: 1\n\rsucceeded(9)   100% completed.    \n\nAll commands completed successfully. :-)\n\n\n\n** Harvesting all assembled transcripts into a single multi-fasta file...\n\nTuesday, June 25, 2019: 22:08:45\tCMD: find /mnt/pulsar/files/staging/561071/working/trinity_out_dir/read_partitions/ -name '*inity.fasta'  | /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/partitioned_trinity_aggregator.pl --token_prefix TRINITY_DN --output_prefix /mnt/pulsar/files/staging/561071/working/trinity_out_dir/Trinity.tmp\n-relocating Trinity.tmp.fasta to /mnt/pulsar/files/staging/561071/working/trinity_out_dir/Trinity.fasta\nTuesday, June 25, 2019: 22:08:45\tCMD: mv Trinity.tmp.fasta /mnt/pulsar/files/staging/561071/working/trinity_out_dir/Trinity.fasta\nTuesday, June 25, 2019: 22:08:45\tCMD: /mnt/pulsar/dependencies/_conda/envs/__trinity@2.8.4/opt/trinity-2.8.4/util/support_scripts/get_Trinity_gene_to_trans_map.pl /mnt/pulsar/files/staging/561071/working/trinity_out_dir/Trinity.fasta > /mnt/pulsar/files/staging/561071/working/trinity_out_dir/Trinity.fasta.gene_trans_map\n\n\n###################################################################\nTrinity assemblies are written to /mnt/pulsar/files/staging/561071/working/trinity_out_dir/Trinity.fasta\n###################################################################\n\n\n", "job_messages": [], "id": "cb13667dc1426f69", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/trinity/trinity/2.8.4-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/trinity_abundance_estimates_to_matrix/trinity_abundance_estimates_to_matrix/2.8.4", "time_seconds": 79.73663401603699, "inputs": {"additional_params|cross_sample_norm": "none", "est_method": "salmon", "samples": [{"src": "hda", "id": "8163be6880267194"}, {"src": "hda", "id": "748b37031dacd14e"}]}, "tool_version": "2.8.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/trinity_abundance_estimates_to_matrix/trinity_abundance_estimates_to_matrix/2.8.4", "update_time": "2019-06-26T01:50:56.716034", "inputs": {"samples2": {"src": "hda", "id": "748b37031dacd14e", "uuid": "d3249c52-e498-4799-933e-e92a0a2626f0"}, "samples1": {"src": "hda", "id": "8163be6880267194", "uuid": "4fcd3118-2e4f-494d-b58f-cc7eb9464bee"}, "samples": {"src": "hda", "id": "8163be6880267194", "uuid": "4fcd3118-2e4f-494d-b58f-cc7eb9464bee"}}, "outputs": {"trans_counts": {"src": "hda", "id": "0745d5ce58325348", "uuid": "2709ce17-9c10-4c13-b73f-e8a81c5f1fad"}, "TPM_no_norm": {"src": "hda", "id": "e00922e2b081ee03", "uuid": "1f979e22-d171-4902-9af1-f26d791ec140"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "-reading file: count_salmon_sample_A\n-reading file: count_salmon_sample_B\n\n\n* Outputting combined matrix.\n\n-not performing cross-sample normalization.\n", "state": "ok", "create_time": "2019-06-26T01:50:24.132573", "stderr": "-reading file: count_salmon_sample_A\n-reading file: count_salmon_sample_B\n\n\n* Outputting combined matrix.\n\n-not performing cross-sample normalization.\n", "model_class": "Job", "params": {"est_method": "\"salmon\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "additional_params": "{\"cross_sample_norm\": \"none\"}", "dbkey": "\"?\"", "gene_trans_map": "null"}, "tool_stdout": "", "job_messages": [], "id": "b65daaeca0f4f2b2", "job_stdout": ""}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/trinity_abundance_estimates_to_matrix/trinity_abundance_estimates_to_matrix/2.8.4-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/trinity_abundance_estimates_to_matrix/trinity_abundance_estimates_to_matrix/2.8.4", "time_seconds": 92.48956203460693, "inputs": {"additional_params|cross_sample_norm": "TMM", "est_method": "kallisto", "samples": [{"src": "hda", "id": "b02e092f8e90bdd2"}, {"src": "hda", "id": "0bb68d45fa9a077d"}]}, "tool_version": "2.8.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/trinity_abundance_estimates_to_matrix/trinity_abundance_estimates_to_matrix/2.8.4", "update_time": "2019-06-26T01:51:05.958246", "inputs": {"samples2": {"src": "hda", "id": "0bb68d45fa9a077d", "uuid": "5b1ff7ed-7412-4bc0-a7c2-e576a8e48cbc"}, "samples1": {"src": "hda", "id": "b02e092f8e90bdd2", "uuid": "c8a2d969-bf4d-44a6-91d3-76ce9a37b094"}, "samples": {"src": "hda", "id": "b02e092f8e90bdd2", "uuid": "c8a2d969-bf4d-44a6-91d3-76ce9a37b094"}}, "outputs": {"trans_counts": {"src": "hda", "id": "e4f30a26fe3fe565", "uuid": "632295f8-e1d5-4e21-b3e1-712d9269141b"}, "norm_TMM": {"src": "hda", "id": "87dbd3555ab678a9", "uuid": "af8a42df-1557-427c-b47a-ef81d19daff0"}, "TPM_no_norm": {"src": "hda", "id": "d5345f84874675bf", "uuid": "98e2cf27-7126-4e8f-b1ab-efbc22403b48"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "-reading file: count_kallisto_abundance_tsv_genes\n-reading file: count_kallisto_abundance_B_tsv_genes\n\n\n* Outputting combined matrix.\n\n/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-7b7d327e9d9ec35c4363db4c7287b2a085fa083760be45194312f619797395fc/opt/trinity-2.8.4/util/support_scripts/run_TMM_scale_matrix.pl --matrix kallisto.isoform.TPM.not_cross_norm > kallisto.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < kallisto.isoform.TPM.not_cross_norm.runTMM.R 1>&2 \n> library(edgeR)\nLoading required package: limma\n> \n> rnaseqMatrix = read.table(\"kallisto.isoform.TPM.not_cross_norm\", header=T, row.names=1, com='', check.names=F)\n> rnaseqMatrix = as.matrix(rnaseqMatrix)\n> rnaseqMatrix = round(rnaseqMatrix)\n> exp_study = DGEList(counts=rnaseqMatrix, group=factor(colnames(rnaseqMatrix)))\n> exp_study = calcNormFactors(exp_study)\n> exp_study$samples$eff.lib.size = exp_study$samples$lib.size * exp_study$samples$norm.factors\n> write.table(exp_study$samples, file=\"kallisto.isoform.TPM.not_cross_norm.TMM_info.txt\", quote=F, sep=\"\\t\", row.names=F)\n> \n", "state": "ok", "create_time": "2019-06-26T01:50:33.199738", "stderr": "-reading file: count_kallisto_abundance_tsv_genes\n-reading file: count_kallisto_abundance_B_tsv_genes\n\n\n* Outputting combined matrix.\n\n/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-7b7d327e9d9ec35c4363db4c7287b2a085fa083760be45194312f619797395fc/opt/trinity-2.8.4/util/support_scripts/run_TMM_scale_matrix.pl --matrix kallisto.isoform.TPM.not_cross_norm > kallisto.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < kallisto.isoform.TPM.not_cross_norm.runTMM.R 1>&2 \n> library(edgeR)\nLoading required package: limma\n> \n> rnaseqMatrix = read.table(\"kallisto.isoform.TPM.not_cross_norm\", header=T, row.names=1, com='', check.names=F)\n> rnaseqMatrix = as.matrix(rnaseqMatrix)\n> rnaseqMatrix = round(rnaseqMatrix)\n> exp_study = DGEList(counts=rnaseqMatrix, group=factor(colnames(rnaseqMatrix)))\n> exp_study = calcNormFactors(exp_study)\n> exp_study$samples$eff.lib.size = exp_study$samples$lib.size * exp_study$samples$norm.factors\n> write.table(exp_study$samples, file=\"kallisto.isoform.TPM.not_cross_norm.TMM_info.txt\", quote=F, sep=\"\\t\", row.names=F)\n> \n", "model_class": "Job", "params": {"est_method": "\"kallisto\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "additional_params": "{\"cross_sample_norm\": \"TMM\"}", "dbkey": "\"?\"", "gene_trans_map": "null"}, "tool_stdout": "", "job_messages": [], "id": "e10e48a6026d225e", "job_stdout": ""}, "test_index": 6}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/trinity_abundance_estimates_to_matrix/trinity_abundance_estimates_to_matrix/2.8.4-6", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/trinity_samples_qccheck/trinity_samples_qccheck/2.8.4", "time_seconds": 131.71761107444763, "inputs": {"matrix": {"src": "hda", "id": "2768c37db898c860"}, "samples": {"src": "hda", "id": "01509031def4a5a2"}}, "tool_version": "2.8.4", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/trinity_samples_qccheck/trinity_samples_qccheck/2.8.4", "update_time": "2019-06-26T02:30:28.681042", "inputs": {"matrix": {"src": "hda", "id": "2768c37db898c860", "uuid": "1750012f-4094-4076-b82a-f4d6c0abdec6"}, "samples": {"src": "hda", "id": "01509031def4a5a2", "uuid": "baf0a350-9303-4a1e-b165-168073fa7257"}}, "outputs": {"__new_primary_file_reports|input.matrix.CPM.log2.sample_cor_matrix.pdf__": {"src": "hda", "id": "afac74f8e4aff99a", "uuid": "1bdc368f-bf92-4174-8fbd-c0a295c810fb"}, "__new_primary_file_reports|wt_ph8.rep_compare.pdf__": {"src": "hda", "id": "1588be8bc73efd22", "uuid": "da33d68b-39d2-4297-94d2-abd1cd2898f8"}, "__new_primary_file_reports|wt_37.rep_compare.pdf__": {"src": "hda", "id": "4d65d91f5e893e57", "uuid": "fcf74209-dbaf-4ced-84f0-3275d4776ff1"}, "__new_primary_file_reports|wt_GSNO.rep_compare.pdf__": {"src": "hda", "id": "0192d57840e05f92", "uuid": "ab9cdaec-8f0b-49ba-95c6-d4344a671157"}, "__new_primary_file_reports|input.matrix.CPM.log2.prcomp.principal_components.pdf__": {"src": "hda", "id": "b188b9c8c32a24dd", "uuid": "45341dc5-b490-4bcc-958c-ba987b945386"}}, "history_id": "f840675b8d7f5485", "stdout": "> library(cluster)\n> library(Biobase)\n> library(qvalue)\n> library(fastcluster)\n> options(stringsAsFactors = FALSE)\n> NO_REUSE = F\n> \n> # try to reuse earlier-loaded data if possible\n> if (file.exists(\"input.matrix.RData\") && ! NO_REUSE) {\n+     print('RESTORING DATA FROM EARLIER ANALYSIS')\n+     load(\"input.matrix.RData\")\n+ } else {\n+     print('Reading matrix file.')\n+     primary_data = read.table(\"input.matrix\", header=T, com='', row.names=1, check.names=F, sep='\\t')\n+     primary_data = as.matrix(primary_data)\n+ }\n[1] \"Reading matrix file.\"\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/heatmap.3.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/misc_rnaseq_funcs.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/pairs3.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/vioplot2.R\")\n> data = primary_data\n> myheatcol = colorpanel(75, 'purple','black','yellow')\n> samples_data = read.table(\"/mnt/galaxy/files/000/926/dataset_926495.dat\", header=F, check.names=F, fill=T)\n> samples_data = samples_data[samples_data[,2] != '',]\n> colnames(samples_data) = c('sample_name', 'replicate_name')\n> sample_types = as.character(unique(samples_data[,1]))\n> rep_names = as.character(samples_data[,2])\n> data = data[, colnames(data) %in% rep_names, drop=F ]\n> nsamples = length(sample_types)\n> sample_colors = rainbow(nsamples)\n> names(sample_colors) = sample_types\n> sample_type_list = list()\n> for (i in 1:nsamples) {\n+     samples_want = samples_data[samples_data[,1]==sample_types[i], 2]\n+     sample_type_list[[sample_types[i]]] = as.vector(samples_want)\n+ }\n> sample_factoring = colnames(data)\n> for (i in 1:nsamples) {\n+     sample_type = sample_types[i]\n+     replicates_want = sample_type_list[[sample_type]]\n+     sample_factoring[ colnames(data) %in% replicates_want ] = sample_type\n+ }\n> initial_matrix = data # store before doing various data transformations\n> cs = colSums(data)\n> data = t( t(data)/cs) * 1e6;\n> data = log2(data+1)\n> sample_factoring = colnames(data)\n> for (i in 1:nsamples) {\n+     sample_type = sample_types[i]\n+     replicates_want = sample_type_list[[sample_type]]\n+     sample_factoring[ colnames(data) %in% replicates_want ] = sample_type\n+ }\n> sampleAnnotations = matrix(ncol=ncol(data),nrow=nsamples)\n> for (i in 1:nsamples) {\n+   sampleAnnotations[i,] = colnames(data) %in% sample_type_list[[sample_types[i]]]\n+ }\n> sampleAnnotations = apply(sampleAnnotations, 1:2, function(x) as.logical(x))\n> sampleAnnotations = sample_matrix_to_color_assignments(sampleAnnotations, col=sample_colors)\n> rownames(sampleAnnotations) = as.vector(sample_types)\n> colnames(sampleAnnotations) = colnames(data)\n> data = as.matrix(data) # convert to matrix\n> MA_plot = function(x, y, ...) {\n+     M = log( (exp(x) + exp(y)) / 2)\n+     A = x - y;\n+     res = list(x=M, y=A)\n+     return(res)\n+ }\n> MA_color_fun = function(x,y) {\n+     col = sapply(y, function(y) ifelse(abs(y) >= 1, 'red', 'black')) # color 2-fold diffs\n+     return(col)\n+ }\n> Scatter_color_fun = function(x,y) {\n+     col = sapply(abs(x-y), function(z) ifelse(z >= 1, 'red', 'black')) # color 2-fold diffs\n+     return(col)\n+ }\n> for (i in 1:nsamples) {\n+     sample_name = sample_types[[i]]\n+     cat('Processing replicate QC analysis for sample: ', sample_name, \"\n+ \")\n+     samples_want = sample_type_list[[sample_name]]\n+     samples_want = colnames(data) %in% samples_want\n+     if (sum(samples_want) > 1) {\n+         pdf(file=paste(sample_name, '.rep_compare.pdf', sep=''))\n+         d = data[,samples_want]\n+         initial_matrix_samples_want = initial_matrix[,samples_want]\n+         op <- par(mar = c(10,10,10,10))\n+         barplot(colSums(initial_matrix_samples_want), las=2, main=paste(\"Sum of Frags for replicates of:\", sample_name), ylab='', cex.names=0.7)\n+         par(op)\n+         pairs3(d, pch='.', CustomColorFun=Scatter_color_fun, main=paste('Replicate Scatter:', sample_name)) # scatter plots\n+         pairs3(d, XY_convert_fun=MA_plot, CustomColorFun=MA_color_fun, pch='.', main=paste('Replicate MA:', sample_name)); # MA plots\n+         reps_cor = cor(d, method=\"pearson\", use='pairwise.complete.obs')\n+         hc_samples = hclust(as.dist(1-reps_cor), method=\"complete\")\n+         heatmap.3(reps_cor, dendrogram='both', Rowv=as.dendrogram(hc_samples), Colv=as.dendrogram(hc_samples), col = cm.colors(256), scale='none', symm=TRUE, key=TRUE,density.info='none', trace='none', symbreaks=F, margins=c(10,10), cexCol=1, cexRow=1, main=paste('Replicate Correlations:', sample_name) )\n+         dev.off()\n+     }\n+ }\nProcessing replicate QC analysis for sample:  wt_37 \nProcessing replicate QC analysis for sample:  wt_GSNO \nProcessing replicate QC analysis for sample:  wt_ph8 \n> write.table(data, file=\"input.matrix.CPM.log2.dat\", quote=F, sep='\t');\n> gene_cor = NULL\n> \n> library(cluster)\n> library(Biobase)\n> library(qvalue)\n> library(fastcluster)\n> options(stringsAsFactors = FALSE)\n> NO_REUSE = F\n> \n> # try to reuse earlier-loaded data if possible\n> if (file.exists(\"input.matrix.RData\") && ! NO_REUSE) {\n+     print('RESTORING DATA FROM EARLIER ANALYSIS')\n+     load(\"input.matrix.RData\")\n+ } else {\n+     print('Reading matrix file.')\n+     primary_data = read.table(\"input.matrix\", header=T, com='', row.names=1, check.names=F, sep='\\t')\n+     primary_data = as.matrix(primary_data)\n+ }\n[1] \"Reading matrix file.\"\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/heatmap.3.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/misc_rnaseq_funcs.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/pairs3.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/vioplot2.R\")\n> data = primary_data\n> myheatcol = colorpanel(75, 'purple','black','yellow')\n> samples_data = read.table(\"/mnt/galaxy/files/000/926/dataset_926495.dat\", header=F, check.names=F, fill=T)\n> samples_data = samples_data[samples_data[,2] != '',]\n> colnames(samples_data) = c('sample_name', 'replicate_name')\n> sample_types = as.character(unique(samples_data[,1]))\n> rep_names = as.character(samples_data[,2])\n> data = data[, colnames(data) %in% rep_names, drop=F ]\n> nsamples = length(sample_types)\n> sample_colors = rainbow(nsamples)\n> names(sample_colors) = sample_types\n> sample_type_list = list()\n> for (i in 1:nsamples) {\n+     samples_want = samples_data[samples_data[,1]==sample_types[i], 2]\n+     sample_type_list[[sample_types[i]]] = as.vector(samples_want)\n+ }\n> sample_factoring = colnames(data)\n> for (i in 1:nsamples) {\n+     sample_type = sample_types[i]\n+     replicates_want = sample_type_list[[sample_type]]\n+     sample_factoring[ colnames(data) %in% replicates_want ] = sample_type\n+ }\n> initial_matrix = data # store before doing various data transformations\n> cs = colSums(data)\n> data = t( t(data)/cs) * 1e6;\n> data = log2(data+1)\n> sample_factoring = colnames(data)\n> for (i in 1:nsamples) {\n+     sample_type = sample_types[i]\n+     replicates_want = sample_type_list[[sample_type]]\n+     sample_factoring[ colnames(data) %in% replicates_want ] = sample_type\n+ }\n> sampleAnnotations = matrix(ncol=ncol(data),nrow=nsamples)\n> for (i in 1:nsamples) {\n+   sampleAnnotations[i,] = colnames(data) %in% sample_type_list[[sample_types[i]]]\n+ }\n> sampleAnnotations = apply(sampleAnnotations, 1:2, function(x) as.logical(x))\n> sampleAnnotations = sample_matrix_to_color_assignments(sampleAnnotations, col=sample_colors)\n> rownames(sampleAnnotations) = as.vector(sample_types)\n> colnames(sampleAnnotations) = colnames(data)\n> data = as.matrix(data) # convert to matrix\n> write.table(data, file=\"input.matrix.CPM.log2.dat\", quote=F, sep='\t');\n> if (nrow(data) < 2) { stop(\"\n+ \n+ **** Sorry, at least two rows are required for this matrix.\n+ \n+ \");}\n> if (ncol(data) < 2) { stop(\"\n+ \n+ **** Sorry, at least two columns are required for this matrix.\n+ \n+ \");}\n> sample_cor = cor(data, method='pearson', use='pairwise.complete.obs')\n> write.table(sample_cor, file=\"input.matrix.CPM.log2.sample_cor.dat\", quote=F, sep='\t')\n> sample_dist = dist(t(data), method='euclidean')\n> hc_samples = hclust(sample_dist, method='complete')\n> pdf(\"input.matrix.CPM.log2.sample_cor_matrix.pdf\")\n> sample_cor_for_plot = sample_cor\n> heatmap.3(sample_cor_for_plot, dendrogram='both', Rowv=as.dendrogram(hc_samples), Colv=as.dendrogram(hc_samples), col = myheatcol, scale='none', symm=TRUE, key=TRUE,density.info='none', trace='none', symkey=FALSE, symbreaks=F, margins=c(10,10), cexCol=1, cexRow=1, cex.main=0.75, main=paste(\"sample correlation matrix\n+ \", \"input.matrix.CPM.log2\") , ColSideColors=sampleAnnotations, RowSideColors=t(sampleAnnotations))\n> dev.off()\nnull device \n          1 \n> gene_cor = NULL\n> \n> library(cluster)\n> library(Biobase)\n> library(qvalue)\n> library(fastcluster)\n> options(stringsAsFactors = FALSE)\n> NO_REUSE = F\n> \n> # try to reuse earlier-loaded data if possible\n> if (file.exists(\"input.matrix.RData\") && ! NO_REUSE) {\n+     print('RESTORING DATA FROM EARLIER ANALYSIS')\n+     load(\"input.matrix.RData\")\n+ } else {\n+     print('Reading matrix file.')\n+     primary_data = read.table(\"input.matrix\", header=T, com='', row.names=1, check.names=F, sep='\\t')\n+     primary_data = as.matrix(primary_data)\n+ }\n[1] \"Reading matrix file.\"\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/heatmap.3.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/misc_rnaseq_funcs.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/pairs3.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/vioplot2.R\")\n> data = primary_data\n> myheatcol = colorpanel(75, 'purple','black','yellow')\n> samples_data = read.table(\"/mnt/galaxy/files/000/926/dataset_926495.dat\", header=F, check.names=F, fill=T)\n> samples_data = samples_data[samples_data[,2] != '',]\n> colnames(samples_data) = c('sample_name', 'replicate_name')\n> sample_types = as.character(unique(samples_data[,1]))\n> rep_names = as.character(samples_data[,2])\n> data = data[, colnames(data) %in% rep_names, drop=F ]\n> nsamples = length(sample_types)\n> sample_colors = rainbow(nsamples)\n> names(sample_colors) = sample_types\n> sample_type_list = list()\n> for (i in 1:nsamples) {\n+     samples_want = samples_data[samples_data[,1]==sample_types[i], 2]\n+     sample_type_list[[sample_types[i]]] = as.vector(samples_want)\n+ }\n> sample_factoring = colnames(data)\n> for (i in 1:nsamples) {\n+     sample_type = sample_types[i]\n+     replicates_want = sample_type_list[[sample_type]]\n+     sample_factoring[ colnames(data) %in% replicates_want ] = sample_type\n+ }\n> initial_matrix = data # store before doing various data transformations\n> cs = colSums(data)\n> data = t( t(data)/cs) * 1e6;\n> data = log2(data+1)\n> sample_factoring = colnames(data)\n> for (i in 1:nsamples) {\n+     sample_type = sample_types[i]\n+     replicates_want = sample_type_list[[sample_type]]\n+     sample_factoring[ colnames(data) %in% replicates_want ] = sample_type\n+ }\n> sampleAnnotations = matrix(ncol=ncol(data),nrow=nsamples)\n> for (i in 1:nsamples) {\n+   sampleAnnotations[i,] = colnames(data) %in% sample_type_list[[sample_types[i]]]\n+ }\n> sampleAnnotations = apply(sampleAnnotations, 1:2, function(x) as.logical(x))\n> sampleAnnotations = sample_matrix_to_color_assignments(sampleAnnotations, col=sample_colors)\n> rownames(sampleAnnotations) = as.vector(sample_types)\n> colnames(sampleAnnotations) = colnames(data)\n> data = as.matrix(data) # convert to matrix\n> write.table(data, file=\"input.matrix.CPM.log2.dat\", quote=F, sep='\t');\n> pdf(\"input.matrix.CPM.log2.prcomp.principal_components.pdf\")\n> prin_comp_data = data\n> pca = prcomp(prin_comp_data, center = FALSE, scale. = FALSE)\n> pc_pct_variance = (pca$sdev^2)/sum(pca$sdev^2)\n> def.par <- par(no.readonly = TRUE) # save default, for resetting...\n> gridlayout = matrix(c(1:4),nrow=2,ncol=2, byrow=TRUE);\n> layout(gridlayout, widths=c(1,1));\n> write.table(pca$rotation, file=\"input.matrix.CPM.log2.PCA.prcomp.scores\", quote=F, sep=\"\t\")\n> write.table(pca$x, file=\"input.matrix.CPM.log2.PCA.prcomp.loadings\", quote=F, sep=\"\t\")\n> PCA.loadings=pca$x\n> PCA.scores = pca$rotation\n> for (i in 1:(max(3,2)-1)) {\n+     xrange = range(PCA.scores[,i])\n+     yrange = range(PCA.scores[,i+1])\n+     samples_want = rownames(PCA.scores) %in% sample_type_list[[sample_types[1]]]\n+     pc_i_pct_var = sprintf(\"(%.2f%%)\", pc_pct_variance[i]*100)\n+     pc_i_1_pct_var = sprintf(\"(%.2f%%)\", pc_pct_variance[i+1]*100)\n+     plot(PCA.scores[samples_want,i], PCA.scores[samples_want,i+1], xlab=paste('PC',i, pc_i_pct_var), ylab=paste('PC',i+1, pc_i_1_pct_var), xlim=xrange, ylim=yrange, col=sample_colors[1])\n+     for (j in 2:nsamples) {\n+         samples_want = rownames(PCA.scores) %in% sample_type_list[[sample_types[j]]]\n+         points(PCA.scores[samples_want,i], PCA.scores[samples_want,i+1], col=sample_colors[j], pch=j)\n+     }\n+     plot.new()\n+     legend('topleft', as.vector(sample_types), col=sample_colors, pch=1:nsamples, ncol=2)\n+ }\n> \n> par(def.par)\n> pcloadings_mat_vals = PCA.loadings[,1:3]\n> print(dim(pcloadings_mat_vals))\n[1] 40  3\n> pcloadings_mat = matrix_to_color_assignments(pcloadings_mat_vals, col=colorpanel(256,'purple','black','yellow'), by='col')\n> print(dim(pcloadings_mat))\n[1] 40  3\n> colnames(pcloadings_mat) = paste('PC', 1:ncol(pcloadings_mat))\n> dev.off()\nnull device \n          1 \n> gene_cor = NULL\n> \n", "exit_code": 0, "job_stderr": "", "tool_stderr": "CMD: R --no-save --no-restore --no-site-file --no-init-file -q < input.matrix.R\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:parallel\u2019:\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colMeans,\n    colnames, colSums, dirname, do.call, duplicated, eval, evalq,\n    Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply,\n    lengths, Map, mapply, match, mget, order, paste, pmax, pmax.int,\n    pmin, pmin.int, Position, rank, rbind, Reduce, rowMeans, rownames,\n    rowSums, sapply, setdiff, sort, table, tapply, union, unique,\n    unsplit, which, which.max, which.min\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018fastcluster\u2019\n\nThe following object is masked from \u2018package:stats\u2019:\n\n    hclust\n\nfor plotting:: min.raw: 0.927928151348082 max.raw: 1\nfor plotting:: min.raw: 0.759357738810669 max.raw: 1\nfor plotting:: min.raw: 0.870430169268952 max.raw: 1\nCMD: R --no-save --no-restore --no-site-file --no-init-file -q < input.matrix.R\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:parallel\u2019:\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colMeans,\n    colnames, colSums, dirname, do.call, duplicated, eval, evalq,\n    Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply,\n    lengths, Map, mapply, match, mget, order, paste, pmax, pmax.int,\n    pmin, pmin.int, Position, rank, rbind, Reduce, rowMeans, rownames,\n    rowSums, sapply, setdiff, sort, table, tapply, union, unique,\n    unsplit, which, which.max, which.min\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018fastcluster\u2019\n\nThe following object is masked from \u2018package:stats\u2019:\n\n    hclust\n\nfor plotting:: min.raw: 0.575607612875618 max.raw: 1\nCMD: R --no-save --no-restore --no-site-file --no-init-file -q < input.matrix.R\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:parallel\u2019:\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colMeans,\n    colnames, colSums, dirname, do.call, duplicated, eval, evalq,\n    Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply,\n    lengths, Map, mapply, match, mget, order, paste, pmax, pmax.int,\n    pmin, pmin.int, Position, rank, rbind, Reduce, rowMeans, rownames,\n    rowSums, sapply, setdiff, sort, table, tapply, union, unique,\n    unsplit, which, which.max, which.min\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018fastcluster\u2019\n\nThe following object is masked from \u2018package:stats\u2019:\n\n    hclust\n\n", "state": "ok", "create_time": "2019-06-26T02:29:12.402009", "stderr": "CMD: R --no-save --no-restore --no-site-file --no-init-file -q < input.matrix.R\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:parallel\u2019:\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colMeans,\n    colnames, colSums, dirname, do.call, duplicated, eval, evalq,\n    Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply,\n    lengths, Map, mapply, match, mget, order, paste, pmax, pmax.int,\n    pmin, pmin.int, Position, rank, rbind, Reduce, rowMeans, rownames,\n    rowSums, sapply, setdiff, sort, table, tapply, union, unique,\n    unsplit, which, which.max, which.min\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018fastcluster\u2019\n\nThe following object is masked from \u2018package:stats\u2019:\n\n    hclust\n\nfor plotting:: min.raw: 0.927928151348082 max.raw: 1\nfor plotting:: min.raw: 0.759357738810669 max.raw: 1\nfor plotting:: min.raw: 0.870430169268952 max.raw: 1\nCMD: R --no-save --no-restore --no-site-file --no-init-file -q < input.matrix.R\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:parallel\u2019:\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colMeans,\n    colnames, colSums, dirname, do.call, duplicated, eval, evalq,\n    Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply,\n    lengths, Map, mapply, match, mget, order, paste, pmax, pmax.int,\n    pmin, pmin.int, Position, rank, rbind, Reduce, rowMeans, rownames,\n    rowSums, sapply, setdiff, sort, table, tapply, union, unique,\n    unsplit, which, which.max, which.min\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018fastcluster\u2019\n\nThe following object is masked from \u2018package:stats\u2019:\n\n    hclust\n\nfor plotting:: min.raw: 0.575607612875618 max.raw: 1\nCMD: R --no-save --no-restore --no-site-file --no-init-file -q < input.matrix.R\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:parallel\u2019:\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colMeans,\n    colnames, colSums, dirname, do.call, duplicated, eval, evalq,\n    Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply,\n    lengths, Map, mapply, match, mget, order, paste, pmax, pmax.int,\n    pmin, pmin.int, Position, rank, rbind, Reduce, rowMeans, rownames,\n    rowSums, sapply, setdiff, sort, table, tapply, union, unique,\n    unsplit, which, which.max, which.min\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018fastcluster\u2019\n\nThe following object is masked from \u2018package:stats\u2019:\n\n    hclust\n\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "> library(cluster)\n> library(Biobase)\n> library(qvalue)\n> library(fastcluster)\n> options(stringsAsFactors = FALSE)\n> NO_REUSE = F\n> \n> # try to reuse earlier-loaded data if possible\n> if (file.exists(\"input.matrix.RData\") && ! NO_REUSE) {\n+     print('RESTORING DATA FROM EARLIER ANALYSIS')\n+     load(\"input.matrix.RData\")\n+ } else {\n+     print('Reading matrix file.')\n+     primary_data = read.table(\"input.matrix\", header=T, com='', row.names=1, check.names=F, sep='\\t')\n+     primary_data = as.matrix(primary_data)\n+ }\n[1] \"Reading matrix file.\"\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/heatmap.3.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/misc_rnaseq_funcs.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/pairs3.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/vioplot2.R\")\n> data = primary_data\n> myheatcol = colorpanel(75, 'purple','black','yellow')\n> samples_data = read.table(\"/mnt/galaxy/files/000/926/dataset_926495.dat\", header=F, check.names=F, fill=T)\n> samples_data = samples_data[samples_data[,2] != '',]\n> colnames(samples_data) = c('sample_name', 'replicate_name')\n> sample_types = as.character(unique(samples_data[,1]))\n> rep_names = as.character(samples_data[,2])\n> data = data[, colnames(data) %in% rep_names, drop=F ]\n> nsamples = length(sample_types)\n> sample_colors = rainbow(nsamples)\n> names(sample_colors) = sample_types\n> sample_type_list = list()\n> for (i in 1:nsamples) {\n+     samples_want = samples_data[samples_data[,1]==sample_types[i], 2]\n+     sample_type_list[[sample_types[i]]] = as.vector(samples_want)\n+ }\n> sample_factoring = colnames(data)\n> for (i in 1:nsamples) {\n+     sample_type = sample_types[i]\n+     replicates_want = sample_type_list[[sample_type]]\n+     sample_factoring[ colnames(data) %in% replicates_want ] = sample_type\n+ }\n> initial_matrix = data # store before doing various data transformations\n> cs = colSums(data)\n> data = t( t(data)/cs) * 1e6;\n> data = log2(data+1)\n> sample_factoring = colnames(data)\n> for (i in 1:nsamples) {\n+     sample_type = sample_types[i]\n+     replicates_want = sample_type_list[[sample_type]]\n+     sample_factoring[ colnames(data) %in% replicates_want ] = sample_type\n+ }\n> sampleAnnotations = matrix(ncol=ncol(data),nrow=nsamples)\n> for (i in 1:nsamples) {\n+   sampleAnnotations[i,] = colnames(data) %in% sample_type_list[[sample_types[i]]]\n+ }\n> sampleAnnotations = apply(sampleAnnotations, 1:2, function(x) as.logical(x))\n> sampleAnnotations = sample_matrix_to_color_assignments(sampleAnnotations, col=sample_colors)\n> rownames(sampleAnnotations) = as.vector(sample_types)\n> colnames(sampleAnnotations) = colnames(data)\n> data = as.matrix(data) # convert to matrix\n> MA_plot = function(x, y, ...) {\n+     M = log( (exp(x) + exp(y)) / 2)\n+     A = x - y;\n+     res = list(x=M, y=A)\n+     return(res)\n+ }\n> MA_color_fun = function(x,y) {\n+     col = sapply(y, function(y) ifelse(abs(y) >= 1, 'red', 'black')) # color 2-fold diffs\n+     return(col)\n+ }\n> Scatter_color_fun = function(x,y) {\n+     col = sapply(abs(x-y), function(z) ifelse(z >= 1, 'red', 'black')) # color 2-fold diffs\n+     return(col)\n+ }\n> for (i in 1:nsamples) {\n+     sample_name = sample_types[[i]]\n+     cat('Processing replicate QC analysis for sample: ', sample_name, \"\n+ \")\n+     samples_want = sample_type_list[[sample_name]]\n+     samples_want = colnames(data) %in% samples_want\n+     if (sum(samples_want) > 1) {\n+         pdf(file=paste(sample_name, '.rep_compare.pdf', sep=''))\n+         d = data[,samples_want]\n+         initial_matrix_samples_want = initial_matrix[,samples_want]\n+         op <- par(mar = c(10,10,10,10))\n+         barplot(colSums(initial_matrix_samples_want), las=2, main=paste(\"Sum of Frags for replicates of:\", sample_name), ylab='', cex.names=0.7)\n+         par(op)\n+         pairs3(d, pch='.', CustomColorFun=Scatter_color_fun, main=paste('Replicate Scatter:', sample_name)) # scatter plots\n+         pairs3(d, XY_convert_fun=MA_plot, CustomColorFun=MA_color_fun, pch='.', main=paste('Replicate MA:', sample_name)); # MA plots\n+         reps_cor = cor(d, method=\"pearson\", use='pairwise.complete.obs')\n+         hc_samples = hclust(as.dist(1-reps_cor), method=\"complete\")\n+         heatmap.3(reps_cor, dendrogram='both', Rowv=as.dendrogram(hc_samples), Colv=as.dendrogram(hc_samples), col = cm.colors(256), scale='none', symm=TRUE, key=TRUE,density.info='none', trace='none', symbreaks=F, margins=c(10,10), cexCol=1, cexRow=1, main=paste('Replicate Correlations:', sample_name) )\n+         dev.off()\n+     }\n+ }\nProcessing replicate QC analysis for sample:  wt_37 \nProcessing replicate QC analysis for sample:  wt_GSNO \nProcessing replicate QC analysis for sample:  wt_ph8 \n> write.table(data, file=\"input.matrix.CPM.log2.dat\", quote=F, sep='\t');\n> gene_cor = NULL\n> \n> library(cluster)\n> library(Biobase)\n> library(qvalue)\n> library(fastcluster)\n> options(stringsAsFactors = FALSE)\n> NO_REUSE = F\n> \n> # try to reuse earlier-loaded data if possible\n> if (file.exists(\"input.matrix.RData\") && ! NO_REUSE) {\n+     print('RESTORING DATA FROM EARLIER ANALYSIS')\n+     load(\"input.matrix.RData\")\n+ } else {\n+     print('Reading matrix file.')\n+     primary_data = read.table(\"input.matrix\", header=T, com='', row.names=1, check.names=F, sep='\\t')\n+     primary_data = as.matrix(primary_data)\n+ }\n[1] \"Reading matrix file.\"\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/heatmap.3.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/misc_rnaseq_funcs.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/pairs3.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/vioplot2.R\")\n> data = primary_data\n> myheatcol = colorpanel(75, 'purple','black','yellow')\n> samples_data = read.table(\"/mnt/galaxy/files/000/926/dataset_926495.dat\", header=F, check.names=F, fill=T)\n> samples_data = samples_data[samples_data[,2] != '',]\n> colnames(samples_data) = c('sample_name', 'replicate_name')\n> sample_types = as.character(unique(samples_data[,1]))\n> rep_names = as.character(samples_data[,2])\n> data = data[, colnames(data) %in% rep_names, drop=F ]\n> nsamples = length(sample_types)\n> sample_colors = rainbow(nsamples)\n> names(sample_colors) = sample_types\n> sample_type_list = list()\n> for (i in 1:nsamples) {\n+     samples_want = samples_data[samples_data[,1]==sample_types[i], 2]\n+     sample_type_list[[sample_types[i]]] = as.vector(samples_want)\n+ }\n> sample_factoring = colnames(data)\n> for (i in 1:nsamples) {\n+     sample_type = sample_types[i]\n+     replicates_want = sample_type_list[[sample_type]]\n+     sample_factoring[ colnames(data) %in% replicates_want ] = sample_type\n+ }\n> initial_matrix = data # store before doing various data transformations\n> cs = colSums(data)\n> data = t( t(data)/cs) * 1e6;\n> data = log2(data+1)\n> sample_factoring = colnames(data)\n> for (i in 1:nsamples) {\n+     sample_type = sample_types[i]\n+     replicates_want = sample_type_list[[sample_type]]\n+     sample_factoring[ colnames(data) %in% replicates_want ] = sample_type\n+ }\n> sampleAnnotations = matrix(ncol=ncol(data),nrow=nsamples)\n> for (i in 1:nsamples) {\n+   sampleAnnotations[i,] = colnames(data) %in% sample_type_list[[sample_types[i]]]\n+ }\n> sampleAnnotations = apply(sampleAnnotations, 1:2, function(x) as.logical(x))\n> sampleAnnotations = sample_matrix_to_color_assignments(sampleAnnotations, col=sample_colors)\n> rownames(sampleAnnotations) = as.vector(sample_types)\n> colnames(sampleAnnotations) = colnames(data)\n> data = as.matrix(data) # convert to matrix\n> write.table(data, file=\"input.matrix.CPM.log2.dat\", quote=F, sep='\t');\n> if (nrow(data) < 2) { stop(\"\n+ \n+ **** Sorry, at least two rows are required for this matrix.\n+ \n+ \");}\n> if (ncol(data) < 2) { stop(\"\n+ \n+ **** Sorry, at least two columns are required for this matrix.\n+ \n+ \");}\n> sample_cor = cor(data, method='pearson', use='pairwise.complete.obs')\n> write.table(sample_cor, file=\"input.matrix.CPM.log2.sample_cor.dat\", quote=F, sep='\t')\n> sample_dist = dist(t(data), method='euclidean')\n> hc_samples = hclust(sample_dist, method='complete')\n> pdf(\"input.matrix.CPM.log2.sample_cor_matrix.pdf\")\n> sample_cor_for_plot = sample_cor\n> heatmap.3(sample_cor_for_plot, dendrogram='both', Rowv=as.dendrogram(hc_samples), Colv=as.dendrogram(hc_samples), col = myheatcol, scale='none', symm=TRUE, key=TRUE,density.info='none', trace='none', symkey=FALSE, symbreaks=F, margins=c(10,10), cexCol=1, cexRow=1, cex.main=0.75, main=paste(\"sample correlation matrix\n+ \", \"input.matrix.CPM.log2\") , ColSideColors=sampleAnnotations, RowSideColors=t(sampleAnnotations))\n> dev.off()\nnull device \n          1 \n> gene_cor = NULL\n> \n> library(cluster)\n> library(Biobase)\n> library(qvalue)\n> library(fastcluster)\n> options(stringsAsFactors = FALSE)\n> NO_REUSE = F\n> \n> # try to reuse earlier-loaded data if possible\n> if (file.exists(\"input.matrix.RData\") && ! NO_REUSE) {\n+     print('RESTORING DATA FROM EARLIER ANALYSIS')\n+     load(\"input.matrix.RData\")\n+ } else {\n+     print('Reading matrix file.')\n+     primary_data = read.table(\"input.matrix\", header=T, com='', row.names=1, check.names=F, sep='\\t')\n+     primary_data = as.matrix(primary_data)\n+ }\n[1] \"Reading matrix file.\"\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/heatmap.3.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/misc_rnaseq_funcs.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/pairs3.R\")\n> source(\"/mnt/galaxy/tool_dependencies/_conda/envs/mulled-v1-5e8e2f533e37cf6360d01e7f612ec6bc1714db28a106cfab5af40810abdb2403/opt/trinity-2.8.4/Analysis/DifferentialExpression/R/vioplot2.R\")\n> data = primary_data\n> myheatcol = colorpanel(75, 'purple','black','yellow')\n> samples_data = read.table(\"/mnt/galaxy/files/000/926/dataset_926495.dat\", header=F, check.names=F, fill=T)\n> samples_data = samples_data[samples_data[,2] != '',]\n> colnames(samples_data) = c('sample_name', 'replicate_name')\n> sample_types = as.character(unique(samples_data[,1]))\n> rep_names = as.character(samples_data[,2])\n> data = data[, colnames(data) %in% rep_names, drop=F ]\n> nsamples = length(sample_types)\n> sample_colors = rainbow(nsamples)\n> names(sample_colors) = sample_types\n> sample_type_list = list()\n> for (i in 1:nsamples) {\n+     samples_want = samples_data[samples_data[,1]==sample_types[i], 2]\n+     sample_type_list[[sample_types[i]]] = as.vector(samples_want)\n+ }\n> sample_factoring = colnames(data)\n> for (i in 1:nsamples) {\n+     sample_type = sample_types[i]\n+     replicates_want = sample_type_list[[sample_type]]\n+     sample_factoring[ colnames(data) %in% replicates_want ] = sample_type\n+ }\n> initial_matrix = data # store before doing various data transformations\n> cs = colSums(data)\n> data = t( t(data)/cs) * 1e6;\n> data = log2(data+1)\n> sample_factoring = colnames(data)\n> for (i in 1:nsamples) {\n+     sample_type = sample_types[i]\n+     replicates_want = sample_type_list[[sample_type]]\n+     sample_factoring[ colnames(data) %in% replicates_want ] = sample_type\n+ }\n> sampleAnnotations = matrix(ncol=ncol(data),nrow=nsamples)\n> for (i in 1:nsamples) {\n+   sampleAnnotations[i,] = colnames(data) %in% sample_type_list[[sample_types[i]]]\n+ }\n> sampleAnnotations = apply(sampleAnnotations, 1:2, function(x) as.logical(x))\n> sampleAnnotations = sample_matrix_to_color_assignments(sampleAnnotations, col=sample_colors)\n> rownames(sampleAnnotations) = as.vector(sample_types)\n> colnames(sampleAnnotations) = colnames(data)\n> data = as.matrix(data) # convert to matrix\n> write.table(data, file=\"input.matrix.CPM.log2.dat\", quote=F, sep='\t');\n> pdf(\"input.matrix.CPM.log2.prcomp.principal_components.pdf\")\n> prin_comp_data = data\n> pca = prcomp(prin_comp_data, center = FALSE, scale. = FALSE)\n> pc_pct_variance = (pca$sdev^2)/sum(pca$sdev^2)\n> def.par <- par(no.readonly = TRUE) # save default, for resetting...\n> gridlayout = matrix(c(1:4),nrow=2,ncol=2, byrow=TRUE);\n> layout(gridlayout, widths=c(1,1));\n> write.table(pca$rotation, file=\"input.matrix.CPM.log2.PCA.prcomp.scores\", quote=F, sep=\"\t\")\n> write.table(pca$x, file=\"input.matrix.CPM.log2.PCA.prcomp.loadings\", quote=F, sep=\"\t\")\n> PCA.loadings=pca$x\n> PCA.scores = pca$rotation\n> for (i in 1:(max(3,2)-1)) {\n+     xrange = range(PCA.scores[,i])\n+     yrange = range(PCA.scores[,i+1])\n+     samples_want = rownames(PCA.scores) %in% sample_type_list[[sample_types[1]]]\n+     pc_i_pct_var = sprintf(\"(%.2f%%)\", pc_pct_variance[i]*100)\n+     pc_i_1_pct_var = sprintf(\"(%.2f%%)\", pc_pct_variance[i+1]*100)\n+     plot(PCA.scores[samples_want,i], PCA.scores[samples_want,i+1], xlab=paste('PC',i, pc_i_pct_var), ylab=paste('PC',i+1, pc_i_1_pct_var), xlim=xrange, ylim=yrange, col=sample_colors[1])\n+     for (j in 2:nsamples) {\n+         samples_want = rownames(PCA.scores) %in% sample_type_list[[sample_types[j]]]\n+         points(PCA.scores[samples_want,i], PCA.scores[samples_want,i+1], col=sample_colors[j], pch=j)\n+     }\n+     plot.new()\n+     legend('topleft', as.vector(sample_types), col=sample_colors, pch=1:nsamples, ncol=2)\n+ }\n> \n> par(def.par)\n> pcloadings_mat_vals = PCA.loadings[,1:3]\n> print(dim(pcloadings_mat_vals))\n[1] 40  3\n> pcloadings_mat = matrix_to_color_assignments(pcloadings_mat_vals, col=colorpanel(256,'purple','black','yellow'), by='col')\n> print(dim(pcloadings_mat))\n[1] 40  3\n> colnames(pcloadings_mat) = paste('PC', 1:ncol(pcloadings_mat))\n> dev.off()\nnull device \n          1 \n> gene_cor = NULL\n> \n", "job_messages": [], "id": "63dfe8eb373c5c79", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/iuc/trinity_samples_qccheck/trinity_samples_qccheck/2.8.4-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6", "time_seconds": 69.26038885116577, "inputs": {"library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|input_1": {"src": "hda", "id": "859cabfc59eb1781"}, "library|type": "single", "library|r1|adapters_0|adapter_source|adapter_source_list": "user"}, "tool_version": "1.16.6", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6", "update_time": "2019-06-26T02:41:09.843245", "inputs": {"input_1": {"src": "hda", "id": "859cabfc59eb1781", "uuid": "1362aef8-45d0-433b-bd96-e1842617bd94"}}, "outputs": {"out1": {"src": "hda", "id": "f8ee9dadf74156fe", "uuid": "49c8c67c-5fbd-4444-b9f7-8406f89bddc3"}}, "history_id": "f840675b8d7f5485", "stdout": "This is cutadapt 1.16 with Python 3.6.5\nCommand line parameters: -j 1 -a AGATCGGAAGAGC --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 cutadapt_small_fastq.fq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (3257 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times.\n\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:40:50.814962", "stderr": "", "model_class": "Job", "params": {"output_options": "{\"info_file\": \"false\", \"multiple_output\": \"false\", \"report\": \"false\", \"rest_file\": \"false\", \"too_long_file\": \"false\", \"too_short_file\": \"false\", \"untrimmed_file\": \"false\", \"wildcard_file\": \"false\"}", "read_mod_options": "{\"length\": \"0\", \"length_tag\": \"\", \"nextseq_trim\": \"0\", \"prefix\": \"\", \"quality_cutoff\": \"0\", \"strip_suffix\": \"\", \"suffix\": \"\", \"trim_n\": \"false\"}", "adapter_options": "{\"count\": \"1\", \"error_rate\": \"0.1\", \"mask_adapter\": \"false\", \"match_read_wildcards\": \" \", \"no_indels\": \"false\", \"no_trim\": \"false\", \"overlap\": \"3\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 1069786, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}}], \"anywhere_adapters\": [], \"cut\": \"0\", \"front_adapters\": []}, \"type\": \"single\"}", "filter_options": "{\"discard\": \"false\", \"discard_untrimmed\": \"false\", \"max\": \"0\", \"max_n\": \"\", \"min\": \"0\", \"pair_filter\": \"any\"}", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "This is cutadapt 1.16 with Python 3.6.5\nCommand line parameters: -j 1 -a AGATCGGAAGAGC --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 cutadapt_small_fastq.fq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (3257 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times.\n\n", "job_messages": [], "id": "0b0c9f47d33bd082", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6-0", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6", "time_seconds": 102.22313976287842, "inputs": {"library|r1|adapters_0|adapter_source|adapter": "AAAT", "library|input_1": {"src": "hda", "id": "0986b352cf460be6"}, "library|type": "single", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "output_options|untrimmed_file": true}, "tool_version": "1.16.6", "output_problems": ["No JSON object could be decoded"], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6", "update_time": "2019-06-26T02:44:26.154708", "inputs": {"input_1": {"src": "hda", "id": "0986b352cf460be6", "uuid": "77c29f02-77dd-4692-ba08-329a674da3b1"}}, "outputs": {"out1": {"src": "hda", "id": "ff0d78c7dbb509ba", "uuid": "bb61dab5-fc19-40dd-b1ef-e0bed266af67"}, "untrimmed_output": {"src": "hda", "id": "cf4a8ff777561254", "uuid": "2b657fad-0bb7-40ea-9a1b-0201a3cb945e"}}, "history_id": "f840675b8d7f5485", "stdout": "This is cutadapt 1.16 with Python 3.6.5\nCommand line parameters: -a AAAT --untrimmed-output=untrimmed_output.fq --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 cutadapt_small_fastq.fq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (4514 us/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             98 bp (96.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:44:09.586842", "stderr": "", "model_class": "Job", "params": {"output_options": "{\"info_file\": \"false\", \"multiple_output\": \"false\", \"report\": \"false\", \"rest_file\": \"false\", \"too_long_file\": \"false\", \"too_short_file\": \"false\", \"untrimmed_file\": \"true\", \"wildcard_file\": \"false\"}", "read_mod_options": "{\"length\": \"0\", \"length_tag\": \"\", \"nextseq_trim\": \"0\", \"prefix\": \"\", \"quality_cutoff\": \"0\", \"strip_suffix\": \"\", \"suffix\": \"\", \"trim_n\": \"false\"}", "adapter_options": "{\"count\": \"1\", \"error_rate\": \"0.1\", \"mask_adapter\": \"false\", \"match_read_wildcards\": \" \", \"no_indels\": \"false\", \"no_trim\": \"false\", \"overlap\": \"3\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 1069799, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}}], \"anywhere_adapters\": [], \"cut\": \"0\", \"front_adapters\": []}, \"type\": \"single\"}", "filter_options": "{\"discard\": \"false\", \"discard_untrimmed\": \"false\", \"max\": \"0\", \"max_n\": \"\", \"min\": \"0\", \"pair_filter\": \"any\"}", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "This is cutadapt 1.16 with Python 3.6.5\nCommand line parameters: -a AAAT --untrimmed-output=untrimmed_output.fq --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 cutadapt_small_fastq.fq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (4514 us/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             98 bp (96.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times.\n\nNo. of allowed errors:\n0-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n\n", "job_messages": [], "id": "70372f8f2b31ae6b", "job_stdout": ""}, "test_index": 11}, "id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6-11", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6", "time_seconds": 74.52614092826843, "inputs": {"library|r1|adapters_0|adapter_source|adapter": "TGTAGGCC", "library|input_1": {"src": "hda", "id": "1305376f4d108472"}, "library|type": "single", "library|r1|adapters_0|adapter_source|adapter_source_list": "builtin"}, "tool_version": "1.16.6", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6", "update_time": "2019-06-26T02:42:10.193879", "inputs": {"input_1": {"src": "hda", "id": "1305376f4d108472", "uuid": "b077be51-163f-43c5-9f80-3bb9118e0999"}}, "outputs": {"out1": {"src": "hda", "id": "3bf3a242a21338b3", "uuid": "53f5e40b-7ab9-4f8f-a05a-206023852171"}}, "history_id": "f840675b8d7f5485", "stdout": "This is cutadapt 1.16 with Python 3.6.5\nCommand line parameters: -j 1 -a Dummy-Adapter (do not use me)=TGTAGGCC --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 cutadapt_small_fastq.fq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (2538 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter Dummy-Adapter (do not use me) ===\n\nSequence: TGTAGGCC; Type: regular 3'; Length: 8; Trimmed: 0 times.\n\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:41:48.160667", "stderr": "", "model_class": "Job", "params": {"output_options": "{\"info_file\": \"false\", \"multiple_output\": \"false\", \"report\": \"false\", \"rest_file\": \"false\", \"too_long_file\": \"false\", \"too_short_file\": \"false\", \"untrimmed_file\": \"false\", \"wildcard_file\": \"false\"}", "read_mod_options": "{\"length\": \"0\", \"length_tag\": \"\", \"nextseq_trim\": \"0\", \"prefix\": \"\", \"quality_cutoff\": \"0\", \"strip_suffix\": \"\", \"suffix\": \"\", \"trim_n\": \"false\"}", "adapter_options": "{\"count\": \"1\", \"error_rate\": \"0.1\", \"mask_adapter\": \"false\", \"match_read_wildcards\": \" \", \"no_indels\": \"false\", \"no_trim\": \"false\", \"overlap\": \"3\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 1069788, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 1, \"adapter\": \"TGTAGGCC\", \"adapter_source_list\": \"builtin\"}}], \"anywhere_adapters\": [], \"cut\": \"0\", \"front_adapters\": []}, \"type\": \"single\"}", "filter_options": "{\"discard\": \"false\", \"discard_untrimmed\": \"false\", \"max\": \"0\", \"max_n\": \"\", \"min\": \"0\", \"pair_filter\": \"any\"}", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "This is cutadapt 1.16 with Python 3.6.5\nCommand line parameters: -j 1 -a Dummy-Adapter (do not use me)=TGTAGGCC --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 cutadapt_small_fastq.fq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (2538 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter Dummy-Adapter (do not use me) ===\n\nSequence: TGTAGGCC; Type: regular 3'; Length: 8; Trimmed: 0 times.\n\n", "job_messages": [], "id": "051682b3746c01ff", "job_stdout": ""}, "test_index": 4}, "id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6-4", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6", "time_seconds": 67.35444593429565, "inputs": {"library|r1|adapters_0|adapter_source|adapter": "TTAGACATATCTCCGTCG", "library|input_1": {"src": "hda", "id": "f1a176e73e25220e"}, "filter_options|discard": true, "library|r1|adapters_0|adapter_source|adapter_source_list": "user"}, "tool_version": "1.16.6", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6", "update_time": "2019-06-26T02:42:33.749504", "inputs": {"input_1": {"src": "hda", "id": "f1a176e73e25220e", "uuid": "5431e869-8b4e-4a50-aa29-2db8531baadc"}}, "outputs": {"out1": {"src": "hda", "id": "cbd5f3bbdb374c70", "uuid": "2ed89d0d-2939-41e6-b953-9b52d660e3a2"}}, "history_id": "f840675b8d7f5485", "stdout": "This is cutadapt 1.16 with Python 3.6.5\nCommand line parameters: -j 1 -a TTAGACATATCTCCGTCG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --discard cutadapt_small_fastq.fq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (2946 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             34 bp (33.3%)\n\n=== Adapter 1 ===\n\nSequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-18 bp: 1\n\nBases preceding removed adapters:\n  A: 50.0%\n  C: 50.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n10\t1\t0.0\t1\t0 1\n12\t1\t0.0\t1\t0 1\n\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:42:17.650637", "stderr": "", "model_class": "Job", "params": {"output_options": "{\"info_file\": \"false\", \"multiple_output\": \"false\", \"report\": \"false\", \"rest_file\": \"false\", \"too_long_file\": \"false\", \"too_short_file\": \"false\", \"untrimmed_file\": \"false\", \"wildcard_file\": \"false\"}", "read_mod_options": "{\"length\": \"0\", \"length_tag\": \"\", \"nextseq_trim\": \"0\", \"prefix\": \"\", \"quality_cutoff\": \"0\", \"strip_suffix\": \"\", \"suffix\": \"\", \"trim_n\": \"false\"}", "adapter_options": "{\"count\": \"1\", \"error_rate\": \"0.1\", \"mask_adapter\": \"false\", \"match_read_wildcards\": \" \", \"no_indels\": \"false\", \"no_trim\": \"false\", \"overlap\": \"3\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 1069790, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"TTAGACATATCTCCGTCG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}}], \"anywhere_adapters\": [], \"cut\": \"0\", \"front_adapters\": []}, \"type\": \"single\"}", "filter_options": "{\"discard\": \"true\", \"discard_untrimmed\": \"false\", \"max\": \"0\", \"max_n\": \"\", \"min\": \"0\", \"pair_filter\": \"any\"}", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "This is cutadapt 1.16 with Python 3.6.5\nCommand line parameters: -j 1 -a TTAGACATATCTCCGTCG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --discard cutadapt_small_fastq.fq\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (2946 us/read; 0.02 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             34 bp (33.3%)\n\n=== Adapter 1 ===\n\nSequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-18 bp: 1\n\nBases preceding removed adapters:\n  A: 50.0%\n  C: 50.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n10\t1\t0.0\t1\t0 1\n12\t1\t0.0\t1\t0 1\n\n", "job_messages": [], "id": "a63466829fe44d41", "job_stdout": ""}, "test_index": 5}, "id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6-5", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6", "time_seconds": 101.23870706558228, "inputs": {"library|r1|adapters_0|adapter_source|adapter": "AAAGATG", "library|input_1": {"src": "hda", "id": "79095586af3e3ecb"}, "output_options|rest_file": true, "library|r1|adapters_0|adapter_source|adapter_source_list": "user"}, "tool_version": "1.16.6", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6", "update_time": "2019-06-26T02:42:48.365585", "inputs": {"input_1": {"src": "hda", "id": "79095586af3e3ecb", "uuid": "deaaeb35-c849-4ab9-9ff6-4e821e8cb3cb"}}, "outputs": {"rest_output": {"src": "hda", "id": "e50ef1d4637c47a1", "uuid": "dbad9853-a341-47e9-8805-c38024e26a92"}, "out1": {"src": "hda", "id": "af8a9f3d743b8477", "uuid": "873804d0-429b-4ac4-b869-7fe87b2c9713"}}, "history_id": "f840675b8d7f5485", "stdout": "This is cutadapt 1.16 with Python 3.6.5\nCommand line parameters: -a AAAGATG --rest-file=rest_output.fa --output=out1.fa --error-rate=0.1 --times=1 --overlap=3 cutadapt_rest_fa.fa\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (1835 us/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times.\n\nNo. of allowed errors:\n0-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n\n", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:42:31.417402", "stderr": "", "model_class": "Job", "params": {"output_options": "{\"info_file\": \"false\", \"multiple_output\": \"false\", \"report\": \"false\", \"rest_file\": \"true\", \"too_long_file\": \"false\", \"too_short_file\": \"false\", \"untrimmed_file\": \"false\", \"wildcard_file\": \"false\"}", "read_mod_options": "{\"length\": \"0\", \"length_tag\": \"\", \"nextseq_trim\": \"0\", \"prefix\": \"\", \"quality_cutoff\": \"0\", \"strip_suffix\": \"\", \"suffix\": \"\", \"trim_n\": \"false\"}", "adapter_options": "{\"count\": \"1\", \"error_rate\": \"0.1\", \"mask_adapter\": \"false\", \"match_read_wildcards\": \" \", \"no_indels\": \"false\", \"no_trim\": \"false\", \"overlap\": \"3\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 1069791, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAGATG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}}], \"anywhere_adapters\": [], \"cut\": \"0\", \"front_adapters\": []}, \"type\": \"single\"}", "filter_options": "{\"discard\": \"false\", \"discard_untrimmed\": \"false\", \"max\": \"0\", \"max_n\": \"\", \"min\": \"0\", \"pair_filter\": \"any\"}", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "This is cutadapt 1.16 with Python 3.6.5\nCommand line parameters: -a AAAGATG --rest-file=rest_output.fa --output=out1.fa --error-rate=0.1 --times=1 --overlap=3 cutadapt_rest_fa.fa\nRunning on 1 core\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.01 s (1835 us/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times.\n\nNo. of allowed errors:\n0-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n\n", "job_messages": [], "id": "e75ea89e9cb4dcde", "job_stdout": ""}, "test_index": 6}, "id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6-6", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6", "time_seconds": 114.60004091262817, "inputs": {"library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|input_1": {"src": "hda", "id": "072b1ff5041be0ac"}, "library|type": "single", "output_options|info_file": true, "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "output_options|report": true}, "tool_version": "1.16.6", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6", "update_time": "2019-06-26T02:43:00.722340", "inputs": {"input_1": {"src": "hda", "id": "072b1ff5041be0ac", "uuid": "bf3c7148-d88b-4648-bbef-8b54b79e5d02"}}, "outputs": {"report": {"src": "hda", "id": "663cce2957cab2c9", "uuid": "4d09c2ef-2e5c-46b3-bc7a-4762f6dcb69f"}, "out1": {"src": "hda", "id": "f279d31111f598d8", "uuid": "5776dc5f-2af0-4959-b64b-9e27c1709d0d"}, "info_file": {"src": "hda", "id": "325f1a4d4334840e", "uuid": "79274ce8-3d3e-44dc-8ae4-b7eeaee8f400"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:42:45.256141", "stderr": "", "model_class": "Job", "params": {"output_options": "{\"info_file\": \"true\", \"multiple_output\": \"false\", \"report\": \"true\", \"rest_file\": \"false\", \"too_long_file\": \"false\", \"too_short_file\": \"false\", \"untrimmed_file\": \"false\", \"wildcard_file\": \"false\"}", "read_mod_options": "{\"length\": \"0\", \"length_tag\": \"\", \"nextseq_trim\": \"0\", \"prefix\": \"\", \"quality_cutoff\": \"0\", \"strip_suffix\": \"\", \"suffix\": \"\", \"trim_n\": \"false\"}", "adapter_options": "{\"count\": \"1\", \"error_rate\": \"0.1\", \"mask_adapter\": \"false\", \"match_read_wildcards\": \" \", \"no_indels\": \"false\", \"no_trim\": \"false\", \"overlap\": \"3\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 1069792, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}}], \"anywhere_adapters\": [], \"cut\": \"0\", \"front_adapters\": []}, \"type\": \"single\"}", "filter_options": "{\"discard\": \"false\", \"discard_untrimmed\": \"false\", \"max\": \"0\", \"max_n\": \"\", \"min\": \"0\", \"pair_filter\": \"any\"}", "dbkey": "\"?\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\""}, "tool_stdout": "", "job_messages": [], "id": "43e3d6e999187e34", "job_stdout": ""}, "test_index": 8}, "id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.6-8", "has_data": true}, {"data": {"status": "error", "tool_id": "toolshed.g2.bx.psu.edu/repos/modencode-dcc/idr_package/batch_consistency_analysis_2/1.0.0", "time_seconds": 1.0188570022583008, "inputs": {}, "tool_version": "1.0.0", "test_index": 0, "execution_problem": "Error creating a job for these tool inputs - parameter 'input2': specify a dataset of the required format / build for parameter, parameter 'input1': specify a dataset of the required format / build for parameter"}, "id": "toolshed.g2.bx.psu.edu/repos/modencode-dcc/idr_package/batch_consistency_analysis_2/1.0.0-0", "has_data": true}, {"data": {"status": "failure", "tool_id": "toolshed.g2.bx.psu.edu/repos/modencode-dcc/idr_package/batch_consistency_plot/1.0.0", "time_seconds": 62.61393904685974, "inputs": {}, "tool_version": "1.0.0", "output_problems": ["Job in error state."], "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/modencode-dcc/idr_package/batch_consistency_plot/1.0.0", "update_time": "2019-06-25T21:59:59.828633", "inputs": {"em": {"src": "hda", "id": "b0b76d5977b06086", "uuid": "b840c350-395c-46a0-9d9e-4611f46a5196"}, "uri": {"src": "hda", "id": "b0b76d5977b06086", "uuid": "b840c350-395c-46a0-9d9e-4611f46a5196"}}, "outputs": {"outputfile": {"src": "hda", "id": "f0bb8bc9aa61ab27", "uuid": "ebd2c5c7-f773-4fc3-a727-397591633975"}}, "history_id": "f840675b8d7f5485", "stdout": "", "exit_code": 0, "job_stderr": "", "tool_stderr": "Error in load(paste(saved.file.prefix[i], \"-uri.sav\", sep = \"\")) : \n  bad restore file magic number (file may be corrupted) -- no data loaded\nIn addition: Warning message:\nfile \u2018idrPlot-uri.sav\u2019 has magic number '@CSHL'\n  Use of save versions prior to 2 is deprecated \nExecution halted\n/mnt/galaxy/shed_tools/toolshed.g2.bx.psu.edu/repos/modencode-dcc/idr_package/6f6a9fbe264e/idr_package/idrPlotWrapper.sh: line 30: ps2pdf: command not found\nmv: cannot stat './idrPlot-plot.pdf': No such file or directory\n", "state": "error", "create_time": "2019-06-25T21:59:26.185853", "stderr": "Error in load(paste(saved.file.prefix[i], \"-uri.sav\", sep = \"\")) : \n  bad restore file magic number (file may be corrupted) -- no data loaded\nIn addition: Warning message:\nfile \u2018idrPlot-uri.sav\u2019 has magic number '@CSHL'\n  Use of save versions prior to 2 is deprecated \nExecution halted\n/mnt/galaxy/shed_tools/toolshed.g2.bx.psu.edu/repos/modencode-dcc/idr_package/6f6a9fbe264e/idr_package/idrPlotWrapper.sh: line 30: ps2pdf: command not found\nmv: cannot stat './idrPlot-plot.pdf': No such file or directory\n", "model_class": "Job", "params": {"chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "", "job_messages": [], "id": "7014d4bb3df5c38b", "job_stdout": ""}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/modencode-dcc/idr_package/batch_consistency_plot/1.0.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/simon-gladman/velvetoptimiser/velvet/0.1.0", "time_seconds": 35.404234170913696, "inputs": {"files_0|paired_type|paired_type_selector": "single", "kmer": "29", "files_0|filetype": "fasta", "files_0|paired_type|input1": {"src": "hda", "id": "032a0d8103fe4e15"}}, "tool_version": "0.1.0", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/simon-gladman/velvetoptimiser/velvet/0.1.0", "update_time": "2019-06-26T02:26:04.538384", "inputs": {"files_0|input1": {"src": "hda", "id": "032a0d8103fe4e15", "uuid": "52a2b826-32ff-438b-88a5-31844fa996a9"}}, "outputs": {"contigs": {"src": "hda", "id": "98fcba8f1a8efd25", "uuid": "6f2c8f60-ef8a-4c0d-8aff-d8aeb59218fe"}, "graph": {"src": "hda", "id": "584df935ff027cb8", "uuid": "9cf5684b-4fce-4e19-894c-cee253c3cc33"}, "stats": {"src": "hda", "id": "5825eb40b87340b8", "uuid": "8dc3ba56-d303-4cb8-a859-7dd64c3a5938"}, "log": {"src": "hda", "id": "a44ada83480cae8e", "uuid": "b733f841-a02e-40e8-87f4-3d8f2c3cdc26"}}, "history_id": "f840675b8d7f5485", "stdout": "[0.000000] Reading FastA file /mnt/pulsar/files/staging/562326/inputs/dataset_926448.dat;\n[0.128439] 142858 sequences found\n[0.128441] Done\n[0.208558] Reading read set file out/Sequences;\n[0.221726] 142858 sequences found\n[0.305973] Done\n[0.305976] 142858 sequences in total.\n[0.306467] Writing into roadmap file out/Roadmaps...\n[0.363594] Inputting sequences...\n[0.365217] Inputting sequence 0 / 142858\n[0.587553]  === Sequences loaded in 0.223974 s\n[0.618355] Done inputting sequences\n[0.618359] Destroying splay table\n[0.620294] Splay table destroyed\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "", "state": "ok", "create_time": "2019-06-26T02:25:45.073896", "stderr": "", "model_class": "Job", "params": {"files": "[{\"__index__\": 0, \"filetype\": \"fasta\", \"paired_type\": {\"__current_case__\": 1, \"input1\": {\"values\": [{\"id\": 1069649, \"src\": \"hda\"}]}, \"paired_type_selector\": \"single\"}}]", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "kmer": "\"29\"", "dbkey": "\"?\""}, "tool_stdout": "[0.000000] Reading FastA file /mnt/pulsar/files/staging/562326/inputs/dataset_926448.dat;\n[0.128439] 142858 sequences found\n[0.128441] Done\n[0.208558] Reading read set file out/Sequences;\n[0.221726] 142858 sequences found\n[0.305973] Done\n[0.305976] 142858 sequences in total.\n[0.306467] Writing into roadmap file out/Roadmaps...\n[0.363594] Inputting sequences...\n[0.365217] Inputting sequence 0 / 142858\n[0.587553]  === Sequences loaded in 0.223974 s\n[0.618355] Done inputting sequences\n[0.618359] Destroying splay table\n[0.620294] Splay table destroyed\n", "job_messages": [], "id": "5ba9db503fb0fc20", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/simon-gladman/velvetoptimiser/velvet/0.1.0-0", "has_data": true}, {"data": {"status": "success", "tool_id": "toolshed.g2.bx.psu.edu/repos/simon-gladman/velvetoptimiser/velvetoptimiser/2.2.6", "time_seconds": 79.5719678401947, "inputs": {"files_0|paired_type|paired_type_selector": "single", "end_kmer": "31", "start_kmer": "21", "files_0|paired_type|input1": {"src": "hda", "id": "032a0d8103fe4e15"}, "files_0|filetype": "fasta"}, "tool_version": "2.2.6", "job": {"tool_id": "toolshed.g2.bx.psu.edu/repos/simon-gladman/velvetoptimiser/velvetoptimiser/2.2.6", "update_time": "2019-06-26T02:26:28.883357", "inputs": {"files_0|input1": {"src": "hda", "id": "032a0d8103fe4e15", "uuid": "52a2b826-32ff-438b-88a5-31844fa996a9"}}, "outputs": {"contigs": {"src": "hda", "id": "9393c611211c9248", "uuid": "9112a26e-d698-4154-8fd2-1bea849c5628"}, "logfile": {"src": "hda", "id": "9af0ef8d09488d58", "uuid": "4e957cd7-0934-404c-a944-5fc852892bad"}, "stats": {"src": "hda", "id": "759103259e719842", "uuid": "9182b0e6-5e72-4f6b-892c-bae23bc785e8"}}, "history_id": "f840675b8d7f5485", "stdout": "Logfile name: 26-06-2019-02-23-36_Logfile.txt\n", "exit_code": 0, "job_stderr": null, "tool_stderr": "\n****************************************************\n           VelvetOptimiser.pl Version 2.2.6\n****************************************************\nNumber of CPUs available: 4\nCurrent free RAM: 17.693GB\nVelvet OMP compiler setting: 2\nJun 26 02:23:36 Starting to check input parameters.\n\tVelveth parameter string OK.\nJun 26 02:23:36 Finished checking input parameters.\nVelvet details:\n\tVelvet version: 1.2.10\n\tCompiled categories: 4\n\tCompiled max kmer length: 191\n\tMaximum number of velvetinstances to run: 2\nWill run velvet optimiser with the following paramters:\n\tVelveth parameter string:\n\t\t -fasta    -short  '/mnt/pulsar/files/staging/562324/inputs/dataset_926448.dat'  \n\tVelveth start hash values:\t21\n\tVelveth end hash value:\t\t31\n\tVelveth hash step value:\t2\n\tVelvetg minimum coverage cutoff to use:\t0\n\n\tRead tracking for final assembly off.\nJun 26 02:23:36 Beginning velveth runs.\nJun 26 02:23:36\t\tRunning velveth with hash value: 21.\nJun 26 02:23:37\t\tVelveth with hash value 21 finished.\nJun 26 02:23:38\t\tRunning velveth with hash value: 23.\nJun 26 02:23:39\t\tVelveth with hash value 23 finished.\nJun 26 02:23:40\t\tRunning velveth with hash value: 25.\nJun 26 02:23:41\t\tVelveth with hash value 25 finished.\nJun 26 02:23:42\t\tRunning velveth with hash value: 27.\nJun 26 02:23:43\t\tVelveth with hash value 27 finished.\nJun 26 02:23:44\t\tRunning velveth with hash value: 29.\nJun 26 02:23:45\t\tVelveth with hash value 29 finished.\nJun 26 02:23:46\t\tRunning velveth with hash value: 31.\nJun 26 02:23:47\t\tVelveth with hash value 31 finished.\nJun 26 02:23:48 Finished velveth runs.\nJun 26 02:23:48 Beginning vanilla velvetg runs.\nJun 26 02:23:48\t\tRunning vanilla velvetg on hash value: 21\nJun 26 02:23:50\t\tVelvetg on hash value: 21 finished.\nJun 26 02:23:50\t\tRunning vanilla velvetg on hash value: 23\nJun 26 02:23:51\t\tVelvetg on hash value: 23 finished.\nJun 26 02:23:52\t\tRunning vanilla velvetg on hash value: 25\nJun 26 02:23:54\t\tVelvetg on hash value: 25 finished.\nJun 26 02:23:54\t\tRunning vanilla velvetg on hash value: 27\nJun 26 02:23:55\t\tVelvetg on hash value: 27 finished.\nJun 26 02:23:56\t\tRunning vanilla velvetg on hash value: 29\nJun 26 02:23:57\t\tVelvetg on hash value: 29 finished.\nJun 26 02:23:58\t\tRunning vanilla velvetg on hash value: 31\nJun 26 02:23:59\t\tVelvetg on hash value: 31 finished.\nJun 26 02:24:00 Hash value of best assembly by assembly score: 23\nJun 26 02:24:00 Optimisation routine chosen for best assembly: shortOpt\nJun 26 02:24:00 Looking for the expected coverage\nJun 26 02:24:00\t\tExpected coverage set to 15\nJun 26 02:24:00 Beginning coverage cutoff optimisation\nJun 26 02:24:01\t\tSetting cov_cutoff to 7.416.\nJun 26 02:24:01\t\tSetting cov_cutoff to 4.584.\n\t\tLooking for best cutoff score between 0.000 and 12.000\n\t\tMax cutoff lies between 0.000 & 7.416\n\t\tfc = 99995\tfd = 99995\tabs diff = 0\nJun 26 02:24:02\t\tSetting cov_cutoff to 2.833.\n\t\tMax cutoff lies between 0.000 & 4.584\n\t\tfc = 99995\tfd = 99995\tabs diff = 0\nJun 26 02:24:02\t\tSetting cov_cutoff to 1.751.\n\t\tMax cutoff lies between 0.000 & 2.833\n\t\tfc = 99995\tfd = 99995\tabs diff = 0\nJun 26 02:24:02\t\tSetting cov_cutoff to 1.082.\n\t\tMax cutoff lies between 0.000 & 1.751\n\t\tfc = 99995\tfd = 99995\tabs diff = 0\nJun 26 02:24:02\t\tSetting cov_cutoff to 0.669.\n\t\tMax cutoff lies between 0.000 & 1.082\n\t\tfc = 99995\tfd = 99995\tabs diff = 0\nJun 26 02:24:03\t\tSetting cov_cutoff to 0.413.\n\t\tMax cutoff lies between 0.000 & 0.669\n\t\tfc = 99995\tfd = 99995\tabs diff = 0\nJun 26 02:24:03\t\tSetting cov_cutoff to 0.256.\n\t\tOptimum value of cutoff is 0.67\n\t\tTook 7 iterations\nJun 26 02:24:04\n\n\nFinal optimised assembly details:\n********************************************************\nAssembly id: 2\nAssembly score: 99995\nVelveth timestamp: Jun 26 2019 02:23:39\nVelvetg timestamp: Jun 26 2019 02:24:04\nVelveth version: 1.2.10\nVelvetg version: 1.2.10\nReadfile(s): -fasta    -short  '/mnt/pulsar/files/staging/562324/inputs/dataset_926448.dat'  \nVelveth parameter string: auto_data_23 23  -fasta    -short  '/mnt/pulsar/files/staging/562324/inputs/dataset_926448.dat'  \nVelvetg parameter string: auto_data_23  -clean yes -exp_cov 15 -cov_cutoff 0.255525765312\nAssembly directory: /mnt/pulsar/files/staging/562324/working/auto_data_23\nVelvet hash value: 23\nRoadmap file size: 6137013\nTotal number of contigs: 1\nn50: 99995\nlength of longest contig: 99995\nTotal bases in contigs: 99995\nNumber of contigs > 1k: 1\nTotal bases in contigs > 1k: 99995\n**********************************************************\n\n\nAssembly output files are in the following directory:\nout\n\n", "state": "ok", "create_time": "2019-06-26T02:25:42.284917", "stderr": "\n****************************************************\n           VelvetOptimiser.pl Version 2.2.6\n****************************************************\nNumber of CPUs available: 4\nCurrent free RAM: 17.693GB\nVelvet OMP compiler setting: 2\nJun 26 02:23:36 Starting to check input parameters.\n\tVelveth parameter string OK.\nJun 26 02:23:36 Finished checking input parameters.\nVelvet details:\n\tVelvet version: 1.2.10\n\tCompiled categories: 4\n\tCompiled max kmer length: 191\n\tMaximum number of velvetinstances to run: 2\nWill run velvet optimiser with the following paramters:\n\tVelveth parameter string:\n\t\t -fasta    -short  '/mnt/pulsar/files/staging/562324/inputs/dataset_926448.dat'  \n\tVelveth start hash values:\t21\n\tVelveth end hash value:\t\t31\n\tVelveth hash step value:\t2\n\tVelvetg minimum coverage cutoff to use:\t0\n\n\tRead tracking for final assembly off.\nJun 26 02:23:36 Beginning velveth runs.\nJun 26 02:23:36\t\tRunning velveth with hash value: 21.\nJun 26 02:23:37\t\tVelveth with hash value 21 finished.\nJun 26 02:23:38\t\tRunning velveth with hash value: 23.\nJun 26 02:23:39\t\tVelveth with hash value 23 finished.\nJun 26 02:23:40\t\tRunning velveth with hash value: 25.\nJun 26 02:23:41\t\tVelveth with hash value 25 finished.\nJun 26 02:23:42\t\tRunning velveth with hash value: 27.\nJun 26 02:23:43\t\tVelveth with hash value 27 finished.\nJun 26 02:23:44\t\tRunning velveth with hash value: 29.\nJun 26 02:23:45\t\tVelveth with hash value 29 finished.\nJun 26 02:23:46\t\tRunning velveth with hash value: 31.\nJun 26 02:23:47\t\tVelveth with hash value 31 finished.\nJun 26 02:23:48 Finished velveth runs.\nJun 26 02:23:48 Beginning vanilla velvetg runs.\nJun 26 02:23:48\t\tRunning vanilla velvetg on hash value: 21\nJun 26 02:23:50\t\tVelvetg on hash value: 21 finished.\nJun 26 02:23:50\t\tRunning vanilla velvetg on hash value: 23\nJun 26 02:23:51\t\tVelvetg on hash value: 23 finished.\nJun 26 02:23:52\t\tRunning vanilla velvetg on hash value: 25\nJun 26 02:23:54\t\tVelvetg on hash value: 25 finished.\nJun 26 02:23:54\t\tRunning vanilla velvetg on hash value: 27\nJun 26 02:23:55\t\tVelvetg on hash value: 27 finished.\nJun 26 02:23:56\t\tRunning vanilla velvetg on hash value: 29\nJun 26 02:23:57\t\tVelvetg on hash value: 29 finished.\nJun 26 02:23:58\t\tRunning vanilla velvetg on hash value: 31\nJun 26 02:23:59\t\tVelvetg on hash value: 31 finished.\nJun 26 02:24:00 Hash value of best assembly by assembly score: 23\nJun 26 02:24:00 Optimisation routine chosen for best assembly: shortOpt\nJun 26 02:24:00 Looking for the expected coverage\nJun 26 02:24:00\t\tExpected coverage set to 15\nJun 26 02:24:00 Beginning coverage cutoff optimisation\nJun 26 02:24:01\t\tSetting cov_cutoff to 7.416.\nJun 26 02:24:01\t\tSetting cov_cutoff to 4.584.\n\t\tLooking for best cutoff score between 0.000 and 12.000\n\t\tMax cutoff lies between 0.000 & 7.416\n\t\tfc = 99995\tfd = 99995\tabs diff = 0\nJun 26 02:24:02\t\tSetting cov_cutoff to 2.833.\n\t\tMax cutoff lies between 0.000 & 4.584\n\t\tfc = 99995\tfd = 99995\tabs diff = 0\nJun 26 02:24:02\t\tSetting cov_cutoff to 1.751.\n\t\tMax cutoff lies between 0.000 & 2.833\n\t\tfc = 99995\tfd = 99995\tabs diff = 0\nJun 26 02:24:02\t\tSetting cov_cutoff to 1.082.\n\t\tMax cutoff lies between 0.000 & 1.751\n\t\tfc = 99995\tfd = 99995\tabs diff = 0\nJun 26 02:24:02\t\tSetting cov_cutoff to 0.669.\n\t\tMax cutoff lies between 0.000 & 1.082\n\t\tfc = 99995\tfd = 99995\tabs diff = 0\nJun 26 02:24:03\t\tSetting cov_cutoff to 0.413.\n\t\tMax cutoff lies between 0.000 & 0.669\n\t\tfc = 99995\tfd = 99995\tabs diff = 0\nJun 26 02:24:03\t\tSetting cov_cutoff to 0.256.\n\t\tOptimum value of cutoff is 0.67\n\t\tTook 7 iterations\nJun 26 02:24:04\n\n\nFinal optimised assembly details:\n********************************************************\nAssembly id: 2\nAssembly score: 99995\nVelveth timestamp: Jun 26 2019 02:23:39\nVelvetg timestamp: Jun 26 2019 02:24:04\nVelveth version: 1.2.10\nVelvetg version: 1.2.10\nReadfile(s): -fasta    -short  '/mnt/pulsar/files/staging/562324/inputs/dataset_926448.dat'  \nVelveth parameter string: auto_data_23 23  -fasta    -short  '/mnt/pulsar/files/staging/562324/inputs/dataset_926448.dat'  \nVelvetg parameter string: auto_data_23  -clean yes -exp_cov 15 -cov_cutoff 0.255525765312\nAssembly directory: /mnt/pulsar/files/staging/562324/working/auto_data_23\nVelvet hash value: 23\nRoadmap file size: 6137013\nTotal number of contigs: 1\nn50: 99995\nlength of longest contig: 99995\nTotal bases in contigs: 99995\nNumber of contigs > 1k: 1\nTotal bases in contigs > 1k: 99995\n**********************************************************\n\n\nAssembly output files are in the following directory:\nout\n\n", "model_class": "Job", "params": {"files": "[{\"__index__\": 0, \"filetype\": \"fasta\", \"paired_type\": {\"__current_case__\": 1, \"input1\": {\"values\": [{\"id\": 1069649, \"src\": \"hda\"}]}, \"paired_type_selector\": \"single\"}}]", "end_kmer": "\"31\"", "dbkey": "\"?\"", "start_kmer": "\"21\"", "kmer_step": "\"2\"", "chromInfo": "\"/mnt/galaxy/galaxy-app/tool-data/len/?.len\"", "advanced": "{\"maxCutoff\": \"0.8\", \"minCutoff\": \"0\", \"optFuncCov\": \"Lbp\", \"optFuncKmer\": \"n50\", \"velvetg_opts\": \"\", \"verbose\": \"false\"}"}, "tool_stdout": "Logfile name: 26-06-2019-02-23-36_Logfile.txt\n", "job_messages": [], "id": "32eb8862f6cd9ac6", "job_stdout": null}, "test_index": 0}, "id": "toolshed.g2.bx.psu.edu/repos/simon-gladman/velvetoptimiser/velvetoptimiser/2.2.6-0", "has_data": true}], "version": "0.1", "suitename": "Ephemeris tool tests targeting https://usegalaxy.org.au/", "results": {"failures": 0, "total": 1670, "errors": 1289, "skips": 0}}